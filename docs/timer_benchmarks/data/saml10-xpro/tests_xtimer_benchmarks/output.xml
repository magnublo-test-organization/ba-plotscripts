<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201022 13:52:45.843" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201022 13:52:46.440" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201022 13:52:46.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201022 13:52:47.656" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201022 13:52:46.438" endtime="20201022 13:52:47.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.659" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201022 13:52:47.658" endtime="20201022 13:52:47.660"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:46.437" endtime="20201022 13:52:47.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:52:47.662" endtime="20201022 13:52:47.848"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.661" endtime="20201022 13:52:47.848"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.862" endtime="20201022 13:52:47.874"></status>
</kw>
<msg timestamp="20201022 13:52:47.875" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.860" endtime="20201022 13:52:47.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.876" endtime="20201022 13:52:47.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.881" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:52:47.879" endtime="20201022 13:52:47.881"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:47.857" endtime="20201022 13:52:47.882"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:47.855" endtime="20201022 13:52:47.882"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.854" endtime="20201022 13:52:47.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:52:47.887" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:52:47.886" endtime="20201022 13:52:47.887"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.884" endtime="20201022 13:52:47.887"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.853" endtime="20201022 13:52:47.887"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.852" endtime="20201022 13:52:47.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.888" endtime="20201022 13:52:47.890"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.851" endtime="20201022 13:52:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.891" endtime="20201022 13:52:47.893"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.849" endtime="20201022 13:52:47.893"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:46.435" endtime="20201022 13:52:47.893"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:52:47.900" endtime="20201022 13:52:47.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.898" endtime="20201022 13:52:47.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.934" endtime="20201022 13:52:47.946"></status>
</kw>
<msg timestamp="20201022 13:52:47.947" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.933" endtime="20201022 13:52:47.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.948" endtime="20201022 13:52:47.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.952" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:52:47.950" endtime="20201022 13:52:47.953"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:47.930" endtime="20201022 13:52:47.953"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:47.927" endtime="20201022 13:52:47.954"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.925" endtime="20201022 13:52:47.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:52:47.958" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:52:47.957" endtime="20201022 13:52:47.958"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.955" endtime="20201022 13:52:47.958"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.924" endtime="20201022 13:52:47.959"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.923" endtime="20201022 13:52:47.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.959" endtime="20201022 13:52:47.961"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.922" endtime="20201022 13:52:47.961"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.920" endtime="20201022 13:52:47.962"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.897" endtime="20201022 13:52:47.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.969" endtime="20201022 13:52:47.977"></status>
</kw>
<msg timestamp="20201022 13:52:47.977" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.967" endtime="20201022 13:52:47.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.980" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:47.978" endtime="20201022 13:52:47.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:47.981" endtime="20201022 13:52:47.983"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.965" endtime="20201022 13:52:47.983"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.963" endtime="20201022 13:52:47.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.988" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201022 13:52:47.987" endtime="20201022 13:52:47.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:47.990" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201022 13:52:47.989" endtime="20201022 13:52:47.990"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:47.985" endtime="20201022 13:52:47.991"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:52:47.894" endtime="20201022 13:52:47.991" critical="yes"></status>
</test>
<status status="PASS" starttime="20201022 13:52:45.972" endtime="20201022 13:52:47.994"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201022 13:52:48.044" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201022 13:52:48.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201022 13:52:49.192" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201022 13:52:48.042" endtime="20201022 13:52:49.193"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.195" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201022 13:52:49.194" endtime="20201022 13:52:49.195"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:48.041" endtime="20201022 13:52:49.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:52:49.198" endtime="20201022 13:52:49.419"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.197" endtime="20201022 13:52:49.419"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.432" endtime="20201022 13:52:49.444"></status>
</kw>
<msg timestamp="20201022 13:52:49.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.430" endtime="20201022 13:52:49.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.445" endtime="20201022 13:52:49.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.450" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:52:49.448" endtime="20201022 13:52:49.450"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:49.427" endtime="20201022 13:52:49.451"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:49.425" endtime="20201022 13:52:49.451"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.424" endtime="20201022 13:52:49.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:52:49.455" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:52:49.455" endtime="20201022 13:52:49.456"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.453" endtime="20201022 13:52:49.456"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.423" endtime="20201022 13:52:49.456"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.423" endtime="20201022 13:52:49.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.457" endtime="20201022 13:52:49.458"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.421" endtime="20201022 13:52:49.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.460" endtime="20201022 13:52:49.461"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.420" endtime="20201022 13:52:49.462"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:48.040" endtime="20201022 13:52:49.462"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:52:49.468" endtime="20201022 13:52:49.488"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.467" endtime="20201022 13:52:49.489"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.501" endtime="20201022 13:52:49.514"></status>
</kw>
<msg timestamp="20201022 13:52:49.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.500" endtime="20201022 13:52:49.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.515" endtime="20201022 13:52:49.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.520" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:52:49.518" endtime="20201022 13:52:49.520"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:49.497" endtime="20201022 13:52:49.521"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:49.495" endtime="20201022 13:52:49.521"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.494" endtime="20201022 13:52:49.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:52:49.525" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:52:49.525" endtime="20201022 13:52:49.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.523" endtime="20201022 13:52:49.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.493" endtime="20201022 13:52:49.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.492" endtime="20201022 13:52:49.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.527" endtime="20201022 13:52:49.528"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.491" endtime="20201022 13:52:49.529"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.489" endtime="20201022 13:52:49.529"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.465" endtime="20201022 13:52:49.530"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.539" endtime="20201022 13:52:49.549"></status>
</kw>
<msg timestamp="20201022 13:52:49.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.537" endtime="20201022 13:52:49.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.553" endtime="20201022 13:52:49.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.556" endtime="20201022 13:52:49.557"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.534" endtime="20201022 13:52:49.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.532" endtime="20201022 13:52:49.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.571" endtime="20201022 13:52:49.884"></status>
</kw>
<msg timestamp="20201022 13:52:49.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060645611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060646847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:49.568" endtime="20201022 13:52:49.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060645611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060646847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:49.888" endtime="20201022 13:52:49.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.897" endtime="20201022 13:52:49.898"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.564" endtime="20201022 13:52:49.899"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.561" endtime="20201022 13:52:49.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:49.903" level="INFO">${RESULT} = [{'diff': 1.2359999999947413e-06}, {'diff': 1.1250000000045945e-06}, {'diff': 1.1390000000041645e-06}, {'diff': 1.0980000000049284e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1389999999972256e-...</msg>
<status status="PASS" starttime="20201022 13:52:49.900" endtime="20201022 13:52:49.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:49.908" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2359999999947413e-06, 1.1250000000045945e-06, 1.1390000000041645e-06, 1.0980000000049284e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1390000000041645e-06, 1.0419999999997098e-06...</msg>
<status status="PASS" starttime="20201022 13:52:49.904" endtime="20201022 13:52:49.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.912" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:49.911" endtime="20201022 13:52:49.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.914" level="INFO">VALUE: [1.2359999999947413e-06, 1.1250000000045945e-06, 1.1390000000041645e-06, 1.0980000000049284e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1390000000041645e-06, 1.0419999999997098e-06, 1.137999999997752e-06, 1.1390000000041645e-06, 1.1809999999959353e-06, 1.1110000000050246e-06, 1.1249999999976557e-06, 1.1250000000045945e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1809999999959353e-06, 1.1250000000045945e-06, 1.1109999999980857e-06, 1.1390000000041645e-06, 1.1249999999976557e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.0969999999985158e-06, 1.1380000000046908e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1110000000050246e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1250000000045945e-06, 1.1249999999976557e-06, 1.1110000000050246e-06, 1.1250000000045945e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.0970000000054547e-06, 1.1390000000041645e-06, 1.1389999999972256e-06, 1.1390000000041645e-06, 1.1249999999976557e-06, 1.1529999999967955e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999976557e-06]</msg>
<status status="PASS" starttime="20201022 13:52:49.913" endtime="20201022 13:52:49.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.909" endtime="20201022 13:52:49.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.531" endtime="20201022 13:52:49.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.531" endtime="20201022 13:52:49.917"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.924" endtime="20201022 13:52:49.934"></status>
</kw>
<msg timestamp="20201022 13:52:49.934" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.923" endtime="20201022 13:52:49.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:49.936" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:49.935" endtime="20201022 13:52:49.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.938" endtime="20201022 13:52:49.939"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.920" endtime="20201022 13:52:49.940"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.919" endtime="20201022 13:52:49.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:49.947" endtime="20201022 13:52:50.262"></status>
</kw>
<msg timestamp="20201022 13:52:50.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061468861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:49.945" endtime="20201022 13:52:50.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061467736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061468861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:50.266" endtime="20201022 13:52:50.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.276" endtime="20201022 13:52:50.278"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.942" endtime="20201022 13:52:50.278"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.941" endtime="20201022 13:52:50.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:50.283" level="INFO">${RESULT} = [{'diff': 1.1249999999976557e-06}, {'diff': 1.1249999999976557e-06}, {'diff': 1.0970000000054547e-06}, {'diff': 1.1390000000041645e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1390000000041645e-...</msg>
<status status="PASS" starttime="20201022 13:52:50.280" endtime="20201022 13:52:50.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:50.288" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999999976557e-06, 1.1249999999976557e-06, 1.0970000000054547e-06, 1.1390000000041645e-06, 1.1389999999972256e-06, 1.1390000000041645e-06, 1.1249999999976557e-06, 1.1529999999967955e-06...</msg>
<status status="PASS" starttime="20201022 13:52:50.284" endtime="20201022 13:52:50.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.293" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:50.292" endtime="20201022 13:52:50.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.296" level="INFO">VALUE: [1.1249999999976557e-06, 1.1249999999976557e-06, 1.0970000000054547e-06, 1.1390000000041645e-06, 1.1389999999972256e-06, 1.1390000000041645e-06, 1.1249999999976557e-06, 1.1529999999967955e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999976557e-06, 1.26400000000082e-06, 1.125000000046228e-06, 1.139000000038859e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1249999999907168e-06, 1.0979999999771728e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1380000000116297e-06, 1.0409999999794195e-06, 1.1109999999980857e-06, 1.1389999999833478e-06, 1.181000000016752e-06, 1.1389999999833478e-06, 1.1799999999895228e-06, 1.125000000046228e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.1389999999833478e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.112000000025315e-06, 1.1249999999907168e-06, 1.0830000000128237e-06, 1.112000000025315e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.167000000024121e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1389999999833478e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1389999999833478e-06]</msg>
<status status="PASS" starttime="20201022 13:52:50.294" endtime="20201022 13:52:50.296"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.290" endtime="20201022 13:52:50.296"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.917" endtime="20201022 13:52:50.297"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.917" endtime="20201022 13:52:50.297"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.305" endtime="20201022 13:52:50.314"></status>
</kw>
<msg timestamp="20201022 13:52:50.314" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:50.303" endtime="20201022 13:52:50.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:50.315" endtime="20201022 13:52:50.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.318" endtime="20201022 13:52:50.319"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.301" endtime="20201022 13:52:50.320"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.299" endtime="20201022 13:52:50.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.327" endtime="20201022 13:52:50.635"></status>
</kw>
<msg timestamp="20201022 13:52:50.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.437635319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.437636444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:50.325" endtime="20201022 13:52:50.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.437635319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.437636444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:50.640" endtime="20201022 13:52:50.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.650" endtime="20201022 13:52:50.652"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.323" endtime="20201022 13:52:50.652"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.321" endtime="20201022 13:52:50.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:50.657" level="INFO">${RESULT} = [{'diff': 1.1249999999907168e-06}, {'diff': 1.1249999999907168e-06}, {'diff': 1.1249999999907168e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201022 13:52:50.653" endtime="20201022 13:52:50.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:50.661" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999999907168e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.167000000024121e-06, 1.1109999999980857e-06, ...</msg>
<status status="PASS" starttime="20201022 13:52:50.658" endtime="20201022 13:52:50.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.666" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:50.665" endtime="20201022 13:52:50.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.668" level="INFO">VALUE: [1.1249999999907168e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.167000000024121e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1389999999833478e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1389999999833478e-06, 1.2500000000637002e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.125000000046228e-06, 1.1950000000648942e-06, 1.1249999999352056e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1249999999352056e-06, 1.1109999999980857e-06, 1.1389999999833478e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.1949999999538718e-06, 1.1389999999833478e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.0970000000609659e-06, 1.1109999999980857e-06, 1.1389999999833478e-06, 1.1109999999980857e-06, 1.0830000000128237e-06, 1.1249999999352056e-06, 1.125000000046228e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1249999999352056e-06, 1.125000000046228e-06, 1.0839999999845418e-06, 1.125000000046228e-06, 1.1389999999833478e-06, 1.1249999999352056e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1249999999352056e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1389999999833478e-06]</msg>
<status status="PASS" starttime="20201022 13:52:50.667" endtime="20201022 13:52:50.669"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.663" endtime="20201022 13:52:50.669"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.298" endtime="20201022 13:52:50.670"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.297" endtime="20201022 13:52:50.670"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.678" endtime="20201022 13:52:50.688"></status>
</kw>
<msg timestamp="20201022 13:52:50.688" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:50.676" endtime="20201022 13:52:50.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:50.691" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:50.689" endtime="20201022 13:52:50.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.692" endtime="20201022 13:52:50.693"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.674" endtime="20201022 13:52:50.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.672" endtime="20201022 13:52:50.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:50.701" endtime="20201022 13:52:50.992"></status>
</kw>
<msg timestamp="20201022 13:52:50.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.807065208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.807066333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:50.699" endtime="20201022 13:52:50.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.807065208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.807066333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:50.997" endtime="20201022 13:52:51.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.007" endtime="20201022 13:52:51.008"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.697" endtime="20201022 13:52:51.009"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.695" endtime="20201022 13:52:51.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:51.014" level="INFO">${RESULT} = [{'diff': 1.1249999999352056e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.0839999999845418e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.1389999999833478e-06}, {'diff': 1.1249999999352056e-06...</msg>
<status status="PASS" starttime="20201022 13:52:51.010" endtime="20201022 13:52:51.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:51.019" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999999352056e-06, 1.125000000046228e-06, 1.0839999999845418e-06, 1.125000000046228e-06, 1.1389999999833478e-06, 1.1249999999352056e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, ...</msg>
<status status="PASS" starttime="20201022 13:52:51.015" endtime="20201022 13:52:51.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.023" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:51.022" endtime="20201022 13:52:51.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.026" level="INFO">VALUE: [1.1249999999352056e-06, 1.125000000046228e-06, 1.0839999999845418e-06, 1.125000000046228e-06, 1.1389999999833478e-06, 1.1249999999352056e-06, 1.0839999999845418e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1249999999352056e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1389999999833478e-06, 1.2499999999526779e-06, 1.0420000000621599e-06, 1.13900000009437e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1249999998241833e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1520000000597719e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.0969999999499436e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.13900000009437e-06, 1.0689999998536592e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1530000001425122e-06, 1.125000000046228e-06, 1.1120000000808261e-06, 1.1530000001425122e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1380000000116297e-06, 1.125000000046228e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201022 13:52:51.024" endtime="20201022 13:52:51.026"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.020" endtime="20201022 13:52:51.027"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.671" endtime="20201022 13:52:51.027"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:50.670" endtime="20201022 13:52:51.027"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.036" endtime="20201022 13:52:51.046"></status>
</kw>
<msg timestamp="20201022 13:52:51.047" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.034" endtime="20201022 13:52:51.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.050" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.048" endtime="20201022 13:52:51.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.051" endtime="20201022 13:52:51.053"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.031" endtime="20201022 13:52:51.054"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.030" endtime="20201022 13:52:51.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.063" endtime="20201022 13:52:51.366"></status>
</kw>
<msg timestamp="20201022 13:52:51.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.171006056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171007181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:51.061" endtime="20201022 13:52:51.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.171006056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.171007181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:51.371" endtime="20201022 13:52:51.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.380" endtime="20201022 13:52:51.382"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.058" endtime="20201022 13:52:51.383"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.056" endtime="20201022 13:52:51.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:51.387" level="INFO">${RESULT} = [{'diff': 1.125000000046228e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.1389999998723255e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1530000001425122e-06}...</msg>
<status status="PASS" starttime="20201022 13:52:51.384" endtime="20201022 13:52:51.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:51.400" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.125000000046228e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1530000001425122e-06, 1.125000000046228e-06, 1.1120000000808261e-06, 1....</msg>
<status status="PASS" starttime="20201022 13:52:51.396" endtime="20201022 13:52:51.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.405" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:51.404" endtime="20201022 13:52:51.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.407" level="INFO">VALUE: [1.125000000046228e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1530000001425122e-06, 1.125000000046228e-06, 1.1120000000808261e-06, 1.1530000001425122e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1380000000116297e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.26400000000082e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.0690000000757038e-06, 1.1799999999340116e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1380000000116297e-06, 1.125000000046228e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.125000000046228e-06, 1.1800000001560562e-06, 1.1389999998723255e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.0969999999499436e-06, 1.0969999999499436e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.098000000032684e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.1120000000808261e-06, 1.1389999998723255e-06, 1.0979999998106393e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201022 13:52:51.406" endtime="20201022 13:52:51.407"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.401" endtime="20201022 13:52:51.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.028" endtime="20201022 13:52:51.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.028" endtime="20201022 13:52:51.409"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.416" endtime="20201022 13:52:51.425"></status>
</kw>
<msg timestamp="20201022 13:52:51.426" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.415" endtime="20201022 13:52:51.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.427" endtime="20201022 13:52:51.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.429" endtime="20201022 13:52:51.431"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.412" endtime="20201022 13:52:51.432"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.411" endtime="20201022 13:52:51.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.438" endtime="20201022 13:52:51.735"></status>
</kw>
<msg timestamp="20201022 13:52:51.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.520094611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.520095722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:51.437" endtime="20201022 13:52:51.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.520094611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.520095722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:51.740" endtime="20201022 13:52:51.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.751" endtime="20201022 13:52:51.754"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.434" endtime="20201022 13:52:51.755"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.433" endtime="20201022 13:52:51.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:51.763" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1389999998723255e-06}, {'diff': 1.1109999999980857e-0...</msg>
<status status="PASS" starttime="20201022 13:52:51.757" endtime="20201022 13:52:51.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:51.773" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.1120000000808261e-06,...</msg>
<status status="PASS" starttime="20201022 13:52:51.766" endtime="20201022 13:52:51.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.783" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:51.780" endtime="20201022 13:52:51.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.788" level="INFO">VALUE: [1.1109999999980857e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.1120000000808261e-06, 1.1389999998723255e-06, 1.0979999998106393e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.13900000009437e-06, 1.3189999998886037e-06, 1.1380000000116297e-06, 1.083000000123846e-06, 1.125000000046228e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.0700000001584442e-06, 1.1249999998241833e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.1389999998723255e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.0419999998401153e-06, 1.1109999999980857e-06, 1.0829999999018014e-06, 1.0699999999363996e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.0969999999499436e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.1389999998723255e-06, 1.13900000009437e-06, 1.0559999998882574e-06, 1.0969999999499436e-06, 1.0550000000275617e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1389999998723255e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.0550000000275617e-06, 1.083000000123846e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201022 13:52:51.785" endtime="20201022 13:52:51.789"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.775" endtime="20201022 13:52:51.791"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.409" endtime="20201022 13:52:51.792"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.409" endtime="20201022 13:52:51.793"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.805" endtime="20201022 13:52:51.814"></status>
</kw>
<msg timestamp="20201022 13:52:51.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.803" endtime="20201022 13:52:51.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:51.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:51.816" endtime="20201022 13:52:51.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.819" endtime="20201022 13:52:51.821"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.798" endtime="20201022 13:52:51.821"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.796" endtime="20201022 13:52:51.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:51.829" endtime="20201022 13:52:52.147"></status>
</kw>
<msg timestamp="20201022 13:52:52.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890513583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890514764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:51.827" endtime="20201022 13:52:52.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.890513583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.890514764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.152" endtime="20201022 13:52:52.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.162" endtime="20201022 13:52:52.163"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.824" endtime="20201022 13:52:52.164"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.822" endtime="20201022 13:52:52.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:52.169" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.125000000046228e-06}, {'diff': 1.0970000001719882e-06}, {...</msg>
<status status="PASS" starttime="20201022 13:52:52.165" endtime="20201022 13:52:52.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:52.174" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.0550000000275617e-06, 1.083000000123846e-06, 1.181...</msg>
<status status="PASS" starttime="20201022 13:52:52.170" endtime="20201022 13:52:52.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.178" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:52.177" endtime="20201022 13:52:52.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.181" level="INFO">VALUE: [1.181000000016752e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.0970000001719882e-06, 1.0550000000275617e-06, 1.083000000123846e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.125000000046228e-06, 1.13900000009437e-06, 1.2360000001265803e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1380000000116297e-06, 1.1250000002682725e-06, 1.1120000000808261e-06, 1.13900000009437e-06, 1.1939999997601092e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0560000003323466e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.054999999805517e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0560000003323466e-06, 1.1799999999340116e-06, 1.1250000002682725e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201022 13:52:52.179" endtime="20201022 13:52:52.181"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.175" endtime="20201022 13:52:52.182"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.795" endtime="20201022 13:52:52.182"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:51.794" endtime="20201022 13:52:52.182"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.190" endtime="20201022 13:52:52.199"></status>
</kw>
<msg timestamp="20201022 13:52:52.199" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.188" endtime="20201022 13:52:52.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.201" endtime="20201022 13:52:52.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.203" endtime="20201022 13:52:52.204"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.186" endtime="20201022 13:52:52.205"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.184" endtime="20201022 13:52:52.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.220" endtime="20201022 13:52:52.526"></status>
</kw>
<msg timestamp="20201022 13:52:52.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269234167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269235306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.210" endtime="20201022 13:52:52.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269234167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269235306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.531" endtime="20201022 13:52:52.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.541" endtime="20201022 13:52:52.543"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.208" endtime="20201022 13:52:52.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.206" endtime="20201022 13:52:52.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:52.549" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1250000002682725e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1109999999980857e-06}...</msg>
<status status="PASS" starttime="20201022 13:52:52.545" endtime="20201022 13:52:52.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:52.554" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.13900000009437e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0560000003323466e-06, 1...</msg>
<status status="PASS" starttime="20201022 13:52:52.550" endtime="20201022 13:52:52.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.558" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:52.557" endtime="20201022 13:52:52.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.561" level="INFO">VALUE: [1.13900000009437e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0560000003323466e-06, 1.1799999999340116e-06, 1.1250000002682725e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1529999999204676e-06, 1.2639999997787754e-06, 1.13900000009437e-06, 1.1389999996502809e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1389999996502809e-06, 1.0689999996316146e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.0560000003323466e-06, 1.1519999998377273e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.054999999805517e-06, 1.1250000002682725e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0839999999845418e-06]</msg>
<status status="PASS" starttime="20201022 13:52:52.560" endtime="20201022 13:52:52.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.555" endtime="20201022 13:52:52.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.183" endtime="20201022 13:52:52.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.182" endtime="20201022 13:52:52.563"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.570" endtime="20201022 13:52:52.580"></status>
</kw>
<msg timestamp="20201022 13:52:52.580" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.569" endtime="20201022 13:52:52.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.583" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.581" endtime="20201022 13:52:52.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.584" endtime="20201022 13:52:52.585"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.566" endtime="20201022 13:52:52.586"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.565" endtime="20201022 13:52:52.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.593" endtime="20201022 13:52:52.928"></status>
</kw>
<msg timestamp="20201022 13:52:52.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.645861528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.645862653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.591" endtime="20201022 13:52:52.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.645861528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.645862653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.933" endtime="20201022 13:52:52.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.944" endtime="20201022 13:52:52.946"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.588" endtime="20201022 13:52:52.946"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.587" endtime="20201022 13:52:52.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:52.951" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.0979999998106393e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.054999999805517e-0...</msg>
<status status="PASS" starttime="20201022 13:52:52.947" endtime="20201022 13:52:52.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:52.955" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.054999999805517e-06, 1.1250000002682725e-06, 1.0970000001719882e-06,...</msg>
<status status="PASS" starttime="20201022 13:52:52.952" endtime="20201022 13:52:52.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.960" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:52.959" endtime="20201022 13:52:52.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.962" level="INFO">VALUE: [1.1249999998241833e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.054999999805517e-06, 1.1250000002682725e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0839999999845418e-06, 1.235999999682491e-06, 1.096999999727899e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.1249999998241833e-06, 1.1389999996502809e-06, 1.0970000001719882e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.0690000000757038e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.0559999998882574e-06, 1.096999999727899e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.1799999999340116e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1250000002682725e-06]</msg>
<status status="PASS" starttime="20201022 13:52:52.961" endtime="20201022 13:52:52.963"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.956" endtime="20201022 13:52:52.963"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.563" endtime="20201022 13:52:52.964"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.563" endtime="20201022 13:52:52.964"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.972" endtime="20201022 13:52:52.982"></status>
</kw>
<msg timestamp="20201022 13:52:52.982" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.971" endtime="20201022 13:52:52.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:52.985" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:52.983" endtime="20201022 13:52:52.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.986" endtime="20201022 13:52:52.987"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.967" endtime="20201022 13:52:52.988"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.966" endtime="20201022 13:52:52.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:52.995" endtime="20201022 13:52:53.314"></status>
</kw>
<msg timestamp="20201022 13:52:53.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.015568778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.015569903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:52.993" endtime="20201022 13:52:53.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.015568778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.015569903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:53.318" endtime="20201022 13:52:53.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.329" endtime="20201022 13:52:53.331"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.991" endtime="20201022 13:52:53.331"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.989" endtime="20201022 13:52:53.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:53.337" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.0559999998882574e-06}, {'diff': 1.0839999999845418e-...</msg>
<status status="PASS" starttime="20201022 13:52:53.332" endtime="20201022 13:52:53.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:53.342" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.1799999999340116e-06, 1.1250000002682725e-06...</msg>
<status status="PASS" starttime="20201022 13:52:53.338" endtime="20201022 13:52:53.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.346" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:53.345" endtime="20201022 13:52:53.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.349" level="INFO">VALUE: [1.1249999998241833e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.0829999999018014e-06, 1.0559999998882574e-06, 1.0839999999845418e-06, 1.1799999999340116e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.235999999682491e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1120000000808261e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1389999996502809e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.0970000001719882e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201022 13:52:53.348" endtime="20201022 13:52:53.349"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.343" endtime="20201022 13:52:53.350"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.965" endtime="20201022 13:52:53.350"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:52.964" endtime="20201022 13:52:53.351"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.358" endtime="20201022 13:52:53.368"></status>
</kw>
<msg timestamp="20201022 13:52:53.368" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:53.357" endtime="20201022 13:52:53.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:53.369" endtime="20201022 13:52:53.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.372" endtime="20201022 13:52:53.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.354" endtime="20201022 13:52:53.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.353" endtime="20201022 13:52:53.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.381" endtime="20201022 13:52:53.712"></status>
</kw>
<msg timestamp="20201022 13:52:53.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.407583639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.407584764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:53.380" endtime="20201022 13:52:53.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.407583639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.407584764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:53.716" endtime="20201022 13:52:53.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.727" endtime="20201022 13:52:53.729"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.377" endtime="20201022 13:52:53.729"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.375" endtime="20201022 13:52:53.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:53.734" level="INFO">${RESULT} = [{'diff': 1.1250000002682725e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1250000002682725e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201022 13:52:53.730" endtime="20201022 13:52:53.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:53.739" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1250000002682725e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1...</msg>
<status status="PASS" starttime="20201022 13:52:53.735" endtime="20201022 13:52:53.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:53.743" endtime="20201022 13:52:53.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.746" level="INFO">VALUE: [1.1250000002682725e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.0409999999794195e-06, 1.0839999999845418e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.13900000009437e-06, 1.2360000001265803e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999999980857e-06, 1.0830000003458906e-06, 1.1109999999980857e-06, 1.0690000000757038e-06, 1.1250000002682725e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1519999998377273e-06, 1.1389999996502809e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1120000000808261e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.096999999727899e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1250000002682725e-06, 1.1109999999980857e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.1250000002682725e-06, 1.166000000107914e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0979999998106393e-06, 1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1389999996502809e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1800000003781008e-06, 1.0970000001719882e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:53.745" endtime="20201022 13:52:53.747"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.740" endtime="20201022 13:52:53.747"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.351" endtime="20201022 13:52:53.748"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.351" endtime="20201022 13:52:53.748"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.757" endtime="20201022 13:52:53.767"></status>
</kw>
<msg timestamp="20201022 13:52:53.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:53.754" endtime="20201022 13:52:53.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:53.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:53.769" endtime="20201022 13:52:53.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.771" endtime="20201022 13:52:53.773"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.752" endtime="20201022 13:52:53.773"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.750" endtime="20201022 13:52:53.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:53.781" endtime="20201022 13:52:54.097"></status>
</kw>
<msg timestamp="20201022 13:52:54.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.782763472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.782764583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:53.779" endtime="20201022 13:52:54.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.782763472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.782764583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.102" endtime="20201022 13:52:54.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.112" endtime="20201022 13:52:54.114"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.776" endtime="20201022 13:52:54.114"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.774" endtime="20201022 13:52:54.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:54.119" level="INFO">${RESULT} = [{'diff': 1.1109999999980857e-06}, {'diff': 1.0979999998106393e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1380000000116297e-06},...</msg>
<status status="PASS" starttime="20201022 13:52:54.115" endtime="20201022 13:52:54.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:54.124" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1389999996502809e-06, 1.1...</msg>
<status status="PASS" starttime="20201022 13:52:54.120" endtime="20201022 13:52:54.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.128" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:54.127" endtime="20201022 13:52:54.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.130" level="INFO">VALUE: [1.1109999999980857e-06, 1.0979999998106393e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1389999996502809e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1800000003781008e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.319999999971344e-06, 1.069999999714355e-06, 1.0979999993665501e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.181000000016752e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.1799999999340116e-06, 1.1809999991285736e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.0980000002547285e-06, 1.1120000005249153e-06]</msg>
<status status="PASS" starttime="20201022 13:52:54.129" endtime="20201022 13:52:54.131"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.124" endtime="20201022 13:52:54.131"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.749" endtime="20201022 13:52:54.132"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:53.748" endtime="20201022 13:52:54.132"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.141" endtime="20201022 13:52:54.150"></status>
</kw>
<msg timestamp="20201022 13:52:54.151" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.139" endtime="20201022 13:52:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.153" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.152" endtime="20201022 13:52:54.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.154" endtime="20201022 13:52:54.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.136" endtime="20201022 13:52:54.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.134" endtime="20201022 13:52:54.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.163" endtime="20201022 13:52:54.482"></status>
</kw>
<msg timestamp="20201022 13:52:54.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172388236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172389403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.161" endtime="20201022 13:52:54.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172388236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172389403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.487" endtime="20201022 13:52:54.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.497" endtime="20201022 13:52:54.498"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.159" endtime="20201022 13:52:54.499"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.157" endtime="20201022 13:52:54.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:54.504" level="INFO">${RESULT} = [{'diff': 1.1670000006347436e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-0...</msg>
<status status="PASS" starttime="20201022 13:52:54.500" endtime="20201022 13:52:54.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:54.509" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1670000006347436e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1109999995539965e-06, ...</msg>
<status status="PASS" starttime="20201022 13:52:54.504" endtime="20201022 13:52:54.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.513" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:54.512" endtime="20201022 13:52:54.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.515" level="INFO">VALUE: [1.1670000006347436e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1109999995539965e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.0980000002547285e-06, 1.1120000005249153e-06, 1.2360000001265803e-06, 1.111000000442175e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1659999996638248e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1389999992061917e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.111000000442175e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.0969999992838098e-06, 1.0969999992838098e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111999999636737e-06]</msg>
<status status="PASS" starttime="20201022 13:52:54.514" endtime="20201022 13:52:54.516"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.510" endtime="20201022 13:52:54.516"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.133" endtime="20201022 13:52:54.517"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.132" endtime="20201022 13:52:54.517"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.525" endtime="20201022 13:52:54.534"></status>
</kw>
<msg timestamp="20201022 13:52:54.534" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.523" endtime="20201022 13:52:54.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.535" endtime="20201022 13:52:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.538" endtime="20201022 13:52:54.539"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.521" endtime="20201022 13:52:54.540"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.519" endtime="20201022 13:52:54.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.547" endtime="20201022 13:52:54.857"></status>
</kw>
<msg timestamp="20201022 13:52:54.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.545135778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.545136903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.545" endtime="20201022 13:52:54.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.545135778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.545136903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.862" endtime="20201022 13:52:54.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.872" endtime="20201022 13:52:54.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.542" endtime="20201022 13:52:54.874"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.541" endtime="20201022 13:52:54.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:54.880" level="INFO">${RESULT} = [{'diff': 1.1250000007123617e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.111999999636737e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1250000007123617e-0...</msg>
<status status="PASS" starttime="20201022 13:52:54.875" endtime="20201022 13:52:54.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:54.884" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1250000007123617e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1...</msg>
<status status="PASS" starttime="20201022 13:52:54.881" endtime="20201022 13:52:54.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.888" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:54.887" endtime="20201022 13:52:54.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.891" level="INFO">VALUE: [1.1250000007123617e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111999999636737e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.069000000519793e-06, 1.0980000002547285e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1120000005249153e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.0829999999018014e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.1120000005249153e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.0839999999845418e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.0969999992838098e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.069000000519793e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:54.889" endtime="20201022 13:52:54.891"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.885" endtime="20201022 13:52:54.892"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.518" endtime="20201022 13:52:54.892"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.517" endtime="20201022 13:52:54.892"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.900" endtime="20201022 13:52:54.909"></status>
</kw>
<msg timestamp="20201022 13:52:54.910" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.898" endtime="20201022 13:52:54.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:54.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:54.911" endtime="20201022 13:52:54.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.913" endtime="20201022 13:52:54.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.896" endtime="20201022 13:52:54.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.894" endtime="20201022 13:52:54.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:54.923" endtime="20201022 13:52:55.238"></status>
</kw>
<msg timestamp="20201022 13:52:55.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.918082389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.918083514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:54.921" endtime="20201022 13:52:55.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.918082389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.918083514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:55.243" endtime="20201022 13:52:55.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.253" endtime="20201022 13:52:55.254"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.919" endtime="20201022 13:52:55.260"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.917" endtime="20201022 13:52:55.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:55.265" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.069000000519793e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.13900000009437e-06}, {'...</msg>
<status status="PASS" starttime="20201022 13:52:55.261" endtime="20201022 13:52:55.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:55.272" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.069000000519793e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249...</msg>
<status status="PASS" starttime="20201022 13:52:55.266" endtime="20201022 13:52:55.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.276" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:55.275" endtime="20201022 13:52:55.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.279" level="INFO">VALUE: [1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.069000000519793e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.2370000002093207e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0689999996316146e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1660000005520033e-06, 1.111000000442175e-06, 1.1799999999340116e-06, 1.0839999999845418e-06, 1.0970000001719882e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1389999992061917e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0560000003323466e-06, 1.13900000009437e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1660000005520033e-06, 1.18000000082219e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:55.277" endtime="20201022 13:52:55.279"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.273" endtime="20201022 13:52:55.280"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.893" endtime="20201022 13:52:55.280"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:54.893" endtime="20201022 13:52:55.280"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.288" endtime="20201022 13:52:55.297"></status>
</kw>
<msg timestamp="20201022 13:52:55.297" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:55.286" endtime="20201022 13:52:55.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.300" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:55.298" endtime="20201022 13:52:55.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.301" endtime="20201022 13:52:55.303"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.284" endtime="20201022 13:52:55.303"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.282" endtime="20201022 13:52:55.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.310" endtime="20201022 13:52:55.621"></status>
</kw>
<msg timestamp="20201022 13:52:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.283576292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.283577417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:55.308" endtime="20201022 13:52:55.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.283576292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.283577417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:55.626" endtime="20201022 13:52:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.635" endtime="20201022 13:52:55.637"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.306" endtime="20201022 13:52:55.638"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.304" endtime="20201022 13:52:55.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:55.642" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.0829999999018014e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1249999998241833e-0...</msg>
<status status="PASS" starttime="20201022 13:52:55.639" endtime="20201022 13:52:55.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:55.648" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1660000005520033e-06,...</msg>
<status status="PASS" starttime="20201022 13:52:55.643" endtime="20201022 13:52:55.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.652" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:55.651" endtime="20201022 13:52:55.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.654" level="INFO">VALUE: [1.1249999998241833e-06, 1.111000000442175e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1660000005520033e-06, 1.18000000082219e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.250000000396767e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.0700000006025334e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.0839999999845418e-06, 1.111000000442175e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.151999999393638e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0550000002496063e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.0560000003323466e-06, 1.1950000002869388e-06, 1.0980000002547285e-06, 1.111000000442175e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.069000000519793e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0700000006025334e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201022 13:52:55.653" endtime="20201022 13:52:55.655"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.649" endtime="20201022 13:52:55.655"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.281" endtime="20201022 13:52:55.656"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.281" endtime="20201022 13:52:55.656"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.664" endtime="20201022 13:52:55.673"></status>
</kw>
<msg timestamp="20201022 13:52:55.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:55.662" endtime="20201022 13:52:55.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:55.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:55.674" endtime="20201022 13:52:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.677" endtime="20201022 13:52:55.678"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.660" endtime="20201022 13:52:55.679"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.658" endtime="20201022 13:52:55.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:55.686" endtime="20201022 13:52:56.019"></status>
</kw>
<msg timestamp="20201022 13:52:56.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.662158306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.662159444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:55.684" endtime="20201022 13:52:56.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.662158306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.662159444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.024" endtime="20201022 13:52:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.034" endtime="20201022 13:52:56.036"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.682" endtime="20201022 13:52:56.036"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.680" endtime="20201022 13:52:56.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:56.041" level="INFO">${RESULT} = [{'diff': 1.1380000000116297e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1380000000116297e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06},...</msg>
<status status="PASS" starttime="20201022 13:52:56.038" endtime="20201022 13:52:56.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:56.046" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1380000000116297e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.13...</msg>
<status status="PASS" starttime="20201022 13:52:56.042" endtime="20201022 13:52:56.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.050" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:56.049" endtime="20201022 13:52:56.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.052" level="INFO">VALUE: [1.1380000000116297e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0700000006025334e-06, 1.111000000442175e-06, 1.0560000003323466e-06, 1.1109999995539965e-06, 1.1950000002869388e-06, 1.111999999636737e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.19399999931602e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1250000007123617e-06, 1.0700000006025334e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0980000002547285e-06, 1.0409999999794195e-06, 1.1250000007123617e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0420000000621599e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.069999999714355e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1389999992061917e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.1250000007123617e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:56.051" endtime="20201022 13:52:56.053"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.046" endtime="20201022 13:52:56.053"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.657" endtime="20201022 13:52:56.054"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:55.656" endtime="20201022 13:52:56.054"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.062" endtime="20201022 13:52:56.072"></status>
</kw>
<msg timestamp="20201022 13:52:56.072" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.061" endtime="20201022 13:52:56.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.074" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.073" endtime="20201022 13:52:56.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.075" endtime="20201022 13:52:56.077"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.057" endtime="20201022 13:52:56.077"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.056" endtime="20201022 13:52:56.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.085" endtime="20201022 13:52:56.404"></status>
</kw>
<msg timestamp="20201022 13:52:56.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.029019042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.029020181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.083" endtime="20201022 13:52:56.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.029019042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.029020181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.409" endtime="20201022 13:52:56.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.419" endtime="20201022 13:52:56.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.080" endtime="20201022 13:52:56.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.078" endtime="20201022 13:52:56.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:56.426" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1389999992061917e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.13900000009437e-06}, {'...</msg>
<status status="PASS" starttime="20201022 13:52:56.422" endtime="20201022 13:52:56.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:56.431" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.13900000009437e-06, 1.111000000442175e-06, 1.1389999992061917e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.110...</msg>
<status status="PASS" starttime="20201022 13:52:56.427" endtime="20201022 13:52:56.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.435" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:56.434" endtime="20201022 13:52:56.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.438" level="INFO">VALUE: [1.13900000009437e-06, 1.111000000442175e-06, 1.1389999992061917e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.0689999996316146e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.2360000001265803e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0689999996316146e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1250000007123617e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.1249999998241833e-06, 1.0829999999018014e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1380000000116297e-06, 1.0829999999018014e-06, 1.1249999998241833e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1120000005249153e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:56.436" endtime="20201022 13:52:56.438"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.432" endtime="20201022 13:52:56.439"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.055" endtime="20201022 13:52:56.439"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.054" endtime="20201022 13:52:56.439"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.447" endtime="20201022 13:52:56.456"></status>
</kw>
<msg timestamp="20201022 13:52:56.457" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.446" endtime="20201022 13:52:56.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.458" endtime="20201022 13:52:56.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.460" endtime="20201022 13:52:56.462"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.443" endtime="20201022 13:52:56.463"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.441" endtime="20201022 13:52:56.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.476" endtime="20201022 13:52:56.810"></status>
</kw>
<msg timestamp="20201022 13:52:56.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.417794986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.417796083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.474" endtime="20201022 13:52:56.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.417794986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.417796083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.815" endtime="20201022 13:52:56.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.825" endtime="20201022 13:52:56.827"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.472" endtime="20201022 13:52:56.828"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.464" endtime="20201022 13:52:56.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:56.832" level="INFO">${RESULT} = [{'diff': 1.0970000001719882e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.13900000009437e-06}, ...</msg>
<status status="PASS" starttime="20201022 13:52:56.829" endtime="20201022 13:52:56.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:56.838" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0970000001719882e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1120000005249153e-06, 1.1...</msg>
<status status="PASS" starttime="20201022 13:52:56.833" endtime="20201022 13:52:56.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.842" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:56.841" endtime="20201022 13:52:56.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.845" level="INFO">VALUE: [1.0970000001719882e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0970000001719882e-06, 1.111000000442175e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1120000005249153e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1249999998241833e-06, 1.262999999696035e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1389999992061917e-06, 1.0969999992838098e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.0560000003323466e-06, 1.1380000000116297e-06, 1.0970000001719882e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.111000000442175e-06, 1.0970000001719882e-06, 1.1109999995539965e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.111000000442175e-06, 1.0979999993665501e-06, 1.1109999995539965e-06, 1.0970000001719882e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.1120000005249153e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06]</msg>
<status status="PASS" starttime="20201022 13:52:56.843" endtime="20201022 13:52:56.845"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.839" endtime="20201022 13:52:56.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.440" endtime="20201022 13:52:56.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.440" endtime="20201022 13:52:56.846"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.854" endtime="20201022 13:52:56.864"></status>
</kw>
<msg timestamp="20201022 13:52:56.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.853" endtime="20201022 13:52:56.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:56.867" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:56.865" endtime="20201022 13:52:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.868" endtime="20201022 13:52:56.869"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.850" endtime="20201022 13:52:56.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.848" endtime="20201022 13:52:56.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:56.878" endtime="20201022 13:52:57.196"></status>
</kw>
<msg timestamp="20201022 13:52:57.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.791757292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.791758417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:56.876" endtime="20201022 13:52:57.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.791757292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.791758417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:57.201" endtime="20201022 13:52:57.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.211" endtime="20201022 13:52:57.213"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.873" endtime="20201022 13:52:57.213"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.871" endtime="20201022 13:52:57.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:57.218" level="INFO">${RESULT} = [{'diff': 1.1249999998241833e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.0550000002496063e-06}, {'diff': 1.1249999998241833e-06}...</msg>
<status status="PASS" starttime="20201022 13:52:57.214" endtime="20201022 13:52:57.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:57.223" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1...</msg>
<status status="PASS" starttime="20201022 13:52:57.219" endtime="20201022 13:52:57.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.227" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201022 13:52:57.226" endtime="20201022 13:52:57.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.229" level="INFO">VALUE: [1.1249999998241833e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.0550000002496063e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.0839999999845418e-06, 1.1120000005249153e-06, 1.1250000007123617e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.2639999997787754e-06, 1.13900000009437e-06, 1.111000000442175e-06, 1.1109999995539965e-06, 1.0420000000621599e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.0559999994441682e-06, 1.1249999998241833e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.0560000003323466e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1109999995539965e-06, 1.069999999714355e-06, 1.1530000003645569e-06, 1.1109999995539965e-06, 1.0409999999794195e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.111000000442175e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.1109999995539965e-06, 1.1529999994763784e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.1109999995539965e-06]</msg>
<status status="PASS" starttime="20201022 13:52:57.228" endtime="20201022 13:52:57.230"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.223" endtime="20201022 13:52:57.230"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.847" endtime="20201022 13:52:57.231"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:56.847" endtime="20201022 13:52:57.231"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:49.530" endtime="20201022 13:52:57.231"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:52:49.463" endtime="20201022 13:52:57.232" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:52:57.239" endtime="20201022 13:52:57.258"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.237" endtime="20201022 13:52:57.259"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.272" endtime="20201022 13:52:57.285"></status>
</kw>
<msg timestamp="20201022 13:52:57.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.271" endtime="20201022 13:52:57.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.286" endtime="20201022 13:52:57.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:52:57.289" endtime="20201022 13:52:57.292"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:57.268" endtime="20201022 13:52:57.292"></status>
</kw>
<status status="FAIL" starttime="20201022 13:52:57.266" endtime="20201022 13:52:57.293"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.264" endtime="20201022 13:52:57.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:52:57.298" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:52:57.297" endtime="20201022 13:52:57.298"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.294" endtime="20201022 13:52:57.298"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.263" endtime="20201022 13:52:57.299"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.263" endtime="20201022 13:52:57.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.300" endtime="20201022 13:52:57.301"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.261" endtime="20201022 13:52:57.302"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.260" endtime="20201022 13:52:57.302"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.235" endtime="20201022 13:52:57.302"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.311" endtime="20201022 13:52:57.323"></status>
</kw>
<msg timestamp="20201022 13:52:57.323" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.309" endtime="20201022 13:52:57.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.324" endtime="20201022 13:52:57.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.327" endtime="20201022 13:52:57.328"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.307" endtime="20201022 13:52:57.329"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.305" endtime="20201022 13:52:57.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.336" endtime="20201022 13:52:57.621"></status>
</kw>
<msg timestamp="20201022 13:52:57.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063684125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:57.334" endtime="20201022 13:52:57.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063684125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:57.626" endtime="20201022 13:52:57.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.634" endtime="20201022 13:52:57.636"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.332" endtime="20201022 13:52:57.636"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.330" endtime="20201022 13:52:57.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:57.641" level="INFO">${RESULT} = [{'diff': 1.2819000000011127e-05}, {'diff': 1.1763999999997443e-05}, {'diff': 1.1778000000003952e-05}, {'diff': 1.1750000000004812e-05}, {'diff': 1.1764000000011321e-05}, {'diff': 1.1819999999995723e-...</msg>
<status status="PASS" starttime="20201022 13:52:57.638" endtime="20201022 13:52:57.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:57.645" level="INFO">${OVERHEAD} = {'diff': [1.2819000000011127e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1750000000004812e-05, 1.1764000000011321e-05, 1.1819999999995723e-05, 1.1763999999997443e-05, 1.1763999999997443e-05...</msg>
<status status="PASS" starttime="20201022 13:52:57.642" endtime="20201022 13:52:57.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.650" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:57.648" endtime="20201022 13:52:57.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.652" level="INFO">VALUE: [1.2819000000011127e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1750000000004812e-05, 1.1764000000011321e-05, 1.1819999999995723e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1764000000011321e-05, 1.1764000000011321e-05, 1.1764000000011321e-05, 1.1778000000003952e-05, 1.1722000000005672e-05, 1.1805000000003618e-05, 1.1777999999990074e-05, 1.1777999999990074e-05, 1.1791999999996583e-05, 1.1750000000004812e-05, 1.1778000000003952e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1791000000010987e-05, 1.1721999999991795e-05, 1.1708999999998637e-05, 1.1777999999990074e-05, 1.1750000000004812e-05, 1.1749999999990934e-05, 1.1777999999990074e-05, 1.1778000000003952e-05, 1.1834000000002232e-05, 1.1791999999996583e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1777000000004478e-05, 1.1749999999990934e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1777999999990074e-05, 1.1777999999990074e-05, 1.1750000000004812e-05, 1.1722000000005672e-05, 1.1778000000003952e-05, 1.1763999999997443e-05, 1.1764000000011321e-05, 1.1806000000003092e-05, 1.1777000000004478e-05, 1.1777000000004478e-05, 1.1735999999998303e-05]</msg>
<status status="PASS" starttime="20201022 13:52:57.651" endtime="20201022 13:52:57.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.646" endtime="20201022 13:52:57.654"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.304" endtime="20201022 13:52:57.654"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.303" endtime="20201022 13:52:57.654"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.662" endtime="20201022 13:52:57.673"></status>
</kw>
<msg timestamp="20201022 13:52:57.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.661" endtime="20201022 13:52:57.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:57.676" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:57.675" endtime="20201022 13:52:57.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.677" endtime="20201022 13:52:57.679"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.658" endtime="20201022 13:52:57.679"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.657" endtime="20201022 13:52:57.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:57.686" endtime="20201022 13:52:57.991"></status>
</kw>
<msg timestamp="20201022 13:52:57.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064837611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064849361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:57.685" endtime="20201022 13:52:57.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064837611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064849361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:57.996" endtime="20201022 13:52:58.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.006" endtime="20201022 13:52:58.008"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.682" endtime="20201022 13:52:58.009"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.680" endtime="20201022 13:52:58.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:58.014" level="INFO">${RESULT} = [{'diff': 1.1749999999990934e-05}, {'diff': 1.1763999999997443e-05}, {'diff': 1.1778000000003952e-05}, {'diff': 1.1777999999990074e-05}, {'diff': 1.1777999999990074e-05}, {'diff': 1.1750000000004812e-...</msg>
<status status="PASS" starttime="20201022 13:52:58.010" endtime="20201022 13:52:58.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:58.019" level="INFO">${OVERHEAD} = {'diff': [1.1749999999990934e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1777999999990074e-05, 1.1777999999990074e-05, 1.1750000000004812e-05, 1.1722000000005672e-05, 1.1778000000003952e-05...</msg>
<status status="PASS" starttime="20201022 13:52:58.015" endtime="20201022 13:52:58.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.023" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:58.022" endtime="20201022 13:52:58.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.026" level="INFO">VALUE: [1.1749999999990934e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1777999999990074e-05, 1.1777999999990074e-05, 1.1750000000004812e-05, 1.1722000000005672e-05, 1.1778000000003952e-05, 1.1763999999997443e-05, 1.1764000000011321e-05, 1.1806000000003092e-05, 1.1777000000004478e-05, 1.1777000000004478e-05, 1.1735999999998303e-05, 1.2763999999998443e-05, 1.177800000001783e-05, 1.177800000001783e-05, 1.177800000001783e-05, 1.1763999999969688e-05, 1.1749999999977057e-05, 1.1764000000025199e-05, 1.177800000001783e-05, 1.1763999999969688e-05, 1.1819999999995723e-05, 1.1763999999969688e-05, 1.1750000000032568e-05, 1.1833000000016636e-05, 1.17769999999906e-05, 1.177800000001783e-05, 1.1764000000025199e-05, 1.177800000001783e-05, 1.1764000000025199e-05, 1.179200000001046e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.177800000001783e-05, 1.1707999999999164e-05, 1.1763999999969688e-05, 1.1764000000025199e-05, 1.1750000000032568e-05, 1.1764000000025199e-05, 1.1764000000025199e-05, 1.179200000001046e-05, 1.176299999999797e-05, 1.1764000000025199e-05, 1.1764000000025199e-05, 1.177800000001783e-05, 1.1763999999969688e-05, 1.1764000000025199e-05, 1.176299999999797e-05, 1.1763999999969688e-05, 1.1833999999988354e-05, 1.1791000000038743e-05, 1.1820000000051234e-05, 1.1819999999995723e-05, 1.1764000000025199e-05, 1.1694000000006533e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1763999999969688e-05, 1.177800000001783e-05, 1.179200000001046e-05, 1.1750000000032568e-05]</msg>
<status status="PASS" starttime="20201022 13:52:58.025" endtime="20201022 13:52:58.026"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.020" endtime="20201022 13:52:58.027"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.655" endtime="20201022 13:52:58.027"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.655" endtime="20201022 13:52:58.027"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.035" endtime="20201022 13:52:58.046"></status>
</kw>
<msg timestamp="20201022 13:52:58.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.034" endtime="20201022 13:52:58.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.048" endtime="20201022 13:52:58.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.051" endtime="20201022 13:52:58.052"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.031" endtime="20201022 13:52:58.053"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.030" endtime="20201022 13:52:58.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.060" endtime="20201022 13:52:58.360"></status>
</kw>
<msg timestamp="20201022 13:52:58.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.407130181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.407141944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:58.058" endtime="20201022 13:52:58.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.407130181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.407141944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:58.365" endtime="20201022 13:52:58.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.375" endtime="20201022 13:52:58.377"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.055" endtime="20201022 13:52:58.378"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.054" endtime="20201022 13:52:58.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:58.383" level="INFO">${RESULT} = [{'diff': 1.176299999999797e-05}, {'diff': 1.1763999999969688e-05}, {'diff': 1.1833999999988354e-05}, {'diff': 1.1791000000038743e-05}, {'diff': 1.1820000000051234e-05}, {'diff': 1.1819999999995723e-0...</msg>
<status status="PASS" starttime="20201022 13:52:58.379" endtime="20201022 13:52:58.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:58.387" level="INFO">${OVERHEAD} = {'diff': [1.176299999999797e-05, 1.1763999999969688e-05, 1.1833999999988354e-05, 1.1791000000038743e-05, 1.1820000000051234e-05, 1.1819999999995723e-05, 1.1764000000025199e-05, 1.1694000000006533e-05,...</msg>
<status status="PASS" starttime="20201022 13:52:58.384" endtime="20201022 13:52:58.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:58.390" endtime="20201022 13:52:58.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.394" level="INFO">VALUE: [1.176299999999797e-05, 1.1763999999969688e-05, 1.1833999999988354e-05, 1.1791000000038743e-05, 1.1820000000051234e-05, 1.1819999999995723e-05, 1.1764000000025199e-05, 1.1694000000006533e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1763999999969688e-05, 1.177800000001783e-05, 1.179200000001046e-05, 1.1750000000032568e-05, 1.2763999999942932e-05, 1.180599999994758e-05, 1.1750000000088079e-05, 1.1764000000025199e-05, 1.1819999999995723e-05, 1.179200000001046e-05, 1.1749999999977057e-05, 1.1778000000073341e-05, 1.1764000000025199e-05, 1.179099999992772e-05, 1.1694000000006533e-05, 1.1707999999943652e-05, 1.1764000000025199e-05, 1.1737000000011655e-05, 1.1832999999961125e-05, 1.1778000000073341e-05, 1.179200000001046e-05, 1.1764000000025199e-05, 1.1762999999942458e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1749999999977057e-05, 1.1778000000073341e-05, 1.1763999999914176e-05, 1.1736000000039937e-05, 1.1736000000039937e-05, 1.1708000000054675e-05, 1.1763999999914176e-05, 1.1778000000073341e-05, 1.180599999994758e-05, 1.176300000005348e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1804999999975863e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1804999999975863e-05, 1.1778000000073341e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1749999999977057e-05, 1.1833000000072147e-05, 1.1778000000073341e-05, 1.1764000000025199e-05]</msg>
<status status="PASS" starttime="20201022 13:52:58.393" endtime="20201022 13:52:58.395"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.388" endtime="20201022 13:52:58.395"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.028" endtime="20201022 13:52:58.395"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.028" endtime="20201022 13:52:58.396"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.406" endtime="20201022 13:52:58.417"></status>
</kw>
<msg timestamp="20201022 13:52:58.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.402" endtime="20201022 13:52:58.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.421" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.419" endtime="20201022 13:52:58.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.422" endtime="20201022 13:52:58.423"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.399" endtime="20201022 13:52:58.424"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.398" endtime="20201022 13:52:58.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.431" endtime="20201022 13:52:58.735"></status>
</kw>
<msg timestamp="20201022 13:52:58.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.770206986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.77021875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:52:58.429" endtime="20201022 13:52:58.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.770206986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.77021875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:52:58.740" endtime="20201022 13:52:58.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.751" endtime="20201022 13:52:58.753"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.426" endtime="20201022 13:52:58.753"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.425" endtime="20201022 13:52:58.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:58.758" level="INFO">${RESULT} = [{'diff': 1.1763999999914176e-05}, {'diff': 1.1804999999975863e-05}, {'diff': 1.1777999999962319e-05}, {'diff': 1.1764000000025199e-05}, {'diff': 1.1777999999962319e-05}, {'diff': 1.1764000000025199e-...</msg>
<status status="PASS" starttime="20201022 13:52:58.754" endtime="20201022 13:52:58.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:58.763" level="INFO">${OVERHEAD} = {'diff': [1.1763999999914176e-05, 1.1804999999975863e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1804999999975863e-05, 1.1778000000073341e-05...</msg>
<status status="PASS" starttime="20201022 13:52:58.759" endtime="20201022 13:52:58.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.767" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:58.766" endtime="20201022 13:52:58.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.770" level="INFO">VALUE: [1.1763999999914176e-05, 1.1804999999975863e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1764000000025199e-05, 1.1804999999975863e-05, 1.1778000000073341e-05, 1.1764000000025199e-05, 1.1777999999962319e-05, 1.1749999999977057e-05, 1.1833000000072147e-05, 1.1778000000073341e-05, 1.1764000000025199e-05, 1.2763000000193259e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.1777999999962319e-05, 1.176300000005348e-05, 1.1777999999962319e-05, 1.1749999999866034e-05, 1.1763999999914176e-05, 1.1736000000039937e-05, 1.179200000001046e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1833000000072147e-05, 1.1763999999914176e-05, 1.1832999999850102e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.176300000005348e-05, 1.1832999999850102e-05, 1.1832999999850102e-05, 1.1750000000088079e-05, 1.1777999999962319e-05, 1.1736000000039937e-05, 1.1764000000136221e-05, 1.1749999999866034e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1764000000136221e-05, 1.1749999999866034e-05, 1.1777999999962319e-05, 1.1764000000136221e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1777000000101623e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1708000000165697e-05, 1.1749999999866034e-05, 1.1763999999914176e-05, 1.1764000000136221e-05, 1.1777999999962319e-05]</msg>
<status status="PASS" starttime="20201022 13:52:58.768" endtime="20201022 13:52:58.770"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.764" endtime="20201022 13:52:58.771"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.396" endtime="20201022 13:52:58.771"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.396" endtime="20201022 13:52:58.772"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.779" endtime="20201022 13:52:58.790"></status>
</kw>
<msg timestamp="20201022 13:52:58.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.778" endtime="20201022 13:52:58.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:58.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:58.792" endtime="20201022 13:52:58.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.794" endtime="20201022 13:52:58.796"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.775" endtime="20201022 13:52:58.796"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.774" endtime="20201022 13:52:58.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:58.804" endtime="20201022 13:52:59.111"></status>
</kw>
<msg timestamp="20201022 13:52:59.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.130403833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.130415597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:58.802" endtime="20201022 13:52:59.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.130403833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.130415597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:59.116" endtime="20201022 13:52:59.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.126" endtime="20201022 13:52:59.128"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.799" endtime="20201022 13:52:59.129"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.797" endtime="20201022 13:52:59.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:59.133" level="INFO">${RESULT} = [{'diff': 1.1764000000136221e-05}, {'diff': 1.1749999999866034e-05}, {'diff': 1.1777999999962319e-05}, {'diff': 1.1764000000136221e-05}, {'diff': 1.1764000000136221e-05}, {'diff': 1.1777999999962319e-...</msg>
<status status="PASS" starttime="20201022 13:52:59.130" endtime="20201022 13:52:59.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:59.139" level="INFO">${OVERHEAD} = {'diff': [1.1764000000136221e-05, 1.1749999999866034e-05, 1.1777999999962319e-05, 1.1764000000136221e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1777000000101623e-05, 1.1764000000136221e-05...</msg>
<status status="PASS" starttime="20201022 13:52:59.134" endtime="20201022 13:52:59.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.143" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:59.142" endtime="20201022 13:52:59.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.146" level="INFO">VALUE: [1.1764000000136221e-05, 1.1749999999866034e-05, 1.1777999999962319e-05, 1.1764000000136221e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1777000000101623e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1708000000165697e-05, 1.1749999999866034e-05, 1.1763999999914176e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.276399999983191e-05, 1.1776999999879578e-05, 1.179200000001046e-05, 1.1750000000088079e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1820000000106745e-05, 1.1721999999991795e-05, 1.1819000000024005e-05, 1.1764000000136221e-05, 1.1777999999962319e-05, 1.1777000000101623e-05, 1.1776999999879578e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.1777000000101623e-05, 1.1777999999962319e-05, 1.176300000005348e-05, 1.1778000000184363e-05, 1.1777999999962319e-05, 1.1749999999866034e-05, 1.1763999999914176e-05, 1.1777999999962319e-05, 1.1750000000088079e-05, 1.179200000001046e-05, 1.1763999999914176e-05, 1.1833000000072147e-05, 1.1736000000039937e-05, 1.1777000000101623e-05, 1.1819000000024005e-05, 1.179200000001046e-05, 1.1763999999914176e-05, 1.1777999999962319e-05, 1.1763999999914176e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.169399999989551e-05, 1.1763999999914176e-05, 1.1806000000058603e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1749999999866034e-05, 1.1806000000058603e-05, 1.179200000001046e-05]</msg>
<status status="PASS" starttime="20201022 13:52:59.144" endtime="20201022 13:52:59.146"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.140" endtime="20201022 13:52:59.147"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.772" endtime="20201022 13:52:59.147"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:58.772" endtime="20201022 13:52:59.147"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.155" endtime="20201022 13:52:59.166"></status>
</kw>
<msg timestamp="20201022 13:52:59.167" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.154" endtime="20201022 13:52:59.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.168" endtime="20201022 13:52:59.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.170" endtime="20201022 13:52:59.172"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.151" endtime="20201022 13:52:59.173"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.149" endtime="20201022 13:52:59.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.179" endtime="20201022 13:52:59.490"></status>
</kw>
<msg timestamp="20201022 13:52:59.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.492462639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.492474403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:59.178" endtime="20201022 13:52:59.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.492462639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.492474403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:59.495" endtime="20201022 13:52:59.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.506" endtime="20201022 13:52:59.508"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.175" endtime="20201022 13:52:59.508"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.174" endtime="20201022 13:52:59.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:59.513" level="INFO">${RESULT} = [{'diff': 1.1763999999914176e-05}, {'diff': 1.1777999999962319e-05}, {'diff': 1.1777999999962319e-05}, {'diff': 1.169399999989551e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1806000000058603e-0...</msg>
<status status="PASS" starttime="20201022 13:52:59.510" endtime="20201022 13:52:59.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:59.518" level="INFO">${OVERHEAD} = {'diff': [1.1763999999914176e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.169399999989551e-05, 1.1763999999914176e-05, 1.1806000000058603e-05, 1.1763999999914176e-05, 1.1750000000088079e-05,...</msg>
<status status="PASS" starttime="20201022 13:52:59.514" endtime="20201022 13:52:59.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.522" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:59.521" endtime="20201022 13:52:59.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.525" level="INFO">VALUE: [1.1763999999914176e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.169399999989551e-05, 1.1763999999914176e-05, 1.1806000000058603e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1749999999866034e-05, 1.1806000000058603e-05, 1.179200000001046e-05, 1.2777999999880052e-05, 1.1749999999866034e-05, 1.179200000001046e-05, 1.179099999992772e-05, 1.1709000000026393e-05, 1.1764000000136221e-05, 1.1833000000072147e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1777999999962319e-05, 1.1749999999866034e-05, 1.1764000000136221e-05, 1.1763999999914176e-05, 1.179099999992772e-05, 1.1776999999879578e-05, 1.1834000000154887e-05, 1.1776999999879578e-05, 1.1750000000088079e-05, 1.1834000000154887e-05, 1.1750000000088079e-05, 1.1806000000058603e-05, 1.1763999999914176e-05, 1.18199999998847e-05, 1.1777999999962319e-05, 1.1777999999962319e-05, 1.1763999999914176e-05, 1.1764000000136221e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.169399999989551e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1749999999866034e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1776999999879578e-05, 1.1778000000184363e-05, 1.1764000000136221e-05, 1.1776999999879578e-05, 1.179200000001046e-05, 1.1776999999879578e-05, 1.1777000000101623e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1846999999898244e-05, 1.1749999999866034e-05]</msg>
<status status="PASS" starttime="20201022 13:52:59.523" endtime="20201022 13:52:59.525"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.519" endtime="20201022 13:52:59.525"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.148" endtime="20201022 13:52:59.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.148" endtime="20201022 13:52:59.526"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.535" endtime="20201022 13:52:59.546"></status>
</kw>
<msg timestamp="20201022 13:52:59.546" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.533" endtime="20201022 13:52:59.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.547" endtime="20201022 13:52:59.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.550" endtime="20201022 13:52:59.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.530" endtime="20201022 13:52:59.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.528" endtime="20201022 13:52:59.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.559" endtime="20201022 13:52:59.867"></status>
</kw>
<msg timestamp="20201022 13:52:59.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.856677958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.856689736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:59.557" endtime="20201022 13:52:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.856677958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.856689736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:52:59.873" endtime="20201022 13:52:59.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.883" endtime="20201022 13:52:59.885"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.555" endtime="20201022 13:52:59.885"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.553" endtime="20201022 13:52:59.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:52:59.890" level="INFO">${RESULT} = [{'diff': 1.1778000000184363e-05}, {'diff': 1.1777000000101623e-05}, {'diff': 1.1776999999879578e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1764000000136221e-05}, {'diff': 1.1776999999879578e-...</msg>
<status status="PASS" starttime="20201022 13:52:59.886" endtime="20201022 13:52:59.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:52:59.895" level="INFO">${OVERHEAD} = {'diff': [1.1778000000184363e-05, 1.1777000000101623e-05, 1.1776999999879578e-05, 1.1778000000184363e-05, 1.1764000000136221e-05, 1.1776999999879578e-05, 1.179200000001046e-05, 1.1776999999879578e-05,...</msg>
<status status="PASS" starttime="20201022 13:52:59.891" endtime="20201022 13:52:59.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:52:59.898" endtime="20201022 13:52:59.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.902" level="INFO">VALUE: [1.1778000000184363e-05, 1.1777000000101623e-05, 1.1776999999879578e-05, 1.1778000000184363e-05, 1.1764000000136221e-05, 1.1776999999879578e-05, 1.179200000001046e-05, 1.1776999999879578e-05, 1.1777000000101623e-05, 1.1777999999962319e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1846999999898244e-05, 1.1749999999866034e-05, 1.2805999999976336e-05, 1.1763999999914176e-05, 1.1707999999721608e-05, 1.1735999999817892e-05, 1.1763999999914176e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1750000000088079e-05, 1.1777999999740274e-05, 1.1750000000088079e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1735999999817892e-05, 1.1778000000184363e-05, 1.1763000000275525e-05, 1.179200000001046e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1778000000184363e-05, 1.1777999999740274e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1721999999991795e-05, 1.1833000000294192e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1736000000261981e-05, 1.1708000000165697e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1764000000358266e-05]</msg>
<status status="PASS" starttime="20201022 13:52:59.901" endtime="20201022 13:52:59.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.896" endtime="20201022 13:52:59.903"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.527" endtime="20201022 13:52:59.903"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.526" endtime="20201022 13:52:59.904"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.912" endtime="20201022 13:52:59.923"></status>
</kw>
<msg timestamp="20201022 13:52:59.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.910" endtime="20201022 13:52:59.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:52:59.925" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:52:59.924" endtime="20201022 13:52:59.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.926" endtime="20201022 13:52:59.928"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.907" endtime="20201022 13:52:59.929"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.906" endtime="20201022 13:52:59.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:52:59.935" endtime="20201022 13:53:00.244"></status>
</kw>
<msg timestamp="20201022 13:53:00.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.226034778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.2260465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:52:59.934" endtime="20201022 13:53:00.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.226034778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.2260465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:00.249" endtime="20201022 13:53:00.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.263" endtime="20201022 13:53:00.265"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.931" endtime="20201022 13:53:00.266"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.930" endtime="20201022 13:53:00.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:00.272" level="INFO">${RESULT} = [{'diff': 1.1721999999991795e-05}, {'diff': 1.1833000000294192e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1762999999831436e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1764000000358266e-...</msg>
<status status="PASS" starttime="20201022 13:53:00.267" endtime="20201022 13:53:00.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:00.280" level="INFO">${OVERHEAD} = {'diff': [1.1721999999991795e-05, 1.1833000000294192e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.1763999999914176e-05...</msg>
<status status="PASS" starttime="20201022 13:53:00.274" endtime="20201022 13:53:00.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.284" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:00.283" endtime="20201022 13:53:00.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.287" level="INFO">VALUE: [1.1721999999991795e-05, 1.1833000000294192e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1736000000261981e-05, 1.1708000000165697e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1764000000358266e-05, 1.2778000000324141e-05, 1.1776999999657534e-05, 1.1721999999991795e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1804999999753818e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.179099999992772e-05, 1.1777999999740274e-05, 1.1777999999740274e-05, 1.1805999999836558e-05, 1.1764000000358266e-05, 1.1762999999831436e-05, 1.1764000000358266e-05, 1.1750000000088079e-05, 1.1777999999740274e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1777999999740274e-05, 1.1777000000101623e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.1764000000358266e-05, 1.179200000001046e-05, 1.1776999999657534e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1764000000358266e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1721999999991795e-05, 1.1777000000101623e-05, 1.1776999999657534e-05, 1.1762999999831436e-05, 1.179099999992772e-05, 1.1777999999740274e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:00.285" endtime="20201022 13:53:00.287"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.281" endtime="20201022 13:53:00.288"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.904" endtime="20201022 13:53:00.288"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:59.904" endtime="20201022 13:53:00.288"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.296" endtime="20201022 13:53:00.307"></status>
</kw>
<msg timestamp="20201022 13:53:00.308" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:00.295" endtime="20201022 13:53:00.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:00.309" endtime="20201022 13:53:00.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.311" endtime="20201022 13:53:00.313"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.292" endtime="20201022 13:53:00.313"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.290" endtime="20201022 13:53:00.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.321" endtime="20201022 13:53:00.637"></status>
</kw>
<msg timestamp="20201022 13:53:00.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.591939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.591951694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:00.318" endtime="20201022 13:53:00.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.591939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.591951694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:00.643" endtime="20201022 13:53:00.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.653" endtime="20201022 13:53:00.654"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.316" endtime="20201022 13:53:00.655"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.314" endtime="20201022 13:53:00.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:00.660" level="INFO">${RESULT} = [{'diff': 1.1777000000101623e-05}, {'diff': 1.1750000000088079e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1762999999831436e-05}, {'diff': 1.179099999992772e-0...</msg>
<status status="PASS" starttime="20201022 13:53:00.656" endtime="20201022 13:53:00.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:00.664" level="INFO">${OVERHEAD} = {'diff': [1.1777000000101623e-05, 1.1750000000088079e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1721999999991795e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:00.661" endtime="20201022 13:53:00.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.668" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:00.667" endtime="20201022 13:53:00.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.671" level="INFO">VALUE: [1.1777000000101623e-05, 1.1750000000088079e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1721999999991795e-05, 1.1777000000101623e-05, 1.1776999999657534e-05, 1.1762999999831436e-05, 1.179099999992772e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.2707999999861386e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.1805000000197907e-05, 1.1764000000358266e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.179200000001046e-05, 1.1750000000088079e-05, 1.184799999975894e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1763999999914176e-05, 1.1750000000088079e-05, 1.169499999997825e-05, 1.1777999999740274e-05, 1.1762999999831436e-05, 1.1778000000184363e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1777999999740274e-05, 1.1764000000358266e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1708000000165697e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.16940000003396e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:00.669" endtime="20201022 13:53:00.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.665" endtime="20201022 13:53:00.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.289" endtime="20201022 13:53:00.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.289" endtime="20201022 13:53:00.673"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.681" endtime="20201022 13:53:00.692"></status>
</kw>
<msg timestamp="20201022 13:53:00.693" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:00.680" endtime="20201022 13:53:00.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:00.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:00.694" endtime="20201022 13:53:00.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.696" endtime="20201022 13:53:00.698"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.677" endtime="20201022 13:53:00.698"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.675" endtime="20201022 13:53:00.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:00.706" endtime="20201022 13:53:01.015"></status>
</kw>
<msg timestamp="20201022 13:53:01.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.966514194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.966525958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:00.704" endtime="20201022 13:53:01.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.966514194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.966525958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:01.021" endtime="20201022 13:53:01.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.031" endtime="20201022 13:53:01.033"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.701" endtime="20201022 13:53:01.033"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.699" endtime="20201022 13:53:01.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:01.038" level="INFO">${RESULT} = [{'diff': 1.1763999999914176e-05}, {'diff': 1.1708000000165697e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1777000000101623e-05}, {'diff': 1.1750000000088079e-0...</msg>
<status status="PASS" starttime="20201022 13:53:01.034" endtime="20201022 13:53:01.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:01.043" level="INFO">${OVERHEAD} = {'diff': [1.1763999999914176e-05, 1.1708000000165697e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.16940000003396e-05, 1.1820000000106745e-05, 1...</msg>
<status status="PASS" starttime="20201022 13:53:01.039" endtime="20201022 13:53:01.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.047" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:01.046" endtime="20201022 13:53:01.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.050" level="INFO">VALUE: [1.1763999999914176e-05, 1.1708000000165697e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.16940000003396e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.2776999999797312e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1777000000101623e-05, 1.1777999999740274e-05, 1.174999999964399e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1819999999662656e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.179100000037181e-05, 1.1763999999914176e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1750000000088079e-05, 1.1819000000024005e-05, 1.1750000000088079e-05, 1.1832999999850102e-05, 1.1833999999932843e-05, 1.1764000000358266e-05, 1.1777999999740274e-05, 1.1736999999900632e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1778000000184363e-05, 1.1750000000088079e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1764000000358266e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.169500000042234e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1750000000088079e-05]</msg>
<status status="PASS" starttime="20201022 13:53:01.048" endtime="20201022 13:53:01.050"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.044" endtime="20201022 13:53:01.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.673" endtime="20201022 13:53:01.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:00.673" endtime="20201022 13:53:01.052"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.060" endtime="20201022 13:53:01.071"></status>
</kw>
<msg timestamp="20201022 13:53:01.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.058" endtime="20201022 13:53:01.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.072" endtime="20201022 13:53:01.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.075" endtime="20201022 13:53:01.076"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.055" endtime="20201022 13:53:01.077"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.054" endtime="20201022 13:53:01.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.084" endtime="20201022 13:53:01.400"></status>
</kw>
<msg timestamp="20201022 13:53:01.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.341653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.341664931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:01.083" endtime="20201022 13:53:01.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.341653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.341664931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:01.405" endtime="20201022 13:53:01.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.415" endtime="20201022 13:53:01.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.080" endtime="20201022 13:53:01.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.078" endtime="20201022 13:53:01.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:01.423" level="INFO">${RESULT} = [{'diff': 1.1777999999740274e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.179099999992772e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1764000000358266e-0...</msg>
<status status="PASS" starttime="20201022 13:53:01.418" endtime="20201022 13:53:01.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:01.427" level="INFO">${OVERHEAD} = {'diff': [1.1777999999740274e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1764000000358266e-05, 1.1750000000088079e-05, 1.1763999999914176e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:01.424" endtime="20201022 13:53:01.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.432" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:01.431" endtime="20201022 13:53:01.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.434" level="INFO">VALUE: [1.1777999999740274e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.179099999992772e-05, 1.1778000000184363e-05, 1.1764000000358266e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.169500000042234e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1750000000088079e-05, 1.2749999999783768e-05, 1.1764000000358266e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1778000000184363e-05, 1.1833999999932843e-05, 1.1764000000358266e-05, 1.1763999999914176e-05, 1.179200000001046e-05, 1.1750000000088079e-05, 1.1764000000358266e-05, 1.1777000000101623e-05, 1.1736999999900632e-05, 1.1707999999721608e-05, 1.1708000000165697e-05, 1.1805999999836558e-05, 1.1764000000358266e-05, 1.1778000000184363e-05, 1.1777999999740274e-05, 1.1763999999914176e-05, 1.1735999999817892e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1735999999817892e-05, 1.1778000000184363e-05, 1.179200000001046e-05, 1.1750000000088079e-05, 1.1750000000088079e-05, 1.1762999999831436e-05, 1.179200000001046e-05, 1.1776999999657534e-05, 1.1820000000106745e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1777000000101623e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.179099999992772e-05, 1.1735999999817892e-05, 1.1763999999914176e-05, 1.1735999999817892e-05, 1.1763000000275525e-05, 1.1763000000275525e-05, 1.1750000000088079e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1805000000197907e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:01.433" endtime="20201022 13:53:01.435"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.428" endtime="20201022 13:53:01.435"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.052" endtime="20201022 13:53:01.436"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.052" endtime="20201022 13:53:01.436"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.444" endtime="20201022 13:53:01.455"></status>
</kw>
<msg timestamp="20201022 13:53:01.455" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.442" endtime="20201022 13:53:01.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.456" endtime="20201022 13:53:01.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.459" endtime="20201022 13:53:01.460"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.439" endtime="20201022 13:53:01.486"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.438" endtime="20201022 13:53:01.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.494" endtime="20201022 13:53:01.816"></status>
</kw>
<msg timestamp="20201022 13:53:01.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.710078236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.71009, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201022 13:53:01.492" endtime="20201022 13:53:01.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.710078236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.71009, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201022 13:53:01.823" endtime="20201022 13:53:01.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.837" endtime="20201022 13:53:01.840"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.489" endtime="20201022 13:53:01.841"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.487" endtime="20201022 13:53:01.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:01.849" level="INFO">${RESULT} = [{'diff': 1.1763999999914176e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1819000000024005e-05}, {'diff': 1.179099999992772e-05}, {'diff': 1.1735999999817892e-05}, {'diff': 1.1763999999914176e-0...</msg>
<status status="PASS" starttime="20201022 13:53:01.843" endtime="20201022 13:53:01.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:01.856" level="INFO">${OVERHEAD} = {'diff': [1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.179099999992772e-05, 1.1735999999817892e-05, 1.1763999999914176e-05, 1.1735999999817892e-05, 1.1763000000275525e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:01.851" endtime="20201022 13:53:01.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.867" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:01.861" endtime="20201022 13:53:01.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.871" level="INFO">VALUE: [1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.179099999992772e-05, 1.1735999999817892e-05, 1.1763999999914176e-05, 1.1735999999817892e-05, 1.1763000000275525e-05, 1.1763000000275525e-05, 1.1750000000088079e-05, 1.1750000000088079e-05, 1.1763999999914176e-05, 1.1805000000197907e-05, 1.1763999999914176e-05, 1.2764000000053954e-05, 1.1778000000184363e-05, 1.1790999999483631e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1790999999483631e-05, 1.1763999999914176e-05, 1.1763000000719614e-05, 1.1860999999946387e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179100000037181e-05, 1.1763999999914176e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1723000000074535e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.179100000037181e-05, 1.1833000000294192e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1764000000802355e-05, 1.1763000000719614e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.169500000042234e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1777000000101623e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.1693999999451421e-05, 1.1763999999914176e-05, 1.1819000000024005e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:01.868" endtime="20201022 13:53:01.872"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.858" endtime="20201022 13:53:01.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.437" endtime="20201022 13:53:01.874"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.436" endtime="20201022 13:53:01.874"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.887" endtime="20201022 13:53:01.900"></status>
</kw>
<msg timestamp="20201022 13:53:01.901" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.885" endtime="20201022 13:53:01.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:01.905" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:01.902" endtime="20201022 13:53:01.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.908" endtime="20201022 13:53:01.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.880" endtime="20201022 13:53:01.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.878" endtime="20201022 13:53:01.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:01.927" endtime="20201022 13:53:02.247"></status>
</kw>
<msg timestamp="20201022 13:53:02.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.085004472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.085016236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:01.925" endtime="20201022 13:53:02.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.085004472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.085016236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:02.252" endtime="20201022 13:53:02.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.263" endtime="20201022 13:53:02.264"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.920" endtime="20201022 13:53:02.265"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.916" endtime="20201022 13:53:02.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:02.269" level="INFO">${RESULT} = [{'diff': 1.1764000000802355e-05}, {'diff': 1.1805999999836558e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.169500000042234e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1763999999914176e-0...</msg>
<status status="PASS" starttime="20201022 13:53:02.266" endtime="20201022 13:53:02.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:02.275" level="INFO">${OVERHEAD} = {'diff': [1.1764000000802355e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.169500000042234e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1777000000101623e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:02.270" endtime="20201022 13:53:02.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.279" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:02.278" endtime="20201022 13:53:02.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.281" level="INFO">VALUE: [1.1764000000802355e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.169500000042234e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1777000000101623e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.1693999999451421e-05, 1.1763999999914176e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.2764000000053954e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.1820000000106745e-05, 1.1778000000184363e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1832999999406013e-05, 1.1805999999836558e-05, 1.174999999964399e-05, 1.1777000000101623e-05, 1.1791999999566372e-05, 1.1750000000532168e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1819000000024005e-05, 1.1777000000101623e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.1762999999831436e-05, 1.179200000045455e-05, 1.1833000000294192e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1750000000532168e-05, 1.1777000000101623e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.179200000045455e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1791999999566372e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.179100000037181e-05, 1.1777999999296185e-05]</msg>
<status status="PASS" starttime="20201022 13:53:02.280" endtime="20201022 13:53:02.282"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.276" endtime="20201022 13:53:02.282"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.876" endtime="20201022 13:53:02.283"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:01.875" endtime="20201022 13:53:02.283"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.291" endtime="20201022 13:53:02.302"></status>
</kw>
<msg timestamp="20201022 13:53:02.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:02.289" endtime="20201022 13:53:02.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.305" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:02.303" endtime="20201022 13:53:02.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.306" endtime="20201022 13:53:02.308"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.287" endtime="20201022 13:53:02.308"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.285" endtime="20201022 13:53:02.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.315" endtime="20201022 13:53:02.646"></status>
</kw>
<msg timestamp="20201022 13:53:02.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519736764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.519748542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:02.313" endtime="20201022 13:53:02.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519736764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.519748542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:02.651" endtime="20201022 13:53:02.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.662" endtime="20201022 13:53:02.663"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.311" endtime="20201022 13:53:02.664"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.309" endtime="20201022 13:53:02.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:02.668" level="INFO">${RESULT} = [{'diff': 1.1778000000184363e-05}, {'diff': 1.1762999999831436e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1819000000024005e-0...</msg>
<status status="PASS" starttime="20201022 13:53:02.665" endtime="20201022 13:53:02.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:02.673" level="INFO">${OVERHEAD} = {'diff': [1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1763999999914176e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:02.669" endtime="20201022 13:53:02.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.677" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:02.676" endtime="20201022 13:53:02.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.680" level="INFO">VALUE: [1.1778000000184363e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1791999999566372e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.179100000037181e-05, 1.1777999999296185e-05, 1.2778000000324141e-05, 1.1721999999991795e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1805000000641996e-05, 1.1778000000184363e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.174999999964399e-05, 1.1777999999296185e-05, 1.174999999964399e-05, 1.16940000003396e-05, 1.1763999999914176e-05, 1.179100000037181e-05, 1.1708000000609786e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1833000000294192e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1834000000376932e-05, 1.1763999999914176e-05, 1.1777999999296185e-05, 1.1833000000294192e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1790999999483631e-05, 1.179200000045455e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.174999999964399e-05]</msg>
<status status="PASS" starttime="20201022 13:53:02.678" endtime="20201022 13:53:02.680"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.674" endtime="20201022 13:53:02.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.284" endtime="20201022 13:53:02.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.283" endtime="20201022 13:53:02.681"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.690" endtime="20201022 13:53:02.701"></status>
</kw>
<msg timestamp="20201022 13:53:02.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:02.687" endtime="20201022 13:53:02.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:02.704" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:02.703" endtime="20201022 13:53:02.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.705" endtime="20201022 13:53:02.707"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.685" endtime="20201022 13:53:02.707"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.683" endtime="20201022 13:53:02.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:02.714" endtime="20201022 13:53:03.031"></status>
</kw>
<msg timestamp="20201022 13:53:03.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913050236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:02.713" endtime="20201022 13:53:03.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913050236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913062069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.036" endtime="20201022 13:53:03.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.046" endtime="20201022 13:53:03.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.710" endtime="20201022 13:53:03.048"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.708" endtime="20201022 13:53:03.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:03.053" level="INFO">${RESULT} = [{'diff': 1.1833000000294192e-05}, {'diff': 1.1778000000184363e-05}, {'diff': 1.1804999999753818e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1805999999836558e-05}, {'diff': 1.1763999999914176e-...</msg>
<status status="PASS" starttime="20201022 13:53:03.049" endtime="20201022 13:53:03.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:03.058" level="INFO">${OVERHEAD} = {'diff': [1.1833000000294192e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1790999999483631e-05...</msg>
<status status="PASS" starttime="20201022 13:53:03.054" endtime="20201022 13:53:03.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.062" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:03.061" endtime="20201022 13:53:03.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.065" level="INFO">VALUE: [1.1833000000294192e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1805999999836558e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1790999999483631e-05, 1.179200000045455e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.174999999964399e-05, 1.2819999999358345e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1777999999296185e-05, 1.174999999964399e-05, 1.1764000000802355e-05, 1.1805999999836558e-05, 1.1750000000532168e-05, 1.1737000000344722e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1762999999831436e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1750000000532168e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1820000000106745e-05, 1.1818999999135826e-05, 1.1791999999566372e-05, 1.1778000000184363e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1790999999483631e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1790999999483631e-05, 1.1708999999804348e-05, 1.1805999999836558e-05, 1.1778000000184363e-05, 1.1763000000719614e-05, 1.1750000000532168e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:03.063" endtime="20201022 13:53:03.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.059" endtime="20201022 13:53:03.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.682" endtime="20201022 13:53:03.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:02.682" endtime="20201022 13:53:03.067"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.075" endtime="20201022 13:53:03.086"></status>
</kw>
<msg timestamp="20201022 13:53:03.086" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.073" endtime="20201022 13:53:03.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.087" endtime="20201022 13:53:03.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.090" endtime="20201022 13:53:03.092"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.071" endtime="20201022 13:53:03.092"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.069" endtime="20201022 13:53:03.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.099" endtime="20201022 13:53:03.410"></status>
</kw>
<msg timestamp="20201022 13:53:03.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.300385569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.300397333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.098" endtime="20201022 13:53:03.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.300385569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.300397333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.415" endtime="20201022 13:53:03.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.424" endtime="20201022 13:53:03.426"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.095" endtime="20201022 13:53:03.427"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.093" endtime="20201022 13:53:03.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:03.431" level="INFO">${RESULT} = [{'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1790999999483631e-05}, {'diff': 1.1708999999804348e-05}, {'diff': 1.1805999999836558e-05}, {'diff': 1.1778000000184363e-...</msg>
<status status="PASS" starttime="20201022 13:53:03.428" endtime="20201022 13:53:03.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:03.437" level="INFO">${OVERHEAD} = {'diff': [1.1763999999914176e-05, 1.1763999999914176e-05, 1.1790999999483631e-05, 1.1708999999804348e-05, 1.1805999999836558e-05, 1.1778000000184363e-05, 1.1763000000719614e-05, 1.1750000000532168e-05...</msg>
<status status="PASS" starttime="20201022 13:53:03.432" endtime="20201022 13:53:03.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.441" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:03.440" endtime="20201022 13:53:03.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.443" level="INFO">VALUE: [1.1763999999914176e-05, 1.1763999999914176e-05, 1.1790999999483631e-05, 1.1708999999804348e-05, 1.1805999999836558e-05, 1.1778000000184363e-05, 1.1763000000719614e-05, 1.1750000000532168e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.2819000000163783e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1762999999831436e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1805999999836558e-05, 1.1778000000184363e-05, 1.1750000000532168e-05, 1.1805999999836558e-05, 1.174999999964399e-05, 1.174999999964399e-05, 1.1790999999483631e-05, 1.1791999999566372e-05, 1.1777000000101623e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1735999999373803e-05, 1.1763999999914176e-05, 1.1820000000106745e-05, 1.179100000037181e-05, 1.1764000000802355e-05, 1.1777000000101623e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1707999999721608e-05, 1.1763999999914176e-05, 1.1820000000106745e-05, 1.179100000037181e-05, 1.1778000000184363e-05, 1.1709000000692527e-05, 1.1763999999914176e-05, 1.1750000000532168e-05]</msg>
<status status="PASS" starttime="20201022 13:53:03.442" endtime="20201022 13:53:03.444"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.438" endtime="20201022 13:53:03.444"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.068" endtime="20201022 13:53:03.445"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.067" endtime="20201022 13:53:03.445"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.453" endtime="20201022 13:53:03.464"></status>
</kw>
<msg timestamp="20201022 13:53:03.465" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.451" endtime="20201022 13:53:03.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.466" endtime="20201022 13:53:03.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.468" endtime="20201022 13:53:03.470"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.448" endtime="20201022 13:53:03.470"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.447" endtime="20201022 13:53:03.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.477" endtime="20201022 13:53:03.797"></status>
</kw>
<msg timestamp="20201022 13:53:03.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.674681611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.674693361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.475" endtime="20201022 13:53:03.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.674681611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.674693361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.802" endtime="20201022 13:53:03.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.812" endtime="20201022 13:53:03.814"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.473" endtime="20201022 13:53:03.814"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.471" endtime="20201022 13:53:03.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:03.819" level="INFO">${RESULT} = [{'diff': 1.1750000000532168e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-0...</msg>
<status status="PASS" starttime="20201022 13:53:03.815" endtime="20201022 13:53:03.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:03.824" level="INFO">${OVERHEAD} = {'diff': [1.1750000000532168e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1707999999721608e-05, 1.1763999999914176e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:03.820" endtime="20201022 13:53:03.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.828" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:03.827" endtime="20201022 13:53:03.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.830" level="INFO">VALUE: [1.1750000000532168e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1707999999721608e-05, 1.1763999999914176e-05, 1.1820000000106745e-05, 1.179100000037181e-05, 1.1778000000184363e-05, 1.1709000000692527e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.2764000000053954e-05, 1.1777000000101623e-05, 1.1721999999991795e-05, 1.1750000000532168e-05, 1.174999999964399e-05, 1.1791999999566372e-05, 1.1833000000294192e-05, 1.1777000000101623e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1708000000609786e-05, 1.1777000000101623e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1791999999566372e-05, 1.1763999999914176e-05, 1.1764000000802355e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.174999999964399e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819999999218567e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1776999999213444e-05, 1.1805999999836558e-05, 1.1777000000101623e-05]</msg>
<status status="PASS" starttime="20201022 13:53:03.829" endtime="20201022 13:53:03.831"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.825" endtime="20201022 13:53:03.831"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.446" endtime="20201022 13:53:03.832"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.445" endtime="20201022 13:53:03.832"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.841" endtime="20201022 13:53:03.852"></status>
</kw>
<msg timestamp="20201022 13:53:03.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.840" endtime="20201022 13:53:03.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:03.855" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:03.854" endtime="20201022 13:53:03.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.856" endtime="20201022 13:53:03.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.836" endtime="20201022 13:53:03.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.834" endtime="20201022 13:53:03.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:03.865" endtime="20201022 13:53:04.202"></status>
</kw>
<msg timestamp="20201022 13:53:04.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.043706931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.043718694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:03.864" endtime="20201022 13:53:04.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.043706931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.043718694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:04.207" endtime="20201022 13:53:04.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.217" endtime="20201022 13:53:04.218"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.861" endtime="20201022 13:53:04.219"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.859" endtime="20201022 13:53:04.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:04.224" level="INFO">${RESULT} = [{'diff': 1.1762999999831436e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.1736000000261981e-05}, {'diff': 1.1763999999914176e-05...</msg>
<status status="PASS" starttime="20201022 13:53:04.220" endtime="20201022 13:53:04.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:04.229" level="INFO">${OVERHEAD} = {'diff': [1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.174999999964399e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819999999218567e-05, ...</msg>
<status status="PASS" starttime="20201022 13:53:04.225" endtime="20201022 13:53:04.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.233" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:04.232" endtime="20201022 13:53:04.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.236" level="INFO">VALUE: [1.1762999999831436e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.174999999964399e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1819999999218567e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1776999999213444e-05, 1.1805999999836558e-05, 1.1777000000101623e-05, 1.2762999999971214e-05, 1.179200000045455e-05, 1.174999999964399e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1708000000609786e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1819000000024005e-05, 1.1778000000184363e-05, 1.1834000000376932e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.1791999999566372e-05, 1.1762999999831436e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.174999999964399e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1735999999373803e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.174999999964399e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1791999999566372e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1735999999373803e-05, 1.1777999999296185e-05, 1.1681000000152153e-05, 1.1790999999483631e-05, 1.1833999999488753e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1708999999804348e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:04.234" endtime="20201022 13:53:04.236"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.230" endtime="20201022 13:53:04.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.833" endtime="20201022 13:53:04.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:03.832" endtime="20201022 13:53:04.237"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.246" endtime="20201022 13:53:04.257"></status>
</kw>
<msg timestamp="20201022 13:53:04.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:04.244" endtime="20201022 13:53:04.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:04.258" endtime="20201022 13:53:04.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.261" endtime="20201022 13:53:04.262"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.242" endtime="20201022 13:53:04.263"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.240" endtime="20201022 13:53:04.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.270" endtime="20201022 13:53:04.580"></status>
</kw>
<msg timestamp="20201022 13:53:04.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.420882014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.42089375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:04.268" endtime="20201022 13:53:04.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.420882014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.42089375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:04.585" endtime="20201022 13:53:04.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.595" endtime="20201022 13:53:04.597"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.266" endtime="20201022 13:53:04.597"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.264" endtime="20201022 13:53:04.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:04.602" level="INFO">${RESULT} = [{'diff': 1.1736000000261981e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1735999999373803e-05}, {'diff': 1.1777999999296185e-05}, {'diff': 1.1681000000152153e-...</msg>
<status status="PASS" starttime="20201022 13:53:04.599" endtime="20201022 13:53:04.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:04.608" level="INFO">${OVERHEAD} = {'diff': [1.1736000000261981e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1735999999373803e-05, 1.1777999999296185e-05, 1.1681000000152153e-05, 1.1790999999483631e-05, 1.1833999999488753e-05...</msg>
<status status="PASS" starttime="20201022 13:53:04.603" endtime="20201022 13:53:04.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.612" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:04.611" endtime="20201022 13:53:04.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.615" level="INFO">VALUE: [1.1736000000261981e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1735999999373803e-05, 1.1777999999296185e-05, 1.1681000000152153e-05, 1.1790999999483631e-05, 1.1833999999488753e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1708999999804348e-05, 1.1763999999914176e-05, 1.2764000000053954e-05, 1.1681000000152153e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1776999999213444e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1777999999296185e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.174999999964399e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1680000000069413e-05, 1.1736000000261981e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1791999999566372e-05, 1.1764000000802355e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1778000000184363e-05, 1.174999999964399e-05, 1.1750000000532168e-05, 1.1778000000184363e-05, 1.1707999999721608e-05, 1.1763999999914176e-05, 1.1708999999804348e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.1708000000609786e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:04.613" endtime="20201022 13:53:04.615"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.609" endtime="20201022 13:53:04.616"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.238" endtime="20201022 13:53:04.617"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.238" endtime="20201022 13:53:04.617"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.625" endtime="20201022 13:53:04.636"></status>
</kw>
<msg timestamp="20201022 13:53:04.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:04.623" endtime="20201022 13:53:04.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.639" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:04.637" endtime="20201022 13:53:04.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.640" endtime="20201022 13:53:04.641"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.621" endtime="20201022 13:53:04.642"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.619" endtime="20201022 13:53:04.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.650" endtime="20201022 13:53:04.965"></status>
</kw>
<msg timestamp="20201022 13:53:04.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.814531486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.814543264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:04.648" endtime="20201022 13:53:04.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.814531486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.814543264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:04.970" endtime="20201022 13:53:04.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:04.981" endtime="20201022 13:53:04.982"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.645" endtime="20201022 13:53:04.983"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.643" endtime="20201022 13:53:04.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:04.987" level="INFO">${RESULT} = [{'diff': 1.1778000000184363e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.1763999999914176e-05}, {'diff': 1.179200000045455e-05}, {'diff': 1.1763999999914176e-0...</msg>
<status status="PASS" starttime="20201022 13:53:04.984" endtime="20201022 13:53:04.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:04.992" level="INFO">${OVERHEAD} = {'diff': [1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.1708000000609786e-05, 1.1763999999914176e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:04.988" endtime="20201022 13:53:04.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.996" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201022 13:53:04.995" endtime="20201022 13:53:04.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:04.999" level="INFO">VALUE: [1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.179200000045455e-05, 1.1763999999914176e-05, 1.1708000000609786e-05, 1.1763999999914176e-05, 1.1750000000532168e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.279199999970615e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1721999999991795e-05, 1.1750000000532168e-05, 1.179100000037181e-05, 1.1804999999753818e-05, 1.1763999999914176e-05, 1.1777000000101623e-05, 1.179200000045455e-05, 1.1806000000724737e-05, 1.1681000000152153e-05, 1.1777999999296185e-05, 1.1763999999914176e-05, 1.174999999964399e-05, 1.1763999999914176e-05, 1.1805000000641996e-05, 1.1736000000261981e-05, 1.1763999999914176e-05, 1.1791999999566372e-05, 1.1778000000184363e-05, 1.1777999999296185e-05, 1.174999999964399e-05, 1.1777000000101623e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1763999999914176e-05, 1.1819000000024005e-05, 1.1763999999914176e-05, 1.1762999999831436e-05, 1.1735999999373803e-05, 1.1763999999914176e-05, 1.1778000000184363e-05, 1.1778000000184363e-05, 1.1777000000101623e-05, 1.1763999999914176e-05, 1.1777999999296185e-05, 1.1777000000101623e-05, 1.1820000000106745e-05, 1.1763999999914176e-05, 1.1763999999914176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:04.997" endtime="20201022 13:53:05.000"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.993" endtime="20201022 13:53:05.001"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.617" endtime="20201022 13:53:05.001"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:04.617" endtime="20201022 13:53:05.001"></status>
</kw>
<status status="PASS" starttime="20201022 13:52:57.303" endtime="20201022 13:53:05.002"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:52:57.233" endtime="20201022 13:53:05.002" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:05.009" endtime="20201022 13:53:05.028"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.007" endtime="20201022 13:53:05.029"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.047" endtime="20201022 13:53:05.059"></status>
</kw>
<msg timestamp="20201022 13:53:05.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.044" endtime="20201022 13:53:05.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.062" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.061" endtime="20201022 13:53:05.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.066" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:05.064" endtime="20201022 13:53:05.066"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:05.040" endtime="20201022 13:53:05.067"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:05.038" endtime="20201022 13:53:05.067"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.036" endtime="20201022 13:53:05.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:05.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:05.071" endtime="20201022 13:53:05.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.068" endtime="20201022 13:53:05.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.035" endtime="20201022 13:53:05.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.034" endtime="20201022 13:53:05.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.073" endtime="20201022 13:53:05.074"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.032" endtime="20201022 13:53:05.075"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.030" endtime="20201022 13:53:05.075"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.006" endtime="20201022 13:53:05.076"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.087" endtime="20201022 13:53:05.107"></status>
</kw>
<msg timestamp="20201022 13:53:05.108" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.085" endtime="20201022 13:53:05.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.110" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.109" endtime="20201022 13:53:05.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.111" endtime="20201022 13:53:05.113"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.080" endtime="20201022 13:53:05.113"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.078" endtime="20201022 13:53:05.114"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.116" endtime="20201022 13:53:05.118"></status>
</kw>
<msg timestamp="20201022 13:53:05.119" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:05.115" endtime="20201022 13:53:05.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.123" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:05.122" endtime="20201022 13:53:05.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.125" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:05.124" endtime="20201022 13:53:05.125"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.119" endtime="20201022 13:53:05.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.129" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:05.128" endtime="20201022 13:53:05.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.132" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:05.131" endtime="20201022 13:53:05.132"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.126" endtime="20201022 13:53:05.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.139" endtime="20201022 13:53:05.424"></status>
</kw>
<msg timestamp="20201022 13:53:05.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070756347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070788347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:05.137" endtime="20201022 13:53:05.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070756347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070788347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:05.428" endtime="20201022 13:53:05.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.437" endtime="20201022 13:53:05.438"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.135" endtime="20201022 13:53:05.439"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.133" endtime="20201022 13:53:05.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:05.443" level="INFO">${RESULT} = [{'diff': 3.200000000000425e-05}, {'diff': 3.1306000000008716e-05}, {'diff': 3.1304999999995364e-05}, {'diff': 3.131900000000187e-05}, {'diff': 3.132000000000135e-05}, {'diff': 3.132000000000135e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:05.440" endtime="20201022 13:53:05.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:05.448" level="INFO">${OVERHEAD} = {'diff': [3.200000000000425e-05, 3.1306000000008716e-05, 3.1304999999995364e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.1318999999987995e-05, 3....</msg>
<status status="PASS" starttime="20201022 13:53:05.444" endtime="20201022 13:53:05.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.453" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201022 13:53:05.452" endtime="20201022 13:53:05.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.455" level="INFO">VALUE: [3.200000000000425e-05, 3.1306000000008716e-05, 3.1304999999995364e-05, 3.131900000000187e-05, 3.132000000000135e-05, 3.132000000000135e-05, 3.1306000000008716e-05, 3.1318999999987995e-05, 3.1304999999995364e-05, 3.129200000000221e-05, 3.129100000000273e-05, 3.1304999999995364e-05, 3.131900000000187e-05, 3.130500000000924e-05, 3.1304999999995364e-05, 3.1304999999995364e-05, 3.1306000000008716e-05, 3.123599999999005e-05, 3.132000000000135e-05, 3.130500000000924e-05, 3.129200000000221e-05, 3.130599999999484e-05, 3.134700000000101e-05, 3.133399999999398e-05, 3.132000000000135e-05, 3.1304999999995364e-05, 3.133300000000838e-05, 3.131900000000187e-05, 3.130599999999484e-05, 3.131900000000187e-05, 3.133300000000838e-05, 3.131900000000187e-05, 3.130599999999484e-05, 3.1304999999995364e-05, 3.134700000000101e-05, 3.133399999999398e-05, 3.133399999999398e-05, 3.131900000000187e-05, 3.133300000000838e-05, 3.132000000000135e-05, 3.133300000000838e-05, 3.12779999999957e-05, 3.132000000000135e-05, 3.130599999999484e-05, 3.133300000000838e-05, 3.140299999999929e-05, 3.133399999999398e-05, 3.134700000000101e-05, 3.1304999999995364e-05, 3.131900000000187e-05]</msg>
<status status="PASS" starttime="20201022 13:53:05.454" endtime="20201022 13:53:05.456"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.449" endtime="20201022 13:53:05.457"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.076" endtime="20201022 13:53:05.457"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:05.004" endtime="20201022 13:53:05.458" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:05.464" endtime="20201022 13:53:05.484"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.463" endtime="20201022 13:53:05.484"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.497" endtime="20201022 13:53:05.510"></status>
</kw>
<msg timestamp="20201022 13:53:05.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.496" endtime="20201022 13:53:05.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.511" endtime="20201022 13:53:05.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.516" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:05.514" endtime="20201022 13:53:05.516"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:05.493" endtime="20201022 13:53:05.517"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:05.491" endtime="20201022 13:53:05.517"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.490" endtime="20201022 13:53:05.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:05.522" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:05.522" endtime="20201022 13:53:05.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.518" endtime="20201022 13:53:05.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.489" endtime="20201022 13:53:05.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.488" endtime="20201022 13:53:05.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.524" endtime="20201022 13:53:05.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.487" endtime="20201022 13:53:05.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.485" endtime="20201022 13:53:05.527"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.462" endtime="20201022 13:53:05.527"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.535" endtime="20201022 13:53:05.775"></status>
</kw>
<msg timestamp="20201022 13:53:05.776" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.534" endtime="20201022 13:53:05.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.780" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:05.778" endtime="20201022 13:53:05.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.782" endtime="20201022 13:53:05.784"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.531" endtime="20201022 13:53:05.784"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.529" endtime="20201022 13:53:05.785"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.787" endtime="20201022 13:53:05.789"></status>
</kw>
<msg timestamp="20201022 13:53:05.789" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:05.786" endtime="20201022 13:53:05.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.794" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:05.792" endtime="20201022 13:53:05.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.796" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:05.795" endtime="20201022 13:53:05.796"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.790" endtime="20201022 13:53:05.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.800" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:05.799" endtime="20201022 13:53:05.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:05.802" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:05.801" endtime="20201022 13:53:05.803"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.797" endtime="20201022 13:53:05.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:05.810" endtime="20201022 13:53:06.105"></status>
</kw>
<msg timestamp="20201022 13:53:06.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067609667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:05.808" endtime="20201022 13:53:06.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:06.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067466222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067609667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:06.113" endtime="20201022 13:53:06.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:06.130" endtime="20201022 13:53:06.133"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.805" endtime="20201022 13:53:06.135"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.804" endtime="20201022 13:53:06.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:06.145" level="INFO">${RESULT} = [{'diff': 0.00014344499999999205}, {'diff': 0.00014224999999999655}, {'diff': 0.00014222299999999688}, {'diff': 0.00014226400000000305}, {'diff': 0.00014226400000000305}, {'diff': 0.000142264000000003...</msg>
<status status="PASS" starttime="20201022 13:53:06.137" endtime="20201022 13:53:06.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:06.154" level="INFO">${OVERHEAD} = {'diff': [0.00014344499999999205, 0.00014224999999999655, 0.00014222299999999688, 0.00014226400000000305, 0.00014226400000000305, 0.00014226400000000305, 0.00014226400000000305, 0.0001422219999999974,...</msg>
<status status="PASS" starttime="20201022 13:53:06.147" endtime="20201022 13:53:06.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:06.163" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201022 13:53:06.161" endtime="20201022 13:53:06.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:06.168" level="INFO">VALUE: [0.00014344499999999205, 0.00014224999999999655, 0.00014222299999999688, 0.00014226400000000305, 0.00014226400000000305, 0.00014226400000000305, 0.00014226400000000305, 0.0001422219999999974, 0.00014226400000000305, 0.00014226399999998918, 0.00014226400000000305, 0.00014222200000001128, 0.00014226399999998918, 0.00014220800000000478, 0.00014225000000001042, 0.00014224999999998267, 0.0001422219999999974, 0.0001422219999999974, 0.00014225000000001042, 0.00014226400000000305, 0.0001422769999999962, 0.00014225000000001042, 0.00014225000000001042, 0.0001422639999999753, 0.00014224999999998267, 0.00014226400000000305, 0.00014227799999999569, 0.00014226400000000305, 0.00014229099999998884, 0.00014226400000000305, 0.00014226400000000305, 0.0001422639999999753, 0.00014219400000001214, 0.00014225000000001042, 0.00014233399999999397, 0.0001422360000000178, 0.00014226400000000305, 0.00014224999999998267, 0.00014226400000000305, 0.00014227799999999569, 0.00014226400000000305, 0.00014226400000000305, 0.0001422780000000512, 0.00014227799999999569, 0.00014231900000000186, 0.00014227700000002397, 0.00014227799999999569, 0.00014225000000001042, 0.00014227799999999569, 0.00014226400000000305]</msg>
<status status="PASS" starttime="20201022 13:53:06.165" endtime="20201022 13:53:06.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.156" endtime="20201022 13:53:06.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:05.527" endtime="20201022 13:53:06.172"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:05.459" endtime="20201022 13:53:06.173" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:06.186" endtime="20201022 13:53:06.206"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.184" endtime="20201022 13:53:06.207"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:06.221" endtime="20201022 13:53:06.233"></status>
</kw>
<msg timestamp="20201022 13:53:06.233" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:06.219" endtime="20201022 13:53:06.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:06.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:06.235" endtime="20201022 13:53:06.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:06.239" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:06.237" endtime="20201022 13:53:06.239"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:06.216" endtime="20201022 13:53:06.240"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:06.213" endtime="20201022 13:53:06.240"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.212" endtime="20201022 13:53:06.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:06.244" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:06.244" endtime="20201022 13:53:06.245"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.242" endtime="20201022 13:53:06.245"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.211" endtime="20201022 13:53:06.245"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.211" endtime="20201022 13:53:06.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:06.246" endtime="20201022 13:53:06.247"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.209" endtime="20201022 13:53:06.248"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.208" endtime="20201022 13:53:06.248"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.181" endtime="20201022 13:53:06.249"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:06.259" endtime="20201022 13:53:07.095"></status>
</kw>
<msg timestamp="20201022 13:53:07.096" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:06.257" endtime="20201022 13:53:07.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.101" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:07.098" endtime="20201022 13:53:07.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.104" endtime="20201022 13:53:07.107"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.253" endtime="20201022 13:53:07.108"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.251" endtime="20201022 13:53:07.109"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.114" endtime="20201022 13:53:07.117"></status>
</kw>
<msg timestamp="20201022 13:53:07.118" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:07.111" endtime="20201022 13:53:07.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.127" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:07.125" endtime="20201022 13:53:07.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.131" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:07.129" endtime="20201022 13:53:07.132"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.120" endtime="20201022 13:53:07.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.140" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:07.138" endtime="20201022 13:53:07.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.145" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:07.143" endtime="20201022 13:53:07.145"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.134" endtime="20201022 13:53:07.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.162" endtime="20201022 13:53:07.462"></status>
</kw>
<msg timestamp="20201022 13:53:07.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078801792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079069722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:07.158" endtime="20201022 13:53:07.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078801792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079069722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:07.466" endtime="20201022 13:53:07.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.473" endtime="20201022 13:53:07.475"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.151" endtime="20201022 13:53:07.475"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.147" endtime="20201022 13:53:07.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:07.480" level="INFO">${RESULT} = [{'diff': 0.00026792999999999956}, {'diff': 0.00026175000000000503}, {'diff': 0.0002611669999999927}, {'diff': 0.00026116599999997936}, {'diff': 0.0002611809999999992}, {'diff': 0.0002611390000000213}...</msg>
<status status="PASS" starttime="20201022 13:53:07.477" endtime="20201022 13:53:07.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:07.484" level="INFO">${OVERHEAD} = {'diff': [0.00026792999999999956, 0.00026175000000000503, 0.0002611669999999927, 0.00026116599999997936, 0.0002611809999999992, 0.0002611390000000213, 0.0002611809999999992, 0.0002612220000000054, 0.0...</msg>
<status status="PASS" starttime="20201022 13:53:07.481" endtime="20201022 13:53:07.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.488" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201022 13:53:07.487" endtime="20201022 13:53:07.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.491" level="INFO">VALUE: [0.00026792999999999956, 0.00026175000000000503, 0.0002611669999999927, 0.00026116599999997936, 0.0002611809999999992, 0.0002611390000000213, 0.0002611809999999992, 0.0002612220000000054, 0.00026122199999997764, 0.0002611529999999862, 0.000261235999999998, 0.0002612089999999845, 0.0002612089999999845, 0.0002612220000000054, 0.00026116599999997936, 0.0002611670000000066, 0.0002611809999999992, 0.00026116600000003487, 0.000261179999999972, 0.0002612229999999771, 0.00026120800000001276, 0.0002611809999999992, 0.0002612089999999845, 0.0002611809999999992, 0.0002611670000000066, 0.00026119400000002013, 0.0002612229999999771, 0.0002612229999999771, 0.00026115299999995845, 0.0002611939999999091, 0.00026116599999992385, 0.0002611390000000213, 0.00026119499999999185, 0.0002611390000000213, 0.00026115300000006947, 0.000261179999999972, 0.00026118100000005473, 0.00026119499999999185, 0.00026120799999995725, 0.00026124999999999066, 0.000261180000000083, 0.0002611670000000066, 0.00026120799999995725, 0.00026119400000002013, 0.00026120900000004, 0.0002611809999999437, 0.00026123600000005354, 0.0002611809999999437, 0.00026119499999999185, 0.000261179999999972]</msg>
<status status="PASS" starttime="20201022 13:53:07.489" endtime="20201022 13:53:07.491"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.484" endtime="20201022 13:53:07.492"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:06.249" endtime="20201022 13:53:07.492"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:06.176" endtime="20201022 13:53:07.492" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:07.500" endtime="20201022 13:53:07.519"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.498" endtime="20201022 13:53:07.520"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.534" endtime="20201022 13:53:07.546"></status>
</kw>
<msg timestamp="20201022 13:53:07.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:07.532" endtime="20201022 13:53:07.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:07.547" endtime="20201022 13:53:07.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.552" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:07.550" endtime="20201022 13:53:07.552"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:07.530" endtime="20201022 13:53:07.553"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:07.527" endtime="20201022 13:53:07.553"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.526" endtime="20201022 13:53:07.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:07.557" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:07.557" endtime="20201022 13:53:07.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.555" endtime="20201022 13:53:07.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.525" endtime="20201022 13:53:07.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.525" endtime="20201022 13:53:07.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.559" endtime="20201022 13:53:07.561"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.523" endtime="20201022 13:53:07.561"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.521" endtime="20201022 13:53:07.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.497" endtime="20201022 13:53:07.562"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.570" endtime="20201022 13:53:07.591"></status>
</kw>
<msg timestamp="20201022 13:53:07.592" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:07.569" endtime="20201022 13:53:07.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.594" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:07.593" endtime="20201022 13:53:07.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.595" endtime="20201022 13:53:07.597"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.566" endtime="20201022 13:53:07.597"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.564" endtime="20201022 13:53:07.598"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.600" endtime="20201022 13:53:07.603"></status>
</kw>
<msg timestamp="20201022 13:53:07.604" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:07.599" endtime="20201022 13:53:07.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.608" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:07.607" endtime="20201022 13:53:07.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.610" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:07.609" endtime="20201022 13:53:07.610"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.604" endtime="20201022 13:53:07.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.614" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:07.613" endtime="20201022 13:53:07.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.616" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:07.615" endtime="20201022 13:53:07.617"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.611" endtime="20201022 13:53:07.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.624" endtime="20201022 13:53:07.912"></status>
</kw>
<msg timestamp="20201022 13:53:07.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063630875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:07.622" endtime="20201022 13:53:07.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063630875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:07.916" endtime="20201022 13:53:07.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:07.926" endtime="20201022 13:53:07.930"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.620" endtime="20201022 13:53:07.931"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.618" endtime="20201022 13:53:07.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:07.940" level="INFO">${RESULT} = [{'diff': 5.889000000008915e-06}, {'diff': 5.943999999993843e-06}, {'diff': 5.931000000000686e-06}, {'diff': 5.917000000008055e-06}, {'diff': 5.915999999994703e-06}, {'diff': 5.916999999994177e-06}, {...</msg>
<status status="PASS" starttime="20201022 13:53:07.934" endtime="20201022 13:53:07.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:07.951" level="INFO">${OVERHEAD} = {'diff': [5.889000000008915e-06, 5.943999999993843e-06, 5.931000000000686e-06, 5.917000000008055e-06, 5.915999999994703e-06, 5.916999999994177e-06, 5.8469999999893885e-06, 5.917000000008055e-06, 5.916...</msg>
<status status="PASS" starttime="20201022 13:53:07.942" endtime="20201022 13:53:07.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.961" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201022 13:53:07.958" endtime="20201022 13:53:07.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:07.966" level="INFO">VALUE: [5.889000000008915e-06, 5.943999999993843e-06, 5.931000000000686e-06, 5.917000000008055e-06, 5.915999999994703e-06, 5.916999999994177e-06, 5.8469999999893885e-06, 5.917000000008055e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.943999999993843e-06, 5.916000000008581e-06, 5.875000000002406e-06, 5.931000000000686e-06, 5.902000000002072e-06, 5.916000000008581e-06, 5.917000000008055e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.915999999994703e-06, 5.916000000008581e-06, 5.903000000001546e-06, 5.944000000007721e-06, 5.931000000000686e-06, 5.930000000001212e-06, 5.930000000001212e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.915999999994703e-06, 5.902000000002072e-06, 5.915999999994703e-06, 5.915999999994703e-06, 5.861000000009775e-06, 5.930000000001212e-06, 5.915999999994703e-06, 5.985999999999492e-06, 5.917000000008055e-06, 5.917000000008055e-06, 5.971999999992983e-06, 5.916999999994177e-06, 5.929999999987334e-06, 5.944000000007721e-06, 5.930000000001212e-06, 5.902000000002072e-06, 5.985999999999492e-06, 5.916999999994177e-06, 5.889000000008915e-06, 5.931000000000686e-06, 5.972000000006861e-06, 5.902000000002072e-06]</msg>
<status status="PASS" starttime="20201022 13:53:07.963" endtime="20201022 13:53:07.967"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.953" endtime="20201022 13:53:07.968"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.562" endtime="20201022 13:53:07.969"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:07.494" endtime="20201022 13:53:07.970" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:07.985" endtime="20201022 13:53:08.007"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.982" endtime="20201022 13:53:08.008"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.035" endtime="20201022 13:53:08.049"></status>
</kw>
<msg timestamp="20201022 13:53:08.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.032" endtime="20201022 13:53:08.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.051" endtime="20201022 13:53:08.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.055" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:08.053" endtime="20201022 13:53:08.056"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:08.029" endtime="20201022 13:53:08.056"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:08.025" endtime="20201022 13:53:08.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.021" endtime="20201022 13:53:08.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:08.061" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:08.060" endtime="20201022 13:53:08.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.058" endtime="20201022 13:53:08.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.018" endtime="20201022 13:53:08.062"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.016" endtime="20201022 13:53:08.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.063" endtime="20201022 13:53:08.064"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.013" endtime="20201022 13:53:08.065"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.010" endtime="20201022 13:53:08.065"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:07.979" endtime="20201022 13:53:08.065"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.075" endtime="20201022 13:53:08.317"></status>
</kw>
<msg timestamp="20201022 13:53:08.317" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.073" endtime="20201022 13:53:08.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.323" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.321" endtime="20201022 13:53:08.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.324" endtime="20201022 13:53:08.326"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.071" endtime="20201022 13:53:08.328"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.067" endtime="20201022 13:53:08.330"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.332" endtime="20201022 13:53:08.334"></status>
</kw>
<msg timestamp="20201022 13:53:08.335" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:08.331" endtime="20201022 13:53:08.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.341" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:08.340" endtime="20201022 13:53:08.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.344" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:08.342" endtime="20201022 13:53:08.345"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.337" endtime="20201022 13:53:08.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.349" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:08.348" endtime="20201022 13:53:08.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.351" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:08.350" endtime="20201022 13:53:08.352"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.346" endtime="20201022 13:53:08.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.358" endtime="20201022 13:53:08.650"></status>
</kw>
<msg timestamp="20201022 13:53:08.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086730014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:08.357" endtime="20201022 13:53:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086696583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086730014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:08.656" endtime="20201022 13:53:08.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.670" endtime="20201022 13:53:08.673"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.354" endtime="20201022 13:53:08.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.353" endtime="20201022 13:53:08.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:08.681" level="INFO">${RESULT} = [{'diff': 3.343100000000043e-05}, {'diff': 3.341600000000833e-05}, {'diff': 3.3416999999993924e-05}, {'diff': 3.343100000000043e-05}, {'diff': 3.343100000000043e-05}, {'diff': 3.344399999999359e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:08.676" endtime="20201022 13:53:08.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:08.688" level="INFO">${OVERHEAD} = {'diff': [3.343100000000043e-05, 3.341600000000833e-05, 3.3416999999993924e-05, 3.343100000000043e-05, 3.343100000000043e-05, 3.344399999999359e-05, 3.3444999999993064e-05, 3.343000000000096e-05, 3.34...</msg>
<status status="PASS" starttime="20201022 13:53:08.682" endtime="20201022 13:53:08.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.693" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201022 13:53:08.692" endtime="20201022 13:53:08.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.696" level="INFO">VALUE: [3.343100000000043e-05, 3.341600000000833e-05, 3.3416999999993924e-05, 3.343100000000043e-05, 3.343100000000043e-05, 3.344399999999359e-05, 3.3444999999993064e-05, 3.343000000000096e-05, 3.34170000000078e-05, 3.3444999999993064e-05, 3.344399999999359e-05, 3.3444999999993064e-05, 3.3444999999993064e-05, 3.343000000000096e-05, 3.343100000000043e-05, 3.341599999998057e-05, 3.345799999998622e-05, 3.341600000000833e-05, 3.343100000000043e-05, 3.3444999999993064e-05, 3.343100000000043e-05, 3.344399999999359e-05, 3.34170000000078e-05, 3.343100000000043e-05, 3.343100000000043e-05, 3.3444999999993064e-05, 3.343000000000096e-05, 3.344399999999359e-05, 3.3444000000021346e-05, 3.3346999999989135e-05, 3.3402999999987415e-05, 3.3444999999993064e-05, 3.343000000000096e-05, 3.344399999999359e-05, 3.343100000000043e-05, 3.343099999997268e-05, 3.347200000000661e-05, 3.343099999997268e-05, 3.343000000000096e-05, 3.343000000000096e-05, 3.343099999997268e-05, 3.3402999999987415e-05, 3.3402999999987415e-05, 3.343099999997268e-05, 3.3416999999980046e-05, 3.344399999999359e-05, 3.343000000000096e-05, 3.341600000000833e-05, 3.3416999999980046e-05, 3.343100000002819e-05]</msg>
<status status="PASS" starttime="20201022 13:53:08.694" endtime="20201022 13:53:08.696"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.689" endtime="20201022 13:53:08.696"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.066" endtime="20201022 13:53:08.697"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:07.973" endtime="20201022 13:53:08.697" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:08.704" endtime="20201022 13:53:08.726"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.703" endtime="20201022 13:53:08.728"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.785" endtime="20201022 13:53:08.813"></status>
</kw>
<msg timestamp="20201022 13:53:08.814" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.775" endtime="20201022 13:53:08.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.818" endtime="20201022 13:53:08.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:08.834" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:08.827" endtime="20201022 13:53:08.835"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:08.764" endtime="20201022 13:53:08.836"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:08.755" endtime="20201022 13:53:08.837"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.749" endtime="20201022 13:53:08.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:08.845" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:08.844" endtime="20201022 13:53:08.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.840" endtime="20201022 13:53:08.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.746" endtime="20201022 13:53:08.847"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.743" endtime="20201022 13:53:08.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.849" endtime="20201022 13:53:08.851"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.738" endtime="20201022 13:53:08.853"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.731" endtime="20201022 13:53:08.854"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.701" endtime="20201022 13:53:08.854"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:08.869" endtime="20201022 13:53:09.712"></status>
</kw>
<msg timestamp="20201022 13:53:09.713" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:08.867" endtime="20201022 13:53:09.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:09.718" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:09.715" endtime="20201022 13:53:09.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:09.720" endtime="20201022 13:53:09.724"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.862" endtime="20201022 13:53:09.725"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.858" endtime="20201022 13:53:09.726"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:09.731" endtime="20201022 13:53:09.734"></status>
</kw>
<msg timestamp="20201022 13:53:09.735" level="INFO">${RESULT} = {'timer count': [100], 'sample count': [50]}</msg>
<status status="PASS" starttime="20201022 13:53:09.728" endtime="20201022 13:53:09.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:09.744" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201022 13:53:09.742" endtime="20201022 13:53:09.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:09.749" level="INFO">VALUE: [100]</msg>
<status status="PASS" starttime="20201022 13:53:09.747" endtime="20201022 13:53:09.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:09.736" endtime="20201022 13:53:09.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:09.759" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201022 13:53:09.757" endtime="20201022 13:53:09.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:09.763" level="INFO">VALUE: [50]</msg>
<status status="PASS" starttime="20201022 13:53:09.761" endtime="20201022 13:53:09.764"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:09.752" endtime="20201022 13:53:09.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:09.775" endtime="20201022 13:53:10.070"></status>
</kw>
<msg timestamp="20201022 13:53:10.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.17208625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172147708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:09.774" endtime="20201022 13:53:10.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:10.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.17208625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.172147708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:10.075" endtime="20201022 13:53:10.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:10.085" endtime="20201022 13:53:10.087"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:09.770" endtime="20201022 13:53:10.088"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:09.766" endtime="20201022 13:53:10.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:10.094" level="INFO">${RESULT} = [{'diff': 6.145800000001422e-05}, {'diff': 6.143100000000068e-05}, {'diff': 6.144399999999384e-05}, {'diff': 6.151399999998475e-05}, {'diff': 6.140199999998819e-05}, {'diff': 6.147299999997857e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:10.090" endtime="20201022 13:53:10.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201022 13:53:10.099" level="INFO">${OVERHEAD} = {'diff': [6.145800000001422e-05, 6.143100000000068e-05, 6.144399999999384e-05, 6.151399999998475e-05, 6.140199999998819e-05, 6.147299999997857e-05, 6.144500000004882e-05, 6.145800000001422e-05, 6.1500...</msg>
<status status="PASS" starttime="20201022 13:53:10.096" endtime="20201022 13:53:10.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:10.104" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201022 13:53:10.103" endtime="20201022 13:53:10.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:10.106" level="INFO">VALUE: [6.145800000001422e-05, 6.143100000000068e-05, 6.144399999999384e-05, 6.151399999998475e-05, 6.140199999998819e-05, 6.147299999997857e-05, 6.144500000004882e-05, 6.145800000001422e-05, 6.150000000004763e-05, 6.141700000000805e-05, 6.147199999995134e-05, 6.149999999999212e-05, 6.143100000000068e-05, 6.143100000000068e-05, 6.145899999998594e-05, 6.144400000002159e-05, 6.144400000002159e-05, 6.144499999999331e-05, 6.145799999995871e-05, 6.145799999995871e-05, 6.143100000000068e-05, 6.143100000000068e-05, 6.14579999999032e-05, 6.144500000004882e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.145800000001422e-05, 6.147200000006237e-05, 6.148599999999949e-05, 6.14449999999378e-05, 6.144399999996608e-05, 6.137500000003016e-05, 6.144399999996608e-05, 6.145800000001422e-05, 6.144500000004882e-05, 6.14029999999044e-05, 6.144500000004882e-05, 6.143100000000068e-05, 6.143000000002896e-05, 6.14449999999378e-05, 6.148599999999949e-05, 6.143100000000068e-05, 6.145800000001422e-05, 6.145900000009696e-05, 6.141600000009184e-05, 6.143000000002896e-05, 6.145800000001422e-05, 6.144399999996608e-05, 6.145800000001422e-05, 6.144399999996608e-05]</msg>
<status status="PASS" starttime="20201022 13:53:10.105" endtime="20201022 13:53:10.107"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:10.100" endtime="20201022 13:53:10.107"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:08.855" endtime="20201022 13:53:10.108"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:08.699" endtime="20201022 13:53:10.108" critical="yes"></status>
</test>
<status status="PASS" starttime="20201022 13:52:47.998" endtime="20201022 13:53:10.116"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201022 13:53:10.183" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201022 13:53:10.191" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201022 13:53:11.383" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201022 13:53:10.182" endtime="20201022 13:53:11.384"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.386" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201022 13:53:11.385" endtime="20201022 13:53:11.386"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:10.180" endtime="20201022 13:53:11.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:11.389" endtime="20201022 13:53:11.578"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.388" endtime="20201022 13:53:11.579"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.592" endtime="20201022 13:53:11.605"></status>
</kw>
<msg timestamp="20201022 13:53:11.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:11.590" endtime="20201022 13:53:11.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.608" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:11.606" endtime="20201022 13:53:11.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.611" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:11.609" endtime="20201022 13:53:11.611"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:11.588" endtime="20201022 13:53:11.612"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:11.586" endtime="20201022 13:53:11.612"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.585" endtime="20201022 13:53:11.613"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:11.616" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:11.616" endtime="20201022 13:53:11.618"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.613" endtime="20201022 13:53:11.618"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.584" endtime="20201022 13:53:11.618"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.583" endtime="20201022 13:53:11.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.619" endtime="20201022 13:53:11.621"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.582" endtime="20201022 13:53:11.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.622" endtime="20201022 13:53:11.624"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.580" endtime="20201022 13:53:11.624"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:10.178" endtime="20201022 13:53:11.624"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:11.630" endtime="20201022 13:53:11.650"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.629" endtime="20201022 13:53:11.650"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.664" endtime="20201022 13:53:11.676"></status>
</kw>
<msg timestamp="20201022 13:53:11.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:11.662" endtime="20201022 13:53:11.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.680" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:53:11.678" endtime="20201022 13:53:11.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.683" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:53:11.681" endtime="20201022 13:53:11.683"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:11.659" endtime="20201022 13:53:11.684"></status>
</kw>
<status status="FAIL" starttime="20201022 13:53:11.657" endtime="20201022 13:53:11.684"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.656" endtime="20201022 13:53:11.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:53:11.688" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:53:11.687" endtime="20201022 13:53:11.689"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.685" endtime="20201022 13:53:11.689"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.655" endtime="20201022 13:53:11.689"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.654" endtime="20201022 13:53:11.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.690" endtime="20201022 13:53:11.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.653" endtime="20201022 13:53:11.692"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.651" endtime="20201022 13:53:11.692"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.628" endtime="20201022 13:53:11.693"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.703" endtime="20201022 13:53:11.820"></status>
</kw>
<msg timestamp="20201022 13:53:11.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:11.702" endtime="20201022 13:53:11.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:11.822" endtime="20201022 13:53:11.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.825" endtime="20201022 13:53:11.827"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.698" endtime="20201022 13:53:11.827"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.696" endtime="20201022 13:53:11.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:11.832" level="INFO">${RESULT} = {'dut-result': [28, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 28, 28, 28, 27, 27, 27, 27, 27, 27, ...</msg>
<status status="PASS" starttime="20201022 13:53:11.829" endtime="20201022 13:53:11.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.836" level="INFO">NAME: accuracy-TIMER_SET-1-dut</msg>
<status status="PASS" starttime="20201022 13:53:11.835" endtime="20201022 13:53:11.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:11.838" level="INFO">VALUE: [28, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 28, 28, 28, 27, 27, 27, 27, 27, 27, 28, 27, 27, 27]</msg>
<status status="PASS" starttime="20201022 13:53:11.837" endtime="20201022 13:53:11.839"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.833" endtime="20201022 13:53:11.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:11.846" endtime="20201022 13:53:12.137"></status>
</kw>
<msg timestamp="20201022 13:53:12.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068144111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068162292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:11.844" endtime="20201022 13:53:12.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068144111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068162292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:12.142" endtime="20201022 13:53:12.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.150" endtime="20201022 13:53:12.152"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.842" endtime="20201022 13:53:12.152"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.840" endtime="20201022 13:53:12.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:12.157" level="INFO">${RESULT} = [{'diff': 1.8181000000005998e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8513999999997255e-05}, {'diff': 1.8541999999996395e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8513999999997255e-...</msg>
<status status="PASS" starttime="20201022 13:53:12.153" endtime="20201022 13:53:12.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:12.161" level="INFO">${ACCURACY} = {'diff': [1.8181000000005998e-05, 1.8485999999998115e-05, 1.8513999999997255e-05, 1.8541999999996395e-05, 1.8485999999998115e-05, 1.8513999999997255e-05, 1.8500000000004624e-05, 1.8472000000005484e-05...</msg>
<status status="PASS" starttime="20201022 13:53:12.158" endtime="20201022 13:53:12.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.165" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201022 13:53:12.164" endtime="20201022 13:53:12.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.168" level="INFO">VALUE: [1.8181000000005998e-05, 1.8485999999998115e-05, 1.8513999999997255e-05, 1.8541999999996395e-05, 1.8485999999998115e-05, 1.8513999999997255e-05, 1.8500000000004624e-05, 1.8472000000005484e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.844499999999194e-05, 1.8472000000005484e-05, 1.8514000000011133e-05, 1.8500000000004624e-05, 1.8471999999991606e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.8500000000004624e-05, 1.8500000000004624e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.854099999999692e-05, 1.8471999999991606e-05, 1.8500000000004624e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.8472000000005484e-05, 1.8514000000011133e-05, 1.8485999999998115e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.8485999999998115e-05, 1.8472000000005484e-05, 1.8473000000004958e-05, 1.8500000000004624e-05, 1.840299999998629e-05, 1.8445000000005818e-05, 1.8526999999990412e-05, 1.8485999999998115e-05, 1.8443999999992466e-05, 1.8471999999991606e-05, 1.851299999999778e-05, 1.845899999999845e-05, 1.8471999999991606e-05, 1.8485999999998115e-05, 1.8499999999990746e-05]</msg>
<status status="PASS" starttime="20201022 13:53:12.166" endtime="20201022 13:53:12.168"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.162" endtime="20201022 13:53:12.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:12.172" endtime="20201022 13:53:12.192"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.171" endtime="20201022 13:53:12.192"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.170" endtime="20201022 13:53:12.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.694" endtime="20201022 13:53:12.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.694" endtime="20201022 13:53:12.193"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.202" endtime="20201022 13:53:12.320"></status>
</kw>
<msg timestamp="20201022 13:53:12.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:12.200" endtime="20201022 13:53:12.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:12.322" endtime="20201022 13:53:12.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.326" endtime="20201022 13:53:12.340"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.198" endtime="20201022 13:53:12.340"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.196" endtime="20201022 13:53:12.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:12.344" level="INFO">${RESULT} = {'dut-result': [28, 27, 27, 28, 27, 27, 28, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 27, 27, 28, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 27, 28, 27, 27, 27, 27, ...</msg>
<status status="PASS" starttime="20201022 13:53:12.341" endtime="20201022 13:53:12.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.349" level="INFO">NAME: accuracy-TIMER_SET-2-dut</msg>
<status status="PASS" starttime="20201022 13:53:12.348" endtime="20201022 13:53:12.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.351" level="INFO">VALUE: [28, 27, 27, 28, 27, 27, 28, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 27, 27, 28, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 27, 28, 27, 27, 27, 27, 27, 27, 27, 27]</msg>
<status status="PASS" starttime="20201022 13:53:12.350" endtime="20201022 13:53:12.351"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.345" endtime="20201022 13:53:12.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.358" endtime="20201022 13:53:12.644"></status>
</kw>
<msg timestamp="20201022 13:53:12.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:12.357" endtime="20201022 13:53:12.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025447778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025465944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:12.649" endtime="20201022 13:53:12.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.659" endtime="20201022 13:53:12.661"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.354" endtime="20201022 13:53:12.662"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.353" endtime="20201022 13:53:12.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:12.669" level="INFO">${RESULT} = [{'diff': 1.8166000000000015e-05}, {'diff': 1.8471999999998545e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8486000000001584e-...</msg>
<status status="PASS" starttime="20201022 13:53:12.664" endtime="20201022 13:53:12.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:12.673" level="INFO">${ACCURACY} = {'diff': [1.8166000000000015e-05, 1.8471999999998545e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.8429999999999835e-05, 1.8486000000001584e-05, 1.8471999999998545e-05, 1.8471999999998545e-05...</msg>
<status status="PASS" starttime="20201022 13:53:12.670" endtime="20201022 13:53:12.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.677" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201022 13:53:12.676" endtime="20201022 13:53:12.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.680" level="INFO">VALUE: [1.8166000000000015e-05, 1.8471999999998545e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.8429999999999835e-05, 1.8486000000001584e-05, 1.8471999999998545e-05, 1.8471999999998545e-05, 1.8499999999997685e-05, 1.8458000000002445e-05, 1.8514000000000724e-05, 1.8486000000001584e-05, 1.8499999999997685e-05, 1.8499999999997685e-05, 1.8500000000001154e-05, 1.8429999999999835e-05, 1.8486000000001584e-05, 1.8499999999997685e-05, 1.8499999999997685e-05, 1.8528000000000294e-05, 1.8485999999998115e-05, 1.8500000000001154e-05, 1.8499999999997685e-05, 1.8486000000001584e-05, 1.844500000000235e-05, 1.8471999999998545e-05, 1.8569999999999004e-05, 1.8500000000001154e-05, 1.8486000000001584e-05, 1.8487000000001058e-05, 1.8500000000001154e-05, 1.8499999999997685e-05, 1.8499999999997685e-05, 1.856899999999953e-05, 1.8556000000002904e-05, 1.8485999999998115e-05, 1.8486000000001584e-05, 1.8485999999998115e-05, 1.8541999999999864e-05, 1.8472000000002015e-05, 1.8472000000002015e-05, 1.8487000000001058e-05, 1.8485999999998115e-05, 1.8514000000000724e-05, 1.851299999999778e-05, 1.845899999999845e-05, 1.8514000000000724e-05, 1.8500000000001154e-05, 1.8499999999997685e-05, 1.8500000000001154e-05]</msg>
<status status="PASS" starttime="20201022 13:53:12.679" endtime="20201022 13:53:12.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.674" endtime="20201022 13:53:12.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:12.685" endtime="20201022 13:53:12.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.683" endtime="20201022 13:53:12.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.682" endtime="20201022 13:53:12.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.194" endtime="20201022 13:53:12.706"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.193" endtime="20201022 13:53:12.706"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.715" endtime="20201022 13:53:12.831"></status>
</kw>
<msg timestamp="20201022 13:53:12.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:12.713" endtime="20201022 13:53:12.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:12.833" endtime="20201022 13:53:12.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.836" endtime="20201022 13:53:12.839"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.711" endtime="20201022 13:53:12.839"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.708" endtime="20201022 13:53:12.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:12.844" level="INFO">${RESULT} = {'dut-result': [28, 28, 28, 27, 27, 28, 28, 27, 28, 27, 27, 27, 27, 27, 28, 27, 28, 28, 27, 27, 27, 27, 27, 27, 28, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 28, 28, 28, 27, 27, 27, 27, 27, 28, ...</msg>
<status status="PASS" starttime="20201022 13:53:12.841" endtime="20201022 13:53:12.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.848" level="INFO">NAME: accuracy-TIMER_SET-3-dut</msg>
<status status="PASS" starttime="20201022 13:53:12.847" endtime="20201022 13:53:12.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:12.850" level="INFO">VALUE: [28, 28, 28, 27, 27, 28, 28, 27, 28, 27, 27, 27, 27, 27, 28, 27, 28, 28, 27, 27, 27, 27, 27, 27, 28, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 28, 27, 28, 28, 28, 27, 27, 27, 27, 27, 28, 28, 27, 27, 27]</msg>
<status status="PASS" starttime="20201022 13:53:12.849" endtime="20201022 13:53:12.851"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.845" endtime="20201022 13:53:12.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:12.858" endtime="20201022 13:53:13.144"></status>
</kw>
<msg timestamp="20201022 13:53:13.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:12.856" endtime="20201022 13:53:13.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024968722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024986917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:13.148" endtime="20201022 13:53:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.156" endtime="20201022 13:53:13.158"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.854" endtime="20201022 13:53:13.159"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.852" endtime="20201022 13:53:13.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:13.163" level="INFO">${RESULT} = [{'diff': 1.81950000000021e-05}, {'diff': 1.8471999999998545e-05}, {'diff': 1.851299999999778e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.8472000000002015e-05}, {'diff': 1.8528000000000294e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:13.160" endtime="20201022 13:53:13.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:13.168" level="INFO">${ACCURACY} = {'diff': [1.81950000000021e-05, 1.8471999999998545e-05, 1.851299999999778e-05, 1.8499999999997685e-05, 1.8472000000002015e-05, 1.8528000000000294e-05, 1.8528000000000294e-05, 1.8486000000001584e-05, 1...</msg>
<status status="PASS" starttime="20201022 13:53:13.164" endtime="20201022 13:53:13.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.173" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201022 13:53:13.172" endtime="20201022 13:53:13.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.175" level="INFO">VALUE: [1.81950000000021e-05, 1.8471999999998545e-05, 1.851299999999778e-05, 1.8499999999997685e-05, 1.8472000000002015e-05, 1.8528000000000294e-05, 1.8528000000000294e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8487000000001058e-05, 1.8514000000000724e-05, 1.8471999999998545e-05, 1.8485999999998115e-05, 1.8486000000001584e-05, 1.8487000000001058e-05, 1.8513999999997255e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.8485999999998115e-05, 1.8471999999998545e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.848699999999759e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.845899999999845e-05, 1.8472000000002015e-05, 1.8514000000000724e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.8514000000000724e-05, 1.847299999999802e-05, 1.8457999999998975e-05, 1.8486000000001584e-05, 1.8485999999998115e-05, 1.8500000000001154e-05, 1.8514000000000724e-05, 1.8486000000001584e-05, 1.8485999999998115e-05, 1.8485999999998115e-05, 1.8500000000001154e-05, 1.8486000000001584e-05, 1.8514000000000724e-05, 1.8458000000002445e-05, 1.8541999999999864e-05, 1.8499999999997685e-05, 1.8513999999997255e-05, 1.8541999999999864e-05]</msg>
<status status="PASS" starttime="20201022 13:53:13.174" endtime="20201022 13:53:13.176"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.169" endtime="20201022 13:53:13.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:13.180" endtime="20201022 13:53:13.200"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.178" endtime="20201022 13:53:13.200"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.177" endtime="20201022 13:53:13.201"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.707" endtime="20201022 13:53:13.201"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:12.706" endtime="20201022 13:53:13.201"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.210" endtime="20201022 13:53:13.327"></status>
</kw>
<msg timestamp="20201022 13:53:13.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:13.208" endtime="20201022 13:53:13.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'data': [{'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:13.328" endtime="20201022 13:53:13.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.332" endtime="20201022 13:53:13.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.206" endtime="20201022 13:53:13.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.204" endtime="20201022 13:53:13.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:13.339" level="INFO">${RESULT} = {'dut-result': [28, 27, 28, 27, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, ...</msg>
<status status="PASS" starttime="20201022 13:53:13.335" endtime="20201022 13:53:13.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.344" level="INFO">NAME: accuracy-TIMER_SET-4-dut</msg>
<status status="PASS" starttime="20201022 13:53:13.343" endtime="20201022 13:53:13.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.346" level="INFO">VALUE: [28, 27, 28, 27, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 27, 28, 27, 28, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 27, 27, 27, 27, 27, 27, 27, 28, 27, 27, 27, 27, 28, 27, 27, 28]</msg>
<status status="PASS" starttime="20201022 13:53:13.345" endtime="20201022 13:53:13.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.340" endtime="20201022 13:53:13.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.353" endtime="20201022 13:53:13.638"></status>
</kw>
<msg timestamp="20201022 13:53:13.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02459525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:13.352" endtime="20201022 13:53:13.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024577069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02459525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:13.643" endtime="20201022 13:53:13.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.651" endtime="20201022 13:53:13.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.349" endtime="20201022 13:53:13.654"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.347" endtime="20201022 13:53:13.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:13.658" level="INFO">${RESULT} = [{'diff': 1.818099999999906e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8471999999998545e-05}, {'diff': 1.8514000000000724e-0...</msg>
<status status="PASS" starttime="20201022 13:53:13.655" endtime="20201022 13:53:13.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:13.663" level="INFO">${ACCURACY} = {'diff': [1.818099999999906e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.8485999999998115e-05, 1.8471999999998545e-05, 1.8514000000000724e-05, 1.8499999999997685e-05, 1.847299999999802e-05, ...</msg>
<status status="PASS" starttime="20201022 13:53:13.659" endtime="20201022 13:53:13.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.668" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201022 13:53:13.666" endtime="20201022 13:53:13.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.671" level="INFO">VALUE: [1.818099999999906e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.8485999999998115e-05, 1.8471999999998545e-05, 1.8514000000000724e-05, 1.8499999999997685e-05, 1.847299999999802e-05, 1.845900000000192e-05, 1.8486000000001584e-05, 1.8514000000000724e-05, 1.8514000000000724e-05, 1.8472000000002015e-05, 1.8499999999997685e-05, 1.847299999999802e-05, 1.8500000000001154e-05, 1.8486000000001584e-05, 1.8471999999998545e-05, 1.8500000000001154e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8487000000001058e-05, 1.8486000000001584e-05, 1.854100000000039e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8499999999997685e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8472000000002015e-05, 1.8500000000001154e-05, 1.8514000000000724e-05, 1.8473000000001488e-05, 1.8485999999998115e-05, 1.8500000000001154e-05, 1.8485999999998115e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.843100000000278e-05, 1.844499999999888e-05, 1.8485999999998115e-05, 1.8473000000001488e-05, 1.8514000000000724e-05, 1.8485999999998115e-05, 1.8471999999998545e-05, 1.8514000000000724e-05]</msg>
<status status="PASS" starttime="20201022 13:53:13.669" endtime="20201022 13:53:13.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.664" endtime="20201022 13:53:13.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:13.678" endtime="20201022 13:53:13.699"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.676" endtime="20201022 13:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.674" endtime="20201022 13:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.202" endtime="20201022 13:53:13.701"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.202" endtime="20201022 13:53:13.701"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.715" endtime="20201022 13:53:13.837"></status>
</kw>
<msg timestamp="20201022 13:53:13.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:13.712" endtime="20201022 13:53:13.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '28'}, {'dut-result': '28'}, {'dut-result': '27'}, {'dut-result': '27...</msg>
<status status="PASS" starttime="20201022 13:53:13.841" endtime="20201022 13:53:13.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.846" endtime="20201022 13:53:13.849"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.709" endtime="20201022 13:53:13.850"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.705" endtime="20201022 13:53:13.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:13.859" level="INFO">${RESULT} = {'dut-result': [33, 28, 28, 27, 27, 27, 32, 28, 27, 27, 28, 27, 27, 28, 27, 32, 27, 27, 27, 32, 27, 28, 27, 27, 28, 27, 28, 27, 32, 27, 27, 27, 32, 27, 32, 27, 32, 27, 28, 27, 27, 27, 28, 28, 27, 28, ...</msg>
<status status="PASS" starttime="20201022 13:53:13.852" endtime="20201022 13:53:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.865" level="INFO">NAME: accuracy-TIMER_SET-5-dut</msg>
<status status="PASS" starttime="20201022 13:53:13.863" endtime="20201022 13:53:13.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:13.867" level="INFO">VALUE: [33, 28, 28, 27, 27, 27, 32, 28, 27, 27, 28, 27, 27, 28, 27, 32, 27, 27, 27, 32, 27, 28, 27, 27, 28, 27, 28, 27, 32, 27, 27, 27, 32, 27, 32, 27, 32, 27, 28, 27, 27, 27, 28, 28, 27, 28, 27, 27, 28, 27]</msg>
<status status="PASS" starttime="20201022 13:53:13.866" endtime="20201022 13:53:13.868"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.860" endtime="20201022 13:53:13.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:13.877" endtime="20201022 13:53:14.163"></status>
</kw>
<msg timestamp="20201022 13:53:14.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031748514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031766708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:13.874" endtime="20201022 13:53:14.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031748514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031766708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:14.168" endtime="20201022 13:53:14.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.176" endtime="20201022 13:53:14.178"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.871" endtime="20201022 13:53:14.178"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.869" endtime="20201022 13:53:14.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:14.183" level="INFO">${RESULT} = [{'diff': 1.8193999999999155e-05}, {'diff': 1.8500000000004624e-05}, {'diff': 2.344499999999694e-05}, {'diff': 1.8541999999996395e-05}, {'diff': 1.8513999999997255e-05}, {'diff': 1.8513999999997255e-0...</msg>
<status status="PASS" starttime="20201022 13:53:14.179" endtime="20201022 13:53:14.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:14.188" level="INFO">${ACCURACY} = {'diff': [1.8193999999999155e-05, 1.8500000000004624e-05, 2.344499999999694e-05, 1.8541999999996395e-05, 1.8513999999997255e-05, 1.8513999999997255e-05, 1.8499999999997685e-05, 1.8486000000005054e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:14.184" endtime="20201022 13:53:14.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.192" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201022 13:53:14.191" endtime="20201022 13:53:14.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.195" level="INFO">VALUE: [1.8193999999999155e-05, 1.8500000000004624e-05, 2.344499999999694e-05, 1.8541999999996395e-05, 1.8513999999997255e-05, 1.8513999999997255e-05, 1.8499999999997685e-05, 1.8486000000005054e-05, 1.8513999999997255e-05, 1.8486000000005054e-05, 1.8500000000004624e-05, 2.340299999999823e-05, 1.8485999999998115e-05, 1.8471999999998545e-05, 1.847299999999802e-05, 1.847299999999802e-05, 1.8514000000004194e-05, 1.8513999999997255e-05, 1.8499999999997685e-05, 1.845899999999845e-05, 1.845899999999845e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8570000000002473e-05, 1.8471999999998545e-05, 1.8486000000005054e-05, 1.8500000000004624e-05, 1.8471999999998545e-05, 1.845899999999845e-05, 1.845899999999845e-05, 1.8500000000004624e-05, 1.8514000000004194e-05, 1.8499999999997685e-05, 1.8486000000005054e-05, 1.8513999999997255e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8473000000004958e-05, 1.8499999999997685e-05, 1.8499999999997685e-05, 1.8500000000004624e-05, 1.8485999999998115e-05, 1.847299999999802e-05, 1.8485999999998115e-05, 1.8486000000005054e-05, 1.848699999999759e-05, 1.8485999999998115e-05, 1.8485999999998115e-05, 1.8499999999997685e-05, 1.8486000000005054e-05]</msg>
<status status="PASS" starttime="20201022 13:53:14.193" endtime="20201022 13:53:14.195"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.188" endtime="20201022 13:53:14.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:14.199" endtime="20201022 13:53:14.219"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.198" endtime="20201022 13:53:14.219"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.196" endtime="20201022 13:53:14.220"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.703" endtime="20201022 13:53:14.220"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:13.702" endtime="20201022 13:53:14.220"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.229" endtime="20201022 13:53:14.346"></status>
</kw>
<msg timestamp="20201022 13:53:14.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:14.227" endtime="20201022 13:53:14.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:14.348" endtime="20201022 13:53:14.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.351" endtime="20201022 13:53:14.353"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.225" endtime="20201022 13:53:14.353"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.223" endtime="20201022 13:53:14.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:14.359" level="INFO">${RESULT} = {'dut-result': [33, 32, 32, 32, 32, 32, 32, 33, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 33, 33, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, ...</msg>
<status status="PASS" starttime="20201022 13:53:14.355" endtime="20201022 13:53:14.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.363" level="INFO">NAME: accuracy-TIMER_SET-6-dut</msg>
<status status="PASS" starttime="20201022 13:53:14.362" endtime="20201022 13:53:14.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.365" level="INFO">VALUE: [33, 32, 32, 32, 32, 32, 32, 33, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 33, 33, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 33, 32, 32]</msg>
<status status="PASS" starttime="20201022 13:53:14.364" endtime="20201022 13:53:14.366"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.359" endtime="20201022 13:53:14.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.373" endtime="20201022 13:53:14.659"></status>
</kw>
<msg timestamp="20201022 13:53:14.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:14.371" endtime="20201022 13:53:14.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025132833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025155931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:14.663" endtime="20201022 13:53:14.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.671" endtime="20201022 13:53:14.673"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.368" endtime="20201022 13:53:14.673"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.367" endtime="20201022 13:53:14.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:14.678" level="INFO">${RESULT} = [{'diff': 2.3097999999999175e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.34169999999978e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.3416000000001796e-05}, {'diff': 2.340299999999823e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:14.675" endtime="20201022 13:53:14.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:14.683" level="INFO">${ACCURACY} = {'diff': [2.3097999999999175e-05, 2.338899999999866e-05, 2.34169999999978e-05, 2.338899999999866e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.3429999999997897e-05, 2.34030000000017e-05, 2.341...</msg>
<status status="PASS" starttime="20201022 13:53:14.679" endtime="20201022 13:53:14.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.688" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201022 13:53:14.686" endtime="20201022 13:53:14.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.690" level="INFO">VALUE: [2.3097999999999175e-05, 2.338899999999866e-05, 2.34169999999978e-05, 2.338899999999866e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.3429999999997897e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.334699999999995e-05, 2.337499999999909e-05, 2.3443999999997467e-05, 2.34169999999978e-05, 2.3402000000002227e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.337500000000256e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.336099999999952e-05, 2.3429999999997897e-05, 2.34169999999978e-05, 2.3387999999999187e-05, 2.341700000000127e-05, 2.3401999999998757e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.3416000000001796e-05, 2.3401999999998757e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.338899999999866e-05, 2.3444000000000936e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.34030000000017e-05, 2.338899999999866e-05, 2.336100000000299e-05, 2.343100000000084e-05, 2.34030000000017e-05, 2.3401999999998757e-05, 2.336099999999952e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3458000000000506e-05, 2.340299999999823e-05]</msg>
<status status="PASS" starttime="20201022 13:53:14.689" endtime="20201022 13:53:14.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.684" endtime="20201022 13:53:14.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:14.695" endtime="20201022 13:53:14.715"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.693" endtime="20201022 13:53:14.715"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.692" endtime="20201022 13:53:14.716"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.221" endtime="20201022 13:53:14.717"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.221" endtime="20201022 13:53:14.717"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.731" endtime="20201022 13:53:14.849"></status>
</kw>
<msg timestamp="20201022 13:53:14.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:14.728" endtime="20201022 13:53:14.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:14.851" endtime="20201022 13:53:14.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.854" endtime="20201022 13:53:14.856"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.724" endtime="20201022 13:53:14.856"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.721" endtime="20201022 13:53:14.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:14.861" level="INFO">${RESULT} = {'dut-result': [33, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 33, 32, 32, 32, 33, 32, 32, 32, 33, 32, 32, 32, 32, 32, 33, 33, 32, 32, 33, 33, 32, 32, 32, 32, ...</msg>
<status status="PASS" starttime="20201022 13:53:14.857" endtime="20201022 13:53:14.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.866" level="INFO">NAME: accuracy-TIMER_SET-7-dut</msg>
<status status="PASS" starttime="20201022 13:53:14.865" endtime="20201022 13:53:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:14.868" level="INFO">VALUE: [33, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 33, 32, 32, 32, 33, 32, 32, 32, 33, 32, 32, 32, 32, 32, 33, 33, 32, 32, 33, 33, 32, 32, 32, 32, 32, 32, 32, 32]</msg>
<status status="PASS" starttime="20201022 13:53:14.867" endtime="20201022 13:53:14.868"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.862" endtime="20201022 13:53:14.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:14.875" endtime="20201022 13:53:15.161"></status>
</kw>
<msg timestamp="20201022 13:53:15.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032270694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:14.874" endtime="20201022 13:53:15.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032270694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:15.166" endtime="20201022 13:53:15.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.174" endtime="20201022 13:53:15.176"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.871" endtime="20201022 13:53:15.176"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.869" endtime="20201022 13:53:15.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:15.181" level="INFO">${RESULT} = [{'diff': 2.311099999999927e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.334699999999995e-05}, {'diff': 2.34169999999978e-05}, {'diff': 2.336100000000646e-05}, {'diff': 2.3401999999998757e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:15.178" endtime="20201022 13:53:15.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:15.185" level="INFO">${ACCURACY} = {'diff': [2.311099999999927e-05, 2.340299999999823e-05, 2.334699999999995e-05, 2.34169999999978e-05, 2.336100000000646e-05, 2.3401999999998757e-05, 2.3401999999998757e-05, 2.3430000000004836e-05, 2.34...</msg>
<status status="PASS" starttime="20201022 13:53:15.182" endtime="20201022 13:53:15.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.190" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201022 13:53:15.189" endtime="20201022 13:53:15.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.193" level="INFO">VALUE: [2.311099999999927e-05, 2.340299999999823e-05, 2.334699999999995e-05, 2.34169999999978e-05, 2.336100000000646e-05, 2.3401999999998757e-05, 2.3401999999998757e-05, 2.3430000000004836e-05, 2.340300000000517e-05, 2.3401999999998757e-05, 2.341700000000474e-05, 2.338899999999866e-05, 2.33890000000056e-05, 2.341700000000474e-05, 2.336099999999952e-05, 2.34169999999978e-05, 2.3429999999997897e-05, 2.3429999999997897e-05, 2.3429999999997897e-05, 2.34169999999978e-05, 2.337499999999909e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.337499999999909e-05, 2.340300000000517e-05, 2.340299999999823e-05, 2.341700000000474e-05, 2.343100000000431e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.3416000000005266e-05, 2.3401999999998757e-05, 2.3443999999997467e-05, 2.3415999999998327e-05, 2.338899999999866e-05, 2.341700000000474e-05, 2.338899999999866e-05, 2.336099999999952e-05, 2.34169999999978e-05, 2.338899999999866e-05, 2.3416000000005266e-05, 2.336099999999952e-05, 2.338899999999866e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.340299999999823e-05, 2.343100000000431e-05]</msg>
<status status="PASS" starttime="20201022 13:53:15.191" endtime="20201022 13:53:15.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.186" endtime="20201022 13:53:15.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:15.197" endtime="20201022 13:53:15.217"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.196" endtime="20201022 13:53:15.217"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.195" endtime="20201022 13:53:15.218"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.718" endtime="20201022 13:53:15.218"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:14.718" endtime="20201022 13:53:15.218"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.227" endtime="20201022 13:53:15.344"></status>
</kw>
<msg timestamp="20201022 13:53:15.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:15.225" endtime="20201022 13:53:15.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:15.346" endtime="20201022 13:53:15.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.349" endtime="20201022 13:53:15.351"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.223" endtime="20201022 13:53:15.351"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.221" endtime="20201022 13:53:15.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:15.355" level="INFO">${RESULT} = {'dut-result': [33, 33, 32, 32, 32, 33, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 33, ...</msg>
<status status="PASS" starttime="20201022 13:53:15.352" endtime="20201022 13:53:15.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.361" level="INFO">NAME: accuracy-TIMER_SET-8-dut</msg>
<status status="PASS" starttime="20201022 13:53:15.359" endtime="20201022 13:53:15.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.364" level="INFO">VALUE: [33, 33, 32, 32, 32, 33, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 33, 32, 33, 32, 32]</msg>
<status status="PASS" starttime="20201022 13:53:15.362" endtime="20201022 13:53:15.364"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.357" endtime="20201022 13:53:15.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.371" endtime="20201022 13:53:15.657"></status>
</kw>
<msg timestamp="20201022 13:53:15.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:15.369" endtime="20201022 13:53:15.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024796431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:15.661" endtime="20201022 13:53:15.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.669" endtime="20201022 13:53:15.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.367" endtime="20201022 13:53:15.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.365" endtime="20201022 13:53:15.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:15.676" level="INFO">${RESULT} = [{'diff': 2.3097999999999175e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.34030000000017e-05}, {'diff': 2.3401999999998757e-05}, {'diff': 2.3472000000000076e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:15.673" endtime="20201022 13:53:15.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:15.680" level="INFO">${ACCURACY} = {'diff': [2.3097999999999175e-05, 2.338899999999866e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.3401999999998757e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.338899999999866e-05, 2.3...</msg>
<status status="PASS" starttime="20201022 13:53:15.677" endtime="20201022 13:53:15.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.685" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201022 13:53:15.684" endtime="20201022 13:53:15.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.687" level="INFO">VALUE: [2.3097999999999175e-05, 2.338899999999866e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.3401999999998757e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.338900000000213e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.3401999999998757e-05, 2.336099999999952e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.3402000000002227e-05, 2.34030000000017e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.338900000000213e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.3387999999999187e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.3429999999997897e-05, 2.341700000000127e-05, 2.3444000000000936e-05, 2.34030000000017e-05, 2.3416000000001796e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.341700000000127e-05, 2.338900000000213e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.34169999999978e-05, 2.341700000000127e-05, 2.343100000000084e-05, 2.337499999999909e-05, 2.341700000000127e-05, 2.3401999999998757e-05, 2.34030000000017e-05]</msg>
<status status="PASS" starttime="20201022 13:53:15.686" endtime="20201022 13:53:15.688"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.681" endtime="20201022 13:53:15.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:15.692" endtime="20201022 13:53:15.712"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.691" endtime="20201022 13:53:15.712"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.690" endtime="20201022 13:53:15.713"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.219" endtime="20201022 13:53:15.713"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.218" endtime="20201022 13:53:15.713"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.722" endtime="20201022 13:53:15.840"></status>
</kw>
<msg timestamp="20201022 13:53:15.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '33'}, {'dut-result': '33'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:15.721" endtime="20201022 13:53:15.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'data': [{'dut-result': '33'}, {'dut-result': '32'}, {'dut-result': '33'}, {'dut-result': '33'}, {'dut-result': '32...</msg>
<status status="PASS" starttime="20201022 13:53:15.841" endtime="20201022 13:53:15.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.845" endtime="20201022 13:53:15.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.718" endtime="20201022 13:53:15.847"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.716" endtime="20201022 13:53:15.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:15.851" level="INFO">${RESULT} = {'dut-result': [33, 32, 33, 33, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 33, 33, 32, 32, 33, 33, 32, 32, 32, 33, 32, 32, 32, 32, 32, ...</msg>
<status status="PASS" starttime="20201022 13:53:15.848" endtime="20201022 13:53:15.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.856" level="INFO">NAME: accuracy-TIMER_SET-9-dut</msg>
<status status="PASS" starttime="20201022 13:53:15.854" endtime="20201022 13:53:15.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:15.858" level="INFO">VALUE: [33, 32, 33, 33, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 33, 33, 32, 32, 33, 33, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 33, 33]</msg>
<status status="PASS" starttime="20201022 13:53:15.857" endtime="20201022 13:53:15.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.852" endtime="20201022 13:53:15.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:15.866" endtime="20201022 13:53:16.152"></status>
</kw>
<msg timestamp="20201022 13:53:16.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025284764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:15.864" endtime="20201022 13:53:16.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025261597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025284764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:16.156" endtime="20201022 13:53:16.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.164" endtime="20201022 13:53:16.166"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.862" endtime="20201022 13:53:16.166"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.859" endtime="20201022 13:53:16.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:16.171" level="INFO">${RESULT} = [{'diff': 2.316700000000102e-05}, {'diff': 2.34169999999978e-05}, {'diff': 2.3401999999998757e-05}, {'diff': 2.3401999999998757e-05}, {'diff': 2.341700000000127e-05}, {'diff': 2.34030000000017e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:16.168" endtime="20201022 13:53:16.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:16.176" level="INFO">${ACCURACY} = {'diff': [2.316700000000102e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.3401999999998757e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.340...</msg>
<status status="PASS" starttime="20201022 13:53:16.172" endtime="20201022 13:53:16.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.181" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201022 13:53:16.180" endtime="20201022 13:53:16.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.183" level="INFO">VALUE: [2.316700000000102e-05, 2.34169999999978e-05, 2.3401999999998757e-05, 2.3401999999998757e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.3415999999998327e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.343100000000084e-05, 2.334699999999995e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.3415999999998327e-05, 2.34169999999978e-05, 2.3416000000001796e-05, 2.3401999999998757e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.343100000000084e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.3387999999999187e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.3416000000001796e-05, 2.34030000000017e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3485999999999646e-05, 2.338899999999866e-05, 2.340299999999823e-05, 2.338900000000213e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.3401999999998757e-05, 2.3415999999998327e-05, 2.345899999999998e-05, 2.3443999999997467e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.34169999999978e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201022 13:53:16.182" endtime="20201022 13:53:16.184"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.177" endtime="20201022 13:53:16.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:16.188" endtime="20201022 13:53:16.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.187" endtime="20201022 13:53:16.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.185" endtime="20201022 13:53:16.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.714" endtime="20201022 13:53:16.209"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:15.714" endtime="20201022 13:53:16.209"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.219" endtime="20201022 13:53:16.336"></status>
</kw>
<msg timestamp="20201022 13:53:16.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'data': [{'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '33'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:16.217" endtime="20201022 13:53:16.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'data': [{'dut-result': '32'}, {'dut-result': '32'}, {'dut-result': '33'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:16.338" endtime="20201022 13:53:16.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.341" endtime="20201022 13:53:16.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.214" endtime="20201022 13:53:16.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.212" endtime="20201022 13:53:16.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:16.348" level="INFO">${RESULT} = {'dut-result': [32, 32, 33, 37, 32, 37, 32, 32, 33, 32, 33, 32, 32, 32, 32, 32, 33, 37, 32, 37, 32, 32, 37, 37, 32, 33, 37, 32, 32, 32, 32, 32, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 37, 32, 32, 37, ...</msg>
<status status="PASS" starttime="20201022 13:53:16.345" endtime="20201022 13:53:16.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.352" level="INFO">NAME: accuracy-TIMER_SET-10-dut</msg>
<status status="PASS" starttime="20201022 13:53:16.351" endtime="20201022 13:53:16.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.354" level="INFO">VALUE: [32, 32, 33, 37, 32, 37, 32, 32, 33, 32, 33, 32, 32, 32, 32, 32, 33, 37, 32, 37, 32, 32, 37, 37, 32, 33, 37, 32, 32, 32, 32, 32, 33, 32, 32, 33, 32, 32, 32, 32, 32, 32, 37, 32, 32, 37, 32, 32, 37, 32]</msg>
<status status="PASS" starttime="20201022 13:53:16.353" endtime="20201022 13:53:16.355"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.348" endtime="20201022 13:53:16.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.362" endtime="20201022 13:53:16.649"></status>
</kw>
<msg timestamp="20201022 13:53:16.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026149028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:16.360" endtime="20201022 13:53:16.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026149028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:16.653" endtime="20201022 13:53:16.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.662" endtime="20201022 13:53:16.664"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.357" endtime="20201022 13:53:16.664"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.356" endtime="20201022 13:53:16.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:16.668" level="INFO">${RESULT} = [{'diff': 2.3070000000000035e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.341700000000127e-05}, {'diff': 2.337499999999909e-05}, {'diff': 2.3401999999998757e-05}, {'diff': 2.343099999999737e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:16.665" endtime="20201022 13:53:16.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:16.673" level="INFO">${ACCURACY} = {'diff': [2.3070000000000035e-05, 2.338899999999866e-05, 2.341700000000127e-05, 2.337499999999909e-05, 2.3401999999998757e-05, 2.343099999999737e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.337...</msg>
<status status="PASS" starttime="20201022 13:53:16.670" endtime="20201022 13:53:16.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.677" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201022 13:53:16.676" endtime="20201022 13:53:16.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.680" level="INFO">VALUE: [2.3070000000000035e-05, 2.338899999999866e-05, 2.341700000000127e-05, 2.337499999999909e-05, 2.3401999999998757e-05, 2.343099999999737e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.337499999999909e-05, 2.338900000000213e-05, 2.340299999999823e-05, 2.34169999999978e-05, 2.3416000000001796e-05, 2.341700000000127e-05, 2.34030000000017e-05, 2.341700000000127e-05, 2.3416000000001796e-05, 2.338900000000213e-05, 2.341700000000127e-05, 2.340299999999823e-05, 2.331900000000081e-05, 2.341700000000127e-05, 2.336099999999952e-05, 2.34169999999978e-05, 2.336099999999952e-05, 2.8291999999999207e-05, 2.3402000000002227e-05, 2.3415999999998327e-05, 2.341700000000127e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.343099999999737e-05, 2.340299999999823e-05, 2.341700000000127e-05, 2.338899999999866e-05, 2.3416000000001796e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.337499999999909e-05, 2.345899999999998e-05, 2.343100000000084e-05, 2.338899999999866e-05, 2.341700000000127e-05, 2.3472000000000076e-05, 2.3401999999998757e-05, 2.338900000000213e-05, 2.34030000000017e-05, 2.340299999999823e-05]</msg>
<status status="PASS" starttime="20201022 13:53:16.678" endtime="20201022 13:53:16.680"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.674" endtime="20201022 13:53:16.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:16.684" endtime="20201022 13:53:16.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.683" endtime="20201022 13:53:16.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.682" endtime="20201022 13:53:16.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.210" endtime="20201022 13:53:16.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.209" endtime="20201022 13:53:16.705"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.715" endtime="20201022 13:53:16.833"></status>
</kw>
<msg timestamp="20201022 13:53:16.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '38'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:16.713" endtime="20201022 13:53:16.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '38'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:16.835" endtime="20201022 13:53:16.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.839" endtime="20201022 13:53:16.840"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.710" endtime="20201022 13:53:16.841"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.708" endtime="20201022 13:53:16.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:16.845" level="INFO">${RESULT} = {'dut-result': [38, 37, 37, 38, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, ...</msg>
<status status="PASS" starttime="20201022 13:53:16.842" endtime="20201022 13:53:16.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.850" level="INFO">NAME: accuracy-TIMER_SET-11-dut</msg>
<status status="PASS" starttime="20201022 13:53:16.849" endtime="20201022 13:53:16.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:16.852" level="INFO">VALUE: [38, 37, 37, 38, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 38, 37]</msg>
<status status="PASS" starttime="20201022 13:53:16.851" endtime="20201022 13:53:16.852"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.846" endtime="20201022 13:53:16.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:16.860" endtime="20201022 13:53:17.148"></status>
</kw>
<msg timestamp="20201022 13:53:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026086958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026114986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:16.858" endtime="20201022 13:53:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026086958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026114986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:17.152" endtime="20201022 13:53:17.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.161" endtime="20201022 13:53:17.162"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.855" endtime="20201022 13:53:17.163"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.853" endtime="20201022 13:53:17.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:17.167" level="INFO">${RESULT} = [{'diff': 2.8027999999999387e-05}, {'diff': 2.8319999999998346e-05}, {'diff': 2.8333000000001912e-05}, {'diff': 2.8334000000001386e-05}, {'diff': 2.8291999999999207e-05}, {'diff': 2.8346999999998013e-...</msg>
<status status="PASS" starttime="20201022 13:53:17.164" endtime="20201022 13:53:17.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:17.171" level="INFO">${ACCURACY} = {'diff': [2.8027999999999387e-05, 2.8319999999998346e-05, 2.8333000000001912e-05, 2.8334000000001386e-05, 2.8291999999999207e-05, 2.8346999999998013e-05, 2.8333000000001912e-05, 2.8332999999998443e-05...</msg>
<status status="PASS" starttime="20201022 13:53:17.168" endtime="20201022 13:53:17.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.176" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201022 13:53:17.175" endtime="20201022 13:53:17.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.178" level="INFO">VALUE: [2.8027999999999387e-05, 2.8319999999998346e-05, 2.8333000000001912e-05, 2.8334000000001386e-05, 2.8291999999999207e-05, 2.8346999999998013e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8318999999998873e-05, 2.8347000000001482e-05, 2.8347000000001482e-05, 2.8320000000001816e-05, 2.8334000000001386e-05, 2.8318999999998873e-05, 2.8334000000001386e-05, 2.8304999999999303e-05, 2.8319999999998346e-05, 2.8319000000002342e-05, 2.8320000000001816e-05, 2.8361000000001052e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8334000000001386e-05, 2.8264000000000067e-05, 2.8346999999998013e-05, 2.8333000000001912e-05, 2.8333999999997916e-05, 2.8306000000002246e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8333999999997916e-05, 2.8319999999998346e-05, 2.8319999999998346e-05, 2.8304999999999303e-05, 2.8320000000001816e-05, 2.8292000000002676e-05, 2.8305999999998777e-05, 2.8348000000000956e-05, 2.8333000000001912e-05, 2.8305999999998777e-05, 2.8319999999998346e-05, 2.8250000000000497e-05, 2.8319000000002342e-05, 2.8306000000002246e-05, 2.8304999999999303e-05, 2.8306000000002246e-05, 2.8347000000001482e-05, 2.8304999999999303e-05, 2.8320000000001816e-05]</msg>
<status status="PASS" starttime="20201022 13:53:17.177" endtime="20201022 13:53:17.179"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.172" endtime="20201022 13:53:17.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:17.183" endtime="20201022 13:53:17.202"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.181" endtime="20201022 13:53:17.203"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.180" endtime="20201022 13:53:17.203"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.706" endtime="20201022 13:53:17.203"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:16.706" endtime="20201022 13:53:17.204"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.212" endtime="20201022 13:53:17.331"></status>
</kw>
<msg timestamp="20201022 13:53:17.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:17.211" endtime="20201022 13:53:17.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:17.333" endtime="20201022 13:53:17.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.341" endtime="20201022 13:53:17.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.208" endtime="20201022 13:53:17.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.206" endtime="20201022 13:53:17.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:17.348" level="INFO">${RESULT} = {'dut-result': [38, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, ...</msg>
<status status="PASS" starttime="20201022 13:53:17.344" endtime="20201022 13:53:17.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.352" level="INFO">NAME: accuracy-TIMER_SET-12-dut</msg>
<status status="PASS" starttime="20201022 13:53:17.351" endtime="20201022 13:53:17.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.354" level="INFO">VALUE: [38, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37]</msg>
<status status="PASS" starttime="20201022 13:53:17.353" endtime="20201022 13:53:17.354"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.348" endtime="20201022 13:53:17.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.361" endtime="20201022 13:53:17.648"></status>
</kw>
<msg timestamp="20201022 13:53:17.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025926931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025954958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:17.360" endtime="20201022 13:53:17.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025926931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025954958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:17.652" endtime="20201022 13:53:17.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.660" endtime="20201022 13:53:17.662"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.357" endtime="20201022 13:53:17.662"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.356" endtime="20201022 13:53:17.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:17.668" level="INFO">${RESULT} = [{'diff': 2.8026999999999913e-05}, {'diff': 2.8304999999999303e-05}, {'diff': 2.8318999999998873e-05}, {'diff': 2.8318999999998873e-05}, {'diff': 2.8304999999999303e-05}, {'diff': 2.8320000000001816e-...</msg>
<status status="PASS" starttime="20201022 13:53:17.664" endtime="20201022 13:53:17.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:17.672" level="INFO">${ACCURACY} = {'diff': [2.8026999999999913e-05, 2.8304999999999303e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8304999999999303e-05, 2.8320000000001816e-05, 2.8305999999998777e-05, 2.8389000000000192e-05...</msg>
<status status="PASS" starttime="20201022 13:53:17.669" endtime="20201022 13:53:17.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.676" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201022 13:53:17.675" endtime="20201022 13:53:17.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.679" level="INFO">VALUE: [2.8026999999999913e-05, 2.8304999999999303e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8304999999999303e-05, 2.8320000000001816e-05, 2.8305999999998777e-05, 2.8389000000000192e-05, 2.8332999999998443e-05, 2.8277999999999637e-05, 2.8318999999998873e-05, 2.8334000000001386e-05, 2.8319000000002342e-05, 2.8277999999999637e-05, 2.8347000000001482e-05, 2.8319999999998346e-05, 2.8347000000001482e-05, 2.8348000000000956e-05, 2.8347000000001482e-05, 2.8304999999999303e-05, 2.8304999999999303e-05, 2.8318999999998873e-05, 2.8347999999997486e-05, 2.8347999999997486e-05, 2.8305999999998777e-05, 2.8332999999998443e-05, 2.8319000000002342e-05, 2.8348000000000956e-05, 2.8333000000001912e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8347000000001482e-05, 2.8320000000001816e-05, 2.8333000000001912e-05, 2.8304999999999303e-05, 2.8346999999998013e-05, 2.8332999999998443e-05, 2.8319000000002342e-05, 2.8332999999998443e-05, 2.8305000000002772e-05, 2.8305999999998777e-05, 2.8332999999998443e-05, 2.8305000000002772e-05, 2.8347000000001482e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8334000000001386e-05, 2.8347000000001482e-05, 2.8318999999998873e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201022 13:53:17.677" endtime="20201022 13:53:17.679"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.673" endtime="20201022 13:53:17.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:17.684" endtime="20201022 13:53:17.703"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.682" endtime="20201022 13:53:17.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.681" endtime="20201022 13:53:17.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.205" endtime="20201022 13:53:17.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.204" endtime="20201022 13:53:17.705"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.713" endtime="20201022 13:53:17.831"></status>
</kw>
<msg timestamp="20201022 13:53:17.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'data': [{'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:17.712" endtime="20201022 13:53:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'data': [{'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:17.833" endtime="20201022 13:53:17.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.836" endtime="20201022 13:53:17.839"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.709" endtime="20201022 13:53:17.840"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.707" endtime="20201022 13:53:17.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:17.844" level="INFO">${RESULT} = {'dut-result': [37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 38, 37, 38, 37, 37, 37, 37, 37, 37, 37, ...</msg>
<status status="PASS" starttime="20201022 13:53:17.841" endtime="20201022 13:53:17.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.848" level="INFO">NAME: accuracy-TIMER_SET-13-dut</msg>
<status status="PASS" starttime="20201022 13:53:17.847" endtime="20201022 13:53:17.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:17.851" level="INFO">VALUE: [37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37, 38, 37, 37, 37, 37, 37, 37, 38, 37, 38, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 37]</msg>
<status status="PASS" starttime="20201022 13:53:17.850" endtime="20201022 13:53:17.851"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.845" endtime="20201022 13:53:17.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:17.858" endtime="20201022 13:53:18.143"></status>
</kw>
<msg timestamp="20201022 13:53:18.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025220306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025248361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:17.856" endtime="20201022 13:53:18.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025220306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025248361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:18.147" endtime="20201022 13:53:18.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.156" endtime="20201022 13:53:18.157"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.854" endtime="20201022 13:53:18.158"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.852" endtime="20201022 13:53:18.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:18.162" level="INFO">${RESULT} = [{'diff': 2.8054999999999053e-05}, {'diff': 2.8346999999998013e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8375000000000622e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8347000000001482e-...</msg>
<status status="PASS" starttime="20201022 13:53:18.159" endtime="20201022 13:53:18.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:18.167" level="INFO">${ACCURACY} = {'diff': [2.8054999999999053e-05, 2.8346999999998013e-05, 2.8264000000000067e-05, 2.8375000000000622e-05, 2.8347000000001482e-05, 2.8347000000001482e-05, 2.8334000000001386e-05, 2.8333999999997916e-05...</msg>
<status status="PASS" starttime="20201022 13:53:18.163" endtime="20201022 13:53:18.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.172" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201022 13:53:18.171" endtime="20201022 13:53:18.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.175" level="INFO">VALUE: [2.8054999999999053e-05, 2.8346999999998013e-05, 2.8264000000000067e-05, 2.8375000000000622e-05, 2.8347000000001482e-05, 2.8347000000001482e-05, 2.8334000000001386e-05, 2.8333999999997916e-05, 2.8332999999998443e-05, 2.8334000000001386e-05, 2.8333000000001912e-05, 2.8320000000001816e-05, 2.8320000000001816e-05, 2.8306000000002246e-05, 2.8319000000002342e-05, 2.8249999999997027e-05, 2.8375000000000622e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8333000000001912e-05, 2.8318999999998873e-05, 2.8348000000000956e-05, 2.8333999999997916e-05, 2.8306000000002246e-05, 2.8306000000002246e-05, 2.8332999999998443e-05, 2.8333000000001912e-05, 2.8333999999997916e-05, 2.8319000000002342e-05, 2.8348000000000956e-05, 2.8277999999999637e-05, 2.8320000000001816e-05, 2.8305999999998777e-05, 2.8348000000000956e-05, 2.8389000000000192e-05, 2.8305999999998777e-05, 2.8320000000001816e-05, 2.8333000000001912e-05, 2.8346999999998013e-05, 2.8334000000001386e-05, 2.8319000000002342e-05, 2.8291999999999207e-05, 2.8347000000001482e-05, 2.8305999999998777e-05, 2.8361000000001052e-05, 2.8305999999998777e-05, 2.8320000000001816e-05, 2.8332999999998443e-05, 2.8333000000001912e-05, 2.8319000000002342e-05]</msg>
<status status="PASS" starttime="20201022 13:53:18.173" endtime="20201022 13:53:18.175"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.168" endtime="20201022 13:53:18.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:18.179" endtime="20201022 13:53:18.199"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.178" endtime="20201022 13:53:18.199"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.176" endtime="20201022 13:53:18.200"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.706" endtime="20201022 13:53:18.200"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:17.705" endtime="20201022 13:53:18.200"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.209" endtime="20201022 13:53:18.327"></status>
</kw>
<msg timestamp="20201022 13:53:18.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '38'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:18.207" endtime="20201022 13:53:18.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'data': [{'dut-result': '38'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '38'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:18.328" endtime="20201022 13:53:18.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.332" endtime="20201022 13:53:18.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.204" endtime="20201022 13:53:18.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.202" endtime="20201022 13:53:18.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:18.339" level="INFO">${RESULT} = {'dut-result': [38, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, ...</msg>
<status status="PASS" starttime="20201022 13:53:18.335" endtime="20201022 13:53:18.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.344" level="INFO">NAME: accuracy-TIMER_SET-14-dut</msg>
<status status="PASS" starttime="20201022 13:53:18.343" endtime="20201022 13:53:18.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.346" level="INFO">VALUE: [38, 37, 37, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 37, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 37, 38, 37, 37]</msg>
<status status="PASS" starttime="20201022 13:53:18.345" endtime="20201022 13:53:18.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.340" endtime="20201022 13:53:18.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.353" endtime="20201022 13:53:18.638"></status>
</kw>
<msg timestamp="20201022 13:53:18.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025264264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:18.351" endtime="20201022 13:53:18.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025264264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025292208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:18.643" endtime="20201022 13:53:18.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.651" endtime="20201022 13:53:18.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.349" endtime="20201022 13:53:18.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.347" endtime="20201022 13:53:18.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:18.658" level="INFO">${RESULT} = [{'diff': 2.7943999999998498e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8360999999997583e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8332999999998443e-05}, {'diff': 2.8348000000000956e-...</msg>
<status status="PASS" starttime="20201022 13:53:18.654" endtime="20201022 13:53:18.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:18.663" level="INFO">${ACCURACY} = {'diff': [2.7943999999998498e-05, 2.8332999999998443e-05, 2.8360999999997583e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8348000000000956e-05, 2.8304999999999303e-05, 2.8291999999999207e-05...</msg>
<status status="PASS" starttime="20201022 13:53:18.659" endtime="20201022 13:53:18.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.667" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201022 13:53:18.666" endtime="20201022 13:53:18.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.670" level="INFO">VALUE: [2.7943999999998498e-05, 2.8332999999998443e-05, 2.8360999999997583e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8348000000000956e-05, 2.8304999999999303e-05, 2.8291999999999207e-05, 2.8361000000001052e-05, 2.8333999999997916e-05, 2.8318999999998873e-05, 2.8347000000001482e-05, 2.8362000000000526e-05, 2.8318999999998873e-05, 2.8361000000001052e-05, 2.8318999999998873e-05, 2.8319000000002342e-05, 2.8319999999998346e-05, 2.8305999999998777e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8290999999999733e-05, 2.8334000000001386e-05, 2.8348000000000956e-05, 2.8305999999998777e-05, 2.8305999999998777e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8402999999999762e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8320000000001816e-05, 2.8304999999999303e-05, 2.8332999999998443e-05, 2.8318999999998873e-05, 2.8319999999998346e-05, 2.8333999999997916e-05, 2.8262999999997124e-05, 2.8361000000001052e-05, 2.8304999999999303e-05, 2.8319999999998346e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8332999999998443e-05, 2.8264000000000067e-05, 2.8333999999997916e-05, 2.8334000000001386e-05]</msg>
<status status="PASS" starttime="20201022 13:53:18.668" endtime="20201022 13:53:18.670"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.664" endtime="20201022 13:53:18.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:18.674" endtime="20201022 13:53:18.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.673" endtime="20201022 13:53:18.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.672" endtime="20201022 13:53:18.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.201" endtime="20201022 13:53:18.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.200" endtime="20201022 13:53:18.695"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.704" endtime="20201022 13:53:18.822"></status>
</kw>
<msg timestamp="20201022 13:53:18.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'data': [{'dut-result': '42'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:18.702" endtime="20201022 13:53:18.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'data': [{'dut-result': '42'}, {'dut-result': '37'}, {'dut-result': '37'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:18.823" endtime="20201022 13:53:18.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.828" endtime="20201022 13:53:18.830"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.700" endtime="20201022 13:53:18.831"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.697" endtime="20201022 13:53:18.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:18.838" level="INFO">${RESULT} = {'dut-result': [42, 37, 37, 42, 37, 42, 37, 37, 37, 37, 37, 37, 37, 37, 42, 42, 38, 42, 42, 38, 37, 37, 38, 37, 37, 42, 42, 37, 42, 37, 37, 37, 37, 37, 38, 37, 42, 42, 42, 42, 42, 37, 42, 38, 42, 42, ...</msg>
<status status="PASS" starttime="20201022 13:53:18.832" endtime="20201022 13:53:18.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.844" level="INFO">NAME: accuracy-TIMER_SET-15-dut</msg>
<status status="PASS" starttime="20201022 13:53:18.842" endtime="20201022 13:53:18.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:18.847" level="INFO">VALUE: [42, 37, 37, 42, 37, 42, 37, 37, 37, 37, 37, 37, 37, 37, 42, 42, 38, 42, 42, 38, 37, 37, 38, 37, 37, 42, 42, 37, 42, 37, 37, 37, 37, 37, 38, 37, 42, 42, 42, 42, 42, 37, 42, 38, 42, 42, 37, 37, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:18.846" endtime="20201022 13:53:18.848"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.839" endtime="20201022 13:53:18.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:18.856" endtime="20201022 13:53:19.142"></status>
</kw>
<msg timestamp="20201022 13:53:19.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025191069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:18.855" endtime="20201022 13:53:19.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025191069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:19.146" endtime="20201022 13:53:19.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.155" endtime="20201022 13:53:19.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.852" endtime="20201022 13:53:19.157"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.850" endtime="20201022 13:53:19.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:19.161" level="INFO">${RESULT} = [{'diff': 2.8013000000000343e-05}, {'diff': 2.8319999999998346e-05}, {'diff': 2.8305000000002772e-05}, {'diff': 3.324999999999856e-05}, {'diff': 2.8305999999998777e-05}, {'diff': 2.8319000000002342e-0...</msg>
<status status="PASS" starttime="20201022 13:53:19.158" endtime="20201022 13:53:19.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:19.166" level="INFO">${ACCURACY} = {'diff': [2.8013000000000343e-05, 2.8319999999998346e-05, 2.8305000000002772e-05, 3.324999999999856e-05, 2.8305999999998777e-05, 2.8319000000002342e-05, 2.8305999999998777e-05, 2.8320000000001816e-05,...</msg>
<status status="PASS" starttime="20201022 13:53:19.162" endtime="20201022 13:53:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.171" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201022 13:53:19.170" endtime="20201022 13:53:19.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.173" level="INFO">VALUE: [2.8013000000000343e-05, 2.8319999999998346e-05, 2.8305000000002772e-05, 3.324999999999856e-05, 2.8305999999998777e-05, 2.8319000000002342e-05, 2.8305999999998777e-05, 2.8320000000001816e-05, 2.8305999999998777e-05, 2.8346999999998013e-05, 2.8305000000002772e-05, 3.322199999999942e-05, 2.8320000000001816e-05, 2.8277999999999637e-05, 2.8389000000000192e-05, 2.8318999999998873e-05, 2.8415999999999858e-05, 3.325000000000203e-05, 3.323599999999899e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8319000000002342e-05, 2.8360999999997583e-05, 2.8319999999998346e-05, 2.8318999999998873e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8347999999997486e-05, 3.32640000000016e-05, 2.8346999999998013e-05, 2.8402999999999762e-05, 2.8333000000001912e-05, 2.8375000000000622e-05, 2.8346999999998013e-05, 2.8332999999998443e-05, 2.8346999999998013e-05, 2.8348000000000956e-05, 2.8347000000001482e-05, 2.8277999999999637e-05, 2.8334000000001386e-05, 2.8318999999998873e-05, 2.8332999999998443e-05, 2.8374999999997152e-05, 2.8319000000002342e-05, 2.8319000000002342e-05, 2.8318999999998873e-05, 3.326399999999813e-05, 3.325000000000203e-05, 2.8333000000001912e-05, 2.8332999999998443e-05]</msg>
<status status="PASS" starttime="20201022 13:53:19.172" endtime="20201022 13:53:19.174"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.167" endtime="20201022 13:53:19.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:19.178" endtime="20201022 13:53:19.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.176" endtime="20201022 13:53:19.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.175" endtime="20201022 13:53:19.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.696" endtime="20201022 13:53:19.199"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:18.695" endtime="20201022 13:53:19.199"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.208" endtime="20201022 13:53:19.326"></status>
</kw>
<msg timestamp="20201022 13:53:19.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:19.206" endtime="20201022 13:53:19.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:19.328" endtime="20201022 13:53:19.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.331" endtime="20201022 13:53:19.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.204" endtime="20201022 13:53:19.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.202" endtime="20201022 13:53:19.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:19.339" level="INFO">${RESULT} = {'dut-result': [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, ...</msg>
<status status="PASS" starttime="20201022 13:53:19.335" endtime="20201022 13:53:19.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.343" level="INFO">NAME: accuracy-TIMER_SET-16-dut</msg>
<status status="PASS" starttime="20201022 13:53:19.342" endtime="20201022 13:53:19.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.345" level="INFO">VALUE: [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 42, 42, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:19.344" endtime="20201022 13:53:19.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.340" endtime="20201022 13:53:19.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.353" endtime="20201022 13:53:19.638"></status>
</kw>
<msg timestamp="20201022 13:53:19.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025927472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:19.351" endtime="20201022 13:53:19.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025927472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025960403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:19.643" endtime="20201022 13:53:19.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.651" endtime="20201022 13:53:19.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.348" endtime="20201022 13:53:19.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.347" endtime="20201022 13:53:19.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:19.658" level="INFO">${RESULT} = [{'diff': 3.293099999999993e-05}, {'diff': 3.324999999999856e-05}, {'diff': 3.323599999999899e-05}, {'diff': 3.323599999999899e-05}, {'diff': 3.323699999999846e-05}, {'diff': 3.323600000000246e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:19.654" endtime="20201022 13:53:19.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:19.663" level="INFO">${ACCURACY} = {'diff': [3.293099999999993e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.323699999999846e-05, 3.323600000000246e-05, 3.322300000000236e-05, 3.3305000000000834e-05, 3.323...</msg>
<status status="PASS" starttime="20201022 13:53:19.659" endtime="20201022 13:53:19.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.668" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201022 13:53:19.667" endtime="20201022 13:53:19.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.670" level="INFO">VALUE: [3.293099999999993e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.323699999999846e-05, 3.323600000000246e-05, 3.322300000000236e-05, 3.3305000000000834e-05, 3.323600000000246e-05, 3.327800000000117e-05, 3.322299999999889e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.322199999999942e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.3291000000001264e-05, 3.325000000000203e-05, 3.323700000000193e-05, 3.322199999999942e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.32640000000016e-05, 3.323599999999899e-05, 3.319499999999975e-05, 3.3262999999998655e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323699999999846e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.3262999999998655e-05, 3.323599999999899e-05, 3.322199999999942e-05, 3.324999999999856e-05, 3.329199999999727e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.3262999999998655e-05, 3.324999999999856e-05, 3.322199999999942e-05]</msg>
<status status="PASS" starttime="20201022 13:53:19.669" endtime="20201022 13:53:19.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.663" endtime="20201022 13:53:19.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:19.675" endtime="20201022 13:53:19.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.673" endtime="20201022 13:53:19.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.672" endtime="20201022 13:53:19.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.200" endtime="20201022 13:53:19.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.199" endtime="20201022 13:53:19.695"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.704" endtime="20201022 13:53:19.823"></status>
</kw>
<msg timestamp="20201022 13:53:19.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:19.703" endtime="20201022 13:53:19.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:19.824" endtime="20201022 13:53:19.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.828" endtime="20201022 13:53:19.829"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.700" endtime="20201022 13:53:19.830"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.698" endtime="20201022 13:53:19.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:19.835" level="INFO">${RESULT} = {'dut-result': [43, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, ...</msg>
<status status="PASS" starttime="20201022 13:53:19.831" endtime="20201022 13:53:19.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.840" level="INFO">NAME: accuracy-TIMER_SET-17-dut</msg>
<status status="PASS" starttime="20201022 13:53:19.838" endtime="20201022 13:53:19.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:19.842" level="INFO">VALUE: [43, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:19.841" endtime="20201022 13:53:19.842"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.836" endtime="20201022 13:53:19.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:19.849" endtime="20201022 13:53:20.135"></status>
</kw>
<msg timestamp="20201022 13:53:20.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025495861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:19.847" endtime="20201022 13:53:20.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025495861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025528792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:20.139" endtime="20201022 13:53:20.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.148" endtime="20201022 13:53:20.150"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.845" endtime="20201022 13:53:20.150"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.843" endtime="20201022 13:53:20.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:20.155" level="INFO">${RESULT} = [{'diff': 3.293099999999993e-05}, {'diff': 3.325000000000203e-05}, {'diff': 3.318100000000018e-05}, {'diff': 3.324999999999856e-05}, {'diff': 3.3291000000001264e-05}, {'diff': 3.323599999999899e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:20.151" endtime="20201022 13:53:20.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:20.161" level="INFO">${ACCURACY} = {'diff': [3.293099999999993e-05, 3.325000000000203e-05, 3.318100000000018e-05, 3.324999999999856e-05, 3.3291000000001264e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.329200000000074e-05, 3.331...</msg>
<status status="PASS" starttime="20201022 13:53:20.156" endtime="20201022 13:53:20.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.165" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201022 13:53:20.164" endtime="20201022 13:53:20.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.168" level="INFO">VALUE: [3.293099999999993e-05, 3.325000000000203e-05, 3.318100000000018e-05, 3.324999999999856e-05, 3.3291000000001264e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.329200000000074e-05, 3.3319000000000404e-05, 3.323600000000246e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.3332999999999974e-05, 3.32640000000016e-05, 3.319499999999975e-05, 3.323600000000246e-05, 3.323599999999899e-05, 3.323599999999899e-05, 3.3262999999998655e-05, 3.326399999999813e-05, 3.322199999999942e-05, 3.325000000000203e-05, 3.323699999999846e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.318100000000018e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.319400000000028e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.3291000000001264e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.323599999999899e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.325000000000203e-05]</msg>
<status status="PASS" starttime="20201022 13:53:20.166" endtime="20201022 13:53:20.168"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.162" endtime="20201022 13:53:20.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:20.173" endtime="20201022 13:53:20.192"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.171" endtime="20201022 13:53:20.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.170" endtime="20201022 13:53:20.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.696" endtime="20201022 13:53:20.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:19.696" endtime="20201022 13:53:20.193"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.202" endtime="20201022 13:53:20.320"></status>
</kw>
<msg timestamp="20201022 13:53:20.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:20.200" endtime="20201022 13:53:20.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:20.322" endtime="20201022 13:53:20.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.325" endtime="20201022 13:53:20.327"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.198" endtime="20201022 13:53:20.327"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.196" endtime="20201022 13:53:20.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:20.332" level="INFO">${RESULT} = {'dut-result': [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, ...</msg>
<status status="PASS" starttime="20201022 13:53:20.329" endtime="20201022 13:53:20.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.338" level="INFO">NAME: accuracy-TIMER_SET-18-dut</msg>
<status status="PASS" starttime="20201022 13:53:20.337" endtime="20201022 13:53:20.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.340" level="INFO">VALUE: [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:20.339" endtime="20201022 13:53:20.340"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.333" endtime="20201022 13:53:20.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.347" endtime="20201022 13:53:20.642"></status>
</kw>
<msg timestamp="20201022 13:53:20.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025527569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:20.346" endtime="20201022 13:53:20.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025527569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:20.646" endtime="20201022 13:53:20.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.655" endtime="20201022 13:53:20.656"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.343" endtime="20201022 13:53:20.657"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.341" endtime="20201022 13:53:20.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:20.661" level="INFO">${RESULT} = [{'diff': 3.293000000000046e-05}, {'diff': 3.32640000000016e-05}, {'diff': 3.323600000000246e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.325000000000203e-05}, {'diff': 3.323599999999899e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:20.658" endtime="20201022 13:53:20.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:20.666" level="INFO">${ACCURACY} = {'diff': [3.293000000000046e-05, 3.32640000000016e-05, 3.323600000000246e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.32639...</msg>
<status status="PASS" starttime="20201022 13:53:20.662" endtime="20201022 13:53:20.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.671" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201022 13:53:20.669" endtime="20201022 13:53:20.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.673" level="INFO">VALUE: [3.293000000000046e-05, 3.32640000000016e-05, 3.323600000000246e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.322199999999942e-05, 3.326399999999813e-05, 3.323600000000246e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.323700000000193e-05, 3.3304999999997364e-05, 3.323599999999899e-05, 3.334799999999902e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.3263000000002124e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.3263000000002124e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.322199999999942e-05, 3.323599999999899e-05, 3.329200000000074e-05, 3.325000000000203e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.324999999999856e-05]</msg>
<status status="PASS" starttime="20201022 13:53:20.672" endtime="20201022 13:53:20.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.666" endtime="20201022 13:53:20.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:20.678" endtime="20201022 13:53:20.698"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.676" endtime="20201022 13:53:20.698"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.675" endtime="20201022 13:53:20.699"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.194" endtime="20201022 13:53:20.699"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.194" endtime="20201022 13:53:20.699"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.708" endtime="20201022 13:53:20.827"></status>
</kw>
<msg timestamp="20201022 13:53:20.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:20.707" endtime="20201022 13:53:20.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '42'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:20.829" endtime="20201022 13:53:20.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.832" endtime="20201022 13:53:20.834"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.704" endtime="20201022 13:53:20.834"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.702" endtime="20201022 13:53:20.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:20.838" level="INFO">${RESULT} = {'dut-result': [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, ...</msg>
<status status="PASS" starttime="20201022 13:53:20.835" endtime="20201022 13:53:20.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.843" level="INFO">NAME: accuracy-TIMER_SET-19-dut</msg>
<status status="PASS" starttime="20201022 13:53:20.842" endtime="20201022 13:53:20.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:20.845" level="INFO">VALUE: [43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:20.844" endtime="20201022 13:53:20.846"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.839" endtime="20201022 13:53:20.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:20.854" endtime="20201022 13:53:21.140"></status>
</kw>
<msg timestamp="20201022 13:53:21.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:20.852" endtime="20201022 13:53:21.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026125431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026158375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:21.145" endtime="20201022 13:53:21.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.153" endtime="20201022 13:53:21.155"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.849" endtime="20201022 13:53:21.155"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.847" endtime="20201022 13:53:21.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:21.160" level="INFO">${RESULT} = [{'diff': 3.294400000000003e-05}, {'diff': 3.32779999999977e-05}, {'diff': 3.323700000000193e-05}, {'diff': 3.329200000000074e-05}, {'diff': 3.32640000000016e-05}, {'diff': 3.320900000000279e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:21.156" endtime="20201022 13:53:21.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:21.164" level="INFO">${ACCURACY} = {'diff': [3.294400000000003e-05, 3.32779999999977e-05, 3.323700000000193e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.320900000000279e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.324999...</msg>
<status status="PASS" starttime="20201022 13:53:21.161" endtime="20201022 13:53:21.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.168" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201022 13:53:21.167" endtime="20201022 13:53:21.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.171" level="INFO">VALUE: [3.294400000000003e-05, 3.32779999999977e-05, 3.323700000000193e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.320900000000279e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.323599999999899e-05, 3.3319000000000404e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.319400000000028e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.322300000000236e-05, 3.325000000000203e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.323599999999899e-05, 3.323700000000193e-05, 3.323599999999899e-05, 3.322299999999889e-05, 3.324999999999856e-05, 3.320799999999985e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.319499999999975e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.325000000000203e-05]</msg>
<status status="PASS" starttime="20201022 13:53:21.169" endtime="20201022 13:53:21.171"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.164" endtime="20201022 13:53:21.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:21.176" endtime="20201022 13:53:21.196"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.174" endtime="20201022 13:53:21.196"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.173" endtime="20201022 13:53:21.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.700" endtime="20201022 13:53:21.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:20.700" endtime="20201022 13:53:21.197"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.206" endtime="20201022 13:53:21.325"></status>
</kw>
<msg timestamp="20201022 13:53:21.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:21.204" endtime="20201022 13:53:21.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'data': [{'dut-result': '43'}, {'dut-result': '42'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:21.326" endtime="20201022 13:53:21.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.330" endtime="20201022 13:53:21.331"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.202" endtime="20201022 13:53:21.332"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.200" endtime="20201022 13:53:21.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:21.336" level="INFO">${RESULT} = {'dut-result': [43, 42, 47, 47, 43, 47, 47, 42, 43, 42, 47, 42, 47, 42, 42, 42, 47, 42, 42, 47, 42, 42, 42, 42, 47, 42, 42, 42, 47, 42, 47, 47, 47, 42, 47, 42, 42, 42, 42, 47, 47, 42, 42, 47, 42, 42, ...</msg>
<status status="PASS" starttime="20201022 13:53:21.333" endtime="20201022 13:53:21.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.341" level="INFO">NAME: accuracy-TIMER_SET-20-dut</msg>
<status status="PASS" starttime="20201022 13:53:21.339" endtime="20201022 13:53:21.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.343" level="INFO">VALUE: [43, 42, 47, 47, 43, 47, 47, 42, 43, 42, 47, 42, 47, 42, 42, 42, 47, 42, 42, 47, 42, 42, 42, 42, 47, 42, 42, 42, 47, 42, 47, 47, 47, 42, 47, 42, 42, 42, 42, 47, 47, 42, 42, 47, 42, 42, 42, 42, 42, 42]</msg>
<status status="PASS" starttime="20201022 13:53:21.342" endtime="20201022 13:53:21.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.337" endtime="20201022 13:53:21.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.351" endtime="20201022 13:53:21.636"></status>
</kw>
<msg timestamp="20201022 13:53:21.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026426708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026464569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:21.349" endtime="20201022 13:53:21.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026426708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026464569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:21.641" endtime="20201022 13:53:21.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.649" endtime="20201022 13:53:21.651"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.346" endtime="20201022 13:53:21.652"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.344" endtime="20201022 13:53:21.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:21.656" level="INFO">${RESULT} = [{'diff': 3.7861000000000145e-05}, {'diff': 3.320799999999985e-05}, {'diff': 3.322300000000236e-05}, {'diff': 3.8181000000001714e-05}, {'diff': 3.8111000000000395e-05}, {'diff': 3.324999999999856e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:21.653" endtime="20201022 13:53:21.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:21.661" level="INFO">${ACCURACY} = {'diff': [3.7861000000000145e-05, 3.320799999999985e-05, 3.322300000000236e-05, 3.8181000000001714e-05, 3.8111000000000395e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.320900000000279e-05, 3.3...</msg>
<status status="PASS" starttime="20201022 13:53:21.658" endtime="20201022 13:53:21.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.666" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201022 13:53:21.665" endtime="20201022 13:53:21.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.668" level="INFO">VALUE: [3.7861000000000145e-05, 3.320799999999985e-05, 3.322300000000236e-05, 3.8181000000001714e-05, 3.8111000000000395e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.320900000000279e-05, 3.3276999999998225e-05, 3.323700000000193e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.325000000000203e-05, 3.326399999999813e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.323600000000246e-05, 3.8138999999999534e-05, 3.326399999999813e-05, 3.822300000000042e-05, 3.81659999999992e-05, 3.3291000000001264e-05, 3.325000000000203e-05, 3.324999999999856e-05, 3.3305000000000834e-05, 3.32640000000016e-05, 3.817999999999877e-05, 3.8153000000002574e-05, 3.32640000000016e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.320800000000332e-05, 3.32640000000016e-05, 3.323600000000246e-05, 3.324999999999856e-05, 3.323599999999899e-05, 3.324999999999856e-05, 3.8180999999998244e-05, 3.323599999999899e-05, 3.32779999999977e-05, 3.3290999999997795e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.326399999999813e-05, 3.8194999999997814e-05, 3.32640000000016e-05, 3.8166999999998674e-05, 3.323599999999899e-05]</msg>
<status status="PASS" starttime="20201022 13:53:21.667" endtime="20201022 13:53:21.669"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.662" endtime="20201022 13:53:21.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:21.673" endtime="20201022 13:53:21.692"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.671" endtime="20201022 13:53:21.693"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.670" endtime="20201022 13:53:21.693"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.198" endtime="20201022 13:53:21.693"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.198" endtime="20201022 13:53:21.694"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.704" endtime="20201022 13:53:21.823"></status>
</kw>
<msg timestamp="20201022 13:53:21.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:21.702" endtime="20201022 13:53:21.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:21.825" endtime="20201022 13:53:21.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.828" endtime="20201022 13:53:21.830"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.699" endtime="20201022 13:53:21.830"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.696" endtime="20201022 13:53:21.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:21.834" level="INFO">${RESULT} = {'dut-result': [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, ...</msg>
<status status="PASS" starttime="20201022 13:53:21.831" endtime="20201022 13:53:21.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.839" level="INFO">NAME: accuracy-TIMER_SET-21-dut</msg>
<status status="PASS" starttime="20201022 13:53:21.838" endtime="20201022 13:53:21.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:21.841" level="INFO">VALUE: [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47]</msg>
<status status="PASS" starttime="20201022 13:53:21.840" endtime="20201022 13:53:21.841"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.835" endtime="20201022 13:53:21.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:21.849" endtime="20201022 13:53:22.136"></status>
</kw>
<msg timestamp="20201022 13:53:22.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027331333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:21.847" endtime="20201022 13:53:22.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027331333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027369194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:22.140" endtime="20201022 13:53:22.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.149" endtime="20201022 13:53:22.151"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.844" endtime="20201022 13:53:22.151"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.842" endtime="20201022 13:53:22.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:22.155" level="INFO">${RESULT} = [{'diff': 3.7861000000000145e-05}, {'diff': 3.8138999999999534e-05}, {'diff': 3.8166999999998674e-05}, {'diff': 3.817999999999877e-05}, {'diff': 3.8166999999998674e-05}, {'diff': 3.8152999999999104e-0...</msg>
<status status="PASS" starttime="20201022 13:53:22.152" endtime="20201022 13:53:22.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:22.160" level="INFO">${ACCURACY} = {'diff': [3.7861000000000145e-05, 3.8138999999999534e-05, 3.8166999999998674e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.8152999999999104e-05, 3.817999999999877e-05, 3.8166999999998674e-05, ...</msg>
<status status="PASS" starttime="20201022 13:53:22.156" endtime="20201022 13:53:22.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.164" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201022 13:53:22.163" endtime="20201022 13:53:22.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.167" level="INFO">VALUE: [3.7861000000000145e-05, 3.8138999999999534e-05, 3.8166999999998674e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.8152999999999104e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.8181000000001714e-05, 3.8181000000001714e-05, 3.81659999999992e-05, 3.822200000000095e-05, 3.8167000000002144e-05, 3.8166999999998674e-05, 3.818000000000224e-05, 3.8138999999999534e-05, 3.8180999999998244e-05, 3.817999999999877e-05, 3.8181000000001714e-05, 3.817999999999877e-05, 3.8152999999999104e-05, 3.8138999999999534e-05, 3.8167000000002144e-05, 3.822199999999748e-05, 3.817999999999877e-05, 3.8153000000002574e-05, 3.8152999999999104e-05, 3.8152999999999104e-05, 3.8138999999999534e-05, 3.8166999999998674e-05, 3.818000000000224e-05, 3.818000000000224e-05, 3.8111000000000395e-05, 3.819399999999834e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.8153000000002574e-05, 3.8153000000002574e-05, 3.8167000000002144e-05, 3.822199999999748e-05, 3.816600000000267e-05, 3.8209000000000853e-05, 3.8166999999998674e-05, 3.8139000000003004e-05, 3.8153000000002574e-05, 3.818000000000224e-05, 3.81659999999992e-05, 3.81659999999992e-05, 3.819400000000181e-05, 3.815199999999963e-05]</msg>
<status status="PASS" starttime="20201022 13:53:22.165" endtime="20201022 13:53:22.167"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.161" endtime="20201022 13:53:22.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:22.171" endtime="20201022 13:53:22.191"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.170" endtime="20201022 13:53:22.191"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.168" endtime="20201022 13:53:22.192"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.695" endtime="20201022 13:53:22.192"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:21.694" endtime="20201022 13:53:22.192"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.202" endtime="20201022 13:53:22.321"></status>
</kw>
<msg timestamp="20201022 13:53:22.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:22.199" endtime="20201022 13:53:22.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:22.323" endtime="20201022 13:53:22.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.327" endtime="20201022 13:53:22.329"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.197" endtime="20201022 13:53:22.329"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.194" endtime="20201022 13:53:22.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:22.334" level="INFO">${RESULT} = {'dut-result': [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, ...</msg>
<status status="PASS" starttime="20201022 13:53:22.331" endtime="20201022 13:53:22.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.339" level="INFO">NAME: accuracy-TIMER_SET-22-dut</msg>
<status status="PASS" starttime="20201022 13:53:22.338" endtime="20201022 13:53:22.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.341" level="INFO">VALUE: [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47]</msg>
<status status="PASS" starttime="20201022 13:53:22.340" endtime="20201022 13:53:22.342"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.335" endtime="20201022 13:53:22.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.349" endtime="20201022 13:53:22.636"></status>
</kw>
<msg timestamp="20201022 13:53:22.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026672792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026710653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:22.347" endtime="20201022 13:53:22.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026672792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026710653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:22.640" endtime="20201022 13:53:22.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.648" endtime="20201022 13:53:22.650"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.344" endtime="20201022 13:53:22.651"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.343" endtime="20201022 13:53:22.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:22.655" level="INFO">${RESULT} = [{'diff': 3.7861000000000145e-05}, {'diff': 3.818000000000224e-05}, {'diff': 3.8153000000002574e-05}, {'diff': 3.8166999999998674e-05}, {'diff': 3.8153000000002574e-05}, {'diff': 3.8111000000000395e-0...</msg>
<status status="PASS" starttime="20201022 13:53:22.652" endtime="20201022 13:53:22.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:22.659" level="INFO">${ACCURACY} = {'diff': [3.7861000000000145e-05, 3.818000000000224e-05, 3.8153000000002574e-05, 3.8166999999998674e-05, 3.8153000000002574e-05, 3.8111000000000395e-05, 3.817999999999877e-05, 3.822200000000095e-05, 3...</msg>
<status status="PASS" starttime="20201022 13:53:22.656" endtime="20201022 13:53:22.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.664" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201022 13:53:22.663" endtime="20201022 13:53:22.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.667" level="INFO">VALUE: [3.7861000000000145e-05, 3.818000000000224e-05, 3.8153000000002574e-05, 3.8166999999998674e-05, 3.8153000000002574e-05, 3.8111000000000395e-05, 3.817999999999877e-05, 3.822200000000095e-05, 3.8167000000002144e-05, 3.817999999999877e-05, 3.81659999999992e-05, 3.818000000000224e-05, 3.8180999999998244e-05, 3.8181000000001714e-05, 3.819399999999834e-05, 3.8152999999999104e-05, 3.81659999999992e-05, 3.8138999999999534e-05, 3.819399999999834e-05, 3.8181000000001714e-05, 3.81659999999992e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.8167000000002144e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.819399999999834e-05, 3.8139000000003004e-05, 3.81659999999992e-05, 3.817999999999877e-05, 3.817999999999877e-05, 3.818000000000224e-05, 3.8138999999999534e-05, 3.8180999999998244e-05, 3.81659999999992e-05, 3.8152999999999104e-05, 3.825000000000009e-05, 3.8166999999998674e-05, 3.8152999999999104e-05, 3.81659999999992e-05, 3.813800000000006e-05, 3.819399999999834e-05, 3.816600000000267e-05, 3.818000000000224e-05, 3.8181000000001714e-05, 3.818000000000224e-05, 3.81659999999992e-05, 3.8096999999997355e-05, 3.8180999999998244e-05, 3.822200000000095e-05]</msg>
<status status="PASS" starttime="20201022 13:53:22.665" endtime="20201022 13:53:22.667"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.660" endtime="20201022 13:53:22.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:22.680" endtime="20201022 13:53:22.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.670" endtime="20201022 13:53:22.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.669" endtime="20201022 13:53:22.701"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.193" endtime="20201022 13:53:22.701"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.192" endtime="20201022 13:53:22.701"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.710" endtime="20201022 13:53:22.830"></status>
</kw>
<msg timestamp="20201022 13:53:22.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:22.708" endtime="20201022 13:53:22.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:22.831" endtime="20201022 13:53:22.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.835" endtime="20201022 13:53:22.836"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.706" endtime="20201022 13:53:22.837"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.703" endtime="20201022 13:53:22.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:22.841" level="INFO">${RESULT} = {'dut-result': [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, ...</msg>
<status status="PASS" starttime="20201022 13:53:22.838" endtime="20201022 13:53:22.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.846" level="INFO">NAME: accuracy-TIMER_SET-23-dut</msg>
<status status="PASS" starttime="20201022 13:53:22.845" endtime="20201022 13:53:22.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:22.848" level="INFO">VALUE: [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47]</msg>
<status status="PASS" starttime="20201022 13:53:22.847" endtime="20201022 13:53:22.848"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.842" endtime="20201022 13:53:22.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:22.855" endtime="20201022 13:53:23.142"></status>
</kw>
<msg timestamp="20201022 13:53:23.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026788778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026826625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:22.854" endtime="20201022 13:53:23.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026788778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026826625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:23.146" endtime="20201022 13:53:23.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.154" endtime="20201022 13:53:23.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.851" endtime="20201022 13:53:23.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.849" endtime="20201022 13:53:23.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:23.162" level="INFO">${RESULT} = [{'diff': 3.7847000000000575e-05}, {'diff': 3.8181000000001714e-05}, {'diff': 3.8167000000002144e-05}, {'diff': 3.815199999999963e-05}, {'diff': 3.81659999999992e-05}, {'diff': 3.817999999999877e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:23.158" endtime="20201022 13:53:23.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:23.166" level="INFO">${ACCURACY} = {'diff': [3.7847000000000575e-05, 3.8181000000001714e-05, 3.8167000000002144e-05, 3.815199999999963e-05, 3.81659999999992e-05, 3.817999999999877e-05, 3.81659999999992e-05, 3.8167000000002144e-05, 3.81...</msg>
<status status="PASS" starttime="20201022 13:53:23.163" endtime="20201022 13:53:23.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.171" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201022 13:53:23.170" endtime="20201022 13:53:23.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.173" level="INFO">VALUE: [3.7847000000000575e-05, 3.8181000000001714e-05, 3.8167000000002144e-05, 3.815199999999963e-05, 3.81659999999992e-05, 3.817999999999877e-05, 3.81659999999992e-05, 3.8167000000002144e-05, 3.8167000000002144e-05, 3.819400000000181e-05, 3.8181000000001714e-05, 3.8166999999998674e-05, 3.816600000000267e-05, 3.8167000000002144e-05, 3.8124999999999964e-05, 3.819400000000181e-05, 3.818000000000224e-05, 3.8152999999999104e-05, 3.81659999999992e-05, 3.8152999999999104e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.8138999999999534e-05, 3.8152999999999104e-05, 3.8152999999999104e-05, 3.8180999999998244e-05, 3.8152999999999104e-05, 3.823600000000052e-05, 3.8138999999999534e-05, 3.8195000000001283e-05, 3.8181000000001714e-05, 3.8152999999999104e-05, 3.8097000000000825e-05, 3.8181000000001714e-05, 3.822199999999748e-05, 3.818000000000224e-05, 3.8181000000001714e-05, 3.823600000000052e-05, 3.81659999999992e-05, 3.817999999999877e-05, 3.819399999999834e-05, 3.820800000000138e-05, 3.8138999999999534e-05, 3.8152999999999104e-05, 3.8166999999998674e-05, 3.817999999999877e-05, 3.8124999999999964e-05, 3.8153000000002574e-05, 3.8166999999998674e-05, 3.817999999999877e-05]</msg>
<status status="PASS" starttime="20201022 13:53:23.172" endtime="20201022 13:53:23.174"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.167" endtime="20201022 13:53:23.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:23.178" endtime="20201022 13:53:23.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.177" endtime="20201022 13:53:23.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.175" endtime="20201022 13:53:23.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.702" endtime="20201022 13:53:23.199"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:22.701" endtime="20201022 13:53:23.199"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.208" endtime="20201022 13:53:23.329"></status>
</kw>
<msg timestamp="20201022 13:53:23.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:23.206" endtime="20201022 13:53:23.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'data': [{'dut-result': '48'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:23.331" endtime="20201022 13:53:23.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.334" endtime="20201022 13:53:23.336"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.204" endtime="20201022 13:53:23.337"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.201" endtime="20201022 13:53:23.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:23.342" level="INFO">${RESULT} = {'dut-result': [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, ...</msg>
<status status="PASS" starttime="20201022 13:53:23.338" endtime="20201022 13:53:23.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.347" level="INFO">NAME: accuracy-TIMER_SET-24-dut</msg>
<status status="PASS" starttime="20201022 13:53:23.346" endtime="20201022 13:53:23.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.350" level="INFO">VALUE: [48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47]</msg>
<status status="PASS" starttime="20201022 13:53:23.348" endtime="20201022 13:53:23.350"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.343" endtime="20201022 13:53:23.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.357" endtime="20201022 13:53:23.642"></status>
</kw>
<msg timestamp="20201022 13:53:23.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025642292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:23.356" endtime="20201022 13:53:23.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025642292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025680139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:23.647" endtime="20201022 13:53:23.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.656" endtime="20201022 13:53:23.657"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.353" endtime="20201022 13:53:23.658"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.351" endtime="20201022 13:53:23.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:23.662" level="INFO">${RESULT} = [{'diff': 3.7847000000000575e-05}, {'diff': 3.8194999999997814e-05}, {'diff': 3.8152999999999104e-05}, {'diff': 3.81659999999992e-05}, {'diff': 3.8153000000002574e-05}, {'diff': 3.817999999999877e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:23.659" endtime="20201022 13:53:23.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:23.667" level="INFO">${ACCURACY} = {'diff': [3.7847000000000575e-05, 3.8194999999997814e-05, 3.8152999999999104e-05, 3.81659999999992e-05, 3.8153000000002574e-05, 3.817999999999877e-05, 3.8194999999997814e-05, 3.8138999999999534e-05, 3...</msg>
<status status="PASS" starttime="20201022 13:53:23.663" endtime="20201022 13:53:23.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.672" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201022 13:53:23.671" endtime="20201022 13:53:23.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.674" level="INFO">VALUE: [3.7847000000000575e-05, 3.8194999999997814e-05, 3.8152999999999104e-05, 3.81659999999992e-05, 3.8153000000002574e-05, 3.817999999999877e-05, 3.8194999999997814e-05, 3.8138999999999534e-05, 3.8152999999999104e-05, 3.8110999999996925e-05, 3.8167000000002144e-05, 3.823600000000052e-05, 3.818000000000224e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.813800000000006e-05, 3.8167000000002144e-05, 3.8152999999999104e-05, 3.808399999999726e-05, 3.81659999999992e-05, 3.8166999999998674e-05, 3.8181000000001714e-05, 3.8166999999998674e-05, 3.8166999999998674e-05, 3.8124999999999964e-05, 3.8152999999999104e-05, 3.8152999999999104e-05, 3.8152999999999104e-05, 3.817999999999877e-05, 3.8180999999998244e-05, 3.817999999999877e-05, 3.818000000000224e-05, 3.8152999999999104e-05, 3.8166999999998674e-05, 3.8181000000001714e-05, 3.8166999999998674e-05, 3.817999999999877e-05, 3.8166999999998674e-05, 3.816600000000267e-05, 3.8152999999999104e-05, 3.8181000000001714e-05, 3.8166999999998674e-05, 3.8152999999999104e-05, 3.8194999999997814e-05, 3.8167000000002144e-05, 3.8152999999999104e-05, 3.811199999999987e-05, 3.8166999999998674e-05, 3.811199999999987e-05]</msg>
<status status="PASS" starttime="20201022 13:53:23.673" endtime="20201022 13:53:23.675"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.668" endtime="20201022 13:53:23.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:23.679" endtime="20201022 13:53:23.699"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.678" endtime="20201022 13:53:23.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.676" endtime="20201022 13:53:23.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.200" endtime="20201022 13:53:23.700"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.199" endtime="20201022 13:53:23.700"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.709" endtime="20201022 13:53:23.828"></status>
</kw>
<msg timestamp="20201022 13:53:23.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:23.707" endtime="20201022 13:53:23.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '47'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:23.830" endtime="20201022 13:53:23.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.833" endtime="20201022 13:53:23.835"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.705" endtime="20201022 13:53:23.835"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.703" endtime="20201022 13:53:23.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:23.841" level="INFO">${RESULT} = {'dut-result': [52, 47, 47, 47, 47, 52, 47, 52, 52, 47, 47, 52, 47, 52, 47, 52, 47, 47, 47, 47, 47, 52, 52, 47, 47, 47, 52, 47, 52, 47, 52, 52, 47, 52, 47, 47, 47, 47, 52, 47, 47, 52, 47, 47, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:23.837" endtime="20201022 13:53:23.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.846" level="INFO">NAME: accuracy-TIMER_SET-25-dut</msg>
<status status="PASS" starttime="20201022 13:53:23.844" endtime="20201022 13:53:23.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:23.848" level="INFO">VALUE: [52, 47, 47, 47, 47, 52, 47, 52, 52, 47, 47, 52, 47, 52, 47, 52, 47, 47, 47, 47, 47, 52, 52, 47, 47, 47, 52, 47, 52, 47, 52, 52, 47, 52, 47, 47, 47, 47, 52, 47, 47, 52, 47, 47, 52, 52, 47, 52, 47, 52]</msg>
<status status="PASS" starttime="20201022 13:53:23.847" endtime="20201022 13:53:23.848"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.842" endtime="20201022 13:53:23.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:23.855" endtime="20201022 13:53:24.142"></status>
</kw>
<msg timestamp="20201022 13:53:24.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025891181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025933944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:23.853" endtime="20201022 13:53:24.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025891181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025933944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:24.146" endtime="20201022 13:53:24.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.154" endtime="20201022 13:53:24.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.851" endtime="20201022 13:53:24.156"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.849" endtime="20201022 13:53:24.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:24.161" level="INFO">${RESULT} = [{'diff': 4.276300000000122e-05}, {'diff': 4.300000000000137e-05}, {'diff': 4.3082999999999316e-05}, {'diff': 4.3055000000000176e-05}, {'diff': 3.81659999999992e-05}, {'diff': 4.3096999999998886e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:24.157" endtime="20201022 13:53:24.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:24.166" level="INFO">${ACCURACY} = {'diff': [4.276300000000122e-05, 4.300000000000137e-05, 4.3082999999999316e-05, 4.3055000000000176e-05, 3.81659999999992e-05, 4.3096999999998886e-05, 3.819400000000181e-05, 3.822200000000095e-05, 3.81...</msg>
<status status="PASS" starttime="20201022 13:53:24.162" endtime="20201022 13:53:24.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.170" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201022 13:53:24.169" endtime="20201022 13:53:24.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.173" level="INFO">VALUE: [4.276300000000122e-05, 4.300000000000137e-05, 4.3082999999999316e-05, 4.3055000000000176e-05, 3.81659999999992e-05, 4.3096999999998886e-05, 3.819400000000181e-05, 3.822200000000095e-05, 3.8152999999999104e-05, 4.3096999999998886e-05, 3.8152999999999104e-05, 3.8124999999999964e-05, 3.8166999999998674e-05, 3.815199999999963e-05, 3.8138999999999534e-05, 3.8097000000000825e-05, 3.813800000000006e-05, 3.8152999999999104e-05, 4.306999999999922e-05, 3.8181000000001714e-05, 3.819399999999834e-05, 3.815199999999963e-05, 3.8166999999998674e-05, 3.822300000000042e-05, 3.819399999999834e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 3.822200000000095e-05, 3.817999999999877e-05, 3.8167000000002144e-05, 3.8097000000000825e-05, 3.8166999999998674e-05, 3.8181000000001714e-05, 4.3097000000002356e-05, 3.819399999999834e-05, 3.8166999999998674e-05, 3.8167000000002144e-05, 3.8180999999998244e-05, 3.813800000000006e-05, 3.8209000000000853e-05, 3.8195000000001283e-05, 3.8180999999998244e-05, 4.3082999999999316e-05, 3.823600000000052e-05, 3.819399999999834e-05, 3.8195000000001283e-05, 3.818000000000224e-05, 3.818000000000224e-05, 3.822200000000095e-05, 3.817999999999877e-05]</msg>
<status status="PASS" starttime="20201022 13:53:24.171" endtime="20201022 13:53:24.173"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.166" endtime="20201022 13:53:24.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:24.177" endtime="20201022 13:53:24.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.176" endtime="20201022 13:53:24.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.174" endtime="20201022 13:53:24.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.701" endtime="20201022 13:53:24.198"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:23.701" endtime="20201022 13:53:24.198"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.207" endtime="20201022 13:53:24.326"></status>
</kw>
<msg timestamp="20201022 13:53:24.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'data': [{'dut-result': '53'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:24.205" endtime="20201022 13:53:24.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'data': [{'dut-result': '53'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:24.328" endtime="20201022 13:53:24.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.331" endtime="20201022 13:53:24.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.203" endtime="20201022 13:53:24.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.201" endtime="20201022 13:53:24.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:24.339" level="INFO">${RESULT} = {'dut-result': [53, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 51, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:24.335" endtime="20201022 13:53:24.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.343" level="INFO">NAME: accuracy-TIMER_SET-26-dut</msg>
<status status="PASS" starttime="20201022 13:53:24.342" endtime="20201022 13:53:24.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.345" level="INFO">VALUE: [53, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 51, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52]</msg>
<status status="PASS" starttime="20201022 13:53:24.344" endtime="20201022 13:53:24.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.340" endtime="20201022 13:53:24.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.353" endtime="20201022 13:53:24.639"></status>
</kw>
<msg timestamp="20201022 13:53:24.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0262765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:24.351" endtime="20201022 13:53:24.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0262765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026319278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:24.643" endtime="20201022 13:53:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.651" endtime="20201022 13:53:24.653"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.348" endtime="20201022 13:53:24.654"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.347" endtime="20201022 13:53:24.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:24.658" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.3097000000002356e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.309800000000183e-05}, {'diff': 4.3082999999999316e-05...</msg>
<status status="PASS" starttime="20201022 13:53:24.655" endtime="20201022 13:53:24.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:24.663" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.3097000000002356e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.3082999999999316e-05, 4.3083000000002786e-05, 4.3096999999998886e-05, ...</msg>
<status status="PASS" starttime="20201022 13:53:24.659" endtime="20201022 13:53:24.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.668" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201022 13:53:24.666" endtime="20201022 13:53:24.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.670" level="INFO">VALUE: [4.277800000000026e-05, 4.3097000000002356e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.3082999999999316e-05, 4.3083000000002786e-05, 4.3096999999998886e-05, 4.308399999999879e-05, 4.307000000000269e-05, 4.3068999999999746e-05, 4.306999999999922e-05, 4.3082999999999316e-05, 4.308400000000226e-05, 4.302800000000051e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.307000000000269e-05, 4.3096999999998886e-05, 4.3068999999999746e-05, 4.3083000000002786e-05, 4.3083000000002786e-05, 4.3138999999997596e-05, 4.308399999999879e-05, 4.3068999999999746e-05, 4.3082999999999316e-05, 4.308399999999879e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.3083000000002786e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.308400000000226e-05, 4.308399999999879e-05, 4.308399999999879e-05, 4.3082999999999316e-05, 4.3041000000000607e-05, 4.306999999999922e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3097000000002356e-05, 4.308400000000226e-05, 4.304200000000008e-05, 4.3097000000002356e-05, 4.309800000000183e-05]</msg>
<status status="PASS" starttime="20201022 13:53:24.669" endtime="20201022 13:53:24.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.664" endtime="20201022 13:53:24.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:24.675" endtime="20201022 13:53:24.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.673" endtime="20201022 13:53:24.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.672" endtime="20201022 13:53:24.695"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.199" endtime="20201022 13:53:24.696"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.199" endtime="20201022 13:53:24.696"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.705" endtime="20201022 13:53:24.825"></status>
</kw>
<msg timestamp="20201022 13:53:24.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'data': [{'dut-result': '53'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:24.704" endtime="20201022 13:53:24.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'data': [{'dut-result': '53'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:24.827" endtime="20201022 13:53:24.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.830" endtime="20201022 13:53:24.831"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.701" endtime="20201022 13:53:24.832"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.699" endtime="20201022 13:53:24.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:24.837" level="INFO">${RESULT} = {'dut-result': [53, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:24.833" endtime="20201022 13:53:24.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.842" level="INFO">NAME: accuracy-TIMER_SET-27-dut</msg>
<status status="PASS" starttime="20201022 13:53:24.841" endtime="20201022 13:53:24.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:24.844" level="INFO">VALUE: [53, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52]</msg>
<status status="PASS" starttime="20201022 13:53:24.843" endtime="20201022 13:53:24.844"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.838" endtime="20201022 13:53:24.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:24.851" endtime="20201022 13:53:25.137"></status>
</kw>
<msg timestamp="20201022 13:53:25.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026800097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026842889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:24.850" endtime="20201022 13:53:25.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026800097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026842889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:25.142" endtime="20201022 13:53:25.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.150" endtime="20201022 13:53:25.152"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.847" endtime="20201022 13:53:25.152"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.845" endtime="20201022 13:53:25.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:25.157" level="INFO">${RESULT} = [{'diff': 4.27920000000033e-05}, {'diff': 4.306999999999922e-05}, {'diff': 4.3083000000002786e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3097000000002356e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:25.154" endtime="20201022 13:53:25.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:25.162" level="INFO">${ACCURACY} = {'diff': [4.27920000000033e-05, 4.306999999999922e-05, 4.3083000000002786e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.3110999999998456e-05, 4.308399999999879e-05, 4....</msg>
<status status="PASS" starttime="20201022 13:53:25.158" endtime="20201022 13:53:25.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.166" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201022 13:53:25.165" endtime="20201022 13:53:25.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.169" level="INFO">VALUE: [4.27920000000033e-05, 4.306999999999922e-05, 4.3083000000002786e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.3110999999998456e-05, 4.308399999999879e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.3083000000002786e-05, 4.3082999999999316e-05, 4.305599999999965e-05, 4.3110999999998456e-05, 4.309799999999836e-05, 4.31120000000014e-05, 4.3068999999999746e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.307000000000269e-05, 4.306999999999922e-05, 4.3083000000002786e-05, 4.3082999999999316e-05, 4.3097000000002356e-05, 4.308400000000226e-05, 4.3111000000001926e-05, 4.313800000000159e-05, 4.3055000000000176e-05, 4.308400000000226e-05, 4.3097000000002356e-05, 4.31120000000014e-05, 4.3111000000001926e-05, 4.3139000000001065e-05, 4.3096999999998886e-05, 4.3125000000001495e-05, 4.3110999999998456e-05, 4.308399999999879e-05, 4.3068999999999746e-05, 4.308399999999879e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.309799999999836e-05, 4.308399999999879e-05, 4.3082999999999316e-05, 4.308399999999879e-05]</msg>
<status status="PASS" starttime="20201022 13:53:25.167" endtime="20201022 13:53:25.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.163" endtime="20201022 13:53:25.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:25.173" endtime="20201022 13:53:25.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.172" endtime="20201022 13:53:25.193"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.171" endtime="20201022 13:53:25.194"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.697" endtime="20201022 13:53:25.194"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:24.696" endtime="20201022 13:53:25.194"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.203" endtime="20201022 13:53:25.322"></status>
</kw>
<msg timestamp="20201022 13:53:25.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:25.201" endtime="20201022 13:53:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:25.324" endtime="20201022 13:53:25.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.327" endtime="20201022 13:53:25.329"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.198" endtime="20201022 13:53:25.329"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.196" endtime="20201022 13:53:25.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:25.334" level="INFO">${RESULT} = {'dut-result': [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:25.330" endtime="20201022 13:53:25.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.339" level="INFO">NAME: accuracy-TIMER_SET-28-dut</msg>
<status status="PASS" starttime="20201022 13:53:25.338" endtime="20201022 13:53:25.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.341" level="INFO">VALUE: [52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52]</msg>
<status status="PASS" starttime="20201022 13:53:25.340" endtime="20201022 13:53:25.342"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.336" endtime="20201022 13:53:25.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.349" endtime="20201022 13:53:25.635"></status>
</kw>
<msg timestamp="20201022 13:53:25.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025998889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026041653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:25.347" endtime="20201022 13:53:25.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025998889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026041653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:25.639" endtime="20201022 13:53:25.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.648" endtime="20201022 13:53:25.650"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.344" endtime="20201022 13:53:25.650"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.343" endtime="20201022 13:53:25.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:25.654" level="INFO">${RESULT} = [{'diff': 4.276400000000069e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.309800000000183e-05}, {'diff': 4.3097000000002356e-05}, {'diff': 4.3111000000001926e-05}, {'diff': 4.3096999999998886e-05...</msg>
<status status="PASS" starttime="20201022 13:53:25.651" endtime="20201022 13:53:25.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:25.659" level="INFO">${ACCURACY} = {'diff': [4.276400000000069e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.3097000000002356e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.309799999999836e-05, 4.309799999999836e-05, 4....</msg>
<status status="PASS" starttime="20201022 13:53:25.655" endtime="20201022 13:53:25.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.664" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201022 13:53:25.663" endtime="20201022 13:53:25.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.666" level="INFO">VALUE: [4.276400000000069e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.3097000000002356e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.309799999999836e-05, 4.309799999999836e-05, 4.3068999999999746e-05, 4.302800000000051e-05, 4.307000000000269e-05, 4.3068999999999746e-05, 4.3125000000001495e-05, 4.3082999999999316e-05, 4.308400000000226e-05, 4.3082999999999316e-05, 4.308399999999879e-05, 4.308399999999879e-05, 4.3097000000002356e-05, 4.308399999999879e-05, 4.3111000000001926e-05, 4.307000000000269e-05, 4.308399999999879e-05, 4.3096999999998886e-05, 4.3083000000002786e-05, 4.3167000000000205e-05, 4.3111000000001926e-05, 4.3096999999998886e-05, 4.3096999999998886e-05, 4.307000000000269e-05, 4.3096999999998886e-05, 4.3139000000001065e-05, 4.306999999999922e-05, 4.3096999999998886e-05, 4.302800000000051e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.301400000000094e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.307000000000269e-05, 4.305599999999965e-05, 4.3096999999998886e-05, 4.3097000000002356e-05, 4.3068999999999746e-05, 4.3055000000000176e-05, 4.3083000000002786e-05, 4.305600000000312e-05, 4.3097000000002356e-05, 4.3055000000000176e-05]</msg>
<status status="PASS" starttime="20201022 13:53:25.665" endtime="20201022 13:53:25.667"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.660" endtime="20201022 13:53:25.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:25.671" endtime="20201022 13:53:25.690"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.669" endtime="20201022 13:53:25.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.668" endtime="20201022 13:53:25.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.195" endtime="20201022 13:53:25.692"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.194" endtime="20201022 13:53:25.692"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.701" endtime="20201022 13:53:25.821"></status>
</kw>
<msg timestamp="20201022 13:53:25.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:25.699" endtime="20201022 13:53:25.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '52'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:25.822" endtime="20201022 13:53:25.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.825" endtime="20201022 13:53:25.827"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.697" endtime="20201022 13:53:25.828"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.694" endtime="20201022 13:53:25.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:25.832" level="INFO">${RESULT} = {'dut-result': [52, 52, 52, 52, 52, 52, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:25.829" endtime="20201022 13:53:25.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.837" level="INFO">NAME: accuracy-TIMER_SET-29-dut</msg>
<status status="PASS" starttime="20201022 13:53:25.836" endtime="20201022 13:53:25.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:25.839" level="INFO">VALUE: [52, 52, 52, 52, 52, 52, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52]</msg>
<status status="PASS" starttime="20201022 13:53:25.838" endtime="20201022 13:53:25.840"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.833" endtime="20201022 13:53:25.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:25.847" endtime="20201022 13:53:26.133"></status>
</kw>
<msg timestamp="20201022 13:53:26.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026544917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:25.845" endtime="20201022 13:53:26.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026502139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026544917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:26.137" endtime="20201022 13:53:26.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.146" endtime="20201022 13:53:26.147"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.843" endtime="20201022 13:53:26.148"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.841" endtime="20201022 13:53:26.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:26.152" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.305599999999965e-05}, {'diff': 4.309800000000183e-05}, {'diff': 4.3097000000002356e-05}, {'diff': 4.3111000000001926e-05}, {'diff': 4.3097000000002356e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:26.149" endtime="20201022 13:53:26.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:26.157" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.305599999999965e-05, 4.309800000000183e-05, 4.3097000000002356e-05, 4.3111000000001926e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3110999999998456e-05, 4...</msg>
<status status="PASS" starttime="20201022 13:53:26.153" endtime="20201022 13:53:26.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.162" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201022 13:53:26.160" endtime="20201022 13:53:26.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.164" level="INFO">VALUE: [4.277800000000026e-05, 4.305599999999965e-05, 4.309800000000183e-05, 4.3097000000002356e-05, 4.3111000000001926e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.3111000000001926e-05, 4.309800000000183e-05, 4.3069000000003216e-05, 4.306999999999922e-05, 4.3083000000002786e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.3083000000002786e-05, 4.3083000000002786e-05, 4.3097000000002356e-05, 4.3082999999999316e-05, 4.3124999999998026e-05, 4.3082999999999316e-05, 4.3180999999999775e-05, 4.3096999999998886e-05, 4.308399999999879e-05, 4.3096999999998886e-05, 4.308400000000226e-05, 4.3068999999999746e-05, 4.309799999999836e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.3082999999999316e-05, 4.3068999999999746e-05, 4.309799999999836e-05, 4.306999999999922e-05, 4.3082999999999316e-05, 4.3041000000000607e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.308400000000226e-05, 4.3096999999998886e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.3096999999998886e-05, 4.308400000000226e-05, 4.3110999999998456e-05, 4.3082999999999316e-05, 4.3139000000001065e-05, 4.309799999999836e-05]</msg>
<status status="PASS" starttime="20201022 13:53:26.163" endtime="20201022 13:53:26.165"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.157" endtime="20201022 13:53:26.166"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:26.169" endtime="20201022 13:53:26.189"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.168" endtime="20201022 13:53:26.189"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.167" endtime="20201022 13:53:26.190"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.693" endtime="20201022 13:53:26.190"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:25.692" endtime="20201022 13:53:26.190"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.199" endtime="20201022 13:53:26.318"></status>
</kw>
<msg timestamp="20201022 13:53:26.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '51'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:26.197" endtime="20201022 13:53:26.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'data': [{'dut-result': '52'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '51'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:26.320" endtime="20201022 13:53:26.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.323" endtime="20201022 13:53:26.325"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.195" endtime="20201022 13:53:26.326"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.193" endtime="20201022 13:53:26.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:26.330" level="INFO">${RESULT} = {'dut-result': [52, 57, 57, 51, 52, 57, 57, 52, 52, 57, 51, 52, 57, 57, 57, 57, 52, 52, 52, 52, 52, 52, 57, 51, 52, 52, 52, 52, 52, 52, 57, 52, 57, 57, 52, 57, 52, 57, 52, 57, 51, 52, 57, 52, 52, 52, ...</msg>
<status status="PASS" starttime="20201022 13:53:26.327" endtime="20201022 13:53:26.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.334" level="INFO">NAME: accuracy-TIMER_SET-30-dut</msg>
<status status="PASS" starttime="20201022 13:53:26.333" endtime="20201022 13:53:26.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.336" level="INFO">VALUE: [52, 57, 57, 51, 52, 57, 57, 52, 52, 57, 51, 52, 57, 57, 57, 57, 52, 52, 52, 52, 52, 52, 57, 51, 52, 52, 52, 52, 52, 52, 57, 52, 57, 57, 52, 57, 52, 57, 52, 57, 51, 52, 57, 52, 52, 52, 57, 52, 57, 52]</msg>
<status status="PASS" starttime="20201022 13:53:26.335" endtime="20201022 13:53:26.337"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.331" endtime="20201022 13:53:26.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.346" endtime="20201022 13:53:26.631"></status>
</kw>
<msg timestamp="20201022 13:53:26.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026024208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026066986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:26.344" endtime="20201022 13:53:26.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026024208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026066986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:26.635" endtime="20201022 13:53:26.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.644" endtime="20201022 13:53:26.646"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.342" endtime="20201022 13:53:26.646"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.338" endtime="20201022 13:53:26.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:26.651" level="INFO">${RESULT} = [{'diff': 4.277800000000026e-05}, {'diff': 4.802799999999857e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.3082999999999316e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:26.647" endtime="20201022 13:53:26.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:26.655" level="INFO">${ACCURACY} = {'diff': [4.277800000000026e-05, 4.802799999999857e-05, 4.8013999999999e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.799999999999943e-05, 4.309799999999836e-05, 4.797...</msg>
<status status="PASS" starttime="20201022 13:53:26.652" endtime="20201022 13:53:26.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.659" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201022 13:53:26.658" endtime="20201022 13:53:26.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.662" level="INFO">VALUE: [4.277800000000026e-05, 4.802799999999857e-05, 4.8013999999999e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.799999999999943e-05, 4.309799999999836e-05, 4.797199999999682e-05, 4.3110999999998456e-05, 4.3096999999998886e-05, 4.7959000000000196e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.309800000000183e-05, 4.302800000000051e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.305599999999965e-05, 4.3111000000001926e-05, 4.309799999999836e-05, 4.306999999999922e-05, 4.802800000000204e-05, 4.3110999999998456e-05, 4.799999999999943e-05, 4.802799999999857e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.3068999999999746e-05, 4.3068999999999746e-05, 4.3097000000002356e-05, 4.3125000000001495e-05, 4.306999999999922e-05, 4.3082999999999316e-05, 4.3068999999999746e-05, 4.3083000000002786e-05, 4.8013999999999e-05, 4.3125000000001495e-05, 4.799999999999943e-05, 4.3096999999998886e-05, 4.3139000000001065e-05, 4.8013999999999e-05, 4.306999999999922e-05, 4.308399999999879e-05, 4.3124999999998026e-05, 4.308399999999879e-05, 4.3068999999999746e-05, 4.308399999999879e-05, 4.3110999999998456e-05, 4.3110999999998456e-05]</msg>
<status status="PASS" starttime="20201022 13:53:26.660" endtime="20201022 13:53:26.662"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.656" endtime="20201022 13:53:26.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:26.666" endtime="20201022 13:53:26.686"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.665" endtime="20201022 13:53:26.687"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.664" endtime="20201022 13:53:26.687"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.191" endtime="20201022 13:53:26.688"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.190" endtime="20201022 13:53:26.688"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.697" endtime="20201022 13:53:26.817"></status>
</kw>
<msg timestamp="20201022 13:53:26.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:26.695" endtime="20201022 13:53:26.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:26.818" endtime="20201022 13:53:26.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.822" endtime="20201022 13:53:26.823"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.693" endtime="20201022 13:53:26.824"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.691" endtime="20201022 13:53:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:26.829" level="INFO">${RESULT} = {'dut-result': [57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, ...</msg>
<status status="PASS" starttime="20201022 13:53:26.825" endtime="20201022 13:53:26.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.835" level="INFO">NAME: accuracy-TIMER_SET-31-dut</msg>
<status status="PASS" starttime="20201022 13:53:26.833" endtime="20201022 13:53:26.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:26.837" level="INFO">VALUE: [57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57]</msg>
<status status="PASS" starttime="20201022 13:53:26.836" endtime="20201022 13:53:26.837"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.830" endtime="20201022 13:53:26.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:26.845" endtime="20201022 13:53:27.130"></status>
</kw>
<msg timestamp="20201022 13:53:27.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027117472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:26.843" endtime="20201022 13:53:27.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027117472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:27.135" endtime="20201022 13:53:27.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.143" endtime="20201022 13:53:27.144"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.840" endtime="20201022 13:53:27.145"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.838" endtime="20201022 13:53:27.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:27.149" level="INFO">${RESULT} = [{'diff': 4.7653000000001666e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.795800000000072e-05}, {'diff': 4.799999999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:27.146" endtime="20201022 13:53:27.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:27.154" level="INFO">${ACCURACY} = {'diff': [4.7653000000001666e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.795800000000072e-05, 4.799999999999943e-05, 4.7986999999999336e-05, 4.802799999999857e-05, 4.7999...</msg>
<status status="PASS" starttime="20201022 13:53:27.150" endtime="20201022 13:53:27.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.158" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201022 13:53:27.157" endtime="20201022 13:53:27.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.161" level="INFO">VALUE: [4.7653000000001666e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.795800000000072e-05, 4.799999999999943e-05, 4.7986999999999336e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.801400000000247e-05, 4.8013999999999e-05, 4.801400000000247e-05, 4.793000000000158e-05, 4.799999999999943e-05, 4.795799999999725e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.801299999999953e-05, 4.80000000000029e-05, 4.802799999999857e-05, 4.798599999999986e-05, 4.797200000000029e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.808300000000085e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.808300000000085e-05, 4.799999999999943e-05, 4.7986999999999336e-05, 4.799999999999943e-05, 4.7986999999999336e-05, 4.7931000000001056e-05, 4.799999999999943e-05, 4.807000000000075e-05, 4.801400000000247e-05, 4.798599999999986e-05]</msg>
<status status="PASS" starttime="20201022 13:53:27.159" endtime="20201022 13:53:27.161"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.154" endtime="20201022 13:53:27.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:27.165" endtime="20201022 13:53:27.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.164" endtime="20201022 13:53:27.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.163" endtime="20201022 13:53:27.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.689" endtime="20201022 13:53:27.186"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:26.688" endtime="20201022 13:53:27.186"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.196" endtime="20201022 13:53:27.316"></status>
</kw>
<msg timestamp="20201022 13:53:27.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '56'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:27.194" endtime="20201022 13:53:27.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '56'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:27.318" endtime="20201022 13:53:27.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.321" endtime="20201022 13:53:27.323"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.191" endtime="20201022 13:53:27.323"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.188" endtime="20201022 13:53:27.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:27.327" level="INFO">${RESULT} = {'dut-result': [57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 56, 57, ...</msg>
<status status="PASS" starttime="20201022 13:53:27.324" endtime="20201022 13:53:27.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.332" level="INFO">NAME: accuracy-TIMER_SET-32-dut</msg>
<status status="PASS" starttime="20201022 13:53:27.331" endtime="20201022 13:53:27.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.334" level="INFO">VALUE: [57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 56, 57, 57, 57, 57, 57]</msg>
<status status="PASS" starttime="20201022 13:53:27.333" endtime="20201022 13:53:27.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.328" endtime="20201022 13:53:27.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.341" endtime="20201022 13:53:27.628"></status>
</kw>
<msg timestamp="20201022 13:53:27.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027574194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027621944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:27.340" endtime="20201022 13:53:27.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027574194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027621944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:27.633" endtime="20201022 13:53:27.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.641" endtime="20201022 13:53:27.643"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.337" endtime="20201022 13:53:27.643"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.336" endtime="20201022 13:53:27.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:27.648" level="INFO">${RESULT} = [{'diff': 4.774999999999918e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.80000000000029e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.804200000000161e-05}, {'diff': 4.798599999999986e-05}, {'di...</msg>
<status status="PASS" starttime="20201022 13:53:27.644" endtime="20201022 13:53:27.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:27.652" level="INFO">${ACCURACY} = {'diff': [4.774999999999918e-05, 4.799999999999943e-05, 4.80000000000029e-05, 4.8013999999999e-05, 4.804200000000161e-05, 4.798599999999986e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.7985999999...</msg>
<status status="PASS" starttime="20201022 13:53:27.648" endtime="20201022 13:53:27.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.656" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201022 13:53:27.655" endtime="20201022 13:53:27.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.659" level="INFO">VALUE: [4.774999999999918e-05, 4.799999999999943e-05, 4.80000000000029e-05, 4.8013999999999e-05, 4.804200000000161e-05, 4.798599999999986e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.795800000000072e-05, 4.806900000000128e-05, 4.799999999999943e-05, 4.805600000000118e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.805500000000171e-05, 4.80000000000029e-05, 4.801299999999953e-05, 4.80000000000029e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.801299999999953e-05, 4.8013999999999e-05, 4.802799999999857e-05, 4.801400000000247e-05, 4.8013999999999e-05, 4.8013999999999e-05, 4.8013999999999e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.792999999999811e-05, 4.806900000000128e-05, 4.802800000000204e-05, 4.798599999999986e-05, 4.802799999999857e-05, 4.7986999999999336e-05, 4.802799999999857e-05, 4.805499999999824e-05]</msg>
<status status="PASS" starttime="20201022 13:53:27.657" endtime="20201022 13:53:27.659"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.653" endtime="20201022 13:53:27.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:27.664" endtime="20201022 13:53:27.683"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.662" endtime="20201022 13:53:27.684"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.661" endtime="20201022 13:53:27.684"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.187" endtime="20201022 13:53:27.684"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.186" endtime="20201022 13:53:27.684"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.694" endtime="20201022 13:53:27.814"></status>
</kw>
<msg timestamp="20201022 13:53:27.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '56'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:27.692" endtime="20201022 13:53:27.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '56'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:27.816" endtime="20201022 13:53:27.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.819" endtime="20201022 13:53:27.821"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.689" endtime="20201022 13:53:27.821"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.687" endtime="20201022 13:53:27.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:27.825" level="INFO">${RESULT} = {'dut-result': [57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 56, 57, 57, 57, 56, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, ...</msg>
<status status="PASS" starttime="20201022 13:53:27.822" endtime="20201022 13:53:27.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.830" level="INFO">NAME: accuracy-TIMER_SET-33-dut</msg>
<status status="PASS" starttime="20201022 13:53:27.829" endtime="20201022 13:53:27.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:27.832" level="INFO">VALUE: [57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57, 56, 57, 57, 57, 56, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57]</msg>
<status status="PASS" starttime="20201022 13:53:27.831" endtime="20201022 13:53:27.832"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.826" endtime="20201022 13:53:27.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:27.839" endtime="20201022 13:53:28.126"></status>
</kw>
<msg timestamp="20201022 13:53:28.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027038347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027086069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:27.838" endtime="20201022 13:53:28.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027038347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027086069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:28.130" endtime="20201022 13:53:28.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.138" endtime="20201022 13:53:28.140"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.835" endtime="20201022 13:53:28.140"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.834" endtime="20201022 13:53:28.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:28.145" level="INFO">${RESULT} = [{'diff': 4.772200000000004e-05}, {'diff': 4.806899999999781e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.8013999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:28.142" endtime="20201022 13:53:28.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:28.184" level="INFO">${ACCURACY} = {'diff': [4.772200000000004e-05, 4.806899999999781e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.801399...</msg>
<status status="PASS" starttime="20201022 13:53:28.180" endtime="20201022 13:53:28.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.188" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201022 13:53:28.187" endtime="20201022 13:53:28.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.190" level="INFO">VALUE: [4.772200000000004e-05, 4.806899999999781e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.8013000000003e-05, 4.805600000000118e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.798599999999986e-05, 4.801400000000247e-05, 4.802800000000204e-05, 4.798599999999986e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.801299999999953e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.797199999999682e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.802799999999857e-05, 4.798599999999986e-05, 4.805600000000118e-05, 4.801400000000247e-05, 4.798599999999986e-05, 4.795800000000072e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.808300000000085e-05, 4.807000000000075e-05, 4.798599999999986e-05, 4.802800000000204e-05, 4.80000000000029e-05, 4.7986999999999336e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.801400000000247e-05]</msg>
<status status="PASS" starttime="20201022 13:53:28.189" endtime="20201022 13:53:28.191"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.184" endtime="20201022 13:53:28.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:28.195" endtime="20201022 13:53:28.214"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.194" endtime="20201022 13:53:28.215"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.192" endtime="20201022 13:53:28.215"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.685" endtime="20201022 13:53:28.216"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:27.685" endtime="20201022 13:53:28.216"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.224" endtime="20201022 13:53:28.345"></status>
</kw>
<msg timestamp="20201022 13:53:28.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:28.223" endtime="20201022 13:53:28.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'data': [{'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:28.347" endtime="20201022 13:53:28.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.350" endtime="20201022 13:53:28.352"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.220" endtime="20201022 13:53:28.353"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.218" endtime="20201022 13:53:28.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:28.357" level="INFO">${RESULT} = {'dut-result': [57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 56, 56, 57, 57, 56, 57, 57, 57, 57, 57, 57, 56, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, ...</msg>
<status status="PASS" starttime="20201022 13:53:28.354" endtime="20201022 13:53:28.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.362" level="INFO">NAME: accuracy-TIMER_SET-34-dut</msg>
<status status="PASS" starttime="20201022 13:53:28.361" endtime="20201022 13:53:28.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.364" level="INFO">VALUE: [57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 56, 56, 57, 57, 56, 57, 57, 57, 57, 57, 57, 56, 56, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 56, 57, 57, 57, 57, 57, 57, 57, 57, 56, 57, 57]</msg>
<status status="PASS" starttime="20201022 13:53:28.363" endtime="20201022 13:53:28.365"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.358" endtime="20201022 13:53:28.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.372" endtime="20201022 13:53:28.658"></status>
</kw>
<msg timestamp="20201022 13:53:28.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027068417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027116111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:28.371" endtime="20201022 13:53:28.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027068417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027116111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:28.662" endtime="20201022 13:53:28.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.670" endtime="20201022 13:53:28.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.367" endtime="20201022 13:53:28.672"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.366" endtime="20201022 13:53:28.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:28.677" level="INFO">${RESULT} = [{'diff': 4.769399999999743e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.80000000000029e-05}, {'diff...</msg>
<status status="PASS" starttime="20201022 13:53:28.673" endtime="20201022 13:53:28.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:28.682" level="INFO">${ACCURACY} = {'diff': [4.769399999999743e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.801399999...</msg>
<status status="PASS" starttime="20201022 13:53:28.678" endtime="20201022 13:53:28.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.686" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201022 13:53:28.685" endtime="20201022 13:53:28.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.688" level="INFO">VALUE: [4.769399999999743e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.8013999999999e-05, 4.8013999999999e-05, 4.805499999999824e-05, 4.802799999999857e-05, 4.801400000000247e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.7917000000001486e-05, 4.805600000000118e-05, 4.799999999999943e-05, 4.7986999999999336e-05, 4.798599999999986e-05, 4.8013999999999e-05, 4.7945000000000626e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.8013999999999e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.808300000000085e-05, 4.798599999999986e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.804200000000161e-05, 4.799999999999943e-05, 4.80000000000029e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.799999999999943e-05, 4.80000000000029e-05, 4.801400000000247e-05, 4.802799999999857e-05, 4.801400000000247e-05, 4.795800000000072e-05, 4.7931000000001056e-05, 4.802799999999857e-05, 4.8013999999999e-05]</msg>
<status status="PASS" starttime="20201022 13:53:28.687" endtime="20201022 13:53:28.689"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.683" endtime="20201022 13:53:28.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:28.693" endtime="20201022 13:53:28.713"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.692" endtime="20201022 13:53:28.713"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.690" endtime="20201022 13:53:28.713"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.217" endtime="20201022 13:53:28.714"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.216" endtime="20201022 13:53:28.714"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.723" endtime="20201022 13:53:28.843"></status>
</kw>
<msg timestamp="20201022 13:53:28.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'data': [{'dut-result': '58'}, {'dut-result': '56'}, {'dut-result': '56'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:28.721" endtime="20201022 13:53:28.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'data': [{'dut-result': '58'}, {'dut-result': '56'}, {'dut-result': '56'}, {'dut-result': '57'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:28.845" endtime="20201022 13:53:28.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.848" endtime="20201022 13:53:28.851"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.718" endtime="20201022 13:53:28.851"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.716" endtime="20201022 13:53:28.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:28.856" level="INFO">${RESULT} = {'dut-result': [58, 56, 56, 57, 56, 57, 57, 62, 62, 57, 62, 62, 62, 57, 62, 57, 62, 62, 57, 57, 56, 62, 62, 56, 62, 62, 57, 62, 57, 62, 62, 56, 62, 56, 56, 57, 57, 62, 57, 62, 62, 57, 62, 62, 62, 57, ...</msg>
<status status="PASS" starttime="20201022 13:53:28.853" endtime="20201022 13:53:28.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.860" level="INFO">NAME: accuracy-TIMER_SET-35-dut</msg>
<status status="PASS" starttime="20201022 13:53:28.859" endtime="20201022 13:53:28.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:28.862" level="INFO">VALUE: [58, 56, 56, 57, 56, 57, 57, 62, 62, 57, 62, 62, 62, 57, 62, 57, 62, 62, 57, 57, 56, 62, 62, 56, 62, 62, 57, 62, 57, 62, 62, 56, 62, 56, 56, 57, 57, 62, 57, 62, 62, 57, 62, 62, 62, 57, 62, 62, 56, 62]</msg>
<status status="PASS" starttime="20201022 13:53:28.861" endtime="20201022 13:53:28.863"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.856" endtime="20201022 13:53:28.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:28.870" endtime="20201022 13:53:29.156"></status>
</kw>
<msg timestamp="20201022 13:53:29.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:28.868" endtime="20201022 13:53:29.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026340917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026388625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:29.160" endtime="20201022 13:53:29.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.168" endtime="20201022 13:53:29.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.865" endtime="20201022 13:53:29.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.864" endtime="20201022 13:53:29.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:29.175" level="INFO">${RESULT} = [{'diff': 4.770800000000047e-05}, {'diff': 4.80000000000029e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.288900000000041e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.801400000000247e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:29.172" endtime="20201022 13:53:29.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:29.180" level="INFO">${ACCURACY} = {'diff': [4.770800000000047e-05, 4.80000000000029e-05, 5.290299999999998e-05, 5.288900000000041e-05, 4.798599999999986e-05, 4.801400000000247e-05, 4.801400000000247e-05, 5.293099999999912e-05, 4.80129...</msg>
<status status="PASS" starttime="20201022 13:53:29.176" endtime="20201022 13:53:29.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.184" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201022 13:53:29.183" endtime="20201022 13:53:29.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.187" level="INFO">VALUE: [4.770800000000047e-05, 4.80000000000029e-05, 5.290299999999998e-05, 5.288900000000041e-05, 4.798599999999986e-05, 4.801400000000247e-05, 4.801400000000247e-05, 5.293099999999912e-05, 4.801299999999953e-05, 5.290299999999998e-05, 5.2915999999996605e-05, 5.288900000000041e-05, 4.799999999999943e-05, 4.799999999999943e-05, 5.293099999999912e-05, 5.290299999999998e-05, 4.798600000000333e-05, 4.801400000000247e-05, 5.291699999999955e-05, 5.291700000000302e-05, 5.291699999999955e-05, 5.291700000000302e-05, 4.799999999999943e-05, 4.798599999999986e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 4.7945000000000626e-05, 4.795800000000072e-05, 4.799999999999943e-05, 4.80000000000029e-05, 5.291699999999955e-05, 4.8013999999999e-05, 5.290299999999998e-05, 4.802799999999857e-05, 5.290299999999998e-05, 5.291699999999955e-05, 4.799999999999943e-05, 4.802799999999857e-05, 4.799999999999943e-05, 4.801400000000247e-05, 4.793099999999759e-05, 4.801400000000247e-05, 5.294499999999869e-05, 5.290299999999998e-05, 4.799999999999943e-05, 4.798599999999986e-05, 5.291699999999955e-05, 4.802800000000204e-05, 4.807000000000075e-05, 4.801400000000247e-05]</msg>
<status status="PASS" starttime="20201022 13:53:29.185" endtime="20201022 13:53:29.187"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.181" endtime="20201022 13:53:29.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:29.192" endtime="20201022 13:53:29.211"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.190" endtime="20201022 13:53:29.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.188" endtime="20201022 13:53:29.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.715" endtime="20201022 13:53:29.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:28.714" endtime="20201022 13:53:29.212"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.221" endtime="20201022 13:53:29.342"></status>
</kw>
<msg timestamp="20201022 13:53:29.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'data': [{'dut-result': '63'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:29.220" endtime="20201022 13:53:29.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'data': [{'dut-result': '63'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:29.343" endtime="20201022 13:53:29.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.346" endtime="20201022 13:53:29.348"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.217" endtime="20201022 13:53:29.349"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.215" endtime="20201022 13:53:29.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:29.354" level="INFO">${RESULT} = {'dut-result': [63, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 61, 61, 62, 61, 61, 62, 62, 62, 62, 61, 62, 61, 62, ...</msg>
<status status="PASS" starttime="20201022 13:53:29.350" endtime="20201022 13:53:29.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.358" level="INFO">NAME: accuracy-TIMER_SET-36-dut</msg>
<status status="PASS" starttime="20201022 13:53:29.357" endtime="20201022 13:53:29.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.360" level="INFO">VALUE: [63, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 61, 61, 62, 61, 61, 62, 62, 62, 62, 61, 62, 61, 62, 62, 62, 62, 62]</msg>
<status status="PASS" starttime="20201022 13:53:29.359" endtime="20201022 13:53:29.361"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.355" endtime="20201022 13:53:29.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.368" endtime="20201022 13:53:29.652"></status>
</kw>
<msg timestamp="20201022 13:53:29.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026397167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:29.366" endtime="20201022 13:53:29.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026397167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026449778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:29.656" endtime="20201022 13:53:29.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.665" endtime="20201022 13:53:29.666"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.364" endtime="20201022 13:53:29.667"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.362" endtime="20201022 13:53:29.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:29.671" level="INFO">${RESULT} = [{'diff': 5.261100000000102e-05}, {'diff': 5.2929999999999644e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.291700000000302e-05}, {'diff': 5.2929999999999644e-05},...</msg>
<status status="PASS" starttime="20201022 13:53:29.668" endtime="20201022 13:53:29.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:29.678" level="INFO">${ACCURACY} = {'diff': [5.261100000000102e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.291700000000302e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.291699999999955e-05, 5.28...</msg>
<status status="PASS" starttime="20201022 13:53:29.672" endtime="20201022 13:53:29.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.683" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201022 13:53:29.682" endtime="20201022 13:53:29.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.686" level="INFO">VALUE: [5.261100000000102e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.291700000000302e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.291699999999955e-05, 5.288900000000041e-05, 5.293100000000259e-05, 5.288900000000041e-05, 5.2943999999999214e-05, 5.2943999999999214e-05, 5.2957999999998784e-05, 5.294500000000216e-05, 5.287500000000084e-05, 5.291699999999955e-05, 5.2929999999999644e-05, 5.293100000000259e-05, 5.2929999999999644e-05, 5.2929999999999644e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.294500000000216e-05, 5.2929999999999644e-05, 5.287499999999737e-05, 5.294499999999869e-05, 5.2902000000000504e-05, 5.2916000000000074e-05, 5.290299999999998e-05, 5.290299999999998e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.290299999999998e-05, 5.287500000000084e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.293099999999912e-05, 5.293100000000259e-05, 5.2916000000000074e-05, 5.288900000000041e-05, 5.293099999999912e-05, 5.293099999999912e-05, 5.294400000000268e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.290299999999998e-05, 5.291700000000302e-05, 5.2930000000003113e-05]</msg>
<status status="PASS" starttime="20201022 13:53:29.684" endtime="20201022 13:53:29.686"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.680" endtime="20201022 13:53:29.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:29.690" endtime="20201022 13:53:29.710"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.689" endtime="20201022 13:53:29.710"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.688" endtime="20201022 13:53:29.711"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.213" endtime="20201022 13:53:29.711"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.213" endtime="20201022 13:53:29.711"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.720" endtime="20201022 13:53:29.840"></status>
</kw>
<msg timestamp="20201022 13:53:29.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'data': [{'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:29.718" endtime="20201022 13:53:29.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'data': [{'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:29.842" endtime="20201022 13:53:29.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.845" endtime="20201022 13:53:29.847"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.716" endtime="20201022 13:53:29.847"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.714" endtime="20201022 13:53:29.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:29.853" level="INFO">${RESULT} = {'dut-result': [62, 62, 62, 62, 61, 61, 62, 62, 62, 62, 62, 61, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 61, 62, 62, 61, 62, ...</msg>
<status status="PASS" starttime="20201022 13:53:29.849" endtime="20201022 13:53:29.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.857" level="INFO">NAME: accuracy-TIMER_SET-37-dut</msg>
<status status="PASS" starttime="20201022 13:53:29.856" endtime="20201022 13:53:29.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:29.859" level="INFO">VALUE: [62, 62, 62, 62, 61, 61, 62, 62, 62, 62, 62, 61, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 61, 62, 62, 61, 62, 62, 62, 62, 62]</msg>
<status status="PASS" starttime="20201022 13:53:29.858" endtime="20201022 13:53:29.860"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.854" endtime="20201022 13:53:29.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:29.866" endtime="20201022 13:53:30.151"></status>
</kw>
<msg timestamp="20201022 13:53:30.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026473556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026526139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:29.865" endtime="20201022 13:53:30.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026473556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026526139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:30.156" endtime="20201022 13:53:30.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.165" endtime="20201022 13:53:30.166"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.862" endtime="20201022 13:53:30.167"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.861" endtime="20201022 13:53:30.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:30.171" level="INFO">${RESULT} = [{'diff': 5.258300000000188e-05}, {'diff': 5.290299999999998e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.298600000000139e-05}, {'diff': 5.2929999999999644e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:30.168" endtime="20201022 13:53:30.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:30.176" level="INFO">${ACCURACY} = {'diff': [5.258300000000188e-05, 5.290299999999998e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.298600000000139e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.291...</msg>
<status status="PASS" starttime="20201022 13:53:30.172" endtime="20201022 13:53:30.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.181" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201022 13:53:30.180" endtime="20201022 13:53:30.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.183" level="INFO">VALUE: [5.258300000000188e-05, 5.290299999999998e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.298600000000139e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.290299999999998e-05, 5.2929999999999644e-05, 5.2929999999999644e-05, 5.2916000000000074e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.293100000000259e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.2929999999999644e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.28609999999978e-05, 5.290299999999998e-05, 5.2930000000003113e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.2916000000000074e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.293099999999912e-05, 5.291699999999955e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.293099999999912e-05, 5.295900000000173e-05, 5.2929999999999644e-05, 5.294500000000216e-05, 5.283299999999866e-05, 5.291699999999955e-05, 5.291700000000302e-05, 5.2916000000000074e-05, 5.2916000000000074e-05, 5.293100000000259e-05, 5.293100000000259e-05, 5.2929999999999644e-05, 5.291700000000302e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201022 13:53:30.182" endtime="20201022 13:53:30.183"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.177" endtime="20201022 13:53:30.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:30.188" endtime="20201022 13:53:30.207"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.186" endtime="20201022 13:53:30.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.185" endtime="20201022 13:53:30.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.712" endtime="20201022 13:53:30.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:29.711" endtime="20201022 13:53:30.208"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.217" endtime="20201022 13:53:30.338"></status>
</kw>
<msg timestamp="20201022 13:53:30.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'data': [{'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:30.216" endtime="20201022 13:53:30.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'data': [{'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:30.339" endtime="20201022 13:53:30.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.342" endtime="20201022 13:53:30.344"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.213" endtime="20201022 13:53:30.345"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.211" endtime="20201022 13:53:30.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:30.350" level="INFO">${RESULT} = {'dut-result': [62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 61, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 61, ...</msg>
<status status="PASS" starttime="20201022 13:53:30.346" endtime="20201022 13:53:30.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.355" level="INFO">NAME: accuracy-TIMER_SET-38-dut</msg>
<status status="PASS" starttime="20201022 13:53:30.354" endtime="20201022 13:53:30.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.357" level="INFO">VALUE: [62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 61, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 61, 62, 61, 62, 62]</msg>
<status status="PASS" starttime="20201022 13:53:30.356" endtime="20201022 13:53:30.357"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.351" endtime="20201022 13:53:30.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.364" endtime="20201022 13:53:30.650"></status>
</kw>
<msg timestamp="20201022 13:53:30.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026515847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:30.363" endtime="20201022 13:53:30.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026463306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026515847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:30.654" endtime="20201022 13:53:30.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.662" endtime="20201022 13:53:30.664"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.360" endtime="20201022 13:53:30.664"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.358" endtime="20201022 13:53:30.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:30.669" level="INFO">${RESULT} = [{'diff': 5.25409999999997e-05}, {'diff': 5.2943999999999214e-05}, {'diff': 5.294500000000216e-05}, {'diff': 5.293099999999912e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.2916000000000074e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:53:30.665" endtime="20201022 13:53:30.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:30.674" level="INFO">${ACCURACY} = {'diff': [5.25409999999997e-05, 5.2943999999999214e-05, 5.294500000000216e-05, 5.293099999999912e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.287500000000084e-05, 5.291...</msg>
<status status="PASS" starttime="20201022 13:53:30.670" endtime="20201022 13:53:30.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.678" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201022 13:53:30.677" endtime="20201022 13:53:30.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.681" level="INFO">VALUE: [5.25409999999997e-05, 5.2943999999999214e-05, 5.294500000000216e-05, 5.293099999999912e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.287500000000084e-05, 5.291700000000302e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.288900000000041e-05, 5.2916000000000074e-05, 5.2929999999999644e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.2902000000000504e-05, 5.2929999999999644e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.293099999999912e-05, 5.293099999999912e-05, 5.2916000000000074e-05, 5.290299999999998e-05, 5.293099999999912e-05, 5.28470000000017e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.290299999999998e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.294499999999869e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.293100000000259e-05, 5.288900000000041e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.290300000000345e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.294499999999869e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.293100000000259e-05]</msg>
<status status="PASS" starttime="20201022 13:53:30.679" endtime="20201022 13:53:30.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.675" endtime="20201022 13:53:30.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:30.685" endtime="20201022 13:53:30.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.684" endtime="20201022 13:53:30.705"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.683" endtime="20201022 13:53:30.706"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.209" endtime="20201022 13:53:30.706"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.209" endtime="20201022 13:53:30.706"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.715" endtime="20201022 13:53:30.836"></status>
</kw>
<msg timestamp="20201022 13:53:30.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'data': [{'dut-result': '63'}, {'dut-result': '61'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:30.714" endtime="20201022 13:53:30.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'data': [{'dut-result': '63'}, {'dut-result': '61'}, {'dut-result': '62'}, {'dut-result': '62'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:30.837" endtime="20201022 13:53:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.841" endtime="20201022 13:53:30.842"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.711" endtime="20201022 13:53:30.843"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.709" endtime="20201022 13:53:30.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:30.848" level="INFO">${RESULT} = {'dut-result': [63, 61, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 61, 62, ...</msg>
<status status="PASS" starttime="20201022 13:53:30.844" endtime="20201022 13:53:30.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.853" level="INFO">NAME: accuracy-TIMER_SET-39-dut</msg>
<status status="PASS" starttime="20201022 13:53:30.852" endtime="20201022 13:53:30.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:30.855" level="INFO">VALUE: [63, 61, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 62, 62, 62, 61, 62, 62, 62, 62, 61]</msg>
<status status="PASS" starttime="20201022 13:53:30.854" endtime="20201022 13:53:30.855"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.849" endtime="20201022 13:53:30.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:30.862" endtime="20201022 13:53:31.149"></status>
</kw>
<msg timestamp="20201022 13:53:31.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026785014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026837583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:30.860" endtime="20201022 13:53:31.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026785014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026837583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:31.153" endtime="20201022 13:53:31.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.162" endtime="20201022 13:53:31.163"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.858" endtime="20201022 13:53:31.164"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.856" endtime="20201022 13:53:31.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:31.168" level="INFO">${RESULT} = [{'diff': 5.256900000000231e-05}, {'diff': 5.297200000000182e-05}, {'diff': 5.2916000000000074e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.2943999999999214e-05}, {'diff': 5.2985999999997924e-05}...</msg>
<status status="PASS" starttime="20201022 13:53:31.165" endtime="20201022 13:53:31.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:31.173" level="INFO">${ACCURACY} = {'diff': [5.256900000000231e-05, 5.297200000000182e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.2985999999997924e-05, 5.297200000000182e-05, 5.2929999999999644e-05, 5....</msg>
<status status="PASS" starttime="20201022 13:53:31.169" endtime="20201022 13:53:31.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.178" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201022 13:53:31.176" endtime="20201022 13:53:31.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.181" level="INFO">VALUE: [5.256900000000231e-05, 5.297200000000182e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.2943999999999214e-05, 5.2985999999997924e-05, 5.297200000000182e-05, 5.2929999999999644e-05, 5.288900000000041e-05, 5.291700000000302e-05, 5.291699999999955e-05, 5.2930000000003113e-05, 5.287500000000084e-05, 5.293099999999912e-05, 5.290299999999998e-05, 5.2943999999999214e-05, 5.293099999999912e-05, 5.2943999999999214e-05, 5.2929999999999644e-05, 5.2929999999999644e-05, 5.291700000000302e-05, 5.293099999999912e-05, 5.2929999999999644e-05, 5.290299999999998e-05, 5.2916000000000074e-05, 5.293099999999912e-05, 5.2999999999997494e-05, 5.2916000000000074e-05, 5.290299999999998e-05, 5.290299999999998e-05, 5.294500000000216e-05, 5.291699999999955e-05, 5.2916000000000074e-05, 5.291699999999955e-05, 5.293099999999912e-05, 5.291699999999955e-05, 5.291700000000302e-05, 5.293099999999912e-05, 5.291700000000302e-05, 5.294400000000268e-05, 5.2929999999999644e-05, 5.288899999999694e-05, 5.290299999999998e-05, 5.2929999999999644e-05, 5.2901999999997035e-05, 5.290299999999998e-05, 5.2929999999999644e-05, 5.293099999999912e-05, 5.291699999999955e-05, 5.2915999999996605e-05]</msg>
<status status="PASS" starttime="20201022 13:53:31.179" endtime="20201022 13:53:31.181"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.174" endtime="20201022 13:53:31.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:31.185" endtime="20201022 13:53:31.204"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.184" endtime="20201022 13:53:31.205"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.182" endtime="20201022 13:53:31.205"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.707" endtime="20201022 13:53:31.206"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:30.707" endtime="20201022 13:53:31.206"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.215" endtime="20201022 13:53:31.340"></status>
</kw>
<msg timestamp="20201022 13:53:31.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'data': [{'dut-result': '80'}, {'dut-result': '78'}, {'dut-result': '78'}, {'dut-result': '78'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:31.213" endtime="20201022 13:53:31.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'data': [{'dut-result': '80'}, {'dut-result': '78'}, {'dut-result': '78'}, {'dut-result': '78'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:31.341" endtime="20201022 13:53:31.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.345" endtime="20201022 13:53:31.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.210" endtime="20201022 13:53:31.347"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.208" endtime="20201022 13:53:31.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:31.351" level="INFO">${RESULT} = {'dut-result': [80, 78, 78, 78, 78, 78, 79, 79, 78, 79, 79, 79, 78, 78, 78, 78, 78, 79, 79, 79, 79, 78, 78, 78, 78, 79, 79, 79, 79, 78, 78, 78, 79, 79, 78, 79, 78, 78, 79, 79, 78, 78, 79, 79, 78, 79, ...</msg>
<status status="PASS" starttime="20201022 13:53:31.348" endtime="20201022 13:53:31.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.357" level="INFO">NAME: accuracy-TIMER_SET-40-dut</msg>
<status status="PASS" starttime="20201022 13:53:31.355" endtime="20201022 13:53:31.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.359" level="INFO">VALUE: [80, 78, 78, 78, 78, 78, 79, 79, 78, 79, 79, 79, 78, 78, 78, 78, 78, 79, 79, 79, 79, 78, 78, 78, 78, 79, 79, 79, 79, 78, 78, 78, 79, 79, 78, 79, 78, 78, 79, 79, 78, 78, 79, 79, 78, 79, 78, 78, 79, 79]</msg>
<status status="PASS" starttime="20201022 13:53:31.358" endtime="20201022 13:53:31.359"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.352" endtime="20201022 13:53:31.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.366" endtime="20201022 13:53:31.651"></status>
</kw>
<msg timestamp="20201022 13:53:31.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02867675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028745986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:31.364" endtime="20201022 13:53:31.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02867675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028745986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:31.656" endtime="20201022 13:53:31.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.664" endtime="20201022 13:53:31.666"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.362" endtime="20201022 13:53:31.666"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.360" endtime="20201022 13:53:31.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:31.671" level="INFO">${RESULT} = [{'diff': 6.92360000000003e-05}, {'diff': 6.997199999999801e-05}, {'diff': 6.95970000000011e-05}, {'diff': 6.99169999999992e-05}, {'diff': 7.02910000000001e-05}, {'diff': 6.987500000000049e-05}, {'dif...</msg>
<status status="PASS" starttime="20201022 13:53:31.668" endtime="20201022 13:53:31.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:31.675" level="INFO">${ACCURACY} = {'diff': [6.92360000000003e-05, 6.997199999999801e-05, 6.95970000000011e-05, 6.99169999999992e-05, 7.02910000000001e-05, 6.987500000000049e-05, 7.00970000000016e-05, 7.016699999999945e-05, 7.037500000...</msg>
<status status="PASS" starttime="20201022 13:53:31.672" endtime="20201022 13:53:31.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.680" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201022 13:53:31.678" endtime="20201022 13:53:31.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.683" level="INFO">VALUE: [6.92360000000003e-05, 6.997199999999801e-05, 6.95970000000011e-05, 6.99169999999992e-05, 7.02910000000001e-05, 6.987500000000049e-05, 7.00970000000016e-05, 7.016699999999945e-05, 7.037500000000099e-05, 6.972199999999776e-05, 6.947300000000045e-05, 6.995899999999791e-05, 7.02910000000001e-05, 6.961100000000067e-05, 6.962500000000024e-05, 6.95970000000011e-05, 7.008299999999856e-05, 6.940199999999966e-05, 6.94169999999987e-05, 7.019500000000206e-05, 7.016599999999998e-05, 6.947199999999404e-05, 6.945800000000141e-05, 6.97360000000008e-05, 7.016699999999598e-05, 7.018099999999555e-05, 7.008299999999856e-05, 6.997200000000148e-05, 7.015299999999641e-05, 6.959700000000457e-05, 7.02910000000001e-05, 6.997200000000148e-05, 6.94309999999948e-05, 6.965300000000285e-05, 6.973700000000027e-05, 7.02910000000001e-05, 7.037500000000446e-05, 6.991700000000267e-05, 6.948600000000055e-05, 7.027800000000001e-05, 6.980599999999865e-05, 7.02360000000013e-05, 7.000000000000062e-05, 6.998600000000105e-05, 7.022199999999479e-05, 6.986100000000439e-05, 6.948600000000055e-05, 7.016699999999598e-05, 6.975000000000037e-05, 6.988899999999659e-05]</msg>
<status status="PASS" starttime="20201022 13:53:31.681" endtime="20201022 13:53:31.683"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.676" endtime="20201022 13:53:31.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:31.687" endtime="20201022 13:53:31.707"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.686" endtime="20201022 13:53:31.707"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.685" endtime="20201022 13:53:31.708"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.207" endtime="20201022 13:53:31.708"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.206" endtime="20201022 13:53:31.708"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.717" endtime="20201022 13:53:31.842"></status>
</kw>
<msg timestamp="20201022 13:53:31.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'data': [{'dut-result': '81'}, {'dut-result': '79'}, {'dut-result': '79'}, {'dut-result': '79'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:31.715" endtime="20201022 13:53:31.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'data': [{'dut-result': '81'}, {'dut-result': '79'}, {'dut-result': '79'}, {'dut-result': '79'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:31.844" endtime="20201022 13:53:31.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.847" endtime="20201022 13:53:31.849"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.713" endtime="20201022 13:53:31.850"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.711" endtime="20201022 13:53:31.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:31.854" level="INFO">${RESULT} = {'dut-result': [81, 79, 79, 79, 80, 79, 80, 80, 79, 80, 79, 79, 80, 80, 79, 79, 79, 80, 79, 80, 80, 79, 80, 79, 80, 79, 79, 79, 80, 79, 79, 80, 79, 79, 79, 80, 79, 79, 79, 80, 80, 80, 79, 80, 79, 80, ...</msg>
<status status="PASS" starttime="20201022 13:53:31.851" endtime="20201022 13:53:31.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.859" level="INFO">NAME: accuracy-TIMER_SET-41-dut</msg>
<status status="PASS" starttime="20201022 13:53:31.858" endtime="20201022 13:53:31.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:31.861" level="INFO">VALUE: [81, 79, 79, 79, 80, 79, 80, 80, 79, 80, 79, 79, 80, 80, 79, 79, 79, 80, 79, 80, 80, 79, 80, 79, 80, 79, 79, 79, 80, 79, 79, 80, 79, 79, 79, 80, 79, 79, 79, 80, 80, 80, 79, 80, 79, 80, 80, 80, 80, 79]</msg>
<status status="PASS" starttime="20201022 13:53:31.860" endtime="20201022 13:53:31.861"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.855" endtime="20201022 13:53:31.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:31.869" endtime="20201022 13:53:32.155"></status>
</kw>
<msg timestamp="20201022 13:53:32.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028957125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029027792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:31.868" endtime="20201022 13:53:32.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028957125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029027792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:32.160" endtime="20201022 13:53:32.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.168" endtime="20201022 13:53:32.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.865" endtime="20201022 13:53:32.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.862" endtime="20201022 13:53:32.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:32.174" level="INFO">${RESULT} = [{'diff': 7.066699999999995e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.134700000000285e-05}, {'diff': 7.061100000000167e-05}, {'diff': 7.072200000000223e-05}, {'diff': 7.086099999999845e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:32.171" endtime="20201022 13:53:32.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:32.179" level="INFO">${ACCURACY} = {'diff': [7.066699999999995e-05, 7.068099999999952e-05, 7.134700000000285e-05, 7.061100000000167e-05, 7.072200000000223e-05, 7.086099999999845e-05, 7.066699999999995e-05, 7.094399999999987e-05, 7.1263...</msg>
<status status="PASS" starttime="20201022 13:53:32.175" endtime="20201022 13:53:32.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.183" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201022 13:53:32.182" endtime="20201022 13:53:32.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.186" level="INFO">VALUE: [7.066699999999995e-05, 7.068099999999952e-05, 7.134700000000285e-05, 7.061100000000167e-05, 7.072200000000223e-05, 7.086099999999845e-05, 7.066699999999995e-05, 7.094399999999987e-05, 7.126399999999797e-05, 7.075000000000137e-05, 7.065300000000038e-05, 7.11109999999987e-05, 7.129200000000058e-05, 7.041600000000023e-05, 7.097199999999901e-05, 7.077800000000051e-05, 7.079099999999713e-05, 7.083299999999931e-05, 7.115300000000088e-05, 7.04309999999958e-05, 7.090299999999716e-05, 7.102700000000128e-05, 7.041700000000317e-05, 7.059699999999863e-05, 7.065300000000385e-05, 7.084699999999888e-05, 7.10830000000065e-05, 7.070899999999519e-05, 7.054199999999983e-05, 7.052800000000026e-05, 7.102800000000076e-05, 7.055499999999992e-05, 7.120800000000316e-05, 7.072199999999529e-05, 7.097200000000248e-05, 7.055499999999992e-05, 7.126300000000196e-05, 7.108299999999956e-05, 7.065299999999691e-05, 7.095799999999597e-05, 7.130600000000015e-05, 7.097199999999554e-05, 7.087500000000496e-05, 7.055499999999992e-05, 7.067999999999658e-05, 7.091700000000367e-05, 7.043000000000327e-05, 7.033299999999881e-05, 7.083300000000625e-05, 7.095799999999597e-05]</msg>
<status status="PASS" starttime="20201022 13:53:32.184" endtime="20201022 13:53:32.186"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.179" endtime="20201022 13:53:32.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:32.190" endtime="20201022 13:53:32.210"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.189" endtime="20201022 13:53:32.211"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.187" endtime="20201022 13:53:32.211"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.709" endtime="20201022 13:53:32.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:31.708" endtime="20201022 13:53:32.212"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.221" endtime="20201022 13:53:32.346"></status>
</kw>
<msg timestamp="20201022 13:53:32.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'data': [{'dut-result': '82'}, {'dut-result': '80'}, {'dut-result': '80'}, {'dut-result': '80'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:32.219" endtime="20201022 13:53:32.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'data': [{'dut-result': '82'}, {'dut-result': '80'}, {'dut-result': '80'}, {'dut-result': '80'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:32.348" endtime="20201022 13:53:32.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.351" endtime="20201022 13:53:32.353"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.216" endtime="20201022 13:53:32.353"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.214" endtime="20201022 13:53:32.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:32.358" level="INFO">${RESULT} = {'dut-result': [82, 80, 80, 80, 81, 81, 80, 81, 81, 80, 80, 81, 80, 80, 80, 81, 81, 81, 80, 81, 81, 81, 80, 80, 81, 80, 81, 80, 80, 80, 81, 81, 81, 80, 81, 80, 80, 80, 80, 81, 80, 81, 81, 80, 81, 81, ...</msg>
<status status="PASS" starttime="20201022 13:53:32.355" endtime="20201022 13:53:32.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.362" level="INFO">NAME: accuracy-TIMER_SET-42-dut</msg>
<status status="PASS" starttime="20201022 13:53:32.361" endtime="20201022 13:53:32.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.364" level="INFO">VALUE: [82, 80, 80, 80, 81, 81, 80, 81, 81, 80, 80, 81, 80, 80, 80, 81, 81, 81, 80, 81, 81, 81, 80, 80, 81, 80, 81, 80, 80, 80, 81, 81, 81, 80, 81, 80, 80, 80, 80, 81, 80, 81, 81, 80, 81, 81, 80, 81, 81, 81]</msg>
<status status="PASS" starttime="20201022 13:53:32.363" endtime="20201022 13:53:32.365"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.359" endtime="20201022 13:53:32.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.373" endtime="20201022 13:53:32.660"></status>
</kw>
<msg timestamp="20201022 13:53:32.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030217597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030289028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:32.371" endtime="20201022 13:53:32.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030217597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030289028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:32.664" endtime="20201022 13:53:32.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.672" endtime="20201022 13:53:32.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.368" endtime="20201022 13:53:32.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.366" endtime="20201022 13:53:32.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:32.679" level="INFO">${RESULT} = [{'diff': 7.143100000000027e-05}, {'diff': 7.223599999999983e-05}, {'diff': 7.152699999999831e-05}, {'diff': 7.229200000000158e-05}, {'diff': 7.166699999999748e-05}, {'diff': 7.230599999999768e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:32.676" endtime="20201022 13:53:32.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:32.683" level="INFO">${ACCURACY} = {'diff': [7.143100000000027e-05, 7.223599999999983e-05, 7.152699999999831e-05, 7.229200000000158e-05, 7.166699999999748e-05, 7.230599999999768e-05, 7.205499999999795e-05, 7.159699999999963e-05, 7.1402...</msg>
<status status="PASS" starttime="20201022 13:53:32.680" endtime="20201022 13:53:32.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.687" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201022 13:53:32.686" endtime="20201022 13:53:32.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.690" level="INFO">VALUE: [7.143100000000027e-05, 7.223599999999983e-05, 7.152699999999831e-05, 7.229200000000158e-05, 7.166699999999748e-05, 7.230599999999768e-05, 7.205499999999795e-05, 7.159699999999963e-05, 7.140200000000513e-05, 7.15690000000005e-05, 7.176400000000194e-05, 7.179199999999414e-05, 7.201400000000219e-05, 7.21109999999997e-05, 7.138900000000503e-05, 7.213899999999884e-05, 7.193100000000424e-05, 7.215300000000535e-05, 7.191700000000467e-05, 7.173700000000227e-05, 7.159799999999911e-05, 7.144499999999637e-05, 7.145899999999594e-05, 7.148600000000255e-05, 7.179200000000108e-05, 7.233300000000081e-05, 7.195800000000391e-05, 7.174999999999543e-05, 7.169399999999715e-05, 7.234700000000038e-05, 7.177800000000151e-05, 7.175000000000237e-05, 7.165300000000485e-05, 7.151399999999475e-05, 7.219500000000406e-05, 7.215299999999841e-05, 7.172299999999576e-05, 7.184699999999988e-05, 7.170799999999672e-05, 7.144400000000384e-05, 7.187499999999902e-05, 7.209799999999961e-05, 7.206899999999405e-05, 7.149999999999518e-05, 7.147300000000245e-05, 7.170800000000366e-05, 7.226400000000244e-05, 7.156999999999997e-05, 7.197199999999654e-05, 7.223699999999583e-05]</msg>
<status status="PASS" starttime="20201022 13:53:32.688" endtime="20201022 13:53:32.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.684" endtime="20201022 13:53:32.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:32.695" endtime="20201022 13:53:32.714"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.693" endtime="20201022 13:53:32.715"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.692" endtime="20201022 13:53:32.715"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.213" endtime="20201022 13:53:32.716"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.212" endtime="20201022 13:53:32.716"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.727" endtime="20201022 13:53:32.852"></status>
</kw>
<msg timestamp="20201022 13:53:32.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'data': [{'dut-result': '83'}, {'dut-result': '81'}, {'dut-result': '82'}, {'dut-result': '81'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:32.725" endtime="20201022 13:53:32.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'data': [{'dut-result': '83'}, {'dut-result': '81'}, {'dut-result': '82'}, {'dut-result': '81'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:32.854" endtime="20201022 13:53:32.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.857" endtime="20201022 13:53:32.859"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.722" endtime="20201022 13:53:32.859"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.718" endtime="20201022 13:53:32.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:32.864" level="INFO">${RESULT} = {'dut-result': [83, 81, 82, 81, 82, 82, 82, 82, 81, 82, 82, 81, 81, 82, 82, 82, 81, 81, 81, 82, 82, 81, 82, 81, 81, 81, 82, 81, 82, 81, 81, 81, 82, 81, 82, 81, 81, 82, 81, 82, 81, 81, 82, 82, 82, 81, ...</msg>
<status status="PASS" starttime="20201022 13:53:32.861" endtime="20201022 13:53:32.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.868" level="INFO">NAME: accuracy-TIMER_SET-43-dut</msg>
<status status="PASS" starttime="20201022 13:53:32.867" endtime="20201022 13:53:32.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:32.870" level="INFO">VALUE: [83, 81, 82, 81, 82, 82, 82, 82, 81, 82, 82, 81, 81, 82, 82, 82, 81, 81, 81, 82, 82, 81, 82, 81, 81, 81, 82, 81, 82, 81, 81, 81, 82, 81, 82, 81, 81, 82, 81, 82, 81, 81, 82, 82, 82, 81, 81, 82, 82, 82]</msg>
<status status="PASS" starttime="20201022 13:53:32.869" endtime="20201022 13:53:32.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.865" endtime="20201022 13:53:32.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:32.878" endtime="20201022 13:53:33.164"></status>
</kw>
<msg timestamp="20201022 13:53:33.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031346931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:32.876" endtime="20201022 13:53:33.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031274583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031346931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:33.168" endtime="20201022 13:53:33.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.176" endtime="20201022 13:53:33.179"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.874" endtime="20201022 13:53:33.179"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.872" endtime="20201022 13:53:33.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:33.184" level="INFO">${RESULT} = [{'diff': 7.234799999999986e-05}, {'diff': 7.237500000000646e-05}, {'diff': 7.330499999999573e-05}, {'diff': 7.279200000000208e-05}, {'diff': 7.277799999999557e-05}, {'diff': 7.277800000000251e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:33.180" endtime="20201022 13:53:33.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:33.192" level="INFO">${ACCURACY} = {'diff': [7.234799999999986e-05, 7.237500000000646e-05, 7.330499999999573e-05, 7.279200000000208e-05, 7.277799999999557e-05, 7.277800000000251e-05, 7.295799999999797e-05, 7.319399999999865e-05, 7.3013...</msg>
<status status="PASS" starttime="20201022 13:53:33.189" endtime="20201022 13:53:33.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.197" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201022 13:53:33.196" endtime="20201022 13:53:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.199" level="INFO">VALUE: [7.234799999999986e-05, 7.237500000000646e-05, 7.330499999999573e-05, 7.279200000000208e-05, 7.277799999999557e-05, 7.277800000000251e-05, 7.295799999999797e-05, 7.319399999999865e-05, 7.301399999999625e-05, 7.336100000000095e-05, 7.286100000000045e-05, 7.254200000000183e-05, 7.308300000000156e-05, 7.291700000000567e-05, 7.308400000000104e-05, 7.254200000000183e-05, 7.245799999999747e-05, 7.272199999999729e-05, 7.331999999999478e-05, 7.320899999999769e-05, 7.304100000000285e-05, 7.259700000000063e-05, 7.273599999999686e-05, 7.297199999999754e-05, 7.277800000000251e-05, 7.295899999999744e-05, 7.333300000000181e-05, 7.294499999999787e-05, 7.300000000000362e-05, 7.247200000000398e-05, 7.316700000000592e-05, 7.319499999999812e-05, 7.25969999999937e-05, 7.265299999999891e-05, 7.259700000000063e-05, 7.277700000000303e-05, 7.322200000000473e-05, 7.315199999999994e-05, 7.27910000000026e-05, 7.248699999999608e-05, 7.299999999999668e-05, 7.287500000000002e-05, 7.297300000000395e-05, 7.306999999999453e-05, 7.288899999999959e-05, 7.276400000000294e-05, 7.265299999999891e-05, 7.277799999999557e-05, 7.309800000000061e-05, 7.240199999999919e-05]</msg>
<status status="PASS" starttime="20201022 13:53:33.198" endtime="20201022 13:53:33.200"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.193" endtime="20201022 13:53:33.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:33.204" endtime="20201022 13:53:33.223"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.202" endtime="20201022 13:53:33.224"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.201" endtime="20201022 13:53:33.224"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.717" endtime="20201022 13:53:33.225"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:32.716" endtime="20201022 13:53:33.225"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.233" endtime="20201022 13:53:33.360"></status>
</kw>
<msg timestamp="20201022 13:53:33.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'data': [{'dut-result': '84'}, {'dut-result': '82'}, {'dut-result': '82'}, {'dut-result': '82'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:33.232" endtime="20201022 13:53:33.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'data': [{'dut-result': '84'}, {'dut-result': '82'}, {'dut-result': '82'}, {'dut-result': '82'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:33.362" endtime="20201022 13:53:33.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.365" endtime="20201022 13:53:33.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.229" endtime="20201022 13:53:33.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.227" endtime="20201022 13:53:33.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:33.372" level="INFO">${RESULT} = {'dut-result': [84, 82, 82, 82, 83, 82, 83, 82, 82, 83, 82, 83, 83, 82, 82, 82, 82, 82, 83, 83, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 82, 83, 82, 82, 82, 82, 82, 83, 82, 82, 82, 82, 83, 82, 83, ...</msg>
<status status="PASS" starttime="20201022 13:53:33.369" endtime="20201022 13:53:33.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.376" level="INFO">NAME: accuracy-TIMER_SET-44-dut</msg>
<status status="PASS" starttime="20201022 13:53:33.375" endtime="20201022 13:53:33.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.378" level="INFO">VALUE: [84, 82, 82, 82, 83, 82, 83, 82, 82, 83, 82, 83, 83, 82, 82, 82, 82, 82, 83, 83, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 82, 83, 82, 82, 82, 82, 82, 83, 82, 82, 82, 82, 83, 82, 83, 82, 83, 82, 82]</msg>
<status status="PASS" starttime="20201022 13:53:33.377" endtime="20201022 13:53:33.379"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.373" endtime="20201022 13:53:33.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.386" endtime="20201022 13:53:33.673"></status>
</kw>
<msg timestamp="20201022 13:53:33.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029785389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029859139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:33.385" endtime="20201022 13:53:33.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029785389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029859139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:33.677" endtime="20201022 13:53:33.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.685" endtime="20201022 13:53:33.687"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.382" endtime="20201022 13:53:33.687"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.380" endtime="20201022 13:53:33.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:33.692" level="INFO">${RESULT} = [{'diff': 7.37500000000009e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.363899999999687e-05}, {'diff': 7.338900000000009e-05}, {'diff': 7.436099999999848e-05}, {'diff': 7.426299999999803e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:33.688" endtime="20201022 13:53:33.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:33.697" level="INFO">${ACCURACY} = {'diff': [7.37500000000009e-05, 7.388900000000059e-05, 7.363899999999687e-05, 7.338900000000009e-05, 7.436099999999848e-05, 7.426299999999803e-05, 7.429200000000011e-05, 7.391699999999973e-05, 7.43329...</msg>
<status status="PASS" starttime="20201022 13:53:33.693" endtime="20201022 13:53:33.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.701" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201022 13:53:33.700" endtime="20201022 13:53:33.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.704" level="INFO">VALUE: [7.37500000000009e-05, 7.388900000000059e-05, 7.363899999999687e-05, 7.338900000000009e-05, 7.436099999999848e-05, 7.426299999999803e-05, 7.429200000000011e-05, 7.391699999999973e-05, 7.433299999999934e-05, 7.407000000000247e-05, 7.376400000000047e-05, 7.415200000000441e-05, 7.351400000000369e-05, 7.395799999999897e-05, 7.412500000000127e-05, 7.344500000000531e-05, 7.420899999999869e-05, 7.390300000000016e-05, 7.377799999999657e-05, 7.390300000000016e-05, 7.391699999999973e-05, 7.408300000000256e-05, 7.413900000000084e-05, 7.408300000000256e-05, 7.413900000000084e-05, 7.338900000000009e-05, 7.348599999999761e-05, 7.420799999999922e-05, 7.388900000000059e-05, 7.337500000000052e-05, 7.340299999999966e-05, 7.409700000000213e-05, 7.434800000000186e-05, 7.370899999999819e-05, 7.38189999999958e-05, 7.398599999999811e-05, 7.42639999999975e-05, 7.434699999999544e-05, 7.42769999999976e-05, 7.420900000000563e-05, 7.384700000000188e-05, 7.341699999999923e-05, 7.365200000000044e-05, 7.40969999999952e-05, 7.363900000000034e-05, 7.363900000000034e-05, 7.415300000000041e-05, 7.382000000000222e-05, 7.392999999999983e-05, 7.401399999999725e-05]</msg>
<status status="PASS" starttime="20201022 13:53:33.702" endtime="20201022 13:53:33.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.697" endtime="20201022 13:53:33.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:33.708" endtime="20201022 13:53:33.727"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.707" endtime="20201022 13:53:33.728"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.705" endtime="20201022 13:53:33.728"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.226" endtime="20201022 13:53:33.729"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.225" endtime="20201022 13:53:33.729"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.737" endtime="20201022 13:53:33.863"></status>
</kw>
<msg timestamp="20201022 13:53:33.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'data': [{'dut-result': '85'}, {'dut-result': '84'}, {'dut-result': '83'}, {'dut-result': '84'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:33.736" endtime="20201022 13:53:33.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'data': [{'dut-result': '85'}, {'dut-result': '84'}, {'dut-result': '83'}, {'dut-result': '84'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:33.865" endtime="20201022 13:53:33.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.868" endtime="20201022 13:53:33.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.733" endtime="20201022 13:53:33.872"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.731" endtime="20201022 13:53:33.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:33.876" level="INFO">${RESULT} = {'dut-result': [85, 84, 83, 84, 84, 83, 83, 84, 83, 83, 84, 84, 84, 83, 84, 83, 83, 83, 83, 83, 84, 84, 83, 83, 83, 83, 83, 84, 84, 84, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 83, 83, 83, 84, 83, ...</msg>
<status status="PASS" starttime="20201022 13:53:33.873" endtime="20201022 13:53:33.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.881" level="INFO">NAME: accuracy-TIMER_SET-45-dut</msg>
<status status="PASS" starttime="20201022 13:53:33.879" endtime="20201022 13:53:33.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:33.883" level="INFO">VALUE: [85, 84, 83, 84, 84, 83, 83, 84, 83, 83, 84, 84, 84, 83, 84, 83, 83, 83, 83, 83, 84, 84, 83, 83, 83, 83, 83, 84, 84, 84, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 83, 83, 83, 84, 83, 84, 83, 83, 83]</msg>
<status status="PASS" starttime="20201022 13:53:33.882" endtime="20201022 13:53:33.883"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.877" endtime="20201022 13:53:33.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:33.890" endtime="20201022 13:53:34.176"></status>
</kw>
<msg timestamp="20201022 13:53:34.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029037042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029111819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:33.888" endtime="20201022 13:53:34.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029037042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029111819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:34.180" endtime="20201022 13:53:34.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.188" endtime="20201022 13:53:34.190"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.886" endtime="20201022 13:53:34.191"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.884" endtime="20201022 13:53:34.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:34.195" level="INFO">${RESULT} = [{'diff': 7.477700000000156e-05}, {'diff': 7.506899999999705e-05}, {'diff': 7.495899999999944e-05}, {'diff': 7.455599999999993e-05}, {'diff': 7.529099999999816e-05}, {'diff': 7.49029999999977e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:34.192" endtime="20201022 13:53:34.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:34.200" level="INFO">${ACCURACY} = {'diff': [7.477700000000156e-05, 7.506899999999705e-05, 7.495899999999944e-05, 7.455599999999993e-05, 7.529099999999816e-05, 7.49029999999977e-05, 7.476299999999853e-05, 7.515200000000194e-05, 7.45139...</msg>
<status status="PASS" starttime="20201022 13:53:34.196" endtime="20201022 13:53:34.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.204" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201022 13:53:34.203" endtime="20201022 13:53:34.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.207" level="INFO">VALUE: [7.477700000000156e-05, 7.506899999999705e-05, 7.495899999999944e-05, 7.455599999999993e-05, 7.529099999999816e-05, 7.49029999999977e-05, 7.476299999999853e-05, 7.515200000000194e-05, 7.451399999999775e-05, 7.50830000000001e-05, 7.461099999999873e-05, 7.445800000000294e-05, 7.487499999999855e-05, 7.515299999999794e-05, 7.465300000000091e-05, 7.501399999999825e-05, 7.49440000000004e-05, 7.502799999999782e-05, 7.47360000000058e-05, 7.445799999999947e-05, 7.438900000000109e-05, 7.461099999999526e-05, 7.497299999999901e-05, 7.490300000000116e-05, 7.50969999999962e-05, 7.449999999999818e-05, 7.488900000000159e-05, 7.50560000000039e-05, 7.458299999999612e-05, 7.462500000000177e-05, 7.452799999999732e-05, 7.509700000000313e-05, 7.520800000000022e-05, 7.508299999999662e-05, 7.458299999999612e-05, 7.463900000000134e-05, 7.484700000000288e-05, 7.505499999999748e-05, 7.483299999999637e-05, 7.474999999999843e-05, 7.508300000000356e-05, 7.515200000000194e-05, 7.519500000000012e-05, 7.508299999999662e-05, 7.522199999999979e-05, 7.495900000000638e-05, 7.440300000000066e-05, 7.515300000000141e-05, 7.499999999999868e-05, 7.520800000000022e-05]</msg>
<status status="PASS" starttime="20201022 13:53:34.205" endtime="20201022 13:53:34.207"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.201" endtime="20201022 13:53:34.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:34.211" endtime="20201022 13:53:34.231"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.210" endtime="20201022 13:53:34.232"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.209" endtime="20201022 13:53:34.232"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.730" endtime="20201022 13:53:34.233"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:33.729" endtime="20201022 13:53:34.233"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.241" endtime="20201022 13:53:34.367"></status>
</kw>
<msg timestamp="20201022 13:53:34.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'data': [{'dut-result': '86'}, {'dut-result': '84'}, {'dut-result': '85'}, {'dut-result': '85'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:34.240" endtime="20201022 13:53:34.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'data': [{'dut-result': '86'}, {'dut-result': '84'}, {'dut-result': '85'}, {'dut-result': '85'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:34.369" endtime="20201022 13:53:34.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.372" endtime="20201022 13:53:34.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.237" endtime="20201022 13:53:34.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.235" endtime="20201022 13:53:34.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:34.380" level="INFO">${RESULT} = {'dut-result': [86, 84, 85, 85, 84, 84, 84, 84, 84, 85, 84, 85, 84, 84, 84, 84, 85, 85, 84, 85, 84, 85, 85, 84, 84, 85, 85, 85, 85, 84, 84, 84, 84, 84, 85, 84, 84, 84, 85, 85, 84, 84, 85, 84, 84, 85, ...</msg>
<status status="PASS" starttime="20201022 13:53:34.376" endtime="20201022 13:53:34.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.384" level="INFO">NAME: accuracy-TIMER_SET-46-dut</msg>
<status status="PASS" starttime="20201022 13:53:34.383" endtime="20201022 13:53:34.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.386" level="INFO">VALUE: [86, 84, 85, 85, 84, 84, 84, 84, 84, 85, 84, 85, 84, 84, 84, 84, 85, 85, 84, 85, 84, 85, 85, 84, 84, 85, 85, 85, 85, 84, 84, 84, 84, 84, 85, 84, 84, 84, 85, 85, 84, 84, 85, 84, 84, 85, 85, 84, 84, 84]</msg>
<status status="PASS" starttime="20201022 13:53:34.385" endtime="20201022 13:53:34.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.380" endtime="20201022 13:53:34.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.393" endtime="20201022 13:53:34.679"></status>
</kw>
<msg timestamp="20201022 13:53:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029120458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029196292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:34.392" endtime="20201022 13:53:34.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029120458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029196292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:34.683" endtime="20201022 13:53:34.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.691" endtime="20201022 13:53:34.693"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.389" endtime="20201022 13:53:34.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.388" endtime="20201022 13:53:34.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:34.698" level="INFO">${RESULT} = [{'diff': 7.583400000000032e-05}, {'diff': 7.59029999999987e-05}, {'diff': 7.576400000000247e-05}, {'diff': 7.555600000000093e-05}, {'diff': 7.605600000000143e-05}, {'diff': 7.543000000000133e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:34.695" endtime="20201022 13:53:34.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:34.703" level="INFO">${ACCURACY} = {'diff': [7.583400000000032e-05, 7.59029999999987e-05, 7.576400000000247e-05, 7.555600000000093e-05, 7.605600000000143e-05, 7.543000000000133e-05, 7.62639999999995e-05, 7.641599999999929e-05, 7.629199...</msg>
<status status="PASS" starttime="20201022 13:53:34.699" endtime="20201022 13:53:34.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.708" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201022 13:53:34.707" endtime="20201022 13:53:34.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.710" level="INFO">VALUE: [7.583400000000032e-05, 7.59029999999987e-05, 7.576400000000247e-05, 7.555600000000093e-05, 7.605600000000143e-05, 7.543000000000133e-05, 7.62639999999995e-05, 7.641599999999929e-05, 7.629199999999864e-05, 7.586099999999998e-05, 7.54310000000008e-05, 7.549999999999918e-05, 7.615199999999947e-05, 7.599999999999968e-05, 7.570900000000019e-05, 7.545899999999994e-05, 7.6070000000001e-05, 7.547299999999951e-05, 7.608299999999762e-05, 7.551399999999875e-05, 7.618100000000155e-05, 7.588800000000312e-05, 7.569400000000115e-05, 7.551399999999875e-05, 7.619400000000165e-05, 7.551300000000621e-05, 7.595800000000097e-05, 7.615299999999547e-05, 7.595800000000097e-05, 7.587499999999608e-05, 7.548599999999961e-05, 7.544500000000037e-05, 7.61110000000037e-05, 7.606999999999753e-05, 7.551399999999875e-05, 7.55839999999966e-05, 7.549999999999918e-05, 7.597200000000054e-05, 7.602699999999935e-05, 7.594500000000087e-05, 7.601399999999925e-05, 7.55690000000045e-05, 7.587499999999608e-05, 7.552699999999885e-05, 7.59310000000013e-05, 7.624999999999993e-05, 7.624999999999993e-05, 7.626400000000644e-05, 7.574999999999943e-05, 7.566699999999454e-05]</msg>
<status status="PASS" starttime="20201022 13:53:34.709" endtime="20201022 13:53:34.711"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.704" endtime="20201022 13:53:34.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:34.715" endtime="20201022 13:53:34.734"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.713" endtime="20201022 13:53:34.735"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.712" endtime="20201022 13:53:34.735"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.234" endtime="20201022 13:53:34.735"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.233" endtime="20201022 13:53:34.736"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.744" endtime="20201022 13:53:34.870"></status>
</kw>
<msg timestamp="20201022 13:53:34.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'data': [{'dut-result': '87'}, {'dut-result': '85'}, {'dut-result': '86'}, {'dut-result': '85'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:34.743" endtime="20201022 13:53:34.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'data': [{'dut-result': '87'}, {'dut-result': '85'}, {'dut-result': '86'}, {'dut-result': '85'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:34.872" endtime="20201022 13:53:34.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.875" endtime="20201022 13:53:34.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.740" endtime="20201022 13:53:34.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.738" endtime="20201022 13:53:34.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:34.883" level="INFO">${RESULT} = {'dut-result': [87, 85, 86, 85, 86, 86, 85, 85, 85, 86, 85, 85, 85, 85, 85, 86, 85, 86, 85, 85, 85, 86, 86, 85, 86, 85, 86, 86, 85, 85, 86, 85, 85, 85, 85, 86, 85, 86, 85, 85, 86, 85, 85, 86, 86, 86, ...</msg>
<status status="PASS" starttime="20201022 13:53:34.878" endtime="20201022 13:53:34.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.887" level="INFO">NAME: accuracy-TIMER_SET-47-dut</msg>
<status status="PASS" starttime="20201022 13:53:34.886" endtime="20201022 13:53:34.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:34.889" level="INFO">VALUE: [87, 85, 86, 85, 86, 86, 85, 85, 85, 86, 85, 85, 85, 85, 85, 86, 85, 86, 85, 85, 85, 86, 86, 85, 86, 85, 86, 86, 85, 85, 86, 85, 85, 85, 85, 86, 85, 86, 85, 85, 86, 85, 85, 86, 86, 86, 85, 85, 85, 85]</msg>
<status status="PASS" starttime="20201022 13:53:34.888" endtime="20201022 13:53:34.890"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.884" endtime="20201022 13:53:34.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:34.897" endtime="20201022 13:53:35.182"></status>
</kw>
<msg timestamp="20201022 13:53:35.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029205167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029281611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:34.895" endtime="20201022 13:53:35.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029205167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029281611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:35.187" endtime="20201022 13:53:35.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.195" endtime="20201022 13:53:35.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.892" endtime="20201022 13:53:35.197"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.891" endtime="20201022 13:53:35.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:35.202" level="INFO">${RESULT} = [{'diff': 7.644399999999843e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.650000000000018e-05}, {'diff': 7.683300000000184e-05}, {'diff': 7.708400000000157e-05}, {'diff': 7.683400000000132e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:35.199" endtime="20201022 13:53:35.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:35.207" level="INFO">${ACCURACY} = {'diff': [7.644399999999843e-05, 7.701400000000025e-05, 7.650000000000018e-05, 7.683300000000184e-05, 7.708400000000157e-05, 7.683400000000132e-05, 7.665299999999944e-05, 7.701400000000025e-05, 7.6457...</msg>
<status status="PASS" starttime="20201022 13:53:35.203" endtime="20201022 13:53:35.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.211" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201022 13:53:35.210" endtime="20201022 13:53:35.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.214" level="INFO">VALUE: [7.644399999999843e-05, 7.701400000000025e-05, 7.650000000000018e-05, 7.683300000000184e-05, 7.708400000000157e-05, 7.683400000000132e-05, 7.665299999999944e-05, 7.701400000000025e-05, 7.6457999999998e-05, 7.688900000000012e-05, 7.65700000000015e-05, 7.638899999999962e-05, 7.64310000000018e-05, 7.702799999999982e-05, 7.711100000000123e-05, 7.652799999999932e-05, 7.733299999999887e-05, 7.648600000000061e-05, 7.72640000000005e-05, 7.70969999999982e-05, 7.654199999999889e-05, 7.652799999999932e-05, 7.677799999999957e-05, 7.645900000000094e-05, 7.706999999999853e-05, 7.722300000000126e-05, 7.645800000000147e-05, 7.687500000000402e-05, 7.686099999999751e-05, 7.702799999999982e-05, 7.697300000000101e-05, 7.6764e-05, 7.684699999999794e-05, 7.718100000000255e-05, 7.6764e-05, 7.693099999999536e-05, 7.6458999999994e-05, 7.694500000000187e-05, 7.69169999999958e-05, 7.684699999999794e-05, 7.656899999999855e-05, 7.70839999999981e-05, 7.733399999999835e-05, 7.704200000000633e-05, 7.706999999999853e-05, 7.673600000000086e-05, 7.662500000000377e-05, 7.719500000000212e-05, 7.644499999999443e-05, 7.717999999999614e-05]</msg>
<status status="PASS" starttime="20201022 13:53:35.212" endtime="20201022 13:53:35.214"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.208" endtime="20201022 13:53:35.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:35.218" endtime="20201022 13:53:35.238"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.217" endtime="20201022 13:53:35.238"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.216" endtime="20201022 13:53:35.239"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.736" endtime="20201022 13:53:35.239"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:34.736" endtime="20201022 13:53:35.239"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.248" endtime="20201022 13:53:35.374"></status>
</kw>
<msg timestamp="20201022 13:53:35.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'data': [{'dut-result': '88'}, {'dut-result': '87'}, {'dut-result': '86'}, {'dut-result': '87'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:35.246" endtime="20201022 13:53:35.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'data': [{'dut-result': '88'}, {'dut-result': '87'}, {'dut-result': '86'}, {'dut-result': '87'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:35.376" endtime="20201022 13:53:35.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.379" endtime="20201022 13:53:35.380"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.244" endtime="20201022 13:53:35.381"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.242" endtime="20201022 13:53:35.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:35.387" level="INFO">${RESULT} = {'dut-result': [88, 87, 86, 87, 87, 86, 87, 87, 86, 87, 86, 86, 86, 86, 86, 86, 87, 87, 86, 87, 86, 87, 86, 87, 87, 87, 87, 87, 87, 86, 87, 87, 86, 86, 87, 87, 86, 86, 87, 86, 87, 86, 87, 87, 86, 86, ...</msg>
<status status="PASS" starttime="20201022 13:53:35.382" endtime="20201022 13:53:35.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.391" level="INFO">NAME: accuracy-TIMER_SET-48-dut</msg>
<status status="PASS" starttime="20201022 13:53:35.390" endtime="20201022 13:53:35.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.393" level="INFO">VALUE: [88, 87, 86, 87, 87, 86, 87, 87, 86, 87, 86, 86, 86, 86, 86, 86, 87, 87, 86, 87, 86, 87, 86, 87, 87, 87, 87, 87, 87, 86, 87, 87, 86, 86, 87, 87, 86, 86, 87, 86, 87, 86, 87, 87, 86, 86, 87, 86, 86, 86]</msg>
<status status="PASS" starttime="20201022 13:53:35.392" endtime="20201022 13:53:35.394"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.387" endtime="20201022 13:53:35.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.401" endtime="20201022 13:53:35.687"></status>
</kw>
<msg timestamp="20201022 13:53:35.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029227667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:35.399" endtime="20201022 13:53:35.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029150389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029227667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:35.691" endtime="20201022 13:53:35.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.699" endtime="20201022 13:53:35.701"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.396" endtime="20201022 13:53:35.702"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.395" endtime="20201022 13:53:35.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:35.706" level="INFO">${RESULT} = [{'diff': 7.727800000000007e-05}, {'diff': 7.765300000000044e-05}, {'diff': 7.819500000000312e-05}, {'diff': 7.76250000000013e-05}, {'diff': 7.741699999999976e-05}, {'diff': 7.774999999999796e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:35.703" endtime="20201022 13:53:35.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:35.711" level="INFO">${ACCURACY} = {'diff': [7.727800000000007e-05, 7.765300000000044e-05, 7.819500000000312e-05, 7.76250000000013e-05, 7.741699999999976e-05, 7.774999999999796e-05, 7.79030000000007e-05, 7.811099999999876e-05, 7.798600...</msg>
<status status="PASS" starttime="20201022 13:53:35.707" endtime="20201022 13:53:35.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.715" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201022 13:53:35.714" endtime="20201022 13:53:35.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.718" level="INFO">VALUE: [7.727800000000007e-05, 7.765300000000044e-05, 7.819500000000312e-05, 7.76250000000013e-05, 7.741699999999976e-05, 7.774999999999796e-05, 7.79030000000007e-05, 7.811099999999876e-05, 7.798600000000211e-05, 7.745899999999847e-05, 7.769399999999968e-05, 7.750000000000118e-05, 7.773599999999839e-05, 7.755599999999946e-05, 7.813900000000137e-05, 7.818100000000008e-05, 7.824999999999499e-05, 7.786200000000493e-05, 7.774999999999449e-05, 7.825000000000193e-05, 7.772199999999535e-05, 7.773599999999492e-05, 7.786099999999851e-05, 7.751400000000075e-05, 7.794500000000287e-05, 7.812500000000527e-05, 7.786099999999851e-05, 7.768099999999611e-05, 7.781999999999928e-05, 7.800000000000168e-05, 7.825000000000193e-05, 7.787500000000502e-05, 7.79589999999955e-05, 7.783299999999937e-05, 7.76110000000052e-05, 7.807000000000647e-05, 7.794399999999646e-05, 7.76110000000052e-05, 7.833299999999987e-05, 7.830500000000074e-05, 7.769500000000262e-05, 7.812499999999833e-05, 7.742999999999639e-05, 7.7764000000001e-05, 7.76389999999974e-05, 7.748600000000161e-05, 7.79310000000033e-05, 7.818000000000408e-05, 7.818000000000408e-05, 7.759700000000563e-05]</msg>
<status status="PASS" starttime="20201022 13:53:35.716" endtime="20201022 13:53:35.718"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.712" endtime="20201022 13:53:35.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:35.723" endtime="20201022 13:53:35.742"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.721" endtime="20201022 13:53:35.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.720" endtime="20201022 13:53:35.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.240" endtime="20201022 13:53:35.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.240" endtime="20201022 13:53:35.743"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.753" endtime="20201022 13:53:35.879"></status>
</kw>
<msg timestamp="20201022 13:53:35.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'data': [{'dut-result': '89'}, {'dut-result': '87'}, {'dut-result': '88'}, {'dut-result': '87'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:35.751" endtime="20201022 13:53:35.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'data': [{'dut-result': '89'}, {'dut-result': '87'}, {'dut-result': '88'}, {'dut-result': '87'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:35.881" endtime="20201022 13:53:35.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.884" endtime="20201022 13:53:35.885"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.748" endtime="20201022 13:53:35.886"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.746" endtime="20201022 13:53:35.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:35.892" level="INFO">${RESULT} = {'dut-result': [89, 87, 88, 87, 87, 87, 87, 87, 88, 87, 87, 88, 88, 87, 88, 87, 87, 88, 87, 87, 88, 88, 88, 87, 88, 88, 87, 88, 88, 88, 87, 87, 88, 88, 87, 87, 87, 87, 87, 88, 87, 87, 87, 87, 87, 87, ...</msg>
<status status="PASS" starttime="20201022 13:53:35.887" endtime="20201022 13:53:35.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.897" level="INFO">NAME: accuracy-TIMER_SET-49-dut</msg>
<status status="PASS" starttime="20201022 13:53:35.896" endtime="20201022 13:53:35.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:35.899" level="INFO">VALUE: [89, 87, 88, 87, 87, 87, 87, 87, 88, 87, 87, 88, 88, 87, 88, 87, 87, 88, 87, 87, 88, 88, 88, 87, 88, 88, 87, 88, 88, 88, 87, 87, 88, 88, 87, 87, 87, 87, 87, 88, 87, 87, 87, 87, 87, 87, 88, 88, 88, 88]</msg>
<status status="PASS" starttime="20201022 13:53:35.898" endtime="20201022 13:53:35.899"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.893" endtime="20201022 13:53:35.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:35.906" endtime="20201022 13:53:36.192"></status>
</kw>
<msg timestamp="20201022 13:53:36.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029700806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029779431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:35.905" endtime="20201022 13:53:36.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029700806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029779431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:36.196" endtime="20201022 13:53:36.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.204" endtime="20201022 13:53:36.206"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.902" endtime="20201022 13:53:36.207"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.900" endtime="20201022 13:53:36.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:36.211" level="INFO">${RESULT} = [{'diff': 7.862499999999883e-05}, {'diff': 7.891700000000126e-05}, {'diff': 7.912499999999933e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.866599999999807e-05}, {'diff': 7.918000000000161e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:36.208" endtime="20201022 13:53:36.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:36.216" level="INFO">${ACCURACY} = {'diff': [7.862499999999883e-05, 7.891700000000126e-05, 7.912499999999933e-05, 7.899999999999921e-05, 7.866599999999807e-05, 7.918000000000161e-05, 7.85839999999996e-05, 7.929100000000217e-05, 7.92920...</msg>
<status status="PASS" starttime="20201022 13:53:36.212" endtime="20201022 13:53:36.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.220" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201022 13:53:36.219" endtime="20201022 13:53:36.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.223" level="INFO">VALUE: [7.862499999999883e-05, 7.891700000000126e-05, 7.912499999999933e-05, 7.899999999999921e-05, 7.866599999999807e-05, 7.918000000000161e-05, 7.85839999999996e-05, 7.929100000000217e-05, 7.929200000000164e-05, 7.884800000000289e-05, 7.919399999999771e-05, 7.838900000000162e-05, 7.883399999999985e-05, 7.873599999999592e-05, 7.870800000000372e-05, 7.873600000000286e-05, 7.840299999999772e-05, 7.902800000000182e-05, 7.89719999999966e-05, 7.887499999999908e-05, 7.861099999999926e-05, 7.84719999999961e-05, 7.893000000000483e-05, 7.872200000000329e-05, 7.929099999999523e-05, 7.89169999999978e-05, 7.899999999999574e-05, 7.89310000000043e-05, 7.894399999999746e-05, 7.852700000000185e-05, 7.837499999999858e-05, 7.911099999999976e-05, 7.918099999999761e-05, 7.88890000000056e-05, 7.867999999999764e-05, 7.88190000000008e-05, 7.8764000000002e-05, 7.843000000000433e-05, 7.92369999999959e-05, 7.886099999999951e-05, 7.877800000000157e-05, 7.875000000000243e-05, 7.880600000000071e-05, 7.905600000000096e-05, 7.895900000000344e-05, 7.916599999999857e-05, 7.906900000000106e-05, 7.904100000000192e-05, 7.91389999999989e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201022 13:53:36.222" endtime="20201022 13:53:36.224"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.217" endtime="20201022 13:53:36.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:36.228" endtime="20201022 13:53:36.247"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.227" endtime="20201022 13:53:36.248"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.225" endtime="20201022 13:53:36.248"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.744" endtime="20201022 13:53:36.249"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:35.744" endtime="20201022 13:53:36.249"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.257" endtime="20201022 13:53:36.384"></status>
</kw>
<msg timestamp="20201022 13:53:36.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'data': [{'dut-result': '90'}, {'dut-result': '89'}, {'dut-result': '88'}, {'dut-result': '88'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:36.256" endtime="20201022 13:53:36.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'data': [{'dut-result': '90'}, {'dut-result': '89'}, {'dut-result': '88'}, {'dut-result': '88'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:36.385" endtime="20201022 13:53:36.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.388" endtime="20201022 13:53:36.390"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.253" endtime="20201022 13:53:36.391"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.251" endtime="20201022 13:53:36.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:36.395" level="INFO">${RESULT} = {'dut-result': [90, 89, 88, 88, 88, 89, 89, 89, 89, 88, 89, 89, 88, 88, 89, 88, 88, 89, 88, 89, 88, 88, 88, 88, 88, 88, 88, 89, 89, 88, 88, 88, 88, 89, 88, 88, 88, 89, 88, 88, 89, 89, 89, 89, 89, 89, ...</msg>
<status status="PASS" starttime="20201022 13:53:36.392" endtime="20201022 13:53:36.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.400" level="INFO">NAME: accuracy-TIMER_SET-50-dut</msg>
<status status="PASS" starttime="20201022 13:53:36.399" endtime="20201022 13:53:36.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.403" level="INFO">VALUE: [90, 89, 88, 88, 88, 89, 89, 89, 89, 88, 89, 89, 88, 88, 89, 88, 88, 89, 88, 89, 88, 88, 88, 88, 88, 88, 88, 89, 89, 88, 88, 88, 88, 89, 88, 88, 88, 89, 88, 88, 89, 89, 89, 89, 89, 89, 88, 89, 89, 88]</msg>
<status status="PASS" starttime="20201022 13:53:36.401" endtime="20201022 13:53:36.403"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.396" endtime="20201022 13:53:36.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.410" endtime="20201022 13:53:36.695"></status>
</kw>
<msg timestamp="20201022 13:53:36.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029218556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:36.408" endtime="20201022 13:53:36.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029218556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:36.699" endtime="20201022 13:53:36.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.708" endtime="20201022 13:53:36.710"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.406" endtime="20201022 13:53:36.710"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.404" endtime="20201022 13:53:36.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:36.714" level="INFO">${RESULT} = [{'diff': 7.923599999999989e-05}, {'diff': 7.954200000000189e-05}, {'diff': 7.993099999999836e-05}, {'diff': 7.997200000000107e-05}, {'diff': 7.961100000000026e-05}, {'diff': 7.987500000000008e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:36.711" endtime="20201022 13:53:36.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:36.718" level="INFO">${ACCURACY} = {'diff': [7.923599999999989e-05, 7.954200000000189e-05, 7.993099999999836e-05, 7.997200000000107e-05, 7.961100000000026e-05, 7.987500000000008e-05, 8.025000000000046e-05, 7.982000000000128e-05, 7.9680...</msg>
<status status="PASS" starttime="20201022 13:53:36.715" endtime="20201022 13:53:36.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.724" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201022 13:53:36.722" endtime="20201022 13:53:36.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.726" level="INFO">VALUE: [7.923599999999989e-05, 7.954200000000189e-05, 7.993099999999836e-05, 7.997200000000107e-05, 7.961100000000026e-05, 7.987500000000008e-05, 8.025000000000046e-05, 7.982000000000128e-05, 7.968099999999811e-05, 7.954099999999895e-05, 8.008299999999816e-05, 8.030499999999927e-05, 8.030600000000221e-05, 7.998599999999717e-05, 7.984700000000094e-05, 7.981899999999834e-05, 8.018100000000555e-05, 7.980600000000171e-05, 7.945800000000447e-05, 8.000000000000368e-05, 8.025000000000393e-05, 8.002799999999588e-05, 7.973599999999692e-05, 8.005600000000196e-05, 7.992999999999889e-05, 7.979200000000214e-05, 7.954199999999495e-05, 8.004099999999598e-05, 7.936100000000001e-05, 7.998600000000411e-05, 7.986100000000051e-05, 8.03049999999958e-05, 7.933400000000035e-05, 7.962499999999983e-05, 7.975000000000343e-05, 8.008300000000163e-05, 7.954199999999495e-05, 7.936100000000001e-05, 7.947200000000404e-05, 7.949999999999624e-05, 8.0152e-05, 7.940299999999872e-05, 8.01249999999934e-05, 7.941599999999882e-05, 7.974999999999649e-05, 7.936100000000001e-05, 8.029200000000264e-05, 7.994399999999846e-05, 7.990300000000616e-05, 8.030500000000274e-05]</msg>
<status status="PASS" starttime="20201022 13:53:36.725" endtime="20201022 13:53:36.727"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.719" endtime="20201022 13:53:36.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:36.731" endtime="20201022 13:53:36.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.729" endtime="20201022 13:53:36.751"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.728" endtime="20201022 13:53:36.751"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.250" endtime="20201022 13:53:36.752"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.249" endtime="20201022 13:53:36.752"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.760" endtime="20201022 13:53:36.887"></status>
</kw>
<msg timestamp="20201022 13:53:36.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'data': [{'dut-result': '91'}, {'dut-result': '90'}, {'dut-result': '90'}, {'dut-result': '90'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:36.759" endtime="20201022 13:53:36.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'data': [{'dut-result': '91'}, {'dut-result': '90'}, {'dut-result': '90'}, {'dut-result': '90'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:36.889" endtime="20201022 13:53:36.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.892" endtime="20201022 13:53:36.893"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.756" endtime="20201022 13:53:36.894"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.754" endtime="20201022 13:53:36.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:36.898" level="INFO">${RESULT} = {'dut-result': [91, 90, 90, 90, 89, 90, 89, 90, 89, 89, 90, 90, 90, 90, 89, 89, 90, 90, 90, 90, 89, 90, 89, 89, 90, 89, 90, 89, 90, 89, 89, 90, 90, 89, 90, 89, 90, 89, 89, 89, 89, 90, 90, 90, 89, 89, ...</msg>
<status status="PASS" starttime="20201022 13:53:36.895" endtime="20201022 13:53:36.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.903" level="INFO">NAME: accuracy-TIMER_SET-51-dut</msg>
<status status="PASS" starttime="20201022 13:53:36.902" endtime="20201022 13:53:36.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:36.905" level="INFO">VALUE: [91, 90, 90, 90, 89, 90, 89, 90, 89, 89, 90, 90, 90, 90, 89, 89, 90, 90, 90, 90, 89, 90, 89, 89, 90, 89, 90, 89, 90, 89, 89, 90, 90, 89, 90, 89, 90, 89, 89, 89, 89, 90, 90, 90, 89, 89, 89, 89, 90, 90]</msg>
<status status="PASS" starttime="20201022 13:53:36.904" endtime="20201022 13:53:36.905"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.899" endtime="20201022 13:53:36.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:36.914" endtime="20201022 13:53:37.199"></status>
</kw>
<msg timestamp="20201022 13:53:37.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029307361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029388347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:36.912" endtime="20201022 13:53:37.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029307361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029388347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:37.203" endtime="20201022 13:53:37.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.212" endtime="20201022 13:53:37.213"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.909" endtime="20201022 13:53:37.214"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.907" endtime="20201022 13:53:37.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:37.218" level="INFO">${RESULT} = [{'diff': 8.098599999999817e-05}, {'diff': 8.130599999999974e-05}, {'diff': 8.086099999999805e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.112499999999787e-05}, {'diff': 8.106899999999959e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:37.215" endtime="20201022 13:53:37.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:37.222" level="INFO">${ACCURACY} = {'diff': [8.098599999999817e-05, 8.130599999999974e-05, 8.086099999999805e-05, 8.109699999999873e-05, 8.112499999999787e-05, 8.106899999999959e-05, 8.034700000000145e-05, 8.045799999999853e-05, 8.0360...</msg>
<status status="PASS" starttime="20201022 13:53:37.219" endtime="20201022 13:53:37.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.227" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201022 13:53:37.226" endtime="20201022 13:53:37.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.229" level="INFO">VALUE: [8.098599999999817e-05, 8.130599999999974e-05, 8.086099999999805e-05, 8.109699999999873e-05, 8.112499999999787e-05, 8.106899999999959e-05, 8.034700000000145e-05, 8.045799999999853e-05, 8.036099999999755e-05, 8.061100000000126e-05, 8.093099999999936e-05, 8.118099999999961e-05, 8.036099999999755e-05, 8.050000000000071e-05, 8.043000000000286e-05, 8.112500000000133e-05, 8.04719999999981e-05, 8.092999999999989e-05, 8.09169999999998e-05, 8.077800000000357e-05, 8.088900000000065e-05, 8.072199999999835e-05, 8.088900000000065e-05, 8.042999999999939e-05, 8.10970000000022e-05, 8.048599999999767e-05, 8.037500000000058e-05, 8.105600000000296e-05, 8.106900000000306e-05, 8.041700000000623e-05, 8.04169999999993e-05, 8.037500000000058e-05, 8.067999999999964e-05, 8.068099999999911e-05, 8.06249999999939e-05, 8.067999999999964e-05, 8.13049999999968e-05, 8.111100000000177e-05, 8.051399999999681e-05, 8.112500000000133e-05, 8.055599999999552e-05, 8.086100000000151e-05, 8.037500000000058e-05, 8.109799999999473e-05, 8.092999999999989e-05, 8.04169999999993e-05, 8.045799999999853e-05, 8.109699999999526e-05, 8.065299999999997e-05, 8.086100000000151e-05]</msg>
<status status="PASS" starttime="20201022 13:53:37.228" endtime="20201022 13:53:37.230"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.223" endtime="20201022 13:53:37.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:37.234" endtime="20201022 13:53:37.254"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.232" endtime="20201022 13:53:37.255"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.231" endtime="20201022 13:53:37.255"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.753" endtime="20201022 13:53:37.255"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:36.752" endtime="20201022 13:53:37.256"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.265" endtime="20201022 13:53:37.391"></status>
</kw>
<msg timestamp="20201022 13:53:37.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'data': [{'dut-result': '92'}, {'dut-result': '90'}, {'dut-result': '91'}, {'dut-result': '90'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:37.263" endtime="20201022 13:53:37.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'data': [{'dut-result': '92'}, {'dut-result': '90'}, {'dut-result': '91'}, {'dut-result': '90'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:37.393" endtime="20201022 13:53:37.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.396" endtime="20201022 13:53:37.398"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.260" endtime="20201022 13:53:37.398"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.258" endtime="20201022 13:53:37.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:37.403" level="INFO">${RESULT} = {'dut-result': [92, 90, 91, 90, 90, 90, 91, 90, 90, 91, 90, 91, 91, 91, 91, 90, 90, 90, 90, 91, 91, 91, 91, 90, 90, 90, 90, 90, 91, 90, 90, 90, 91, 90, 91, 90, 91, 91, 91, 90, 91, 91, 91, 90, 90, 91, ...</msg>
<status status="PASS" starttime="20201022 13:53:37.400" endtime="20201022 13:53:37.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.407" level="INFO">NAME: accuracy-TIMER_SET-52-dut</msg>
<status status="PASS" starttime="20201022 13:53:37.406" endtime="20201022 13:53:37.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.409" level="INFO">VALUE: [92, 90, 91, 90, 90, 90, 91, 90, 90, 91, 90, 91, 91, 91, 91, 90, 90, 90, 90, 91, 91, 91, 91, 90, 90, 90, 90, 90, 91, 90, 90, 90, 91, 90, 91, 90, 91, 91, 91, 90, 91, 91, 91, 90, 90, 91, 90, 91, 90, 91]</msg>
<status status="PASS" starttime="20201022 13:53:37.408" endtime="20201022 13:53:37.410"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.404" endtime="20201022 13:53:37.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.417" endtime="20201022 13:53:37.703"></status>
</kw>
<msg timestamp="20201022 13:53:37.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030830639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:37.416" endtime="20201022 13:53:37.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030830639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030912194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:37.707" endtime="20201022 13:53:37.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.716" endtime="20201022 13:53:37.718"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.412" endtime="20201022 13:53:37.718"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.411" endtime="20201022 13:53:37.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:37.722" level="INFO">${RESULT} = [{'diff': 8.155500000000052e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.156999999999956e-05}, {'diff': 8.14450000000029e-05}, {'diff': 8.22640000000055e-05}, {'diff': 8.169499999999968e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:37.719" endtime="20201022 13:53:37.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:37.727" level="INFO">${ACCURACY} = {'diff': [8.155500000000052e-05, 8.224999999999899e-05, 8.156999999999956e-05, 8.14450000000029e-05, 8.22640000000055e-05, 8.169499999999968e-05, 8.187500000000208e-05, 8.19719999999996e-05, 8.1583000...</msg>
<status status="PASS" starttime="20201022 13:53:37.723" endtime="20201022 13:53:37.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.731" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201022 13:53:37.730" endtime="20201022 13:53:37.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.734" level="INFO">VALUE: [8.155500000000052e-05, 8.224999999999899e-05, 8.156999999999956e-05, 8.14450000000029e-05, 8.22640000000055e-05, 8.169499999999968e-05, 8.187500000000208e-05, 8.19719999999996e-05, 8.158300000000313e-05, 8.137500000000158e-05, 8.224999999999899e-05, 8.218100000000061e-05, 8.218000000000114e-05, 8.193100000000036e-05, 8.140300000000072e-05, 8.16390000000014e-05, 8.193000000000089e-05, 8.158300000000313e-05, 8.224999999999899e-05, 8.230599999999727e-05, 8.137500000000158e-05, 8.134700000000245e-05, 8.205599999999702e-05, 8.205599999999702e-05, 8.19170000000008e-05, 8.205600000000396e-05, 8.224999999999899e-05, 8.21390000000019e-05, 8.144399999999996e-05, 8.187500000000208e-05, 8.22640000000055e-05, 8.180599999999677e-05, 8.219500000000018e-05, 8.137500000000158e-05, 8.223599999999942e-05, 8.143099999999986e-05, 8.173599999999892e-05, 8.169499999999968e-05, 8.222199999999985e-05, 8.168000000000064e-05, 8.148699999999814e-05, 8.169400000000021e-05, 8.224999999999899e-05, 8.188899999999472e-05, 8.1846999999996e-05, 8.169499999999968e-05, 8.141600000000082e-05, 8.155600000000346e-05, 8.229200000000464e-05, 8.170899999999925e-05]</msg>
<status status="PASS" starttime="20201022 13:53:37.732" endtime="20201022 13:53:37.734"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.727" endtime="20201022 13:53:37.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:37.739" endtime="20201022 13:53:37.758"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.737" endtime="20201022 13:53:37.759"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.736" endtime="20201022 13:53:37.759"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.256" endtime="20201022 13:53:37.759"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.256" endtime="20201022 13:53:37.759"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.769" endtime="20201022 13:53:37.896"></status>
</kw>
<msg timestamp="20201022 13:53:37.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'data': [{'dut-result': '93'}, {'dut-result': '92'}, {'dut-result': '91'}, {'dut-result': '92'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:37.767" endtime="20201022 13:53:37.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'data': [{'dut-result': '93'}, {'dut-result': '92'}, {'dut-result': '91'}, {'dut-result': '92'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:37.897" endtime="20201022 13:53:37.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.901" endtime="20201022 13:53:37.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.765" endtime="20201022 13:53:37.903"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.762" endtime="20201022 13:53:37.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:37.907" level="INFO">${RESULT} = {'dut-result': [93, 92, 91, 92, 91, 92, 91, 92, 92, 91, 92, 91, 91, 92, 91, 91, 91, 92, 92, 91, 91, 91, 91, 92, 92, 92, 91, 92, 91, 92, 91, 91, 91, 92, 91, 92, 92, 91, 91, 91, 91, 92, 92, 91, 92, 91, ...</msg>
<status status="PASS" starttime="20201022 13:53:37.904" endtime="20201022 13:53:37.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.912" level="INFO">NAME: accuracy-TIMER_SET-53-dut</msg>
<status status="PASS" starttime="20201022 13:53:37.911" endtime="20201022 13:53:37.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:37.914" level="INFO">VALUE: [93, 92, 91, 92, 91, 92, 91, 92, 92, 91, 92, 91, 91, 92, 91, 91, 91, 92, 92, 91, 91, 91, 91, 92, 92, 92, 91, 92, 91, 92, 91, 91, 91, 92, 91, 92, 92, 91, 91, 91, 91, 92, 92, 91, 92, 91, 92, 91, 92, 91]</msg>
<status status="PASS" starttime="20201022 13:53:37.913" endtime="20201022 13:53:37.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.908" endtime="20201022 13:53:37.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:37.921" endtime="20201022 13:53:38.208"></status>
</kw>
<msg timestamp="20201022 13:53:38.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03043625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030519069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:37.919" endtime="20201022 13:53:38.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03043625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030519069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:38.212" endtime="20201022 13:53:38.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.220" endtime="20201022 13:53:38.222"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.917" endtime="20201022 13:53:38.222"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.915" endtime="20201022 13:53:38.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:38.227" level="INFO">${RESULT} = [{'diff': 8.281899999999787e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.298600000000017e-05}, {'diff': 8.299999999999974e-05}, {'diff': 8.265300000000197e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:38.223" endtime="20201022 13:53:38.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:38.238" level="INFO">${ACCURACY} = {'diff': [8.281899999999787e-05, 8.249999999999924e-05, 8.323600000000042e-05, 8.298600000000017e-05, 8.299999999999974e-05, 8.265300000000197e-05, 8.268100000000111e-05, 8.238900000000215e-05, 8.3110...</msg>
<status status="PASS" starttime="20201022 13:53:38.235" endtime="20201022 13:53:38.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.243" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201022 13:53:38.242" endtime="20201022 13:53:38.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.245" level="INFO">VALUE: [8.281899999999787e-05, 8.249999999999924e-05, 8.323600000000042e-05, 8.298600000000017e-05, 8.299999999999974e-05, 8.265300000000197e-05, 8.268100000000111e-05, 8.238900000000215e-05, 8.311099999999683e-05, 8.26249999999959e-05, 8.243100000000086e-05, 8.301399999999931e-05, 8.299999999999974e-05, 8.32919999999987e-05, 8.286100000000352e-05, 8.26390000000024e-05, 8.270900000000025e-05, 8.280599999999777e-05, 8.262500000000284e-05, 8.27919999999982e-05, 8.31249999999964e-05, 8.286099999999658e-05, 8.290200000000275e-05, 8.24170000000013e-05, 8.280599999999777e-05, 8.299999999999974e-05, 8.261099999999633e-05, 8.244400000000096e-05, 8.331999999999784e-05, 8.251400000000575e-05, 8.266700000000154e-05, 8.280500000000524e-05, 8.259699999999676e-05, 8.2944999999994e-05, 8.238899999999522e-05, 8.324999999999999e-05, 8.32919999999987e-05, 8.330500000000574e-05, 8.323600000000042e-05, 8.319399999999477e-05, 8.26390000000024e-05, 8.244400000000096e-05, 8.256999999999709e-05, 8.254200000000489e-05, 8.280599999999777e-05, 8.33049999999988e-05, 8.305600000000496e-05, 8.322200000000085e-05, 8.291699999999486e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201022 13:53:38.244" endtime="20201022 13:53:38.245"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.239" endtime="20201022 13:53:38.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:38.250" endtime="20201022 13:53:38.269"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.248" endtime="20201022 13:53:38.270"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.247" endtime="20201022 13:53:38.270"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.760" endtime="20201022 13:53:38.270"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:37.760" endtime="20201022 13:53:38.271"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.280" endtime="20201022 13:53:38.407"></status>
</kw>
<msg timestamp="20201022 13:53:38.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'data': [{'dut-result': '94'}, {'dut-result': '93'}, {'dut-result': '92'}, {'dut-result': '93'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:38.278" endtime="20201022 13:53:38.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'data': [{'dut-result': '94'}, {'dut-result': '93'}, {'dut-result': '92'}, {'dut-result': '93'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:38.409" endtime="20201022 13:53:38.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.412" endtime="20201022 13:53:38.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.275" endtime="20201022 13:53:38.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.273" endtime="20201022 13:53:38.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:38.418" level="INFO">${RESULT} = {'dut-result': [94, 93, 92, 93, 92, 92, 93, 92, 92, 92, 93, 92, 92, 92, 93, 92, 92, 92, 92, 92, 93, 92, 92, 92, 93, 93, 92, 92, 92, 93, 93, 92, 93, 92, 93, 92, 93, 93, 93, 92, 93, 93, 93, 92, 92, 92, ...</msg>
<status status="PASS" starttime="20201022 13:53:38.415" endtime="20201022 13:53:38.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.423" level="INFO">NAME: accuracy-TIMER_SET-54-dut</msg>
<status status="PASS" starttime="20201022 13:53:38.422" endtime="20201022 13:53:38.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.425" level="INFO">VALUE: [94, 93, 92, 93, 92, 92, 93, 92, 92, 92, 93, 92, 92, 92, 93, 92, 92, 92, 92, 92, 93, 92, 92, 92, 93, 93, 92, 92, 92, 93, 93, 92, 93, 92, 93, 92, 93, 93, 93, 92, 93, 93, 93, 92, 92, 92, 93, 93, 92, 92]</msg>
<status status="PASS" starttime="20201022 13:53:38.424" endtime="20201022 13:53:38.425"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.419" endtime="20201022 13:53:38.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.433" endtime="20201022 13:53:38.719"></status>
</kw>
<msg timestamp="20201022 13:53:38.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030565944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030649, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:38.431" endtime="20201022 13:53:38.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030565944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030649, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:38.724" endtime="20201022 13:53:38.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.732" endtime="20201022 13:53:38.733"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.428" endtime="20201022 13:53:38.734"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.427" endtime="20201022 13:53:38.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:38.738" level="INFO">${RESULT} = [{'diff': 8.305599999999802e-05}, {'diff': 8.368000000000264e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.36659999999996e-05}, {'diff': 8.362500000000037e-05}, {'diff': 8.338900000000316e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:38.735" endtime="20201022 13:53:38.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:38.742" level="INFO">${ACCURACY} = {'diff': [8.305599999999802e-05, 8.368000000000264e-05, 8.390299999999976e-05, 8.36659999999996e-05, 8.362500000000037e-05, 8.338900000000316e-05, 8.387499999999715e-05, 8.350000000000024e-05, 8.36110...</msg>
<status status="PASS" starttime="20201022 13:53:38.739" endtime="20201022 13:53:38.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.747" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201022 13:53:38.746" endtime="20201022 13:53:38.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.749" level="INFO">VALUE: [8.305599999999802e-05, 8.368000000000264e-05, 8.390299999999976e-05, 8.36659999999996e-05, 8.362500000000037e-05, 8.338900000000316e-05, 8.387499999999715e-05, 8.350000000000024e-05, 8.361100000000427e-05, 8.411099999999783e-05, 8.390299999999629e-05, 8.37919999999992e-05, 8.426400000000056e-05, 8.356999999999809e-05, 8.368000000000264e-05, 8.394500000000193e-05, 8.41799999999962e-05, 8.375000000000049e-05, 8.36249999999969e-05, 8.433299999999894e-05, 8.355499999999905e-05, 8.41249999999974e-05, 8.41249999999974e-05, 8.404099999999998e-05, 8.384800000000442e-05, 8.411100000000477e-05, 8.337499999999665e-05, 8.354199999999895e-05, 8.41249999999974e-05, 8.390300000000323e-05, 8.341600000000282e-05, 8.393100000000236e-05, 8.419500000000218e-05, 8.406899999999912e-05, 8.372200000000135e-05, 8.411100000000477e-05, 8.39720000000016e-05, 8.366700000000254e-05, 8.350000000000024e-05, 8.38049999999993e-05, 8.341600000000282e-05, 8.386100000000452e-05, 8.375000000000049e-05, 8.416700000000304e-05, 8.354199999999895e-05, 8.369400000000221e-05, 8.344500000000143e-05, 8.427800000000013e-05, 8.331899999999837e-05, 8.361200000000374e-05]</msg>
<status status="PASS" starttime="20201022 13:53:38.748" endtime="20201022 13:53:38.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.743" endtime="20201022 13:53:38.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:38.754" endtime="20201022 13:53:38.773"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.752" endtime="20201022 13:53:38.774"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.751" endtime="20201022 13:53:38.774"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.271" endtime="20201022 13:53:38.775"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.271" endtime="20201022 13:53:38.775"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.783" endtime="20201022 13:53:38.911"></status>
</kw>
<msg timestamp="20201022 13:53:38.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'data': [{'dut-result': '95'}, {'dut-result': '93'}, {'dut-result': '94'}, {'dut-result': '94'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:38.782" endtime="20201022 13:53:38.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'data': [{'dut-result': '95'}, {'dut-result': '93'}, {'dut-result': '94'}, {'dut-result': '94'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:38.913" endtime="20201022 13:53:38.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.916" endtime="20201022 13:53:38.918"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.779" endtime="20201022 13:53:38.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.777" endtime="20201022 13:53:38.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:38.923" level="INFO">${RESULT} = {'dut-result': [95, 93, 94, 94, 94, 94, 93, 94, 94, 94, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 93, 93, 94, 93, 93, 94, 94, 93, 94, 93, 93, 93, 93, 94, 94, 93, 93, 94, 93, 94, 94, 94, 93, 93, ...</msg>
<status status="PASS" starttime="20201022 13:53:38.920" endtime="20201022 13:53:38.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.927" level="INFO">NAME: accuracy-TIMER_SET-55-dut</msg>
<status status="PASS" starttime="20201022 13:53:38.926" endtime="20201022 13:53:38.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:38.930" level="INFO">VALUE: [95, 93, 94, 94, 94, 94, 93, 94, 94, 94, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 93, 93, 94, 93, 93, 94, 94, 93, 94, 93, 93, 93, 93, 94, 94, 93, 93, 94, 93, 94, 94, 94, 93, 93, 94, 93, 93, 93]</msg>
<status status="PASS" starttime="20201022 13:53:38.928" endtime="20201022 13:53:38.930"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.924" endtime="20201022 13:53:38.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:38.937" endtime="20201022 13:53:39.223"></status>
</kw>
<msg timestamp="20201022 13:53:39.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030396861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030481028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:38.935" endtime="20201022 13:53:39.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030396861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030481028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:39.227" endtime="20201022 13:53:39.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.235" endtime="20201022 13:53:39.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.933" endtime="20201022 13:53:39.238"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.931" endtime="20201022 13:53:39.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:39.245" level="INFO">${RESULT} = [{'diff': 8.416699999999958e-05}, {'diff': 8.490300000000076e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.459700000000223e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.51249999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:39.239" endtime="20201022 13:53:39.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:39.249" level="INFO">${ACCURACY} = {'diff': [8.416699999999958e-05, 8.490300000000076e-05, 8.436099999999808e-05, 8.459700000000223e-05, 8.46530000000005e-05, 8.51249999999984e-05, 8.484699999999554e-05, 8.481999999999934e-05, 8.475000...</msg>
<status status="PASS" starttime="20201022 13:53:39.246" endtime="20201022 13:53:39.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.254" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201022 13:53:39.253" endtime="20201022 13:53:39.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.256" level="INFO">VALUE: [8.416699999999958e-05, 8.490300000000076e-05, 8.436099999999808e-05, 8.459700000000223e-05, 8.46530000000005e-05, 8.51249999999984e-05, 8.484699999999554e-05, 8.481999999999934e-05, 8.475000000000149e-05, 8.527800000000113e-05, 8.454199999999995e-05, 8.44999999999943e-05, 8.473600000000192e-05, 8.455600000000646e-05, 8.473600000000192e-05, 8.44999999999943e-05, 8.53050000000008e-05, 8.448600000000167e-05, 8.531900000000037e-05, 8.509800000000567e-05, 8.508299999999969e-05, 8.455600000000646e-05, 8.529100000000123e-05, 8.51249999999984e-05, 8.470900000000225e-05, 8.504200000000045e-05, 8.51799999999972e-05, 8.522300000000232e-05, 8.455599999999952e-05, 8.43469999999985e-05, 8.475000000000149e-05, 8.516700000000405e-05, 8.436099999999808e-05, 8.46249999999979e-05, 8.450000000000124e-05, 8.43469999999985e-05, 8.487500000000509e-05, 8.437500000000459e-05, 8.44999999999943e-05, 8.47370000000014e-05, 8.480599999999977e-05, 8.443000000000339e-05, 8.4846999999999e-05, 8.472300000000182e-05, 8.48050000000003e-05, 8.48050000000003e-05, 8.530600000000027e-05, 8.518099999999668e-05, 8.493099999999643e-05, 8.476400000000106e-05]</msg>
<status status="PASS" starttime="20201022 13:53:39.255" endtime="20201022 13:53:39.256"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.250" endtime="20201022 13:53:39.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:39.261" endtime="20201022 13:53:39.280"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.259" endtime="20201022 13:53:39.281"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.258" endtime="20201022 13:53:39.281"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.776" endtime="20201022 13:53:39.282"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:38.775" endtime="20201022 13:53:39.282"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.291" endtime="20201022 13:53:39.418"></status>
</kw>
<msg timestamp="20201022 13:53:39.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'data': [{'dut-result': '96'}, {'dut-result': '95'}, {'dut-result': '94'}, {'dut-result': '94'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:39.289" endtime="20201022 13:53:39.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'data': [{'dut-result': '96'}, {'dut-result': '95'}, {'dut-result': '94'}, {'dut-result': '94'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:39.420" endtime="20201022 13:53:39.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.423" endtime="20201022 13:53:39.425"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.286" endtime="20201022 13:53:39.425"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.284" endtime="20201022 13:53:39.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:39.430" level="INFO">${RESULT} = {'dut-result': [96, 95, 94, 94, 95, 95, 94, 95, 94, 94, 94, 95, 94, 94, 95, 94, 94, 94, 94, 95, 94, 95, 95, 95, 94, 94, 95, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 94, 94, 95, 94, 95, ...</msg>
<status status="PASS" starttime="20201022 13:53:39.427" endtime="20201022 13:53:39.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.434" level="INFO">NAME: accuracy-TIMER_SET-56-dut</msg>
<status status="PASS" starttime="20201022 13:53:39.433" endtime="20201022 13:53:39.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.436" level="INFO">VALUE: [96, 95, 94, 94, 95, 95, 94, 95, 94, 94, 94, 95, 94, 94, 95, 94, 94, 94, 94, 95, 94, 95, 95, 95, 94, 94, 95, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 94, 94, 95, 94, 95, 95, 95, 95, 94]</msg>
<status status="PASS" starttime="20201022 13:53:39.435" endtime="20201022 13:53:39.436"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.430" endtime="20201022 13:53:39.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.443" endtime="20201022 13:53:39.730"></status>
</kw>
<msg timestamp="20201022 13:53:39.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029672014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029757444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:39.442" endtime="20201022 13:53:39.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029672014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029757444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:39.734" endtime="20201022 13:53:39.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.742" endtime="20201022 13:53:39.744"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.439" endtime="20201022 13:53:39.744"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.438" endtime="20201022 13:53:39.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:39.748" level="INFO">${RESULT} = [{'diff': 8.543000000000092e-05}, {'diff': 8.62920000000017e-05}, {'diff': 8.604099999999851e-05}, {'diff': 8.570899999999979e-05}, {'diff': 8.577799999999816e-05}, {'diff': 8.541699999999736e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:39.745" endtime="20201022 13:53:39.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:39.753" level="INFO">${ACCURACY} = {'diff': [8.543000000000092e-05, 8.62920000000017e-05, 8.604099999999851e-05, 8.570899999999979e-05, 8.577799999999816e-05, 8.541699999999736e-05, 8.5847e-05, 8.561099999999933e-05, 8.542999999999745e...</msg>
<status status="PASS" starttime="20201022 13:53:39.749" endtime="20201022 13:53:39.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.758" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201022 13:53:39.757" endtime="20201022 13:53:39.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.761" level="INFO">VALUE: [8.543000000000092e-05, 8.62920000000017e-05, 8.604099999999851e-05, 8.570899999999979e-05, 8.577799999999816e-05, 8.541699999999736e-05, 8.5847e-05, 8.561099999999933e-05, 8.542999999999745e-05, 8.547199999999963e-05, 8.623699999999943e-05, 8.59170000000048e-05, 8.540299999999779e-05, 8.561200000000574e-05, 8.557000000000009e-05, 8.630600000000127e-05, 8.616599999999863e-05, 8.54170000000043e-05, 8.573600000000292e-05, 8.604100000000198e-05, 8.534799999999898e-05, 8.536099999999908e-05, 8.604100000000198e-05, 8.530600000000027e-05, 8.551399999999487e-05, 8.581899999999393e-05, 8.544500000000343e-05, 8.547199999999616e-05, 8.566599999999813e-05, 8.595899999999657e-05, 8.548599999999573e-05, 8.565299999999804e-05, 8.595800000000403e-05, 8.592999999999795e-05, 8.615299999999854e-05, 8.561099999999933e-05, 8.573600000000292e-05, 8.54170000000043e-05, 8.56799999999977e-05, 8.583300000000044e-05, 8.600000000000274e-05, 8.54449999999965e-05, 8.61799999999982e-05, 8.609799999999973e-05, 8.552800000000138e-05, 8.619499999999725e-05, 8.598600000000317e-05, 8.563899999999847e-05, 8.56249999999989e-05, 8.58050000000013e-05]</msg>
<status status="PASS" starttime="20201022 13:53:39.759" endtime="20201022 13:53:39.761"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.755" endtime="20201022 13:53:39.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:39.765" endtime="20201022 13:53:39.785"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.764" endtime="20201022 13:53:39.785"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.763" endtime="20201022 13:53:39.786"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.283" endtime="20201022 13:53:39.786"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.282" endtime="20201022 13:53:39.786"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.795" endtime="20201022 13:53:39.922"></status>
</kw>
<msg timestamp="20201022 13:53:39.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'data': [{'dut-result': '97'}, {'dut-result': '95'}, {'dut-result': '96'}, {'dut-result': '96'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:39.793" endtime="20201022 13:53:39.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'data': [{'dut-result': '97'}, {'dut-result': '95'}, {'dut-result': '96'}, {'dut-result': '96'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:39.924" endtime="20201022 13:53:39.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.927" endtime="20201022 13:53:39.929"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.791" endtime="20201022 13:53:39.929"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.788" endtime="20201022 13:53:39.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:39.935" level="INFO">${RESULT} = {'dut-result': [97, 95, 96, 96, 95, 96, 95, 95, 95, 95, 95, 95, 96, 96, 95, 96, 96, 95, 96, 95, 95, 95, 95, 95, 96, 95, 95, 96, 95, 96, 95, 96, 96, 96, 96, 96, 96, 96, 95, 96, 95, 95, 95, 95, 96, 95, ...</msg>
<status status="PASS" starttime="20201022 13:53:39.930" endtime="20201022 13:53:39.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.940" level="INFO">NAME: accuracy-TIMER_SET-57-dut</msg>
<status status="PASS" starttime="20201022 13:53:39.939" endtime="20201022 13:53:39.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:39.942" level="INFO">VALUE: [97, 95, 96, 96, 95, 96, 95, 95, 95, 95, 95, 95, 96, 96, 95, 96, 96, 95, 96, 95, 95, 95, 95, 95, 96, 95, 95, 96, 95, 96, 95, 96, 96, 96, 96, 96, 96, 96, 95, 96, 95, 95, 95, 95, 96, 95, 95, 96, 95, 95]</msg>
<status status="PASS" starttime="20201022 13:53:39.941" endtime="20201022 13:53:39.943"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.936" endtime="20201022 13:53:39.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:39.951" endtime="20201022 13:53:40.237"></status>
</kw>
<msg timestamp="20201022 13:53:40.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0297165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029802736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:39.949" endtime="20201022 13:53:40.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0297165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029802736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:40.242" endtime="20201022 13:53:40.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.251" endtime="20201022 13:53:40.252"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.946" endtime="20201022 13:53:40.253"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.944" endtime="20201022 13:53:40.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:40.257" level="INFO">${RESULT} = [{'diff': 8.623599999999995e-05}, {'diff': 8.641600000000235e-05}, {'diff': 8.66669999999986e-05}, {'diff': 8.647200000000063e-05}, {'diff': 8.648699999999968e-05}, {'diff': 8.71799999999992e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:40.254" endtime="20201022 13:53:40.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:40.262" level="INFO">${ACCURACY} = {'diff': [8.623599999999995e-05, 8.641600000000235e-05, 8.66669999999986e-05, 8.647200000000063e-05, 8.648699999999968e-05, 8.71799999999992e-05, 8.652800000000238e-05, 8.633300000000094e-05, 8.663899...</msg>
<status status="PASS" starttime="20201022 13:53:40.258" endtime="20201022 13:53:40.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.267" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201022 13:53:40.266" endtime="20201022 13:53:40.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.269" level="INFO">VALUE: [8.623599999999995e-05, 8.641600000000235e-05, 8.66669999999986e-05, 8.647200000000063e-05, 8.648699999999968e-05, 8.71799999999992e-05, 8.652800000000238e-05, 8.633300000000094e-05, 8.663899999999947e-05, 8.652799999999891e-05, 8.709800000000073e-05, 8.641699999999836e-05, 8.709800000000073e-05, 8.72920000000027e-05, 8.707000000000159e-05, 8.711100000000083e-05, 8.641600000000582e-05, 8.64170000000053e-05, 8.672200000000435e-05, 8.71669999999991e-05, 8.66249999999999e-05, 8.641699999999836e-05, 8.641699999999836e-05, 8.64720000000041e-05, 8.679199999999526e-05, 8.6847000000001e-05, 8.677800000000263e-05, 8.71250000000004e-05, 8.727799999999619e-05, 8.672200000000435e-05, 8.708300000000169e-05, 8.727799999999619e-05, 8.686100000000058e-05, 8.71669999999991e-05, 8.638899999999922e-05, 8.659699999999382e-05, 8.715299999999954e-05, 8.720799999999834e-05, 8.672200000000435e-05, 8.659700000000076e-05, 8.715200000000006e-05, 8.647299999999664e-05, 8.722199999999791e-05, 8.71120000000003e-05, 8.665300000000598e-05, 8.69720000000046e-05, 8.726399999999662e-05, 8.686100000000058e-05, 8.658400000000066e-05, 8.709700000000126e-05]</msg>
<status status="PASS" starttime="20201022 13:53:40.268" endtime="20201022 13:53:40.270"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.263" endtime="20201022 13:53:40.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:40.274" endtime="20201022 13:53:40.293"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.272" endtime="20201022 13:53:40.294"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.271" endtime="20201022 13:53:40.294"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.787" endtime="20201022 13:53:40.294"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:39.786" endtime="20201022 13:53:40.294"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.303" endtime="20201022 13:53:40.430"></status>
</kw>
<msg timestamp="20201022 13:53:40.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'data': [{'dut-result': '98'}, {'dut-result': '97'}, {'dut-result': '97'}, {'dut-result': '96'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:40.302" endtime="20201022 13:53:40.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'data': [{'dut-result': '98'}, {'dut-result': '97'}, {'dut-result': '97'}, {'dut-result': '96'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:40.432" endtime="20201022 13:53:40.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.435" endtime="20201022 13:53:40.437"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.299" endtime="20201022 13:53:40.437"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.297" endtime="20201022 13:53:40.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:40.443" level="INFO">${RESULT} = {'dut-result': [98, 97, 97, 96, 97, 96, 96, 96, 97, 96, 97, 97, 97, 96, 97, 96, 97, 96, 96, 96, 96, 96, 96, 96, 97, 96, 97, 96, 97, 96, 96, 97, 96, 96, 96, 97, 97, 96, 97, 96, 97, 97, 96, 96, 96, 96, ...</msg>
<status status="PASS" starttime="20201022 13:53:40.438" endtime="20201022 13:53:40.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.447" level="INFO">NAME: accuracy-TIMER_SET-58-dut</msg>
<status status="PASS" starttime="20201022 13:53:40.446" endtime="20201022 13:53:40.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.450" level="INFO">VALUE: [98, 97, 97, 96, 97, 96, 96, 96, 97, 96, 97, 97, 97, 96, 97, 96, 97, 96, 96, 96, 96, 96, 96, 96, 97, 96, 97, 96, 97, 96, 96, 97, 96, 96, 96, 97, 97, 96, 97, 96, 97, 97, 96, 96, 96, 96, 96, 96, 96, 96]</msg>
<status status="PASS" starttime="20201022 13:53:40.448" endtime="20201022 13:53:40.450"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.444" endtime="20201022 13:53:40.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.457" endtime="20201022 13:53:40.742"></status>
</kw>
<msg timestamp="20201022 13:53:40.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029717444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029805306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:40.455" endtime="20201022 13:53:40.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029717444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029805306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:40.746" endtime="20201022 13:53:40.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.755" endtime="20201022 13:53:40.756"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.453" endtime="20201022 13:53:40.757"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.451" endtime="20201022 13:53:40.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:40.761" level="INFO">${RESULT} = [{'diff': 8.786200000000105e-05}, {'diff': 8.795800000000256e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.81670000000001e-05}, {'diff': 8.790300000000029e-05}, {'diff': 8.829200000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:40.758" endtime="20201022 13:53:40.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:40.766" level="INFO">${ACCURACY} = {'diff': [8.786200000000105e-05, 8.795800000000256e-05, 8.736099999999761e-05, 8.81670000000001e-05, 8.790300000000029e-05, 8.829200000000023e-05, 8.815300000000054e-05, 8.770900000000179e-05, 8.73330...</msg>
<status status="PASS" starttime="20201022 13:53:40.762" endtime="20201022 13:53:40.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.771" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201022 13:53:40.770" endtime="20201022 13:53:40.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.773" level="INFO">VALUE: [8.786200000000105e-05, 8.795800000000256e-05, 8.736099999999761e-05, 8.81670000000001e-05, 8.790300000000029e-05, 8.829200000000023e-05, 8.815300000000054e-05, 8.770900000000179e-05, 8.733300000000194e-05, 8.740299999999979e-05, 8.777800000000016e-05, 8.772299999999789e-05, 8.745799999999859e-05, 8.776400000000406e-05, 8.73470000000015e-05, 8.751400000000381e-05, 8.801399999999737e-05, 8.829100000000423e-05, 8.787500000000115e-05, 8.82370000000049e-05, 8.806999999999565e-05, 8.791699999999986e-05, 8.740299999999979e-05, 8.790300000000029e-05, 8.798600000000517e-05, 8.809699999999532e-05, 8.801400000000431e-05, 8.790300000000029e-05, 8.770899999999832e-05, 8.765300000000004e-05, 8.820899999999882e-05, 8.809700000000226e-05, 8.801400000000431e-05, 8.81670000000001e-05, 8.809700000000226e-05, 8.805599999999608e-05, 8.763900000000047e-05, 8.765200000000056e-05, 8.736099999999414e-05, 8.783300000000244e-05, 8.78329999999955e-05, 8.834700000000251e-05, 8.745799999999859e-05, 8.784799999999454e-05, 8.772199999999841e-05, 8.81670000000001e-05, 8.773599999999798e-05, 8.83050000000038e-05, 8.802799999999694e-05, 8.827699999999772e-05]</msg>
<status status="PASS" starttime="20201022 13:53:40.772" endtime="20201022 13:53:40.773"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.767" endtime="20201022 13:53:40.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:40.778" endtime="20201022 13:53:40.797"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.776" endtime="20201022 13:53:40.798"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.775" endtime="20201022 13:53:40.798"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.295" endtime="20201022 13:53:40.798"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.295" endtime="20201022 13:53:40.798"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.807" endtime="20201022 13:53:40.935"></status>
</kw>
<msg timestamp="20201022 13:53:40.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'data': [{'dut-result': '99'}, {'dut-result': '98'}, {'dut-result': '97'}, {'dut-result': '98'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:40.806" endtime="20201022 13:53:40.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'data': [{'dut-result': '99'}, {'dut-result': '98'}, {'dut-result': '97'}, {'dut-result': '98'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:53:40.936" endtime="20201022 13:53:40.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.940" endtime="20201022 13:53:40.941"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.803" endtime="20201022 13:53:40.942"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.801" endtime="20201022 13:53:40.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:40.947" level="INFO">${RESULT} = {'dut-result': [99, 98, 97, 98, 97, 97, 98, 98, 98, 97, 98, 98, 98, 98, 97, 98, 98, 98, 98, 97, 97, 97, 97, 98, 97, 97, 98, 97, 98, 98, 97, 98, 98, 97, 97, 98, 98, 98, 97, 98, 97, 98, 98, 98, 97, 98, ...</msg>
<status status="PASS" starttime="20201022 13:53:40.943" endtime="20201022 13:53:40.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.951" level="INFO">NAME: accuracy-TIMER_SET-59-dut</msg>
<status status="PASS" starttime="20201022 13:53:40.950" endtime="20201022 13:53:40.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:40.954" level="INFO">VALUE: [99, 98, 97, 98, 97, 97, 98, 98, 98, 97, 98, 98, 98, 98, 97, 98, 98, 98, 98, 97, 97, 97, 97, 98, 97, 97, 98, 97, 98, 98, 97, 98, 98, 97, 97, 98, 98, 98, 97, 98, 97, 98, 98, 98, 97, 98, 98, 98, 97, 98]</msg>
<status status="PASS" starttime="20201022 13:53:40.953" endtime="20201022 13:53:40.955"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.948" endtime="20201022 13:53:40.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:40.962" endtime="20201022 13:53:41.249"></status>
</kw>
<msg timestamp="20201022 13:53:41.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030143431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:40.961" endtime="20201022 13:53:41.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030143431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:41.253" endtime="20201022 13:53:41.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.261" endtime="20201022 13:53:41.263"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.958" endtime="20201022 13:53:41.264"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.956" endtime="20201022 13:53:41.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:41.268" level="INFO">${RESULT} = [{'diff': 8.89869999999987e-05}, {'diff': 8.929200000000123e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.890300000000129e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.904200000000098e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:41.265" endtime="20201022 13:53:41.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:41.273" level="INFO">${ACCURACY} = {'diff': [8.89869999999987e-05, 8.929200000000123e-05, 8.852800000000091e-05, 8.890300000000129e-05, 8.911099999999936e-05, 8.904200000000098e-05, 8.84999999999983e-05, 8.895899999999957e-05, 8.890300...</msg>
<status status="PASS" starttime="20201022 13:53:41.269" endtime="20201022 13:53:41.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.278" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201022 13:53:41.277" endtime="20201022 13:53:41.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.281" level="INFO">VALUE: [8.89869999999987e-05, 8.929200000000123e-05, 8.852800000000091e-05, 8.890300000000129e-05, 8.911099999999936e-05, 8.904200000000098e-05, 8.84999999999983e-05, 8.895899999999957e-05, 8.890300000000129e-05, 8.891700000000086e-05, 8.861099999999539e-05, 8.884800000000248e-05, 8.834699999999557e-05, 8.923599999999948e-05, 8.911099999999589e-05, 8.854200000000395e-05, 8.872199999999941e-05, 8.901399999999837e-05, 8.851399999999787e-05, 8.911100000000283e-05, 8.86670000000006e-05, 8.91120000000023e-05, 8.920800000000034e-05, 8.88329999999965e-05, 8.884799999999554e-05, 8.845799999999959e-05, 8.865300000000104e-05, 8.91529999999946e-05, 8.840300000000079e-05, 8.893100000000043e-05, 8.927799999999819e-05, 8.891700000000086e-05, 8.922199999999991e-05, 8.844400000000002e-05, 8.884699999999607e-05, 8.86659999999942e-05, 8.915300000000154e-05, 8.854099999999754e-05, 8.863900000000147e-05, 8.909800000000273e-05, 8.854199999999701e-05, 8.88329999999965e-05, 8.88329999999965e-05, 8.859700000000276e-05, 8.880499999999736e-05, 8.908300000000369e-05, 8.916600000000163e-05, 8.895800000000009e-05, 8.852799999999744e-05, 8.86670000000006e-05]</msg>
<status status="PASS" starttime="20201022 13:53:41.279" endtime="20201022 13:53:41.281"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.274" endtime="20201022 13:53:41.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:41.285" endtime="20201022 13:53:41.305"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.284" endtime="20201022 13:53:41.305"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.283" endtime="20201022 13:53:41.305"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.800" endtime="20201022 13:53:41.306"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:40.799" endtime="20201022 13:53:41.306"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.315" endtime="20201022 13:53:41.442"></status>
</kw>
<msg timestamp="20201022 13:53:41.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'data': [{'dut-result': '100'}, {'dut-result': '98'}, {'dut-result': '99'}, {'dut-result': '98'}, {'dut-result': ...</msg>
<status status="PASS" starttime="20201022 13:53:41.313" endtime="20201022 13:53:41.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'data': [{'dut-result': '100'}, {'dut-result': '98'}, {'dut-result': '99'}, {'dut-result': '98'}, {'dut-result': ...</msg>
<status status="PASS" starttime="20201022 13:53:41.444" endtime="20201022 13:53:41.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.447" endtime="20201022 13:53:41.449"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.310" endtime="20201022 13:53:41.449"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.308" endtime="20201022 13:53:41.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:41.454" level="INFO">${RESULT} = {'dut-result': [100, 98, 99, 98, 99, 99, 98, 98, 99, 99, 98, 99, 98, 98, 99, 99, 98, 99, 99, 98, 98, 99, 98, 99, 98, 98, 99, 99, 98, 98, 99, 99, 98, 99, 99, 98, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98,...</msg>
<status status="PASS" starttime="20201022 13:53:41.450" endtime="20201022 13:53:41.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.459" level="INFO">NAME: accuracy-TIMER_SET-60-dut</msg>
<status status="PASS" starttime="20201022 13:53:41.458" endtime="20201022 13:53:41.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.461" level="INFO">VALUE: [100, 98, 99, 98, 99, 99, 98, 98, 99, 99, 98, 99, 98, 98, 99, 99, 98, 99, 99, 98, 98, 99, 98, 99, 98, 98, 99, 99, 98, 98, 99, 99, 98, 99, 99, 98, 99, 99, 99, 99, 99, 98, 98, 98, 98, 98, 98, 98, 98, 98]</msg>
<status status="PASS" starttime="20201022 13:53:41.460" endtime="20201022 13:53:41.461"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.455" endtime="20201022 13:53:41.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.468" endtime="20201022 13:53:41.754"></status>
</kw>
<msg timestamp="20201022 13:53:41.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029888236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029977653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:41.467" endtime="20201022 13:53:41.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029888236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029977653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:41.758" endtime="20201022 13:53:41.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.767" endtime="20201022 13:53:41.768"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.464" endtime="20201022 13:53:41.769"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.462" endtime="20201022 13:53:41.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:41.774" level="INFO">${RESULT} = [{'diff': 8.941700000000136e-05}, {'diff': 9.030499999999886e-05}, {'diff': 9.015300000000254e-05}, {'diff': 9.01670000000021e-05}, {'diff': 8.973699999999946e-05}, {'diff': 9.002699999999947e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:41.770" endtime="20201022 13:53:41.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:41.779" level="INFO">${ACCURACY} = {'diff': [8.941700000000136e-05, 9.030499999999886e-05, 9.015300000000254e-05, 9.01670000000021e-05, 8.973699999999946e-05, 9.002699999999947e-05, 8.9638999999999e-05, 8.995900000000057e-05, 9.0012999...</msg>
<status status="PASS" starttime="20201022 13:53:41.775" endtime="20201022 13:53:41.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.784" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201022 13:53:41.783" endtime="20201022 13:53:41.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.786" level="INFO">VALUE: [8.941700000000136e-05, 9.030499999999886e-05, 9.015300000000254e-05, 9.01670000000021e-05, 8.973699999999946e-05, 9.002699999999947e-05, 8.9638999999999e-05, 8.995900000000057e-05, 9.00129999999999e-05, 8.979099999999879e-05, 8.951399999999887e-05, 8.934800000000298e-05, 8.984700000000401e-05, 8.934699999999657e-05, 8.954200000000495e-05, 8.96670000000016e-05, 8.965300000000204e-05, 8.952799999999844e-05, 9.013899999999603e-05, 8.936099999999614e-05, 8.945800000000059e-05, 9.015200000000306e-05, 8.984700000000401e-05, 8.965300000000204e-05, 8.984700000000401e-05, 8.987500000000315e-05, 8.96670000000016e-05, 9.01529999999956e-05, 8.963900000000247e-05, 8.938900000000222e-05, 8.947299999999964e-05, 8.961100000000333e-05, 8.941600000000188e-05, 8.972299999999989e-05, 8.997300000000014e-05, 8.934700000000351e-05, 8.945900000000007e-05, 8.940300000000179e-05, 8.941700000000136e-05, 8.961100000000333e-05, 8.984699999999707e-05, 9.002799999999894e-05, 9.002799999999894e-05, 9.022200000000091e-05, 9.020900000000082e-05, 8.965300000000204e-05, 8.970800000000084e-05, 9.016699999999517e-05, 8.9945000000001e-05, 8.977699999999922e-05]</msg>
<status status="PASS" starttime="20201022 13:53:41.785" endtime="20201022 13:53:41.787"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.780" endtime="20201022 13:53:41.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:41.791" endtime="20201022 13:53:41.810"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.789" endtime="20201022 13:53:41.811"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.788" endtime="20201022 13:53:41.811"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.307" endtime="20201022 13:53:41.812"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.306" endtime="20201022 13:53:41.812"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.821" endtime="20201022 13:53:41.950"></status>
</kw>
<msg timestamp="20201022 13:53:41.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'data': [{'dut-result': '101'}, {'dut-result': '100'}, {'dut-result': '99'}, {'dut-result': '100'}, {'dut-result'...</msg>
<status status="PASS" starttime="20201022 13:53:41.819" endtime="20201022 13:53:41.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'data': [{'dut-result': '101'}, {'dut-result': '100'}, {'dut-result': '99'}, {'dut-result': '100'}, {'dut-result'...</msg>
<status status="PASS" starttime="20201022 13:53:41.952" endtime="20201022 13:53:41.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.955" endtime="20201022 13:53:41.957"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.816" endtime="20201022 13:53:41.957"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.814" endtime="20201022 13:53:41.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:41.961" level="INFO">${RESULT} = {'dut-result': [101, 100, 99, 100, 99, 99, 100, 99, 99, 99, 100, 99, 99, 99, 99, 100, 99, 100, 100, 99, 100, 99, 100, 100, 99, 100, 99, 99, 99, 99, 99, 99, 100, 100, 99, 100, 99, 99, 99, 99, 100, 100,...</msg>
<status status="PASS" starttime="20201022 13:53:41.958" endtime="20201022 13:53:41.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.967" level="INFO">NAME: accuracy-TIMER_SET-61-dut</msg>
<status status="PASS" starttime="20201022 13:53:41.966" endtime="20201022 13:53:41.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:41.969" level="INFO">VALUE: [101, 100, 99, 100, 99, 99, 100, 99, 99, 99, 100, 99, 99, 99, 99, 100, 99, 100, 100, 99, 100, 99, 100, 100, 99, 100, 99, 99, 99, 99, 99, 99, 100, 100, 99, 100, 99, 99, 99, 99, 100, 100, 100, 100, 100, 100, 100, 99, 100, 99]</msg>
<status status="PASS" starttime="20201022 13:53:41.968" endtime="20201022 13:53:41.970"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.963" endtime="20201022 13:53:41.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:41.978" endtime="20201022 13:53:42.264"></status>
</kw>
<msg timestamp="20201022 13:53:42.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029869333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:41.976" endtime="20201022 13:53:42.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029869333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029959431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:42.268" endtime="20201022 13:53:42.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.277" endtime="20201022 13:53:42.278"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.973" endtime="20201022 13:53:42.279"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.971" endtime="20201022 13:53:42.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:42.283" level="INFO">${RESULT} = [{'diff': 9.009800000000026e-05}, {'diff': 9.120800000000234e-05}, {'diff': 9.034699999999757e-05}, {'diff': 9.104199999999951e-05}, {'diff': 9.102799999999994e-05}, {'diff': 9.056900000000215e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:42.280" endtime="20201022 13:53:42.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:42.287" level="INFO">${ACCURACY} = {'diff': [9.009800000000026e-05, 9.120800000000234e-05, 9.034699999999757e-05, 9.104199999999951e-05, 9.102799999999994e-05, 9.056900000000215e-05, 9.083399999999797e-05, 9.111100000000136e-05, 9.0388...</msg>
<status status="PASS" starttime="20201022 13:53:42.284" endtime="20201022 13:53:42.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.294" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201022 13:53:42.291" endtime="20201022 13:53:42.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.296" level="INFO">VALUE: [9.009800000000026e-05, 9.120800000000234e-05, 9.034699999999757e-05, 9.104199999999951e-05, 9.102799999999994e-05, 9.056900000000215e-05, 9.083399999999797e-05, 9.111100000000136e-05, 9.038899999999975e-05, 9.11250000000044e-05, 9.081899999999893e-05, 9.095899999999463e-05, 9.034700000000451e-05, 9.056999999999815e-05, 9.127800000000019e-05, 9.083400000000491e-05, 9.045800000000159e-05, 9.11529999999966e-05, 9.044399999999508e-05, 9.059699999999782e-05, 9.11670000000031e-05, 9.088899999999678e-05, 9.059799999999729e-05, 9.088899999999678e-05, 9.094400000000252e-05, 9.101400000000037e-05, 9.119399999999583e-05, 9.108399999999822e-05, 9.038900000000322e-05, 9.122200000000191e-05, 9.095799999999515e-05, 9.094400000000252e-05, 9.047199999999422e-05, 9.040299999999585e-05, 9.061099999999739e-05, 9.072200000000141e-05, 9.101400000000037e-05, 9.084699999999807e-05, 9.058299999999825e-05, 9.041600000000288e-05, 9.052800000000638e-05, 9.045900000000107e-05, 9.119399999999583e-05, 9.052799999999944e-05, 9.062499999999696e-05, 9.031900000000537e-05, 9.08329999999985e-05, 9.063899999999653e-05, 9.070900000000132e-05, 9.10000000000008e-05]</msg>
<status status="PASS" starttime="20201022 13:53:42.295" endtime="20201022 13:53:42.297"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.288" endtime="20201022 13:53:42.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:42.301" endtime="20201022 13:53:42.320"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.300" endtime="20201022 13:53:42.321"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.298" endtime="20201022 13:53:42.321"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.813" endtime="20201022 13:53:42.322"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:41.812" endtime="20201022 13:53:42.322"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.331" endtime="20201022 13:53:42.463"></status>
</kw>
<msg timestamp="20201022 13:53:42.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'data': [{'dut-result': '102'}, {'dut-result': '101'}, {'dut-result': '100'}, {'dut-result': '100'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:42.329" endtime="20201022 13:53:42.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'data': [{'dut-result': '102'}, {'dut-result': '101'}, {'dut-result': '100'}, {'dut-result': '100'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:42.465" endtime="20201022 13:53:42.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.468" endtime="20201022 13:53:42.470"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.326" endtime="20201022 13:53:42.470"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.324" endtime="20201022 13:53:42.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:42.475" level="INFO">${RESULT} = {'dut-result': [102, 101, 100, 100, 101, 100, 100, 100, 101, 100, 100, 101, 100, 101, 101, 101, 100, 101, 100, 100, 101, 100, 100, 101, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 100,...</msg>
<status status="PASS" starttime="20201022 13:53:42.472" endtime="20201022 13:53:42.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.479" level="INFO">NAME: accuracy-TIMER_SET-62-dut</msg>
<status status="PASS" starttime="20201022 13:53:42.478" endtime="20201022 13:53:42.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.481" level="INFO">VALUE: [102, 101, 100, 100, 101, 100, 100, 100, 101, 100, 100, 101, 100, 101, 101, 101, 100, 101, 100, 100, 101, 100, 100, 101, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 100, 101, 101, 100, 100, 101, 101, 101, 101, 101, 100, 100, 100, 100]</msg>
<status status="PASS" starttime="20201022 13:53:42.480" endtime="20201022 13:53:42.482"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.475" endtime="20201022 13:53:42.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.490" endtime="20201022 13:53:42.776"></status>
</kw>
<msg timestamp="20201022 13:53:42.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030549694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:42.488" endtime="20201022 13:53:42.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030549694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030641153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:42.780" endtime="20201022 13:53:42.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.789" endtime="20201022 13:53:42.790"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.486" endtime="20201022 13:53:42.791"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.483" endtime="20201022 13:53:42.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:42.795" level="INFO">${RESULT} = [{'diff': 9.145900000000207e-05}, {'diff': 9.198600000000223e-05}, {'diff': 9.179199999999679e-05}, {'diff': 9.170799999999937e-05}, {'diff': 9.204200000000051e-05}, {'diff': 9.187499999999821e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:42.792" endtime="20201022 13:53:42.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:42.799" level="INFO">${ACCURACY} = {'diff': [9.145900000000207e-05, 9.198600000000223e-05, 9.179199999999679e-05, 9.170799999999937e-05, 9.204200000000051e-05, 9.187499999999821e-05, 9.163899999999753e-05, 9.191699999999692e-05, 9.1972...</msg>
<status status="PASS" starttime="20201022 13:53:42.796" endtime="20201022 13:53:42.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.804" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201022 13:53:42.803" endtime="20201022 13:53:42.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.806" level="INFO">VALUE: [9.145900000000207e-05, 9.198600000000223e-05, 9.179199999999679e-05, 9.170799999999937e-05, 9.204200000000051e-05, 9.187499999999821e-05, 9.163899999999753e-05, 9.191699999999692e-05, 9.197200000000266e-05, 9.151400000000087e-05, 9.147200000000216e-05, 9.138900000000422e-05, 9.218099999999674e-05, 9.154200000000001e-05, 9.131899999999943e-05, 9.154100000000054e-05, 9.20000000000018e-05, 9.173600000000198e-05, 9.219500000000325e-05, 9.147199999999522e-05, 9.177700000000122e-05, 9.222299999999545e-05, 9.227800000000119e-05, 9.141700000000336e-05, 9.136099999999814e-05, 9.227799999999425e-05, 9.134699999999857e-05, 9.215300000000454e-05, 9.143100000000293e-05, 9.227699999999478e-05, 9.1332999999999e-05, 9.1945000000003e-05, 9.177799999999375e-05, 9.202800000000094e-05, 9.152700000000097e-05, 9.213899999999803e-05, 9.187499999999821e-05, 9.172300000000189e-05, 9.227800000000119e-05, 9.159699999999882e-05, 9.190299999999735e-05, 9.165300000000404e-05, 9.209699999999932e-05, 9.222199999999597e-05, 9.140300000000379e-05, 9.154100000000054e-05, 9.133399999999847e-05, 9.154100000000054e-05, 9.204100000000104e-05, 9.219399999999683e-05]</msg>
<status status="PASS" starttime="20201022 13:53:42.805" endtime="20201022 13:53:42.807"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.800" endtime="20201022 13:53:42.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:42.811" endtime="20201022 13:53:42.832"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.810" endtime="20201022 13:53:42.832"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.809" endtime="20201022 13:53:42.833"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.323" endtime="20201022 13:53:42.833"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.322" endtime="20201022 13:53:42.833"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.842" endtime="20201022 13:53:42.974"></status>
</kw>
<msg timestamp="20201022 13:53:42.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'data': [{'dut-result': '103'}, {'dut-result': '101'}, {'dut-result': '101'}, {'dut-result': '102'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:42.840" endtime="20201022 13:53:42.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'data': [{'dut-result': '103'}, {'dut-result': '101'}, {'dut-result': '101'}, {'dut-result': '102'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:42.976" endtime="20201022 13:53:42.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:42.979" endtime="20201022 13:53:42.981"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.838" endtime="20201022 13:53:42.981"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.836" endtime="20201022 13:53:42.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:42.985" level="INFO">${RESULT} = {'dut-result': [103, 101, 101, 102, 102, 101, 102, 102, 102, 101, 101, 102, 101, 101, 102, 102, 101, 102, 102, 101, 102, 102, 101, 102, 101, 101, 101, 102, 101, 102, 102, 102, 102, 102, 101, 102, 101,...</msg>
<status status="PASS" starttime="20201022 13:53:42.982" endtime="20201022 13:53:42.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.990" level="INFO">NAME: accuracy-TIMER_SET-63-dut</msg>
<status status="PASS" starttime="20201022 13:53:42.989" endtime="20201022 13:53:42.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:42.992" level="INFO">VALUE: [103, 101, 101, 102, 102, 101, 102, 102, 102, 101, 101, 102, 101, 101, 102, 102, 101, 102, 102, 101, 102, 102, 101, 102, 101, 101, 101, 102, 101, 102, 102, 102, 102, 102, 101, 102, 101, 102, 101, 101, 102, 102, 101, 102, 102, 101, 101, 101, 101, 102]</msg>
<status status="PASS" starttime="20201022 13:53:42.991" endtime="20201022 13:53:42.992"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.986" endtime="20201022 13:53:42.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.000" endtime="20201022 13:53:43.287"></status>
</kw>
<msg timestamp="20201022 13:53:43.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030706056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:42.999" endtime="20201022 13:53:43.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030706056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030798264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:43.291" endtime="20201022 13:53:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.300" endtime="20201022 13:53:43.301"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.995" endtime="20201022 13:53:43.302"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.994" endtime="20201022 13:53:43.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:43.306" level="INFO">${RESULT} = [{'diff': 9.220799999999987e-05}, {'diff': 9.276299999999918e-05}, {'diff': 9.283299999999703e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.276400000000212e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:43.303" endtime="20201022 13:53:43.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:43.316" level="INFO">${ACCURACY} = {'diff': [9.220799999999987e-05, 9.276299999999918e-05, 9.283299999999703e-05, 9.28330000000005e-05, 9.308300000000075e-05, 9.276400000000212e-05, 9.294400000000452e-05, 9.287499999999921e-05, 9.31529...</msg>
<status status="PASS" starttime="20201022 13:53:43.313" endtime="20201022 13:53:43.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.321" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201022 13:53:43.320" endtime="20201022 13:53:43.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.323" level="INFO">VALUE: [9.220799999999987e-05, 9.276299999999918e-05, 9.283299999999703e-05, 9.28330000000005e-05, 9.308300000000075e-05, 9.276400000000212e-05, 9.294400000000452e-05, 9.287499999999921e-05, 9.31529999999986e-05, 9.230600000000033e-05, 9.326400000000262e-05, 9.280600000000083e-05, 9.262499999999896e-05, 9.237499999999871e-05, 9.258399999999972e-05, 9.313899999999903e-05, 9.312499999999946e-05, 9.33200000000009e-05, 9.319500000000425e-05, 9.272199999999647e-05, 9.295899999999663e-05, 9.319500000000425e-05, 9.294400000000452e-05, 9.229200000000076e-05, 9.230500000000086e-05, 9.319399999999783e-05, 9.247300000000264e-05, 9.243099999999699e-05, 9.276400000000212e-05, 9.316699999999817e-05, 9.326400000000262e-05, 9.308400000000022e-05, 9.307000000000065e-05, 9.280500000000136e-05, 9.291700000000486e-05, 9.24450000000035e-05, 9.280600000000083e-05, 9.257000000000015e-05, 9.244400000000402e-05, 9.243100000000393e-05, 9.262499999999896e-05, 9.249999999999536e-05, 9.295799999999715e-05, 9.23199999999999e-05, 9.318099999999774e-05, 9.293100000000443e-05, 9.277799999999475e-05, 9.276300000000265e-05, 9.256899999999374e-05, 9.238899999999828e-05]</msg>
<status status="PASS" starttime="20201022 13:53:43.322" endtime="20201022 13:53:43.324"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.317" endtime="20201022 13:53:43.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:43.328" endtime="20201022 13:53:43.347"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.326" endtime="20201022 13:53:43.348"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.325" endtime="20201022 13:53:43.348"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.834" endtime="20201022 13:53:43.348"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:42.833" endtime="20201022 13:53:43.348"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.358" endtime="20201022 13:53:43.490"></status>
</kw>
<msg timestamp="20201022 13:53:43.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'data': [{'dut-result': '104'}, {'dut-result': '102'}, {'dut-result': '102'}, {'dut-result': '102'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:43.356" endtime="20201022 13:53:43.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'data': [{'dut-result': '104'}, {'dut-result': '102'}, {'dut-result': '102'}, {'dut-result': '102'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:43.492" endtime="20201022 13:53:43.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.495" endtime="20201022 13:53:43.497"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.354" endtime="20201022 13:53:43.497"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.351" endtime="20201022 13:53:43.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:43.502" level="INFO">${RESULT} = {'dut-result': [104, 102, 102, 102, 102, 103, 103, 102, 102, 102, 102, 103, 102, 103, 102, 103, 102, 102, 102, 102, 103, 102, 102, 103, 103, 103, 102, 102, 103, 103, 103, 102, 102, 103, 102, 103, 102,...</msg>
<status status="PASS" starttime="20201022 13:53:43.499" endtime="20201022 13:53:43.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.506" level="INFO">NAME: accuracy-TIMER_SET-64-dut</msg>
<status status="PASS" starttime="20201022 13:53:43.505" endtime="20201022 13:53:43.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.508" level="INFO">VALUE: [104, 102, 102, 102, 102, 103, 103, 102, 102, 102, 102, 103, 102, 103, 102, 103, 102, 102, 102, 102, 103, 102, 102, 103, 103, 103, 102, 102, 103, 103, 103, 102, 102, 103, 102, 103, 102, 102, 103, 102, 102, 102, 102, 103, 103, 103, 103, 103, 102, 103]</msg>
<status status="PASS" starttime="20201022 13:53:43.507" endtime="20201022 13:53:43.509"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.503" endtime="20201022 13:53:43.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.516" endtime="20201022 13:53:43.802"></status>
</kw>
<msg timestamp="20201022 13:53:43.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031026889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031119944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:43.515" endtime="20201022 13:53:43.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031026889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031119944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:43.806" endtime="20201022 13:53:43.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.815" endtime="20201022 13:53:43.816"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.512" endtime="20201022 13:53:43.817"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.510" endtime="20201022 13:53:43.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:43.821" level="INFO">${RESULT} = [{'diff': 9.305500000000161e-05}, {'diff': 9.412499999999699e-05}, {'diff': 9.408400000000122e-05}, {'diff': 9.351399999999593e-05}, {'diff': 9.397199999999772e-05}, {'diff': 9.363899999999953e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:43.818" endtime="20201022 13:53:43.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:43.826" level="INFO">${ACCURACY} = {'diff': [9.305500000000161e-05, 9.412499999999699e-05, 9.408400000000122e-05, 9.351399999999593e-05, 9.397199999999772e-05, 9.363899999999953e-05, 9.358300000000125e-05, 9.340299999999885e-05, 9.3263...</msg>
<status status="PASS" starttime="20201022 13:53:43.822" endtime="20201022 13:53:43.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.830" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201022 13:53:43.829" endtime="20201022 13:53:43.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:43.833" level="INFO">VALUE: [9.305500000000161e-05, 9.412499999999699e-05, 9.408400000000122e-05, 9.351399999999593e-05, 9.397199999999772e-05, 9.363899999999953e-05, 9.358300000000125e-05, 9.340299999999885e-05, 9.326399999999568e-05, 9.408400000000122e-05, 9.377800000000269e-05, 9.391699999999892e-05, 9.408299999999481e-05, 9.406999999999471e-05, 9.387500000000021e-05, 9.394399999999858e-05, 9.35279999999955e-05, 9.419400000000577e-05, 9.376399999999618e-05, 9.363899999999953e-05, 9.387500000000021e-05, 9.358300000000125e-05, 9.41529999999996e-05, 9.377699999999628e-05, 9.394399999999858e-05, 9.412500000000046e-05, 9.376400000000312e-05, 9.395800000000509e-05, 9.412500000000046e-05, 9.425000000000405e-05, 9.405599999999514e-05, 9.401400000000337e-05, 9.34450000000045e-05, 9.377799999999575e-05, 9.37079999999979e-05, 9.337499999999971e-05, 9.394399999999858e-05, 9.351399999999593e-05, 9.412500000000046e-05, 9.3333000000001e-05, 9.349999999999636e-05, 9.426399999999668e-05, 9.351400000000287e-05, 9.374999999999661e-05, 9.426299999999721e-05, 9.347199999999722e-05, 9.405599999999514e-05, 9.375000000000355e-05, 9.369499999999781e-05, 9.38330000000015e-05]</msg>
<status status="PASS" starttime="20201022 13:53:43.831" endtime="20201022 13:53:43.833"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.826" endtime="20201022 13:53:43.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:43.837" endtime="20201022 13:53:43.857"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.836" endtime="20201022 13:53:43.857"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.834" endtime="20201022 13:53:43.857"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.349" endtime="20201022 13:53:43.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.349" endtime="20201022 13:53:43.858"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:43.867" endtime="20201022 13:53:44.000"></status>
</kw>
<msg timestamp="20201022 13:53:44.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'data': [{'dut-result': '105'}, {'dut-result': '104'}, {'dut-result': '103'}, {'dut-result': '104'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:43.865" endtime="20201022 13:53:44.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'data': [{'dut-result': '105'}, {'dut-result': '104'}, {'dut-result': '103'}, {'dut-result': '104'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:44.002" endtime="20201022 13:53:44.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.005" endtime="20201022 13:53:44.007"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.863" endtime="20201022 13:53:44.007"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.860" endtime="20201022 13:53:44.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:44.012" level="INFO">${RESULT} = {'dut-result': [105, 104, 103, 104, 104, 103, 104, 103, 103, 104, 104, 103, 104, 104, 104, 104, 103, 103, 103, 104, 103, 104, 104, 103, 103, 104, 103, 103, 104, 104, 103, 104, 104, 104, 104, 103, 103,...</msg>
<status status="PASS" starttime="20201022 13:53:44.009" endtime="20201022 13:53:44.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.016" level="INFO">NAME: accuracy-TIMER_SET-65-dut</msg>
<status status="PASS" starttime="20201022 13:53:44.015" endtime="20201022 13:53:44.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.018" level="INFO">VALUE: [105, 104, 103, 104, 104, 103, 104, 103, 103, 104, 104, 103, 104, 104, 104, 104, 103, 103, 103, 104, 103, 104, 104, 103, 103, 104, 103, 103, 104, 104, 103, 104, 104, 104, 104, 103, 103, 103, 104, 103, 104, 104, 103, 104, 103, 103, 103, 103, 104, 104]</msg>
<status status="PASS" starttime="20201022 13:53:44.017" endtime="20201022 13:53:44.019"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.013" endtime="20201022 13:53:44.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.026" endtime="20201022 13:53:44.312"></status>
</kw>
<msg timestamp="20201022 13:53:44.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030969792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031064569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:44.024" endtime="20201022 13:53:44.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030969792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031064569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:44.316" endtime="20201022 13:53:44.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.324" endtime="20201022 13:53:44.326"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.022" endtime="20201022 13:53:44.326"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.020" endtime="20201022 13:53:44.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:44.331" level="INFO">${RESULT} = [{'diff': 9.477700000000075e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.519399999999983e-05}, {'diff': 9.467999999999976e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.476399999999718e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:44.328" endtime="20201022 13:53:44.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:44.335" level="INFO">${ACCURACY} = {'diff': [9.477700000000075e-05, 9.502800000000047e-05, 9.519399999999983e-05, 9.467999999999976e-05, 9.487500000000121e-05, 9.476399999999718e-05, 9.495799999999915e-05, 9.51660000000007e-05, 9.47919...</msg>
<status status="PASS" starttime="20201022 13:53:44.332" endtime="20201022 13:53:44.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.340" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201022 13:53:44.339" endtime="20201022 13:53:44.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.342" level="INFO">VALUE: [9.477700000000075e-05, 9.502800000000047e-05, 9.519399999999983e-05, 9.467999999999976e-05, 9.487500000000121e-05, 9.476399999999718e-05, 9.495799999999915e-05, 9.51660000000007e-05, 9.479199999999632e-05, 9.505600000000308e-05, 9.479100000000379e-05, 9.455500000000311e-05, 9.518099999999974e-05, 9.518000000000026e-05, 9.469399999999933e-05, 9.487499999999427e-05, 9.494499999999906e-05, 9.46530000000001e-05, 9.494399999999958e-05, 9.499999999999786e-05, 9.518099999999974e-05, 9.437500000000071e-05, 9.501399999999743e-05, 9.495899999999863e-05, 9.49859999999983e-05, 9.431900000000243e-05, 9.45000000000043e-05, 9.506999999999571e-05, 9.454199999999607e-05, 9.469399999999933e-05, 9.526399999999768e-05, 9.444399999999908e-05, 9.438900000000028e-05, 9.46530000000001e-05, 9.451299999999746e-05, 9.513899999999409e-05, 9.487500000000121e-05, 9.43059999999954e-05, 9.497199999999872e-05, 9.518000000000026e-05, 9.488900000000078e-05, 9.48330000000025e-05, 9.434700000000157e-05, 9.477799999999675e-05, 9.433299999999506e-05, 9.458299999999531e-05, 9.484700000000207e-05, 9.526399999999768e-05, 9.445799999999865e-05, 9.438900000000028e-05]</msg>
<status status="PASS" starttime="20201022 13:53:44.341" endtime="20201022 13:53:44.343"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.336" endtime="20201022 13:53:44.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:44.347" endtime="20201022 13:53:44.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.346" endtime="20201022 13:53:44.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.344" endtime="20201022 13:53:44.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.859" endtime="20201022 13:53:44.368"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:43.858" endtime="20201022 13:53:44.368"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.377" endtime="20201022 13:53:44.510"></status>
</kw>
<msg timestamp="20201022 13:53:44.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'data': [{'dut-result': '106'}, {'dut-result': '104'}, {'dut-result': '104'}, {'dut-result': '104'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:44.375" endtime="20201022 13:53:44.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'data': [{'dut-result': '106'}, {'dut-result': '104'}, {'dut-result': '104'}, {'dut-result': '104'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:44.512" endtime="20201022 13:53:44.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.515" endtime="20201022 13:53:44.516"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.372" endtime="20201022 13:53:44.517"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.370" endtime="20201022 13:53:44.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:44.521" level="INFO">${RESULT} = {'dut-result': [106, 104, 104, 104, 104, 104, 105, 105, 104, 104, 105, 105, 104, 104, 104, 104, 105, 104, 105, 104, 104, 105, 104, 105, 105, 105, 105, 105, 104, 105, 105, 105, 105, 104, 105, 105, 105,...</msg>
<status status="PASS" starttime="20201022 13:53:44.518" endtime="20201022 13:53:44.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.526" level="INFO">NAME: accuracy-TIMER_SET-66-dut</msg>
<status status="PASS" starttime="20201022 13:53:44.525" endtime="20201022 13:53:44.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.528" level="INFO">VALUE: [106, 104, 104, 104, 104, 104, 105, 105, 104, 104, 105, 105, 104, 104, 104, 104, 105, 104, 105, 104, 104, 105, 104, 105, 105, 105, 105, 105, 104, 105, 105, 105, 105, 104, 105, 105, 105, 104, 104, 105, 104, 104, 104, 105, 104, 105, 104, 105, 104, 105]</msg>
<status status="PASS" starttime="20201022 13:53:44.527" endtime="20201022 13:53:44.528"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.522" endtime="20201022 13:53:44.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.535" endtime="20201022 13:53:44.820"></status>
</kw>
<msg timestamp="20201022 13:53:44.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030890181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030985361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:44.534" endtime="20201022 13:53:44.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030890181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030985361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:44.824" endtime="20201022 13:53:44.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.833" endtime="20201022 13:53:44.834"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.531" endtime="20201022 13:53:44.835"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.529" endtime="20201022 13:53:44.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:44.840" level="INFO">${RESULT} = [{'diff': 9.518000000000026e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.568100000000371e-05}, {'diff': 9.605599999999714e-05}, {'diff': 9.60000000000058e-05}, {'diff': 9.53479999999951e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:53:44.836" endtime="20201022 13:53:44.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:44.845" level="INFO">${ACCURACY} = {'diff': [9.518000000000026e-05, 9.599999999999886e-05, 9.568100000000371e-05, 9.605599999999714e-05, 9.60000000000058e-05, 9.53479999999951e-05, 9.588900000000178e-05, 9.58609999999957e-05, 9.5818999...</msg>
<status status="PASS" starttime="20201022 13:53:44.841" endtime="20201022 13:53:44.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.849" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201022 13:53:44.848" endtime="20201022 13:53:44.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:44.852" level="INFO">VALUE: [9.518000000000026e-05, 9.599999999999886e-05, 9.568100000000371e-05, 9.605599999999714e-05, 9.60000000000058e-05, 9.53479999999951e-05, 9.588900000000178e-05, 9.58609999999957e-05, 9.581899999999699e-05, 9.544400000000008e-05, 9.537500000000171e-05, 9.551399999999793e-05, 9.581900000000393e-05, 9.541700000000042e-05, 9.579199999999732e-05, 9.594400000000058e-05, 9.60000000000058e-05, 9.601400000000537e-05, 9.533399999999553e-05, 9.612499999999552e-05, 9.551400000000487e-05, 9.551400000000487e-05, 9.613899999999509e-05, 9.53609999999952e-05, 9.611100000000289e-05, 9.534699999999563e-05, 9.587499999999527e-05, 9.595899999999963e-05, 9.58880000000023e-05, 9.612499999999552e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.623599999999954e-05, 9.599999999999886e-05, 9.556899999999674e-05, 9.58880000000023e-05, 9.57079999999999e-05, 9.561100000000239e-05, 9.53200000000029e-05, 9.626399999999868e-05, 9.557000000000315e-05, 9.573699999999852e-05, 9.576399999999818e-05, 9.563900000000153e-05, 9.563900000000153e-05, 9.580500000000436e-05, 9.544400000000008e-05, 9.574999999999861e-05, 9.581999999999646e-05, 9.581999999999646e-05]</msg>
<status status="PASS" starttime="20201022 13:53:44.850" endtime="20201022 13:53:44.852"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.846" endtime="20201022 13:53:44.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:44.856" endtime="20201022 13:53:44.876"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.855" endtime="20201022 13:53:44.876"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.854" endtime="20201022 13:53:44.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.369" endtime="20201022 13:53:44.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.368" endtime="20201022 13:53:44.877"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:44.886" endtime="20201022 13:53:45.019"></status>
</kw>
<msg timestamp="20201022 13:53:45.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'data': [{'dut-result': '107'}, {'dut-result': '105'}, {'dut-result': '105'}, {'dut-result': '105'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:44.884" endtime="20201022 13:53:45.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'data': [{'dut-result': '107'}, {'dut-result': '105'}, {'dut-result': '105'}, {'dut-result': '105'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:45.021" endtime="20201022 13:53:45.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.024" endtime="20201022 13:53:45.026"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.882" endtime="20201022 13:53:45.026"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.880" endtime="20201022 13:53:45.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:45.031" level="INFO">${RESULT} = {'dut-result': [107, 105, 105, 105, 106, 106, 105, 105, 106, 106, 105, 105, 105, 105, 106, 106, 105, 105, 105, 105, 105, 105, 105, 106, 106, 105, 106, 106, 105, 105, 106, 106, 106, 105, 105, 105, 105,...</msg>
<status status="PASS" starttime="20201022 13:53:45.028" endtime="20201022 13:53:45.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.035" level="INFO">NAME: accuracy-TIMER_SET-67-dut</msg>
<status status="PASS" starttime="20201022 13:53:45.034" endtime="20201022 13:53:45.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.037" level="INFO">VALUE: [107, 105, 105, 105, 106, 106, 105, 105, 106, 106, 105, 105, 105, 105, 106, 106, 105, 105, 105, 105, 105, 105, 105, 106, 106, 105, 106, 106, 105, 105, 106, 106, 106, 105, 105, 105, 105, 105, 106, 106, 106, 105, 105, 106, 106, 105, 105, 106, 105, 105]</msg>
<status status="PASS" starttime="20201022 13:53:45.036" endtime="20201022 13:53:45.038"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.032" endtime="20201022 13:53:45.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.045" endtime="20201022 13:53:45.331"></status>
</kw>
<msg timestamp="20201022 13:53:45.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030346097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030442778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:45.043" endtime="20201022 13:53:45.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030346097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030442778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:45.335" endtime="20201022 13:53:45.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.344" endtime="20201022 13:53:45.345"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.041" endtime="20201022 13:53:45.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.039" endtime="20201022 13:53:45.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:45.350" level="INFO">${RESULT} = [{'diff': 9.668100000000124e-05}, {'diff': 9.676400000000265e-05}, {'diff': 9.652800000000197e-05}, {'diff': 9.727800000000272e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.648699999999927e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:45.347" endtime="20201022 13:53:45.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:45.355" level="INFO">${ACCURACY} = {'diff': [9.668100000000124e-05, 9.676400000000265e-05, 9.652800000000197e-05, 9.727800000000272e-05, 9.649999999999936e-05, 9.648699999999927e-05, 9.643100000000099e-05, 9.630499999999792e-05, 9.6513...</msg>
<status status="PASS" starttime="20201022 13:53:45.351" endtime="20201022 13:53:45.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.360" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201022 13:53:45.359" endtime="20201022 13:53:45.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.362" level="INFO">VALUE: [9.668100000000124e-05, 9.676400000000265e-05, 9.652800000000197e-05, 9.727800000000272e-05, 9.649999999999936e-05, 9.648699999999927e-05, 9.643100000000099e-05, 9.630499999999792e-05, 9.651399999999893e-05, 9.636100000000314e-05, 9.633299999999706e-05, 9.7027999999999e-05, 9.652700000000597e-05, 9.687500000000321e-05, 9.722300000000045e-05, 9.688900000000278e-05, 9.686100000000364e-05, 9.725000000000011e-05, 9.712499999999652e-05, 9.651399999999893e-05, 9.669400000000133e-05, 9.645800000000065e-05, 9.716700000000217e-05, 9.709699999999738e-05, 9.725000000000011e-05, 9.668100000000124e-05, 9.699999999999986e-05, 9.687499999999627e-05, 9.64859999999998e-05, 9.687499999999627e-05, 9.655499999999817e-05, 9.638900000000228e-05, 9.706999999999771e-05, 9.720900000000088e-05, 9.722199999999404e-05, 9.708299999999781e-05, 9.645800000000065e-05, 9.668100000000124e-05, 9.674999999999961e-05, 9.706899999999824e-05, 9.651400000000587e-05, 9.708299999999781e-05, 9.659699999999688e-05, 9.631900000000443e-05, 9.68059999999979e-05, 9.659699999999688e-05, 9.691600000000244e-05, 9.716699999999523e-05, 9.701399999999943e-05, 9.711099999999695e-05]</msg>
<status status="PASS" starttime="20201022 13:53:45.361" endtime="20201022 13:53:45.363"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.356" endtime="20201022 13:53:45.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:45.367" endtime="20201022 13:53:45.386"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.365" endtime="20201022 13:53:45.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.364" endtime="20201022 13:53:45.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.878" endtime="20201022 13:53:45.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:44.877" endtime="20201022 13:53:45.388"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.396" endtime="20201022 13:53:45.529"></status>
</kw>
<msg timestamp="20201022 13:53:45.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'data': [{'dut-result': '108'}, {'dut-result': '107'}, {'dut-result': '107'}, {'dut-result': '106'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:45.395" endtime="20201022 13:53:45.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'data': [{'dut-result': '108'}, {'dut-result': '107'}, {'dut-result': '107'}, {'dut-result': '106'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:45.531" endtime="20201022 13:53:45.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.534" endtime="20201022 13:53:45.536"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.392" endtime="20201022 13:53:45.536"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.390" endtime="20201022 13:53:45.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:45.544" level="INFO">${RESULT} = {'dut-result': [108, 107, 107, 106, 106, 106, 107, 107, 106, 107, 106, 106, 106, 107, 106, 106, 107, 107, 106, 107, 106, 107, 107, 107, 106, 106, 107, 107, 107, 107, 106, 107, 106, 107, 107, 107, 107,...</msg>
<status status="PASS" starttime="20201022 13:53:45.538" endtime="20201022 13:53:45.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.548" level="INFO">NAME: accuracy-TIMER_SET-68-dut</msg>
<status status="PASS" starttime="20201022 13:53:45.547" endtime="20201022 13:53:45.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.550" level="INFO">VALUE: [108, 107, 107, 106, 106, 106, 107, 107, 106, 107, 106, 106, 106, 107, 106, 106, 107, 107, 106, 107, 106, 107, 107, 107, 106, 106, 107, 107, 107, 107, 106, 107, 106, 107, 107, 107, 107, 107, 106, 106, 106, 107, 106, 107, 107, 106, 106, 107, 107, 107]</msg>
<status status="PASS" starttime="20201022 13:53:45.549" endtime="20201022 13:53:45.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.545" endtime="20201022 13:53:45.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.558" endtime="20201022 13:53:45.843"></status>
</kw>
<msg timestamp="20201022 13:53:45.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03020775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030305111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:45.556" endtime="20201022 13:53:45.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03020775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030305111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:45.848" endtime="20201022 13:53:45.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.856" endtime="20201022 13:53:45.857"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.554" endtime="20201022 13:53:45.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.552" endtime="20201022 13:53:45.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:45.862" level="INFO">${RESULT} = [{'diff': 9.736100000000067e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.744400000000208e-05}, {'diff': 9.755500000000264e-05}, {'diff': 9.797199999999825e-05}, {'diff': 9.791699999999945e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:45.859" endtime="20201022 13:53:45.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:45.867" level="INFO">${ACCURACY} = {'diff': [9.736100000000067e-05, 9.726399999999968e-05, 9.744400000000208e-05, 9.755500000000264e-05, 9.797199999999825e-05, 9.791699999999945e-05, 9.765299999999963e-05, 9.78479999999976e-05, 9.77500...</msg>
<status status="PASS" starttime="20201022 13:53:45.863" endtime="20201022 13:53:45.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.872" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201022 13:53:45.871" endtime="20201022 13:53:45.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:45.874" level="INFO">VALUE: [9.736100000000067e-05, 9.726399999999968e-05, 9.744400000000208e-05, 9.755500000000264e-05, 9.797199999999825e-05, 9.791699999999945e-05, 9.765299999999963e-05, 9.78479999999976e-05, 9.775000000000061e-05, 9.800000000000086e-05, 9.812499999999752e-05, 9.79860000000013e-05, 9.738799999999687e-05, 9.816699999999623e-05, 9.825000000000111e-05, 9.745800000000165e-05, 9.794399999999565e-05, 9.78609999999977e-05, 9.800000000000086e-05, 9.81809999999958e-05, 9.734699999999763e-05, 9.747200000000122e-05, 9.754199999999907e-05, 9.745900000000113e-05, 9.73880000000038e-05, 9.795800000000215e-05, 9.731900000000543e-05, 9.787500000000421e-05, 9.731899999999849e-05, 9.743099999999505e-05, 9.805499999999967e-05, 9.78059999999989e-05, 9.747299999999376e-05, 9.806900000000618e-05, 9.812500000000446e-05, 9.791700000000292e-05, 9.801400000000043e-05, 9.805499999999967e-05, 9.748599999999386e-05, 9.725000000000011e-05, 9.806899999999924e-05, 9.731999999999796e-05, 9.818100000000274e-05, 9.772199999999454e-05, 9.793100000000249e-05, 9.812499999999752e-05, 9.800000000000086e-05, 9.750000000000036e-05, 9.831899999999949e-05, 9.731899999999849e-05]</msg>
<status status="PASS" starttime="20201022 13:53:45.873" endtime="20201022 13:53:45.875"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.868" endtime="20201022 13:53:45.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:45.879" endtime="20201022 13:53:45.898"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.877" endtime="20201022 13:53:45.899"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.876" endtime="20201022 13:53:45.900"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.389" endtime="20201022 13:53:45.900"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.388" endtime="20201022 13:53:45.900"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:45.909" endtime="20201022 13:53:46.042"></status>
</kw>
<msg timestamp="20201022 13:53:46.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'data': [{'dut-result': '109'}, {'dut-result': '107'}, {'dut-result': '107'}, {'dut-result': '108'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:45.907" endtime="20201022 13:53:46.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'data': [{'dut-result': '109'}, {'dut-result': '107'}, {'dut-result': '107'}, {'dut-result': '108'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:46.043" endtime="20201022 13:53:46.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.047" endtime="20201022 13:53:46.048"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.905" endtime="20201022 13:53:46.049"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.903" endtime="20201022 13:53:46.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:46.054" level="INFO">${RESULT} = {'dut-result': [109, 107, 107, 108, 107, 107, 108, 108, 107, 108, 107, 107, 107, 107, 107, 108, 108, 107, 107, 107, 108, 108, 108, 107, 108, 108, 107, 108, 107, 108, 107, 108, 108, 107, 107, 108, 107,...</msg>
<status status="PASS" starttime="20201022 13:53:46.050" endtime="20201022 13:53:46.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.058" level="INFO">NAME: accuracy-TIMER_SET-69-dut</msg>
<status status="PASS" starttime="20201022 13:53:46.057" endtime="20201022 13:53:46.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.061" level="INFO">VALUE: [109, 107, 107, 108, 107, 107, 108, 108, 107, 108, 107, 107, 107, 107, 107, 108, 108, 107, 107, 107, 108, 108, 108, 107, 108, 108, 107, 108, 107, 108, 107, 108, 108, 107, 107, 108, 107, 107, 108, 107, 108, 108, 107, 107, 108, 108, 108, 107, 108, 107]</msg>
<status status="PASS" starttime="20201022 13:53:46.060" endtime="20201022 13:53:46.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.055" endtime="20201022 13:53:46.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.068" endtime="20201022 13:53:46.353"></status>
</kw>
<msg timestamp="20201022 13:53:46.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030788792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030887597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:46.066" endtime="20201022 13:53:46.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030788792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030887597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:46.357" endtime="20201022 13:53:46.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.365" endtime="20201022 13:53:46.367"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.064" endtime="20201022 13:53:46.368"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.062" endtime="20201022 13:53:46.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:46.372" level="INFO">${RESULT} = [{'diff': 9.880500000000042e-05}, {'diff': 9.843099999999952e-05}, {'diff': 9.894400000000012e-05}, {'diff': 9.848599999999832e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.829199999999982e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:53:46.369" endtime="20201022 13:53:46.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:46.377" level="INFO">${ACCURACY} = {'diff': [9.880500000000042e-05, 9.843099999999952e-05, 9.894400000000012e-05, 9.848599999999832e-05, 9.879200000000032e-05, 9.829199999999982e-05, 9.881899999999999e-05, 9.901400000000143e-05, 9.9166...</msg>
<status status="PASS" starttime="20201022 13:53:46.373" endtime="20201022 13:53:46.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.382" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201022 13:53:46.381" endtime="20201022 13:53:46.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.384" level="INFO">VALUE: [9.880500000000042e-05, 9.843099999999952e-05, 9.894400000000012e-05, 9.848599999999832e-05, 9.879200000000032e-05, 9.829199999999982e-05, 9.881899999999999e-05, 9.901400000000143e-05, 9.916699999999723e-05, 9.922200000000297e-05, 9.904200000000057e-05, 9.877800000000075e-05, 9.875000000000161e-05, 9.86809999999963e-05, 9.837499999999777e-05, 9.888900000000478e-05, 9.833299999999906e-05, 9.880500000000042e-05, 9.884699999999913e-05, 9.838899999999734e-05, 9.911100000000589e-05, 9.84860000000018e-05, 9.916699999999723e-05, 9.873600000000204e-05, 9.880500000000042e-05, 9.904199999999364e-05, 9.873600000000204e-05, 9.904200000000057e-05, 9.841700000000342e-05, 9.904200000000057e-05, 9.890299999999741e-05, 9.91530000000046e-05, 9.92359999999956e-05, 9.905600000000014e-05, 9.893100000000349e-05, 9.884699999999913e-05, 9.856899999999974e-05, 9.833399999999853e-05, 9.907000000000665e-05, 9.89730000000022e-05, 9.829199999999982e-05, 9.862500000000496e-05, 9.915299999999766e-05, 9.890199999999794e-05, 9.872300000000195e-05, 9.87359999999951e-05, 9.827800000000025e-05, 9.879200000000032e-05, 9.891699999999698e-05, 9.836100000000514e-05]</msg>
<status status="PASS" starttime="20201022 13:53:46.383" endtime="20201022 13:53:46.385"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.378" endtime="20201022 13:53:46.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:46.389" endtime="20201022 13:53:46.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.387" endtime="20201022 13:53:46.409"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.386" endtime="20201022 13:53:46.409"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.901" endtime="20201022 13:53:46.409"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:45.900" endtime="20201022 13:53:46.410"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.418" endtime="20201022 13:53:46.551"></status>
</kw>
<msg timestamp="20201022 13:53:46.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'data': [{'dut-result': '110'}, {'dut-result': '108'}, {'dut-result': '108'}, {'dut-result': '109'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:46.417" endtime="20201022 13:53:46.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'data': [{'dut-result': '110'}, {'dut-result': '108'}, {'dut-result': '108'}, {'dut-result': '109'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:46.553" endtime="20201022 13:53:46.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.556" endtime="20201022 13:53:46.557"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.414" endtime="20201022 13:53:46.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.412" endtime="20201022 13:53:46.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:46.563" level="INFO">${RESULT} = {'dut-result': [110, 108, 108, 109, 108, 108, 109, 108, 108, 108, 109, 108, 108, 109, 109, 108, 108, 108, 109, 109, 108, 109, 108, 108, 109, 109, 108, 109, 109, 108, 109, 108, 108, 109, 109, 109, 109,...</msg>
<status status="PASS" starttime="20201022 13:53:46.559" endtime="20201022 13:53:46.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.568" level="INFO">NAME: accuracy-TIMER_SET-70-dut</msg>
<status status="PASS" starttime="20201022 13:53:46.567" endtime="20201022 13:53:46.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.570" level="INFO">VALUE: [110, 108, 108, 109, 108, 108, 109, 108, 108, 108, 109, 108, 108, 109, 109, 108, 108, 108, 109, 109, 108, 109, 108, 108, 109, 109, 108, 109, 109, 108, 109, 108, 108, 109, 109, 109, 109, 108, 109, 109, 108, 109, 109, 109, 109, 108, 109, 109, 108, 109]</msg>
<status status="PASS" starttime="20201022 13:53:46.569" endtime="20201022 13:53:46.570"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.564" endtime="20201022 13:53:46.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.577" endtime="20201022 13:53:46.863"></status>
</kw>
<msg timestamp="20201022 13:53:46.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03024025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030340097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:46.575" endtime="20201022 13:53:46.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03024025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030340097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:46.867" endtime="20201022 13:53:46.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.875" endtime="20201022 13:53:46.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.573" endtime="20201022 13:53:46.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.571" endtime="20201022 13:53:46.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:46.882" level="INFO">${RESULT} = [{'diff': 9.984700000000013e-05}, {'diff': 9.993000000000155e-05}, {'diff': 0.00010015299999999866}, {'diff': 9.941700000000095e-05}, {'diff': 9.98609999999997e-05}, {'diff': 9.98609999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:53:46.879" endtime="20201022 13:53:46.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:46.887" level="INFO">${ACCURACY} = {'diff': [9.984700000000013e-05, 9.993000000000155e-05, 0.00010015299999999866, 9.941700000000095e-05, 9.98609999999997e-05, 9.98609999999997e-05, 9.992999999999808e-05, 9.99860000000033e-05, 9.934699...</msg>
<status status="PASS" starttime="20201022 13:53:46.883" endtime="20201022 13:53:46.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.897" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201022 13:53:46.891" endtime="20201022 13:53:46.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:46.901" level="INFO">VALUE: [9.984700000000013e-05, 9.993000000000155e-05, 0.00010015299999999866, 9.941700000000095e-05, 9.98609999999997e-05, 9.98609999999997e-05, 9.992999999999808e-05, 9.99860000000033e-05, 9.934699999999963e-05, 9.955500000000117e-05, 9.963899999999859e-05, 0.00010019400000000483, 0.00010027700000000278, 9.981900000000099e-05, 9.938899999999834e-05, 0.00010019499999999737, 0.0001001809999999978, 0.00010001400000000243, 0.00010007000000000071, 9.9513999999995e-05, 9.942999999999758e-05, 9.937499999999877e-05, 9.942999999999758e-05, 9.943099999999705e-05, 9.994400000000458e-05, 9.927800000000125e-05, 9.992999999999808e-05, 9.950000000000236e-05, 9.973700000000252e-05, 9.930500000000092e-05, 9.988899999999884e-05, 9.93060000000004e-05, 9.941699999999748e-05, 9.942999999999758e-05, 9.948599999999586e-05, 9.99860000000033e-05, 0.00010000000000000286, 9.979100000000185e-05, 9.93609999999992e-05, 0.00010011199999999942, 9.93060000000004e-05, 0.00010017999999999833, 0.00010016700000000517, 9.98609999999997e-05, 9.995800000000415e-05, 9.93609999999992e-05, 0.00010011099999999995, 9.930500000000092e-05, 9.93609999999992e-05, 9.992999999999808e-05]</msg>
<status status="PASS" starttime="20201022 13:53:46.899" endtime="20201022 13:53:46.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.888" endtime="20201022 13:53:46.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:46.908" endtime="20201022 13:53:46.927"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.906" endtime="20201022 13:53:46.928"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.904" endtime="20201022 13:53:46.929"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.410" endtime="20201022 13:53:46.929"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.410" endtime="20201022 13:53:46.930"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:46.939" endtime="20201022 13:53:47.072"></status>
</kw>
<msg timestamp="20201022 13:53:47.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'data': [{'dut-result': '111'}, {'dut-result': '109'}, {'dut-result': '110'}, {'dut-result': '109'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:46.937" endtime="20201022 13:53:47.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'data': [{'dut-result': '111'}, {'dut-result': '109'}, {'dut-result': '110'}, {'dut-result': '109'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:47.075" endtime="20201022 13:53:47.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.080" endtime="20201022 13:53:47.083"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.935" endtime="20201022 13:53:47.084"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.933" endtime="20201022 13:53:47.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:47.093" level="INFO">${RESULT} = {'dut-result': [111, 109, 110, 109, 109, 110, 110, 109, 110, 109, 109, 110, 109, 109, 109, 109, 110, 110, 110, 110, 110, 109, 109, 109, 109, 110, 109, 109, 109, 109, 109, 109, 110, 110, 109, 109, 110,...</msg>
<status status="PASS" starttime="20201022 13:53:47.087" endtime="20201022 13:53:47.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.100" level="INFO">NAME: accuracy-TIMER_SET-71-dut</msg>
<status status="PASS" starttime="20201022 13:53:47.098" endtime="20201022 13:53:47.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.104" level="INFO">VALUE: [111, 109, 110, 109, 109, 110, 110, 109, 110, 109, 109, 110, 109, 109, 109, 109, 110, 110, 110, 110, 110, 109, 109, 109, 109, 110, 109, 109, 109, 109, 109, 109, 110, 110, 109, 109, 110, 109, 109, 110, 110, 109, 109, 110, 109, 109, 109, 110, 110, 109]</msg>
<status status="PASS" starttime="20201022 13:53:47.102" endtime="20201022 13:53:47.105"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.094" endtime="20201022 13:53:47.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.117" endtime="20201022 13:53:47.404"></status>
</kw>
<msg timestamp="20201022 13:53:47.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032024569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:47.114" endtime="20201022 13:53:47.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031923708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032024569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:47.408" endtime="20201022 13:53:47.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.416" endtime="20201022 13:53:47.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.110" endtime="20201022 13:53:47.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.107" endtime="20201022 13:53:47.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:47.423" level="INFO">${RESULT} = [{'diff': 0.0001008610000000007}, {'diff': 0.00010062500000000002}, {'diff': 0.00010091699999999898}, {'diff': 0.0001008480000000006}, {'diff': 0.00010040299999999891}, {'diff': 0.00010095899999999769...</msg>
<status status="PASS" starttime="20201022 13:53:47.420" endtime="20201022 13:53:47.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:47.427" level="INFO">${ACCURACY} = {'diff': [0.0001008610000000007, 0.00010062500000000002, 0.00010091699999999898, 0.0001008480000000006, 0.00010040299999999891, 0.00010095899999999769, 0.00010097199999999779, 0.00010079199999999539, ...</msg>
<status status="PASS" starttime="20201022 13:53:47.424" endtime="20201022 13:53:47.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.432" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201022 13:53:47.431" endtime="20201022 13:53:47.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.434" level="INFO">VALUE: [0.0001008610000000007, 0.00010062500000000002, 0.00010091699999999898, 0.0001008480000000006, 0.00010040299999999891, 0.00010095899999999769, 0.00010097199999999779, 0.00010079199999999539, 0.00010090199999999994, 0.00010104200000000257, 0.0001012359999999976, 0.00010066599999999926, 0.00010029200000000182, 0.00010093000000000601, 0.00010077799999999582, 0.00010087500000000027, 0.00010047199999999729, 0.00010106900000000224, 0.00010120900000000488, 0.00010047199999999729, 0.0001003610000000002, 0.0001012359999999976, 0.00010066699999999873, 0.00010041700000000542, 0.00010115299999999966, 0.00010066700000000567, 0.0001005410000000026, 0.00010040199999999944, 0.00010109800000000085, 0.00010075000000000361, 0.00010090299999999941, 0.00010055600000000164, 0.00010066599999999926, 0.00010087500000000027, 0.00010029200000000182, 0.00010109700000000138, 0.00010052700000000303, 0.00010115299999999966, 0.00010054200000000207, 0.00010094499999999812, 0.00010032000000000096, 0.00010062500000000002, 0.0001009159999999995, 0.00010042999999999858, 0.00010113900000000009, 0.0001005410000000026, 0.00010073600000000404, 0.00010109700000000138, 0.00010077799999999582, 0.00010063899999999959]</msg>
<status status="PASS" starttime="20201022 13:53:47.433" endtime="20201022 13:53:47.435"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.428" endtime="20201022 13:53:47.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:47.439" endtime="20201022 13:53:47.458"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.437" endtime="20201022 13:53:47.459"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.436" endtime="20201022 13:53:47.459"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.931" endtime="20201022 13:53:47.460"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:46.930" endtime="20201022 13:53:47.460"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.469" endtime="20201022 13:53:47.602"></status>
</kw>
<msg timestamp="20201022 13:53:47.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'data': [{'dut-result': '112'}, {'dut-result': '111'}, {'dut-result': '110'}, {'dut-result': '110'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:47.467" endtime="20201022 13:53:47.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'data': [{'dut-result': '112'}, {'dut-result': '111'}, {'dut-result': '110'}, {'dut-result': '110'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:47.604" endtime="20201022 13:53:47.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.607" endtime="20201022 13:53:47.608"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.465" endtime="20201022 13:53:47.609"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.463" endtime="20201022 13:53:47.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:47.613" level="INFO">${RESULT} = {'dut-result': [112, 111, 110, 110, 111, 110, 110, 110, 111, 110, 110, 111, 110, 110, 110, 110, 111, 111, 110, 111, 110, 111, 110, 110, 110, 110, 110, 110, 111, 110, 111, 110, 110, 110, 110, 111, 110,...</msg>
<status status="PASS" starttime="20201022 13:53:47.610" endtime="20201022 13:53:47.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.619" level="INFO">NAME: accuracy-TIMER_SET-72-dut</msg>
<status status="PASS" starttime="20201022 13:53:47.618" endtime="20201022 13:53:47.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.621" level="INFO">VALUE: [112, 111, 110, 110, 111, 110, 110, 110, 111, 110, 110, 111, 110, 110, 110, 110, 111, 111, 110, 111, 110, 111, 110, 110, 110, 110, 110, 110, 111, 110, 111, 110, 110, 110, 110, 111, 110, 110, 110, 111, 110, 111, 110, 110, 110, 110, 110, 110, 111, 110]</msg>
<status status="PASS" starttime="20201022 13:53:47.620" endtime="20201022 13:53:47.621"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.614" endtime="20201022 13:53:47.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.628" endtime="20201022 13:53:47.913"></status>
</kw>
<msg timestamp="20201022 13:53:47.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030724167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:47.627" endtime="20201022 13:53:47.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030724167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030825778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:47.917" endtime="20201022 13:53:47.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.926" endtime="20201022 13:53:47.927"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.624" endtime="20201022 13:53:47.928"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.622" endtime="20201022 13:53:47.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:47.932" level="INFO">${RESULT} = [{'diff': 0.00010161100000000145}, {'diff': 0.00010141699999999948}, {'diff': 0.00010198600000000183}, {'diff': 0.0001015549999999997}, {'diff': 0.00010130500000000292}, {'diff': 0.0001017229999999980...</msg>
<status status="PASS" starttime="20201022 13:53:47.929" endtime="20201022 13:53:47.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:47.936" level="INFO">${ACCURACY} = {'diff': [0.00010161100000000145, 0.00010141699999999948, 0.00010198600000000183, 0.0001015549999999997, 0.00010130500000000292, 0.00010172299999999801, 0.00010147199999999829, 0.00010184700000000213,...</msg>
<status status="PASS" starttime="20201022 13:53:47.933" endtime="20201022 13:53:47.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.942" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201022 13:53:47.940" endtime="20201022 13:53:47.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:47.944" level="INFO">VALUE: [0.00010161100000000145, 0.00010141699999999948, 0.00010198600000000183, 0.0001015549999999997, 0.00010130500000000292, 0.00010172299999999801, 0.00010147199999999829, 0.00010184700000000213, 0.00010161100000000145, 0.00010155500000000317, 0.00010125000000000411, 0.000102028000000004, 0.00010220799999999947, 0.0001020689999999963, 0.00010222199999999904, 0.00010179199999999639, 0.0001018610000000017, 0.00010159700000000188, 0.000102028000000004, 0.00010195899999999869, 0.00010220899999999894, 0.00010184699999999519, 0.00010220799999999947, 0.0001022359999999986, 0.00010187500000000127, 0.00010183300000000256, 0.00010193000000000008, 0.00010127700000000378, 0.0001015689999999958, 0.00010165199999999375, 0.00010165200000000069, 0.00010179100000000385, 0.00010161100000000145, 0.00010183300000000256, 0.00010126399999999675, 0.00010177800000000375, 0.00010180500000000342, 0.00010130500000000292, 0.00010226400000000468, 0.0001020559999999962, 0.0001019860000000053, 0.00010152799999999657, 0.00010159700000000188, 0.00010150000000000436, 0.00010211099999999501, 0.00010161100000000145, 0.00010205600000000314, 0.00010161100000000145, 0.00010154199999999614, 0.00010162500000000102]</msg>
<status status="PASS" starttime="20201022 13:53:47.943" endtime="20201022 13:53:47.945"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.937" endtime="20201022 13:53:47.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:47.949" endtime="20201022 13:53:47.968"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.947" endtime="20201022 13:53:47.969"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.946" endtime="20201022 13:53:47.969"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.461" endtime="20201022 13:53:47.970"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.460" endtime="20201022 13:53:47.970"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:47.978" endtime="20201022 13:53:48.112"></status>
</kw>
<msg timestamp="20201022 13:53:48.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'data': [{'dut-result': '113'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:47.977" endtime="20201022 13:53:48.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'data': [{'dut-result': '113'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:48.113" endtime="20201022 13:53:48.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.117" endtime="20201022 13:53:48.118"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.974" endtime="20201022 13:53:48.119"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.972" endtime="20201022 13:53:48.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:48.123" level="INFO">${RESULT} = {'dut-result': [113, 112, 112, 112, 111, 112, 112, 111, 111, 112, 111, 112, 111, 112, 111, 112, 112, 111, 111, 111, 111, 112, 111, 111, 111, 111, 111, 111, 111, 111, 112, 111, 111, 111, 112, 111, 111,...</msg>
<status status="PASS" starttime="20201022 13:53:48.120" endtime="20201022 13:53:48.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.127" level="INFO">NAME: accuracy-TIMER_SET-73-dut</msg>
<status status="PASS" starttime="20201022 13:53:48.126" endtime="20201022 13:53:48.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.130" level="INFO">VALUE: [113, 112, 112, 112, 111, 112, 112, 111, 111, 112, 111, 112, 111, 112, 111, 112, 112, 111, 111, 111, 111, 112, 111, 111, 111, 111, 111, 111, 111, 111, 112, 111, 111, 111, 112, 111, 111, 112, 112, 112, 112, 112, 111, 111, 111, 111, 111, 111, 112, 112]</msg>
<status status="PASS" starttime="20201022 13:53:48.129" endtime="20201022 13:53:48.130"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.124" endtime="20201022 13:53:48.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.138" endtime="20201022 13:53:48.423"></status>
</kw>
<msg timestamp="20201022 13:53:48.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030403111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030506, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:48.136" endtime="20201022 13:53:48.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030403111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030506, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:48.432" endtime="20201022 13:53:48.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.440" endtime="20201022 13:53:48.442"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.134" endtime="20201022 13:53:48.442"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.131" endtime="20201022 13:53:48.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:48.447" level="INFO">${RESULT} = [{'diff': 0.00010288899999999837}, {'diff': 0.00010277800000000128}, {'diff': 0.00010311100000000295}, {'diff': 0.00010270799999999997}, {'diff': 0.0001031810000000008}, {'diff': 0.0001029170000000009...</msg>
<status status="PASS" starttime="20201022 13:53:48.444" endtime="20201022 13:53:48.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:48.451" level="INFO">${ACCURACY} = {'diff': [0.00010288899999999837, 0.00010277800000000128, 0.00010311100000000295, 0.00010270799999999997, 0.0001031810000000008, 0.00010291700000000098, 0.00010243000000000058, 0.00010238900000000134,...</msg>
<status status="PASS" starttime="20201022 13:53:48.448" endtime="20201022 13:53:48.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.455" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201022 13:53:48.454" endtime="20201022 13:53:48.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.458" level="INFO">VALUE: [0.00010288899999999837, 0.00010277800000000128, 0.00010311100000000295, 0.00010270799999999997, 0.0001031810000000008, 0.00010291700000000098, 0.00010243000000000058, 0.00010238900000000134, 0.00010294500000000012, 0.00010275000000000561, 0.00010312500000000252, 0.00010227699999999784, 0.00010247199999999929, 0.00010266700000000073, 0.00010298599999999936, 0.0001027359999999991, 0.00010279199999999739, 0.00010263900000000159, 0.00010243000000000058, 0.00010273699999999858, 0.00010286099999999576, 0.00010294500000000012, 0.00010330599999999746, 0.00010233299999999612, 0.00010320800000000047, 0.00010254199999999714, 0.00010272200000000647, 0.00010243100000000005, 0.00010319500000000037, 0.00010272199999999954, 0.00010243100000000005, 0.00010324999999999918, 0.00010243000000000058, 0.0001027359999999991, 0.00010320899999999994, 0.00010259700000000288, 0.0001023480000000021, 0.00010230499999999698, 0.000103028000000005, 0.00010240299999999397, 0.00010288900000000184, 0.00010245799999999972, 0.0001024860000000058, 0.00010269499999999987, 0.0001031940000000009, 0.00010295800000000022, 0.00010272199999999954, 0.00010316600000000176, 0.0001030139999999985, 0.00010280599999999696]</msg>
<status status="PASS" starttime="20201022 13:53:48.456" endtime="20201022 13:53:48.458"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.452" endtime="20201022 13:53:48.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:48.462" endtime="20201022 13:53:48.482"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.461" endtime="20201022 13:53:48.483"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.459" endtime="20201022 13:53:48.483"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.971" endtime="20201022 13:53:48.484"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:47.970" endtime="20201022 13:53:48.484"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.493" endtime="20201022 13:53:48.626"></status>
</kw>
<msg timestamp="20201022 13:53:48.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'data': [{'dut-result': '114'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:48.491" endtime="20201022 13:53:48.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'data': [{'dut-result': '114'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result': '112'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:48.628" endtime="20201022 13:53:48.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.631" endtime="20201022 13:53:48.633"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.488" endtime="20201022 13:53:48.633"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.486" endtime="20201022 13:53:48.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:48.637" level="INFO">${RESULT} = {'dut-result': [114, 112, 112, 112, 112, 112, 113, 113, 113, 112, 112, 113, 113, 113, 113, 112, 112, 113, 112, 113, 113, 112, 112, 113, 112, 113, 113, 113, 112, 112, 113, 113, 113, 112, 113, 113, 113,...</msg>
<status status="PASS" starttime="20201022 13:53:48.634" endtime="20201022 13:53:48.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.642" level="INFO">NAME: accuracy-TIMER_SET-74-dut</msg>
<status status="PASS" starttime="20201022 13:53:48.641" endtime="20201022 13:53:48.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.644" level="INFO">VALUE: [114, 112, 112, 112, 112, 112, 113, 113, 113, 112, 112, 113, 113, 113, 113, 112, 112, 113, 112, 113, 113, 112, 112, 113, 112, 113, 113, 113, 112, 112, 113, 113, 113, 112, 113, 113, 113, 112, 112, 112, 113, 113, 113, 112, 112, 112, 112, 112, 113, 112]</msg>
<status status="PASS" starttime="20201022 13:53:48.643" endtime="20201022 13:53:48.645"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.639" endtime="20201022 13:53:48.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.654" endtime="20201022 13:53:48.940"></status>
</kw>
<msg timestamp="20201022 13:53:48.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031353056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031456486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:48.652" endtime="20201022 13:53:48.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031353056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031456486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:48.944" endtime="20201022 13:53:48.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:48.952" endtime="20201022 13:53:48.954"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.648" endtime="20201022 13:53:48.954"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.646" endtime="20201022 13:53:48.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:48.958" level="INFO">${RESULT} = [{'diff': 0.00010343000000000158}, {'diff': 0.00010354199999999814}, {'diff': 0.0001041810000000018}, {'diff': 0.00010366700000000173}, {'diff': 0.00010408300000000481}, {'diff': 0.0001033890000000023...</msg>
<status status="PASS" starttime="20201022 13:53:48.955" endtime="20201022 13:53:48.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:48.963" level="INFO">${ACCURACY} = {'diff': [0.00010343000000000158, 0.00010354199999999814, 0.0001041810000000018, 0.00010366700000000173, 0.00010408300000000481, 0.00010338900000000234, 0.0001035280000000055, 0.00010416699999999529, ...</msg>
<status status="PASS" starttime="20201022 13:53:48.959" endtime="20201022 13:53:48.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.967" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201022 13:53:48.966" endtime="20201022 13:53:48.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:48.969" level="INFO">VALUE: [0.00010343000000000158, 0.00010354199999999814, 0.0001041810000000018, 0.00010366700000000173, 0.00010408300000000481, 0.00010338900000000234, 0.0001035280000000055, 0.00010416699999999529, 0.0001040139999999995, 0.00010379200000000532, 0.00010379200000000532, 0.00010369500000000087, 0.00010348599999999986, 0.00010415299999999572, 0.00010416599999999582, 0.00010416600000000276, 0.00010329099999999841, 0.00010379199999999839, 0.00010422200000000104, 0.00010404199999999864, 0.00010387499999999633, 0.00010347200000000029, 0.00010354199999999814, 0.0001041940000000019, 0.00010383299999999762, 0.00010422200000000104, 0.000104028000000006, 0.00010376399999999925, 0.00010369500000000087, 0.00010351400000000593, 0.00010344400000000115, 0.00010372200000000054, 0.00010331899999999755, 0.00010352799999999857, 0.00010333299999999712, 0.00010411199999999649, 0.00010402699999999959, 0.00010365200000000269, 0.00010402699999999959, 0.0001033480000000031, 0.0001038480000000036, 0.00010406900000000524, 0.0001040139999999995, 0.00010361100000000345, 0.00010366599999999532, 0.00010334699999999669, 0.0001042360000000006, 0.00010409700000000438, 0.00010341700000000148, 0.00010381899999999805]</msg>
<status status="PASS" starttime="20201022 13:53:48.968" endtime="20201022 13:53:48.970"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.963" endtime="20201022 13:53:48.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:48.974" endtime="20201022 13:53:48.993"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.972" endtime="20201022 13:53:48.994"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.971" endtime="20201022 13:53:48.994"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.485" endtime="20201022 13:53:48.995"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.484" endtime="20201022 13:53:48.995"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.005" endtime="20201022 13:53:49.138"></status>
</kw>
<msg timestamp="20201022 13:53:49.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'data': [{'dut-result': '115'}, {'dut-result': '113'}, {'dut-result': '113'}, {'dut-result': '113'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:49.003" endtime="20201022 13:53:49.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'data': [{'dut-result': '115'}, {'dut-result': '113'}, {'dut-result': '113'}, {'dut-result': '113'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:49.140" endtime="20201022 13:53:49.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.143" endtime="20201022 13:53:49.145"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.001" endtime="20201022 13:53:49.145"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.997" endtime="20201022 13:53:49.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:49.150" level="INFO">${RESULT} = {'dut-result': [115, 113, 113, 113, 113, 114, 113, 114, 114, 114, 114, 114, 114, 113, 114, 113, 114, 113, 114, 114, 114, 113, 114, 113, 114, 113, 113, 114, 114, 114, 113, 114, 113, 113, 113, 113, 113,...</msg>
<status status="PASS" starttime="20201022 13:53:49.147" endtime="20201022 13:53:49.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.154" level="INFO">NAME: accuracy-TIMER_SET-75-dut</msg>
<status status="PASS" starttime="20201022 13:53:49.153" endtime="20201022 13:53:49.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.156" level="INFO">VALUE: [115, 113, 113, 113, 113, 114, 113, 114, 114, 114, 114, 114, 114, 113, 114, 113, 114, 113, 114, 114, 114, 113, 114, 113, 114, 113, 113, 114, 114, 114, 113, 114, 113, 113, 113, 113, 113, 113, 114, 114, 113, 113, 113, 113, 113, 113, 113, 114, 114, 114]</msg>
<status status="PASS" starttime="20201022 13:53:49.155" endtime="20201022 13:53:49.157"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.151" endtime="20201022 13:53:49.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.164" endtime="20201022 13:53:49.449"></status>
</kw>
<msg timestamp="20201022 13:53:49.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031958583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0320635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:49.162" endtime="20201022 13:53:49.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031958583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0320635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:53:49.454" endtime="20201022 13:53:49.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.462" endtime="20201022 13:53:49.463"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.159" endtime="20201022 13:53:49.464"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.158" endtime="20201022 13:53:49.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:49.468" level="INFO">${RESULT} = [{'diff': 0.00010491700000000298}, {'diff': 0.00010447300000000076}, {'diff': 0.00010470799999999503}, {'diff': 0.00010441699999999554}, {'diff': 0.00010466600000000326}, {'diff': 0.000105027000000000...</msg>
<status status="PASS" starttime="20201022 13:53:49.465" endtime="20201022 13:53:49.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:49.472" level="INFO">${ACCURACY} = {'diff': [0.00010491700000000298, 0.00010447300000000076, 0.00010470799999999503, 0.00010441699999999554, 0.00010466600000000326, 0.00010502700000000059, 0.00010452799999999957, 0.00010509699999999844...</msg>
<status status="PASS" starttime="20201022 13:53:49.469" endtime="20201022 13:53:49.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.477" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201022 13:53:49.476" endtime="20201022 13:53:49.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.480" level="INFO">VALUE: [0.00010491700000000298, 0.00010447300000000076, 0.00010470799999999503, 0.00010441699999999554, 0.00010466600000000326, 0.00010502700000000059, 0.00010452799999999957, 0.00010509699999999844, 0.00010434700000000463, 0.00010522200000000204, 0.00010465300000000316, 0.00010459800000000435, 0.00010472200000000154, 0.00010480599999999896, 0.00010463899999999665, 0.00010445800000000172, 0.00010519500000000237, 0.00010494500000000212, 0.00010490200000000394, 0.00010441599999999607, 0.00010434699999999769, 0.00010502800000000007, 0.00010441700000000248, 0.00010472200000000154, 0.00010447200000000129, 0.00010450000000000043, 0.00010517999999999639, 0.00010454099999999966, 0.00010450000000000043, 0.00010505499999999973, 0.00010522300000000151, 0.00010470799999999503, 0.00010497200000000179, 0.00010477799999999982, 0.00010479099999999991, 0.00010459800000000435, 0.00010429199999999889, 0.00010520900000000194, 0.00010445899999999425, 0.00010508399999999835, 0.00010509699999999844, 0.00010434699999999769, 0.00010490299999999647, 0.00010427799999999932, 0.00010484799999999767, 0.00010484699999999819, 0.00010482000000000546, 0.00010491700000000298, 0.00010509699999999844, 0.00010491700000000298]</msg>
<status status="PASS" starttime="20201022 13:53:49.478" endtime="20201022 13:53:49.480"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.473" endtime="20201022 13:53:49.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:49.484" endtime="20201022 13:53:49.504"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.483" endtime="20201022 13:53:49.504"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.482" endtime="20201022 13:53:49.505"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.996" endtime="20201022 13:53:49.505"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:48.995" endtime="20201022 13:53:49.505"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.515" endtime="20201022 13:53:49.648"></status>
</kw>
<msg timestamp="20201022 13:53:49.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'data': [{'dut-result': '116'}, {'dut-result': '115'}, {'dut-result': '115'}, {'dut-result': '114'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:49.512" endtime="20201022 13:53:49.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'data': [{'dut-result': '116'}, {'dut-result': '115'}, {'dut-result': '115'}, {'dut-result': '114'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:49.650" endtime="20201022 13:53:49.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.653" endtime="20201022 13:53:49.655"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.510" endtime="20201022 13:53:49.655"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.507" endtime="20201022 13:53:49.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:49.660" level="INFO">${RESULT} = {'dut-result': [116, 115, 115, 114, 115, 115, 114, 115, 114, 114, 115, 114, 114, 115, 115, 115, 114, 114, 114, 114, 115, 114, 114, 115, 114, 115, 115, 114, 114, 114, 114, 115, 115, 115, 114, 114, 115,...</msg>
<status status="PASS" starttime="20201022 13:53:49.656" endtime="20201022 13:53:49.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.664" level="INFO">NAME: accuracy-TIMER_SET-76-dut</msg>
<status status="PASS" starttime="20201022 13:53:49.663" endtime="20201022 13:53:49.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.666" level="INFO">VALUE: [116, 115, 115, 114, 115, 115, 114, 115, 114, 114, 115, 114, 114, 115, 115, 115, 114, 114, 114, 114, 115, 114, 114, 115, 114, 115, 115, 114, 114, 114, 114, 115, 115, 115, 114, 114, 115, 115, 114, 114, 115, 114, 115, 114, 114, 114, 115, 114, 115, 114]</msg>
<status status="PASS" starttime="20201022 13:53:49.665" endtime="20201022 13:53:49.667"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.660" endtime="20201022 13:53:49.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.673" endtime="20201022 13:53:49.959"></status>
</kw>
<msg timestamp="20201022 13:53:49.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031569125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031674708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:49.672" endtime="20201022 13:53:49.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031569125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031674708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:49.963" endtime="20201022 13:53:49.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:49.972" endtime="20201022 13:53:49.973"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.669" endtime="20201022 13:53:49.974"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.668" endtime="20201022 13:53:49.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:49.978" level="INFO">${RESULT} = [{'diff': 0.00010558299999999937}, {'diff': 0.00010550000000000143}, {'diff': 0.00010595900000000269}, {'diff': 0.00010530599999999946}, {'diff': 0.00010583299999999962}, {'diff': 0.000105833999999999...</msg>
<status status="PASS" starttime="20201022 13:53:49.975" endtime="20201022 13:53:49.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:49.982" level="INFO">${ACCURACY} = {'diff': [0.00010558299999999937, 0.00010550000000000143, 0.00010595900000000269, 0.00010530599999999946, 0.00010583299999999962, 0.0001058339999999991, 0.00010576400000000125, 0.00010579200000000039,...</msg>
<status status="PASS" starttime="20201022 13:53:49.979" endtime="20201022 13:53:49.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.987" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201022 13:53:49.986" endtime="20201022 13:53:49.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:49.989" level="INFO">VALUE: [0.00010558299999999937, 0.00010550000000000143, 0.00010595900000000269, 0.00010530599999999946, 0.00010583299999999962, 0.0001058339999999991, 0.00010576400000000125, 0.00010579200000000039, 0.0001060140000000015, 0.00010554200000000014, 0.00010611099999999901, 0.00010540299999999697, 0.00010619399999999696, 0.00010576400000000125, 0.00010558299999999937, 0.00010612500000000552, 0.00010552800000000057, 0.00010540200000000444, 0.00010584799999999867, 0.00010620799999999653, 0.00010565299999999722, 0.00010536099999999826, 0.0001056940000000034, 0.0001053610000000052, 0.00010616699999999729, 0.00010559700000000588, 0.00010556999999999928, 0.0001052360000000016, 0.00010561099999999851, 0.00010540200000000444, 0.00010559699999999894, 0.00010609699999999944, 0.00010594499999999618, 0.00010566700000000373, 0.00010545900000000219, 0.00010527800000000032, 0.00010548600000000186, 0.00010620799999999653, 0.00010558299999999937, 0.00010604200000000064, 0.00010579100000000091, 0.00010556999999999928, 0.00010529100000000041, 0.0001058339999999991, 0.00010537500000000477, 0.00010572300000000201, 0.00010609799999999892, 0.00010548600000000186, 0.00010558399999999885, 0.00010615299999999772]</msg>
<status status="PASS" starttime="20201022 13:53:49.988" endtime="20201022 13:53:49.989"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.983" endtime="20201022 13:53:49.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:49.994" endtime="20201022 13:53:50.013"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.992" endtime="20201022 13:53:50.014"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.991" endtime="20201022 13:53:50.014"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.506" endtime="20201022 13:53:50.014"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:49.505" endtime="20201022 13:53:50.014"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.023" endtime="20201022 13:53:50.158"></status>
</kw>
<msg timestamp="20201022 13:53:50.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'data': [{'dut-result': '117'}, {'dut-result': '115'}, {'dut-result': '115'}, {'dut-result': '116'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:50.022" endtime="20201022 13:53:50.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'data': [{'dut-result': '117'}, {'dut-result': '115'}, {'dut-result': '115'}, {'dut-result': '116'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:50.159" endtime="20201022 13:53:50.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.163" endtime="20201022 13:53:50.164"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.019" endtime="20201022 13:53:50.165"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.017" endtime="20201022 13:53:50.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:50.169" level="INFO">${RESULT} = {'dut-result': [117, 115, 115, 116, 115, 116, 115, 115, 116, 116, 116, 115, 116, 116, 116, 115, 116, 116, 116, 116, 115, 115, 116, 115, 115, 116, 115, 116, 115, 115, 115, 116, 115, 115, 115, 115, 115,...</msg>
<status status="PASS" starttime="20201022 13:53:50.166" endtime="20201022 13:53:50.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.174" level="INFO">NAME: accuracy-TIMER_SET-77-dut</msg>
<status status="PASS" starttime="20201022 13:53:50.173" endtime="20201022 13:53:50.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.176" level="INFO">VALUE: [117, 115, 115, 116, 115, 116, 115, 115, 116, 116, 116, 115, 116, 116, 116, 115, 116, 116, 116, 116, 115, 115, 116, 115, 115, 116, 115, 116, 115, 115, 115, 116, 115, 115, 115, 115, 115, 115, 116, 116, 116, 116, 115, 115, 116, 116, 115, 115, 116, 115]</msg>
<status status="PASS" starttime="20201022 13:53:50.175" endtime="20201022 13:53:50.176"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.170" endtime="20201022 13:53:50.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.183" endtime="20201022 13:53:50.467"></status>
</kw>
<msg timestamp="20201022 13:53:50.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031745208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:50.182" endtime="20201022 13:53:50.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031745208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:53:50.472" endtime="20201022 13:53:50.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.480" endtime="20201022 13:53:50.481"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.179" endtime="20201022 13:53:50.482"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.178" endtime="20201022 13:53:50.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:50.487" level="INFO">${RESULT} = [{'diff': 0.00010620799999999653}, {'diff': 0.00010633300000000012}, {'diff': 0.00010694500000000412}, {'diff': 0.00010658399999999985}, {'diff': 0.00010708300000000087}, {'diff': 0.000106415999999998...</msg>
<status status="PASS" starttime="20201022 13:53:50.483" endtime="20201022 13:53:50.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:50.491" level="INFO">${ACCURACY} = {'diff': [0.00010620799999999653, 0.00010633300000000012, 0.00010694500000000412, 0.00010658399999999985, 0.00010708300000000087, 0.00010641599999999807, 0.00010657000000000028, 0.00010697199999999685...</msg>
<status status="PASS" starttime="20201022 13:53:50.488" endtime="20201022 13:53:50.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.496" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201022 13:53:50.495" endtime="20201022 13:53:50.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.498" level="INFO">VALUE: [0.00010620799999999653, 0.00010633300000000012, 0.00010694500000000412, 0.00010658399999999985, 0.00010708300000000087, 0.00010641599999999807, 0.00010657000000000028, 0.00010697199999999685, 0.00010713899999999915, 0.00010658300000000037, 0.00010708400000000035, 0.00010687499999999933, 0.0001070140000000025, 0.0001063889999999984, 0.00010708400000000035, 0.00010645799999999678, 0.00010636099999999926, 0.00010687499999999933, 0.00010686099999999976, 0.00010717999999999839, 0.00010662500000000602, 0.00010638800000000587, 0.00010640299999999797, 0.00010670799999999703, 0.00010657000000000028, 0.00010662499999999908, 0.00010688900000000584, 0.00010701399999999556, 0.00010697200000000379, 0.00010658300000000037, 0.00010697200000000379, 0.0001071940000000049, 0.00010645799999999678, 0.00010702700000000259, 0.00010720799999999753, 0.00010629100000000141, 0.00010693099999999761, 0.00010626400000000175, 0.00010700000000000293, 0.00010655500000000123, 0.00010632000000000003, 0.00010690299999999847, 0.00010709700000000044, 0.00010720799999999753, 0.00010666599999999832, 0.00010683300000000062, 0.00010630600000000046, 0.0001063889999999984, 0.00010707000000000078, 0.00010697199999999685]</msg>
<status status="PASS" starttime="20201022 13:53:50.497" endtime="20201022 13:53:50.498"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.492" endtime="20201022 13:53:50.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:50.503" endtime="20201022 13:53:50.522"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.501" endtime="20201022 13:53:50.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.500" endtime="20201022 13:53:50.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.015" endtime="20201022 13:53:50.523"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.015" endtime="20201022 13:53:50.523"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.533" endtime="20201022 13:53:50.666"></status>
</kw>
<msg timestamp="20201022 13:53:50.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'data': [{'dut-result': '118'}, {'dut-result': '116'}, {'dut-result': '116'}, {'dut-result': '117'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:50.531" endtime="20201022 13:53:50.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'data': [{'dut-result': '118'}, {'dut-result': '116'}, {'dut-result': '116'}, {'dut-result': '117'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:50.668" endtime="20201022 13:53:50.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.671" endtime="20201022 13:53:50.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.528" endtime="20201022 13:53:50.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.526" endtime="20201022 13:53:50.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:50.679" level="INFO">${RESULT} = {'dut-result': [118, 116, 116, 117, 116, 116, 117, 116, 116, 117, 116, 116, 117, 117, 116, 116, 117, 116, 116, 117, 117, 117, 117, 117, 117, 117, 116, 116, 116, 117, 116, 116, 117, 116, 116, 117, 116,...</msg>
<status status="PASS" starttime="20201022 13:53:50.676" endtime="20201022 13:53:50.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.683" level="INFO">NAME: accuracy-TIMER_SET-78-dut</msg>
<status status="PASS" starttime="20201022 13:53:50.682" endtime="20201022 13:53:50.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.685" level="INFO">VALUE: [118, 116, 116, 117, 116, 116, 117, 116, 116, 117, 116, 116, 117, 117, 116, 116, 117, 116, 116, 117, 117, 117, 117, 117, 117, 117, 116, 116, 116, 117, 116, 116, 117, 116, 116, 117, 116, 117, 117, 117, 117, 116, 117, 116, 116, 116, 116, 117, 117, 117]</msg>
<status status="PASS" starttime="20201022 13:53:50.684" endtime="20201022 13:53:50.686"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.679" endtime="20201022 13:53:50.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.693" endtime="20201022 13:53:50.978"></status>
</kw>
<msg timestamp="20201022 13:53:50.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031186722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031294403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:50.691" endtime="20201022 13:53:50.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:50.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031186722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031294403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:50.982" endtime="20201022 13:53:50.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:50.990" endtime="20201022 13:53:50.992"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.688" endtime="20201022 13:53:50.993"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.687" endtime="20201022 13:53:50.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:50.997" level="INFO">${RESULT} = [{'diff': 0.00010768099999999836}, {'diff': 0.00010798600000000436}, {'diff': 0.00010751399999999606}, {'diff': 0.00010805599999999527}, {'diff': 0.000107514000000003}, {'diff': 0.00010787500000000033...</msg>
<status status="PASS" starttime="20201022 13:53:50.994" endtime="20201022 13:53:50.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:51.002" level="INFO">${ACCURACY} = {'diff': [0.00010768099999999836, 0.00010798600000000436, 0.00010751399999999606, 0.00010805599999999527, 0.000107514000000003, 0.00010787500000000033, 0.00010783300000000162, 0.00010795899999999775, ...</msg>
<status status="PASS" starttime="20201022 13:53:50.998" endtime="20201022 13:53:51.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.006" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201022 13:53:51.005" endtime="20201022 13:53:51.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.009" level="INFO">VALUE: [0.00010768099999999836, 0.00010798600000000436, 0.00010751399999999606, 0.00010805599999999527, 0.000107514000000003, 0.00010787500000000033, 0.00010783300000000162, 0.00010795899999999775, 0.0001078889999999999, 0.000108208999999998, 0.00010745799999999778, 0.00010776400000000325, 0.00010762500000000008, 0.0001078340000000011, 0.00010808300000000187, 0.00010787500000000033, 0.00010820799999999853, 0.00010766599999999932, 0.00010762500000000008, 0.00010783300000000162, 0.00010736100000000026, 0.00010731999999999409, 0.00010763899999999965, 0.00010823599999999767, 0.00010793099999999861, 0.00010787500000000033, 0.00010802699999999665, 0.00010813900000000015, 0.00010816599999999982, 0.00010770799999999803, 0.00010781999999999459, 0.00010804200000000264, 0.00010799999999999699, 0.00010777799999999588, 0.00010801399999999656, 0.0001077219999999976, 0.00010729200000000189, 0.00010727800000000232, 0.0001077219999999976, 0.00010754200000000214, 0.00010745900000000419, 0.00010727800000000232, 0.00010751399999999606, 0.00010813900000000015, 0.00010780500000000248, 0.00010813900000000015, 0.00010809700000000144, 0.00010779199999999545, 0.00010786100000000076, 0.00010752799999999563]</msg>
<status status="PASS" starttime="20201022 13:53:51.008" endtime="20201022 13:53:51.010"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.003" endtime="20201022 13:53:51.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:51.014" endtime="20201022 13:53:51.033"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.012" endtime="20201022 13:53:51.034"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.011" endtime="20201022 13:53:51.034"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.524" endtime="20201022 13:53:51.035"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:50.524" endtime="20201022 13:53:51.035"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.043" endtime="20201022 13:53:51.177"></status>
</kw>
<msg timestamp="20201022 13:53:51.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'data': [{'dut-result': '119'}, {'dut-result': '118'}, {'dut-result': '117'}, {'dut-result': '117'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:51.042" endtime="20201022 13:53:51.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'data': [{'dut-result': '119'}, {'dut-result': '118'}, {'dut-result': '117'}, {'dut-result': '117'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:51.179" endtime="20201022 13:53:51.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.182" endtime="20201022 13:53:51.184"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.039" endtime="20201022 13:53:51.184"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.037" endtime="20201022 13:53:51.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:51.189" level="INFO">${RESULT} = {'dut-result': [119, 118, 117, 117, 117, 117, 117, 117, 117, 117, 118, 117, 117, 117, 117, 117, 118, 117, 117, 118, 117, 117, 117, 117, 118, 118, 118, 117, 117, 118, 118, 117, 117, 118, 117, 117, 117,...</msg>
<status status="PASS" starttime="20201022 13:53:51.185" endtime="20201022 13:53:51.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.194" level="INFO">NAME: accuracy-TIMER_SET-79-dut</msg>
<status status="PASS" starttime="20201022 13:53:51.193" endtime="20201022 13:53:51.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.196" level="INFO">VALUE: [119, 118, 117, 117, 117, 117, 117, 117, 117, 117, 118, 117, 117, 117, 117, 117, 118, 117, 117, 118, 117, 117, 117, 117, 118, 118, 118, 117, 117, 118, 118, 117, 117, 118, 117, 117, 117, 118, 118, 117, 117, 117, 118, 117, 118, 118, 118, 118, 117, 117]</msg>
<status status="PASS" starttime="20201022 13:53:51.195" endtime="20201022 13:53:51.196"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.190" endtime="20201022 13:53:51.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.203" endtime="20201022 13:53:51.488"></status>
</kw>
<msg timestamp="20201022 13:53:51.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030792958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:51.202" endtime="20201022 13:53:51.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030684278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030792958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:51.492" endtime="20201022 13:53:51.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.500" endtime="20201022 13:53:51.502"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.199" endtime="20201022 13:53:51.503"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.198" endtime="20201022 13:53:51.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:51.507" level="INFO">${RESULT} = [{'diff': 0.00010867999999999989}, {'diff': 0.00010824999999999724}, {'diff': 0.00010881899999999958}, {'diff': 0.0001082630000000008}, {'diff': 0.00010894499999999918}, {'diff': 0.0001090139999999975...</msg>
<status status="PASS" starttime="20201022 13:53:51.504" endtime="20201022 13:53:51.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:51.512" level="INFO">${ACCURACY} = {'diff': [0.00010867999999999989, 0.00010824999999999724, 0.00010881899999999958, 0.0001082630000000008, 0.00010894499999999918, 0.00010901399999999756, 0.00010826399999999681, 0.00010855599999999577,...</msg>
<status status="PASS" starttime="20201022 13:53:51.508" endtime="20201022 13:53:51.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.517" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201022 13:53:51.516" endtime="20201022 13:53:51.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.519" level="INFO">VALUE: [0.00010867999999999989, 0.00010824999999999724, 0.00010881899999999958, 0.0001082630000000008, 0.00010894499999999918, 0.00010901399999999756, 0.00010826399999999681, 0.00010855599999999577, 0.00010843099999999911, 0.0001083340000000016, 0.00010915300000000072, 0.00010881900000000305, 0.00010884700000000219, 0.00010883300000000262, 0.00010863800000000118, 0.0001083890000000004, 0.00010866600000000032, 0.00010826399999999681, 0.00010830499999999604, 0.00010919399999999996, 0.00010858299999999543, 0.00010918000000000039, 0.00010918099999999986, 0.00010869499999999893, 0.00010879200000000339, 0.00010881900000000305, 0.00010891600000000057, 0.00010866699999999979, 0.0001083890000000004, 0.00010856899999999586, 0.0001083890000000004, 0.00010851300000000452, 0.00010863900000000065, 0.0001090690000000033, 0.00010919399999999996, 0.00010918000000000039, 0.00010826399999999681, 0.00010827800000000332, 0.00010869499999999893, 0.0001087089999999985, 0.00010874999999999774, 0.00010851399999999706, 0.00010870799999999903, 0.00010870799999999903, 0.0001085549999999963, 0.00010836100000000126, 0.00010826399999999681, 0.00010873599999999817, 0.00010883300000000262, 0.00010893099999999961]</msg>
<status status="PASS" starttime="20201022 13:53:51.518" endtime="20201022 13:53:51.520"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.513" endtime="20201022 13:53:51.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:51.524" endtime="20201022 13:53:51.543"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.522" endtime="20201022 13:53:51.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.521" endtime="20201022 13:53:51.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.036" endtime="20201022 13:53:51.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.035" endtime="20201022 13:53:51.545"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.553" endtime="20201022 13:53:51.687"></status>
</kw>
<msg timestamp="20201022 13:53:51.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'data': [{'dut-result': '120'}, {'dut-result': '119'}, {'dut-result': '118'}, {'dut-result': '119'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:51.552" endtime="20201022 13:53:51.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'data': [{'dut-result': '120'}, {'dut-result': '119'}, {'dut-result': '118'}, {'dut-result': '119'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:51.689" endtime="20201022 13:53:51.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.692" endtime="20201022 13:53:51.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.549" endtime="20201022 13:53:51.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.547" endtime="20201022 13:53:51.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:51.699" level="INFO">${RESULT} = {'dut-result': [120, 119, 118, 119, 118, 119, 118, 118, 119, 118, 118, 118, 119, 118, 118, 119, 119, 119, 118, 119, 118, 119, 118, 118, 118, 119, 118, 118, 118, 119, 118, 119, 118, 119, 119, 119, 119,...</msg>
<status status="PASS" starttime="20201022 13:53:51.695" endtime="20201022 13:53:51.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.704" level="INFO">NAME: accuracy-TIMER_SET-80-dut</msg>
<status status="PASS" starttime="20201022 13:53:51.703" endtime="20201022 13:53:51.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:51.706" level="INFO">VALUE: [120, 119, 118, 119, 118, 119, 118, 118, 119, 118, 118, 118, 119, 118, 118, 119, 119, 119, 118, 119, 118, 119, 118, 118, 118, 119, 118, 118, 118, 119, 118, 119, 118, 119, 119, 119, 119, 119, 119, 118, 118, 118, 118, 118, 118, 118, 119, 119, 119, 119]</msg>
<status status="PASS" starttime="20201022 13:53:51.705" endtime="20201022 13:53:51.706"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.700" endtime="20201022 13:53:51.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:51.714" endtime="20201022 13:53:52.000"></status>
</kw>
<msg timestamp="20201022 13:53:52.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030741014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03085025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:51.712" endtime="20201022 13:53:52.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030741014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03085025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:52.004" endtime="20201022 13:53:52.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.012" endtime="20201022 13:53:52.014"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.709" endtime="20201022 13:53:52.014"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.707" endtime="20201022 13:53:52.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:52.019" level="INFO">${RESULT} = [{'diff': 0.00010923599999999867}, {'diff': 0.00010977799999999788}, {'diff': 0.00010999999999999899}, {'diff': 0.00010969399999999699}, {'diff': 0.00010995800000000028}, {'diff': 0.000109819000000004...</msg>
<status status="PASS" starttime="20201022 13:53:52.015" endtime="20201022 13:53:52.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:52.025" level="INFO">${ACCURACY} = {'diff': [0.00010923599999999867, 0.00010977799999999788, 0.00010999999999999899, 0.00010969399999999699, 0.00010995800000000028, 0.00010981900000000405, 0.00010948599999999892, 0.00010959700000000294...</msg>
<status status="PASS" starttime="20201022 13:53:52.020" endtime="20201022 13:53:52.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.030" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201022 13:53:52.029" endtime="20201022 13:53:52.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.032" level="INFO">VALUE: [0.00010923599999999867, 0.00010977799999999788, 0.00010999999999999899, 0.00010969399999999699, 0.00010995800000000028, 0.00010981900000000405, 0.00010948599999999892, 0.00010959700000000294, 0.00011020800000000053, 0.00010934799999999523, 0.00010990300000000147, 0.00010976399999999831, 0.00010970800000000003, 0.00011012499999999564, 0.00010927800000000432, 0.00010958400000000285, 0.00011008400000000335, 0.00010958400000000285, 0.00010990300000000147, 0.00010927799999999738, 0.00010948599999999892, 0.00010986100000000276, 0.00010990299999999453, 0.00010968000000000089, 0.00010990300000000147, 0.00011019500000000043, 0.0001093890000000014, 0.00010990299999999453, 0.00010976400000000525, 0.0001092769999999979, 0.00010922300000000551, 0.00011015300000000172, 0.00011015300000000172, 0.00010926399999999781, 0.00010994500000000018, 0.00010936100000000226, 0.00010961100000000251, 0.0001093890000000014, 0.00011004099999999822, 0.00010976300000000577, 0.00010944400000000021, 0.00011020800000000053, 0.00010945799999999978, 0.00010944400000000021, 0.000109596999999996, 0.00011006899999999736, 0.00010958299999999643, 0.00010936100000000226, 0.00011023599999999967, 0.00010924999999999824]</msg>
<status status="PASS" starttime="20201022 13:53:52.031" endtime="20201022 13:53:52.033"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.026" endtime="20201022 13:53:52.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:52.037" endtime="20201022 13:53:52.056"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.035" endtime="20201022 13:53:52.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.034" endtime="20201022 13:53:52.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.545" endtime="20201022 13:53:52.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:51.545" endtime="20201022 13:53:52.058"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.066" endtime="20201022 13:53:52.200"></status>
</kw>
<msg timestamp="20201022 13:53:52.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'data': [{'dut-result': '121'}, {'dut-result': '120'}, {'dut-result': '119'}, {'dut-result': '119'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:52.065" endtime="20201022 13:53:52.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'data': [{'dut-result': '121'}, {'dut-result': '120'}, {'dut-result': '119'}, {'dut-result': '119'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:52.202" endtime="20201022 13:53:52.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.205" endtime="20201022 13:53:52.207"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.062" endtime="20201022 13:53:52.207"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.060" endtime="20201022 13:53:52.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:52.213" level="INFO">${RESULT} = {'dut-result': [121, 120, 119, 119, 120, 119, 120, 120, 120, 119, 120, 120, 120, 120, 119, 120, 119, 119, 120, 120, 120, 119, 120, 120, 120, 119, 120, 120, 119, 120, 119, 120, 120, 119, 119, 120, 119,...</msg>
<status status="PASS" starttime="20201022 13:53:52.209" endtime="20201022 13:53:52.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.217" level="INFO">NAME: accuracy-TIMER_SET-81-dut</msg>
<status status="PASS" starttime="20201022 13:53:52.216" endtime="20201022 13:53:52.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.219" level="INFO">VALUE: [121, 120, 119, 119, 120, 119, 120, 120, 120, 119, 120, 120, 120, 120, 119, 120, 119, 119, 120, 120, 120, 119, 120, 120, 120, 119, 120, 120, 119, 120, 119, 120, 120, 119, 119, 120, 119, 119, 119, 119, 120, 119, 120, 120, 120, 119, 119, 120, 120, 120]</msg>
<status status="PASS" starttime="20201022 13:53:52.218" endtime="20201022 13:53:52.220"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.214" endtime="20201022 13:53:52.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.227" endtime="20201022 13:53:52.512"></status>
</kw>
<msg timestamp="20201022 13:53:52.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03075325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030863833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:52.225" endtime="20201022 13:53:52.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03075325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030863833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:53:52.516" endtime="20201022 13:53:52.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.524" endtime="20201022 13:53:52.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.223" endtime="20201022 13:53:52.526"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.221" endtime="20201022 13:53:52.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:52.531" level="INFO">${RESULT} = [{'diff': 0.0001105830000000009}, {'diff': 0.00011106900000000183}, {'diff': 0.0001102220000000001}, {'diff': 0.00011119499999999796}, {'diff': 0.00011112499999999664}, {'diff': 0.00011106899999999836...</msg>
<status status="PASS" starttime="20201022 13:53:52.527" endtime="20201022 13:53:52.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:52.535" level="INFO">${ACCURACY} = {'diff': [0.0001105830000000009, 0.00011106900000000183, 0.0001102220000000001, 0.00011119499999999796, 0.00011112499999999664, 0.00011106899999999836, 0.00011102799999999913, 0.00011080499999999854, ...</msg>
<status status="PASS" starttime="20201022 13:53:52.532" endtime="20201022 13:53:52.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.540" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201022 13:53:52.539" endtime="20201022 13:53:52.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.542" level="INFO">VALUE: [0.0001105830000000009, 0.00011106900000000183, 0.0001102220000000001, 0.00011119499999999796, 0.00011112499999999664, 0.00011106899999999836, 0.00011102799999999913, 0.00011080499999999854, 0.00011095799999999434, 0.00011093100000000161, 0.00011044499999999374, 0.00011097200000000085, 0.00011031899999999761, 0.00011049999999999949, 0.00011080500000000548, 0.00011051399999999906, 0.00011094500000000118, 0.00011106999999999784, 0.00011099999999999999, 0.00011104099999999922, 0.00011076399999999931, 0.00011084699999999725, 0.00011073600000000017, 0.00011037499999999589, 0.00011101399999999956, 0.00011032000000000403, 0.00011113900000000315, 0.000111209000000001, 0.0001108340000000041, 0.00011095900000000075, 0.0001107090000000005, 0.00011065300000000222, 0.00011094500000000118, 0.00011065299999999528, 0.00011087499999999639, 0.00011065299999999528, 0.00011065300000000222, 0.00011037500000000283, 0.00011037499999999589, 0.00011038800000000293, 0.00011073600000000017, 0.00011087500000000333, 0.00011026399999999881, 0.00011063900000000265, 0.00011052800000000557, 0.000111209000000001, 0.00011040199999999556, 0.00011076299999999983, 0.00011068100000000136, 0.00011065200000000275]</msg>
<status status="PASS" starttime="20201022 13:53:52.541" endtime="20201022 13:53:52.543"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.536" endtime="20201022 13:53:52.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:52.547" endtime="20201022 13:53:52.567"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.546" endtime="20201022 13:53:52.567"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.544" endtime="20201022 13:53:52.568"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.058" endtime="20201022 13:53:52.568"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.058" endtime="20201022 13:53:52.568"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.577" endtime="20201022 13:53:52.711"></status>
</kw>
<msg timestamp="20201022 13:53:52.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'data': [{'dut-result': '122'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result': '120'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:52.575" endtime="20201022 13:53:52.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'data': [{'dut-result': '122'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result': '120'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:52.713" endtime="20201022 13:53:52.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.716" endtime="20201022 13:53:52.717"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.573" endtime="20201022 13:53:52.718"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.571" endtime="20201022 13:53:52.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:52.723" level="INFO">${RESULT} = {'dut-result': [122, 121, 121, 120, 121, 120, 121, 121, 121, 120, 120, 121, 121, 121, 120, 121, 121, 121, 121, 121, 121, 121, 121, 121, 120, 120, 121, 121, 121, 121, 120, 120, 121, 121, 120, 120, 121,...</msg>
<status status="PASS" starttime="20201022 13:53:52.719" endtime="20201022 13:53:52.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.728" level="INFO">NAME: accuracy-TIMER_SET-82-dut</msg>
<status status="PASS" starttime="20201022 13:53:52.727" endtime="20201022 13:53:52.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:52.730" level="INFO">VALUE: [122, 121, 121, 120, 121, 120, 121, 121, 121, 120, 120, 121, 121, 121, 120, 121, 121, 121, 121, 121, 121, 121, 121, 121, 120, 120, 121, 121, 121, 121, 120, 120, 121, 121, 120, 120, 121, 121, 120, 120, 120, 120, 121, 121, 120, 120, 121, 120, 120, 120]</msg>
<status status="PASS" starttime="20201022 13:53:52.729" endtime="20201022 13:53:52.730"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.724" endtime="20201022 13:53:52.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:52.737" endtime="20201022 13:53:53.023"></status>
</kw>
<msg timestamp="20201022 13:53:53.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030885278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030996556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:52.736" endtime="20201022 13:53:53.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030885278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030996556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:53.027" endtime="20201022 13:53:53.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.035" endtime="20201022 13:53:53.037"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.733" endtime="20201022 13:53:53.038"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.731" endtime="20201022 13:53:53.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:53.042" level="INFO">${RESULT} = [{'diff': 0.00011127800000000285}, {'diff': 0.00011187500000000086}, {'diff': 0.00011176399999999684}, {'diff': 0.00011195900000000175}, {'diff': 0.00011145800000000178}, {'diff': 0.000111638999999996...</msg>
<status status="PASS" starttime="20201022 13:53:53.039" endtime="20201022 13:53:53.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:53.047" level="INFO">${ACCURACY} = {'diff': [0.00011127800000000285, 0.00011187500000000086, 0.00011176399999999684, 0.00011195900000000175, 0.00011145800000000178, 0.00011163899999999671, 0.00011148600000000092, 0.00011147199999999441...</msg>
<status status="PASS" starttime="20201022 13:53:53.043" endtime="20201022 13:53:53.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.052" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201022 13:53:53.051" endtime="20201022 13:53:53.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.054" level="INFO">VALUE: [0.00011127800000000285, 0.00011187500000000086, 0.00011176399999999684, 0.00011195900000000175, 0.00011145800000000178, 0.00011163899999999671, 0.00011148600000000092, 0.00011147199999999441, 0.00011170800000000203, 0.00011156899999999886, 0.00011126400000000675, 0.00011137499999999689, 0.00011173600000000117, 0.00011125000000000024, 0.0001115419999999992, 0.000112209000000002, 0.0001113340000000046, 0.00011144500000000168, 0.00011200000000000099, 0.00011145799999999484, 0.00011200000000000099, 0.00011158299999999843, 0.00011163800000000418, 0.00011183299999999868, 0.00011206999999999884, 0.00011205599999999927, 0.00011218100000000286, 0.00011199999999999405, 0.00011205599999999927, 0.00011168000000000289, 0.00011126399999999981, 0.00011183300000000562, 0.00011172300000000107, 0.00011137500000000383, 0.00011165300000000322, 0.00011134699999999775, 0.00011181899999999911, 0.00011144399999999527, 0.00011208299999999893, 0.00011173600000000117, 0.00011144500000000168, 0.00011200000000000099, 0.00011134699999999775, 0.00011133299999999818, 0.00011213899999999721, 0.00011132000000000503, 0.00011175000000000074, 0.00011136099999999732, 0.00011187499999999739, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201022 13:53:53.053" endtime="20201022 13:53:53.055"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.048" endtime="20201022 13:53:53.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:53.059" endtime="20201022 13:53:53.078"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.057" endtime="20201022 13:53:53.079"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.056" endtime="20201022 13:53:53.079"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.569" endtime="20201022 13:53:53.080"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:52.568" endtime="20201022 13:53:53.080"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.088" endtime="20201022 13:53:53.223"></status>
</kw>
<msg timestamp="20201022 13:53:53.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'data': [{'dut-result': '123'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:53.087" endtime="20201022 13:53:53.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'data': [{'dut-result': '123'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result': '121'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:53.224" endtime="20201022 13:53:53.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.228" endtime="20201022 13:53:53.229"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.084" endtime="20201022 13:53:53.230"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.082" endtime="20201022 13:53:53.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:53.234" level="INFO">${RESULT} = {'dut-result': [123, 121, 121, 121, 121, 122, 121, 121, 122, 121, 121, 121, 122, 121, 121, 122, 122, 122, 122, 122, 121, 122, 121, 121, 121, 122, 122, 122, 121, 121, 122, 121, 121, 121, 121, 121, 121,...</msg>
<status status="PASS" starttime="20201022 13:53:53.231" endtime="20201022 13:53:53.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.240" level="INFO">NAME: accuracy-TIMER_SET-83-dut</msg>
<status status="PASS" starttime="20201022 13:53:53.238" endtime="20201022 13:53:53.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.242" level="INFO">VALUE: [123, 121, 121, 121, 121, 122, 121, 121, 122, 121, 121, 121, 122, 121, 121, 122, 122, 122, 122, 122, 121, 122, 121, 121, 121, 122, 122, 122, 121, 121, 122, 121, 121, 121, 121, 121, 121, 122, 121, 122, 121, 121, 122, 121, 122, 121, 121, 122, 121, 121]</msg>
<status status="PASS" starttime="20201022 13:53:53.241" endtime="20201022 13:53:53.242"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.235" endtime="20201022 13:53:53.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.249" endtime="20201022 13:53:53.535"></status>
</kw>
<msg timestamp="20201022 13:53:53.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031224736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:53.248" endtime="20201022 13:53:53.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031112236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031224736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:53.539" endtime="20201022 13:53:53.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.547" endtime="20201022 13:53:53.549"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.245" endtime="20201022 13:53:53.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.243" endtime="20201022 13:53:53.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:53.554" level="INFO">${RESULT} = [{'diff': 0.00011249999999999802}, {'diff': 0.00011258300000000637}, {'diff': 0.00011244499999999574}, {'diff': 0.0001130550000000008}, {'diff': 0.00011241600000000407}, {'diff': 0.0001129729999999953...</msg>
<status status="PASS" starttime="20201022 13:53:53.551" endtime="20201022 13:53:53.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:53.558" level="INFO">${ACCURACY} = {'diff': [0.00011249999999999802, 0.00011258300000000637, 0.00011244499999999574, 0.0001130550000000008, 0.00011241600000000407, 0.00011297299999999538, 0.0001130969999999995, 0.00011236099999999832, ...</msg>
<status status="PASS" starttime="20201022 13:53:53.555" endtime="20201022 13:53:53.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.563" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201022 13:53:53.562" endtime="20201022 13:53:53.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.566" level="INFO">VALUE: [0.00011249999999999802, 0.00011258300000000637, 0.00011244499999999574, 0.0001130550000000008, 0.00011241600000000407, 0.00011297299999999538, 0.0001130969999999995, 0.00011236099999999832, 0.00011293000000000414, 0.00011319500000000343, 0.00011293099999999667, 0.00011308299999999993, 0.00011244400000000321, 0.00011240300000000397, 0.00011240299999999703, 0.00011252700000000115, 0.00011245899999999531, 0.00011276400000000131, 0.00011230599999999952, 0.00011238899999999746, 0.0001128749999999984, 0.00011245800000000278, 0.00011311099999999907, 0.00011306900000000036, 0.000112596999999999, 0.00011312499999999864, 0.00011261199999999805, 0.00011256899999999986, 0.00011273700000000164, 0.0001128890000000049, 0.00011294500000000318, 0.00011261099999999857, 0.00011220800000000253, 0.00011297200000000285, 0.00011295800000000328, 0.00011247200000000235, 0.00011319500000000343, 0.00011318099999999692, 0.00011313899999999821, 0.00011313899999999821, 0.00011311200000000549, 0.00011231899999999961, 0.00011263900000000465, 0.00011243000000000364, 0.00011237500000000483, 0.00011318099999999692, 0.0001128049999999936, 0.00011313900000000515, 0.00011306899999999342, 0.00011294400000000371]</msg>
<status status="PASS" starttime="20201022 13:53:53.564" endtime="20201022 13:53:53.566"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.559" endtime="20201022 13:53:53.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:53.571" endtime="20201022 13:53:53.590"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.569" endtime="20201022 13:53:53.591"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.568" endtime="20201022 13:53:53.591"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.081" endtime="20201022 13:53:53.591"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.080" endtime="20201022 13:53:53.592"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.600" endtime="20201022 13:53:53.735"></status>
</kw>
<msg timestamp="20201022 13:53:53.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'data': [{'dut-result': '124'}, {'dut-result': '122'}, {'dut-result': '123'}, {'dut-result': '122'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:53.599" endtime="20201022 13:53:53.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'data': [{'dut-result': '124'}, {'dut-result': '122'}, {'dut-result': '123'}, {'dut-result': '122'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:53.736" endtime="20201022 13:53:53.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.740" endtime="20201022 13:53:53.742"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.596" endtime="20201022 13:53:53.742"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.594" endtime="20201022 13:53:53.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:53.746" level="INFO">${RESULT} = {'dut-result': [124, 122, 123, 122, 123, 123, 123, 123, 122, 122, 123, 123, 122, 123, 122, 122, 122, 123, 122, 122, 123, 122, 122, 122, 122, 123, 123, 122, 122, 122, 122, 123, 122, 122, 122, 122, 122,...</msg>
<status status="PASS" starttime="20201022 13:53:53.743" endtime="20201022 13:53:53.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.751" level="INFO">NAME: accuracy-TIMER_SET-84-dut</msg>
<status status="PASS" starttime="20201022 13:53:53.750" endtime="20201022 13:53:53.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:53.753" level="INFO">VALUE: [124, 122, 123, 122, 123, 123, 123, 123, 122, 122, 123, 123, 122, 123, 122, 122, 122, 123, 122, 122, 123, 122, 122, 122, 122, 123, 123, 122, 122, 122, 122, 123, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 123, 122, 123, 123, 123, 123, 123]</msg>
<status status="PASS" starttime="20201022 13:53:53.752" endtime="20201022 13:53:53.753"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.747" endtime="20201022 13:53:53.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:53.761" endtime="20201022 13:53:54.049"></status>
</kw>
<msg timestamp="20201022 13:53:54.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031197361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031310764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:53.760" endtime="20201022 13:53:54.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031197361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031310764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:54.053" endtime="20201022 13:53:54.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.061" endtime="20201022 13:53:54.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.757" endtime="20201022 13:53:54.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.754" endtime="20201022 13:53:54.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:54.067" level="INFO">${RESULT} = [{'diff': 0.00011340299999999803}, {'diff': 0.00011325000000000224}, {'diff': 0.00011352800000000163}, {'diff': 0.00011380600000000102}, {'diff': 0.00011386099999999982}, {'diff': 0.000113431000000004...</msg>
<status status="PASS" starttime="20201022 13:53:54.064" endtime="20201022 13:53:54.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:54.072" level="INFO">${ACCURACY} = {'diff': [0.00011340299999999803, 0.00011325000000000224, 0.00011352800000000163, 0.00011380600000000102, 0.00011386099999999982, 0.00011343100000000411, 0.0001133749999999989, 0.00011361100000000651,...</msg>
<status status="PASS" starttime="20201022 13:53:54.068" endtime="20201022 13:53:54.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.076" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201022 13:53:54.075" endtime="20201022 13:53:54.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.078" level="INFO">VALUE: [0.00011340299999999803, 0.00011325000000000224, 0.00011352800000000163, 0.00011380600000000102, 0.00011386099999999982, 0.00011343100000000411, 0.0001133749999999989, 0.00011361100000000651, 0.00011331899999999367, 0.00011416699999999835, 0.00011333300000000018, 0.0001140550000000018, 0.00011356900000000086, 0.00011380600000000102, 0.00011418000000000539, 0.00011326400000000181, 0.00011358300000000043, 0.00011380600000000102, 0.00011411100000000007, 0.00011380500000000154, 0.00011383300000000068, 0.00011420799999999759, 0.00011419399999999802, 0.00011405600000000127, 0.00011393000000000514, 0.00011412500000000658, 0.00011338899999999846, 0.0001139299999999982, 0.0001133749999999989, 0.00011355600000000077, 0.00011366599999999838, 0.00011369399999999752, 0.00011383300000000068, 0.00011405600000000127, 0.00011323599999999573, 0.00011355600000000077, 0.00011413899999999921, 0.0001133340000000066, 0.00011376400000000231, 0.00011375000000000274, 0.00011334699999999975, 0.0001140550000000018, 0.00011394399999999777, 0.000113597, 0.00011333300000000018, 0.00011407000000000084, 0.00011401400000000256, 0.00011376399999999537, 0.00011417999999999845, 0.00011393100000000461]</msg>
<status status="PASS" starttime="20201022 13:53:54.077" endtime="20201022 13:53:54.079"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.072" endtime="20201022 13:53:54.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:54.083" endtime="20201022 13:53:54.104"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.081" endtime="20201022 13:53:54.104"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.080" endtime="20201022 13:53:54.105"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.592" endtime="20201022 13:53:54.105"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:53.592" endtime="20201022 13:53:54.105"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.115" endtime="20201022 13:53:54.249"></status>
</kw>
<msg timestamp="20201022 13:53:54.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'data': [{'dut-result': '125'}, {'dut-result': '124'}, {'dut-result': '124'}, {'dut-result': '123'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:54.113" endtime="20201022 13:53:54.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'data': [{'dut-result': '125'}, {'dut-result': '124'}, {'dut-result': '124'}, {'dut-result': '123'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:54.251" endtime="20201022 13:53:54.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.254" endtime="20201022 13:53:54.256"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.110" endtime="20201022 13:53:54.256"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.108" endtime="20201022 13:53:54.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:54.261" level="INFO">${RESULT} = {'dut-result': [125, 124, 124, 123, 124, 124, 123, 124, 123, 123, 124, 124, 123, 123, 124, 123, 123, 123, 123, 123, 123, 123, 123, 124, 123, 124, 123, 124, 123, 124, 123, 123, 124, 124, 123, 123, 123,...</msg>
<status status="PASS" starttime="20201022 13:53:54.258" endtime="20201022 13:53:54.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.265" level="INFO">NAME: accuracy-TIMER_SET-85-dut</msg>
<status status="PASS" starttime="20201022 13:53:54.264" endtime="20201022 13:53:54.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.267" level="INFO">VALUE: [125, 124, 124, 123, 124, 124, 123, 124, 123, 123, 124, 124, 123, 123, 124, 123, 123, 123, 123, 123, 123, 123, 123, 124, 123, 124, 123, 124, 123, 124, 123, 123, 124, 124, 123, 123, 123, 123, 123, 124, 124, 123, 123, 123, 123, 123, 124, 123, 123, 124]</msg>
<status status="PASS" starttime="20201022 13:53:54.266" endtime="20201022 13:53:54.268"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.262" endtime="20201022 13:53:54.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.276" endtime="20201022 13:53:54.561"></status>
</kw>
<msg timestamp="20201022 13:53:54.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032889972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033004542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:54.274" endtime="20201022 13:53:54.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032889972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033004542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:54.565" endtime="20201022 13:53:54.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.573" endtime="20201022 13:53:54.574"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.270" endtime="20201022 13:53:54.575"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.269" endtime="20201022 13:53:54.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:54.579" level="INFO">${RESULT} = [{'diff': 0.0001145699999999944}, {'diff': 0.00011434700000000075}, {'diff': 0.00011451299999999665}, {'diff': 0.00011462500000000014}, {'diff': 0.00011457000000000134}, {'diff': 0.0001150410000000032...</msg>
<status status="PASS" starttime="20201022 13:53:54.576" endtime="20201022 13:53:54.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:54.583" level="INFO">${ACCURACY} = {'diff': [0.0001145699999999944, 0.00011434700000000075, 0.00011451299999999665, 0.00011462500000000014, 0.00011457000000000134, 0.00011504100000000322, 0.00011449999999999655, 0.00011517999999999945,...</msg>
<status status="PASS" starttime="20201022 13:53:54.580" endtime="20201022 13:53:54.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.588" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201022 13:53:54.587" endtime="20201022 13:53:54.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.591" level="INFO">VALUE: [0.0001145699999999944, 0.00011434700000000075, 0.00011451299999999665, 0.00011462500000000014, 0.00011457000000000134, 0.00011504100000000322, 0.00011449999999999655, 0.00011517999999999945, 0.00011502699999999672, 0.00011500000000000399, 0.00011445899999999731, 0.0001150699999999949, 0.0001148750000000004, 0.00011482000000000159, 0.00011423600000000367, 0.00011505599999999533, 0.00011456899999999492, 0.00011445900000000425, 0.0001149169999999991, 0.00011462500000000014, 0.00011502799999999619, 0.00011443099999999817, 0.00011437500000000683, 0.00011486100000000082, 0.00011509800000000098, 0.00011444499999999774, 0.000114597000000001, 0.00011511100000000107, 0.00011505600000000227, 0.00011499999999999705, 0.00011440299999999903, 0.00011518099999999892, 0.00011480600000000202, 0.00011448699999999645, 0.00011444500000000468, 0.0001148750000000004, 0.0001149169999999991, 0.0001145420000000022, 0.00011468099999999842, 0.00011498600000000442, 0.00011438899999999946, 0.00011436100000000032, 0.00011467999999999895, 0.0001145420000000022, 0.00011488899999999996, 0.0001150420000000027, 0.00011469400000000546, 0.00011480500000000254, 0.00011431900000000161, 0.00011430600000000152]</msg>
<status status="PASS" starttime="20201022 13:53:54.589" endtime="20201022 13:53:54.591"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.585" endtime="20201022 13:53:54.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:54.595" endtime="20201022 13:53:54.615"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.594" endtime="20201022 13:53:54.615"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.593" endtime="20201022 13:53:54.616"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.106" endtime="20201022 13:53:54.616"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.105" endtime="20201022 13:53:54.616"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.626" endtime="20201022 13:53:54.761"></status>
</kw>
<msg timestamp="20201022 13:53:54.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'data': [{'dut-result': '126'}, {'dut-result': '125'}, {'dut-result': '124'}, {'dut-result': '125'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:54.624" endtime="20201022 13:53:54.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'data': [{'dut-result': '126'}, {'dut-result': '125'}, {'dut-result': '124'}, {'dut-result': '125'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:54.762" endtime="20201022 13:53:54.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.765" endtime="20201022 13:53:54.767"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.622" endtime="20201022 13:53:54.768"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.619" endtime="20201022 13:53:54.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:54.772" level="INFO">${RESULT} = {'dut-result': [126, 125, 124, 125, 124, 124, 124, 125, 125, 125, 125, 124, 124, 124, 124, 125, 124, 124, 125, 125, 124, 125, 124, 124, 124, 125, 124, 124, 124, 125, 124, 124, 124, 125, 125, 125, 125,...</msg>
<status status="PASS" starttime="20201022 13:53:54.769" endtime="20201022 13:53:54.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.776" level="INFO">NAME: accuracy-TIMER_SET-86-dut</msg>
<status status="PASS" starttime="20201022 13:53:54.775" endtime="20201022 13:53:54.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:54.779" level="INFO">VALUE: [126, 125, 124, 125, 124, 124, 124, 125, 125, 125, 125, 124, 124, 124, 124, 125, 124, 124, 125, 125, 124, 125, 124, 124, 124, 125, 124, 124, 124, 125, 124, 124, 124, 125, 125, 125, 125, 125, 124, 124, 125, 125, 124, 124, 125, 124, 125, 124, 124, 125]</msg>
<status status="PASS" starttime="20201022 13:53:54.778" endtime="20201022 13:53:54.779"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.773" endtime="20201022 13:53:54.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:54.786" endtime="20201022 13:53:55.074"></status>
</kw>
<msg timestamp="20201022 13:53:55.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032406431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032521972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:54.784" endtime="20201022 13:53:55.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032406431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032521972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:55.078" endtime="20201022 13:53:55.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.086" endtime="20201022 13:53:55.088"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.782" endtime="20201022 13:53:55.089"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.780" endtime="20201022 13:53:55.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:55.093" level="INFO">${RESULT} = [{'diff': 0.00011554100000000372}, {'diff': 0.0001159170000000001}, {'diff': 0.00011548599999999798}, {'diff': 0.00011530600000000252}, {'diff': 0.0001158750000000014}, {'diff': 0.00011538900000000046...</msg>
<status status="PASS" starttime="20201022 13:53:55.090" endtime="20201022 13:53:55.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:55.097" level="INFO">${ACCURACY} = {'diff': [0.00011554100000000372, 0.0001159170000000001, 0.00011548599999999798, 0.00011530600000000252, 0.0001158750000000014, 0.00011538900000000046, 0.00011529099999999654, 0.00011619499999999949, ...</msg>
<status status="PASS" starttime="20201022 13:53:55.094" endtime="20201022 13:53:55.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.101" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201022 13:53:55.100" endtime="20201022 13:53:55.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.104" level="INFO">VALUE: [0.00011554100000000372, 0.0001159170000000001, 0.00011548599999999798, 0.00011530600000000252, 0.0001158750000000014, 0.00011538900000000046, 0.00011529099999999654, 0.00011619499999999949, 0.00011536100000000132, 0.00011530600000000252, 0.0001154169999999996, 0.00011605499999999686, 0.00011533400000000166, 0.00011538900000000046, 0.00011598599999999848, 0.00011588900000000096, 0.00011573600000000517, 0.00011543099999999917, 0.0001159170000000001, 0.00011527800000000338, 0.00011567999999999995, 0.0001159170000000001, 0.00011525000000000424, 0.0001159300000000002, 0.00011594399999999977, 0.0001155699999999954, 0.00011526400000000381, 0.00011579099999999704, 0.0001154169999999996, 0.00011562500000000114, 0.00011536100000000132, 0.000115597000000002, 0.00011598700000000489, 0.00011547299999999788, 0.00011569399999999952, 0.00011551400000000406, 0.00011588900000000096, 0.0001160550000000038, 0.00011554100000000372, 0.00011562500000000114, 0.00011611100000000207, 0.00011552799999999669, 0.00011609799999999504, 0.00011554199999999626, 0.00011572299999999813, 0.00011536100000000132, 0.00011573599999999823, 0.0001155550000000033, 0.00011531899999999567, 0.00011584800000000173]</msg>
<status status="PASS" starttime="20201022 13:53:55.102" endtime="20201022 13:53:55.104"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.098" endtime="20201022 13:53:55.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:55.108" endtime="20201022 13:53:55.128"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.107" endtime="20201022 13:53:55.129"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.106" endtime="20201022 13:53:55.129"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.617" endtime="20201022 13:53:55.129"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:54.616" endtime="20201022 13:53:55.129"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.141" endtime="20201022 13:53:55.276"></status>
</kw>
<msg timestamp="20201022 13:53:55.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'data': [{'dut-result': '127'}, {'dut-result': '125'}, {'dut-result': '125'}, {'dut-result': '125'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:55.137" endtime="20201022 13:53:55.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'data': [{'dut-result': '127'}, {'dut-result': '125'}, {'dut-result': '125'}, {'dut-result': '125'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:55.278" endtime="20201022 13:53:55.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.281" endtime="20201022 13:53:55.283"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.134" endtime="20201022 13:53:55.284"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.132" endtime="20201022 13:53:55.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:55.288" level="INFO">${RESULT} = {'dut-result': [127, 125, 125, 125, 126, 125, 125, 125, 126, 125, 125, 126, 126, 125, 126, 125, 125, 125, 125, 126, 126, 126, 125, 125, 125, 125, 125, 125, 126, 125, 125, 125, 125, 126, 125, 126, 126,...</msg>
<status status="PASS" starttime="20201022 13:53:55.285" endtime="20201022 13:53:55.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.293" level="INFO">NAME: accuracy-TIMER_SET-87-dut</msg>
<status status="PASS" starttime="20201022 13:53:55.291" endtime="20201022 13:53:55.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.295" level="INFO">VALUE: [127, 125, 125, 125, 126, 125, 125, 125, 126, 125, 125, 126, 126, 125, 126, 125, 125, 125, 125, 126, 126, 126, 125, 125, 125, 125, 125, 125, 126, 125, 125, 125, 125, 126, 125, 126, 126, 125, 125, 125, 125, 125, 126, 126, 126, 126, 125, 126, 126, 125]</msg>
<status status="PASS" starttime="20201022 13:53:55.294" endtime="20201022 13:53:55.295"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.289" endtime="20201022 13:53:55.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.302" endtime="20201022 13:53:55.588"></status>
</kw>
<msg timestamp="20201022 13:53:55.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034893194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:55.300" endtime="20201022 13:53:55.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034893194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:55.593" endtime="20201022 13:53:55.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.601" endtime="20201022 13:53:55.602"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.298" endtime="20201022 13:53:55.603"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.296" endtime="20201022 13:53:55.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:55.607" level="INFO">${RESULT} = [{'diff': 0.00011665200000000181}, {'diff': 0.00011715300000000178}, {'diff': 0.00011698599999999948}, {'diff': 0.00011684699999999631}, {'diff': 0.00011695899999999981}, {'diff': 0.000117181000000000...</msg>
<status status="PASS" starttime="20201022 13:53:55.604" endtime="20201022 13:53:55.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:55.612" level="INFO">${ACCURACY} = {'diff': [0.00011665200000000181, 0.00011715300000000178, 0.00011698599999999948, 0.00011684699999999631, 0.00011695899999999981, 0.00011718100000000092, 0.0001169170000000011, 0.00011655499999999736,...</msg>
<status status="PASS" starttime="20201022 13:53:55.608" endtime="20201022 13:53:55.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.617" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201022 13:53:55.616" endtime="20201022 13:53:55.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.619" level="INFO">VALUE: [0.00011665200000000181, 0.00011715300000000178, 0.00011698599999999948, 0.00011684699999999631, 0.00011695899999999981, 0.00011718100000000092, 0.0001169170000000011, 0.00011655499999999736, 0.00011679199999999751, 0.00011661100000000257, 0.00011645899999999931, 0.00011702800000000513, 0.00011627800000000438, 0.00011679100000000497, 0.00011698599999999948, 0.00011677799999999794, 0.00011670899999999956, 0.00011649999999999855, 0.00011670800000000009, 0.00011693100000000067, 0.00011627799999999744, 0.00011640300000000103, 0.00011683400000000316, 0.00011666600000000138, 0.00011670899999999956, 0.00011672199999999966, 0.00011643100000000017, 0.00011711099999999613, 0.00011620799999999959, 0.00011647199999999941, 0.00011702799999999819, 0.0001169170000000011, 0.00011672199999999966, 0.00011636100000000232, 0.00011663899999999477, 0.00011662500000000214, 0.00011663900000000171, 0.00011647299999999888, 0.00011647199999999941, 0.00011713900000000221, 0.00011698599999999948, 0.00011647199999999941, 0.00011701399999999862, 0.00011695800000000034, 0.000116597000000003, 0.00011688900000000196, 0.00011702799999999819, 0.000116597000000003, 0.00011634799999999529, 0.00011640200000000156]</msg>
<status status="PASS" starttime="20201022 13:53:55.618" endtime="20201022 13:53:55.619"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.613" endtime="20201022 13:53:55.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:55.624" endtime="20201022 13:53:55.643"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.622" endtime="20201022 13:53:55.644"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.621" endtime="20201022 13:53:55.644"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.130" endtime="20201022 13:53:55.645"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.130" endtime="20201022 13:53:55.645"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.653" endtime="20201022 13:53:55.788"></status>
</kw>
<msg timestamp="20201022 13:53:55.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'data': [{'dut-result': '128'}, {'dut-result': '126'}, {'dut-result': '127'}, {'dut-result': '127'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:55.652" endtime="20201022 13:53:55.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'data': [{'dut-result': '128'}, {'dut-result': '126'}, {'dut-result': '127'}, {'dut-result': '127'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:55.790" endtime="20201022 13:53:55.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.793" endtime="20201022 13:53:55.795"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.649" endtime="20201022 13:53:55.795"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.647" endtime="20201022 13:53:55.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:55.800" level="INFO">${RESULT} = {'dut-result': [128, 126, 127, 127, 126, 127, 127, 127, 126, 126, 126, 126, 127, 126, 126, 126, 127, 127, 127, 127, 126, 126, 126, 126, 126, 126, 126, 127, 127, 127, 126, 127, 126, 127, 126, 126, 127,...</msg>
<status status="PASS" starttime="20201022 13:53:55.796" endtime="20201022 13:53:55.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.805" level="INFO">NAME: accuracy-TIMER_SET-88-dut</msg>
<status status="PASS" starttime="20201022 13:53:55.804" endtime="20201022 13:53:55.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:55.807" level="INFO">VALUE: [128, 126, 127, 127, 126, 127, 127, 127, 126, 126, 126, 126, 127, 126, 126, 126, 127, 127, 127, 127, 126, 126, 126, 126, 126, 126, 126, 127, 127, 127, 126, 127, 126, 127, 126, 126, 127, 126, 126, 127, 126, 126, 127, 127, 127, 126, 127, 126, 126, 126]</msg>
<status status="PASS" starttime="20201022 13:53:55.806" endtime="20201022 13:53:55.807"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.801" endtime="20201022 13:53:55.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:55.814" endtime="20201022 13:53:56.101"></status>
</kw>
<msg timestamp="20201022 13:53:56.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031492417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031609472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:55.813" endtime="20201022 13:53:56.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031492417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031609472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:56.105" endtime="20201022 13:53:56.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.114" endtime="20201022 13:53:56.116"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.810" endtime="20201022 13:53:56.117"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.809" endtime="20201022 13:53:56.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:56.121" level="INFO">${RESULT} = [{'diff': 0.00011705499999999786}, {'diff': 0.00011784799999999679}, {'diff': 0.00011811100000000407}, {'diff': 0.00011762500000000314}, {'diff': 0.00011731900000000461}, {'diff': 0.000117250000000006...</msg>
<status status="PASS" starttime="20201022 13:53:56.118" endtime="20201022 13:53:56.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:56.126" level="INFO">${ACCURACY} = {'diff': [0.00011705499999999786, 0.00011784799999999679, 0.00011811100000000407, 0.00011762500000000314, 0.00011731900000000461, 0.00011725000000000624, 0.0001174170000000016, 0.00011722200000000016,...</msg>
<status status="PASS" starttime="20201022 13:53:56.122" endtime="20201022 13:53:56.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.131" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201022 13:53:56.130" endtime="20201022 13:53:56.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.133" level="INFO">VALUE: [0.00011705499999999786, 0.00011784799999999679, 0.00011811100000000407, 0.00011762500000000314, 0.00011731900000000461, 0.00011725000000000624, 0.0001174170000000016, 0.00011722200000000016, 0.00011792999999999526, 0.00011749999999999955, 0.00011765300000000228, 0.00011805600000000527, 0.00011720900000000006, 0.00011798600000000048, 0.00011759699999999706, 0.00011729199999999801, 0.0001178049999999986, 0.00011749999999999955, 0.00011747200000000041, 0.00011748599999999998, 0.0001174170000000016, 0.00011772200000000066, 0.00011811099999999713, 0.00011741600000000213, 0.00011748599999999998, 0.00011737499999999595, 0.00011804199999999876, 0.00011723600000000667, 0.00011783400000000416, 0.00011763899999999577, 0.00011786099999999688, 0.00011738899999999552, 0.00011797300000000038, 0.00011768100000000142, 0.0001173049999999981, 0.0001174170000000016, 0.00011797200000000091, 0.00011759699999999706, 0.00011766600000000238, 0.00011759699999999706, 0.00011726399999999887, 0.00011765300000000228, 0.00011747200000000041, 0.0001175829999999975, 0.00011791599999999569, 0.00011729200000000495, 0.00011762500000000314, 0.0001174579999999939, 0.00011766700000000185, 0.00011723599999999973]</msg>
<status status="PASS" starttime="20201022 13:53:56.132" endtime="20201022 13:53:56.134"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.127" endtime="20201022 13:53:56.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:56.138" endtime="20201022 13:53:56.158"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.136" endtime="20201022 13:53:56.158"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.135" endtime="20201022 13:53:56.159"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.646" endtime="20201022 13:53:56.159"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:55.645" endtime="20201022 13:53:56.159"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.168" endtime="20201022 13:53:56.303"></status>
</kw>
<msg timestamp="20201022 13:53:56.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'data': [{'dut-result': '129'}, {'dut-result': '127'}, {'dut-result': '128'}, {'dut-result': '128'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:56.166" endtime="20201022 13:53:56.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'data': [{'dut-result': '129'}, {'dut-result': '127'}, {'dut-result': '128'}, {'dut-result': '128'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:56.304" endtime="20201022 13:53:56.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.307" endtime="20201022 13:53:56.309"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.164" endtime="20201022 13:53:56.310"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.162" endtime="20201022 13:53:56.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:56.315" level="INFO">${RESULT} = {'dut-result': [129, 127, 128, 128, 127, 128, 127, 127, 127, 127, 127, 128, 128, 128, 127, 128, 127, 128, 127, 127, 128, 128, 128, 127, 128, 128, 127, 127, 127, 128, 127, 128, 127, 128, 128, 127, 128,...</msg>
<status status="PASS" starttime="20201022 13:53:56.311" endtime="20201022 13:53:56.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.319" level="INFO">NAME: accuracy-TIMER_SET-89-dut</msg>
<status status="PASS" starttime="20201022 13:53:56.318" endtime="20201022 13:53:56.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.322" level="INFO">VALUE: [129, 127, 128, 128, 127, 128, 127, 127, 127, 127, 127, 128, 128, 128, 127, 128, 127, 128, 127, 127, 128, 128, 128, 127, 128, 128, 127, 127, 127, 128, 127, 128, 127, 128, 128, 127, 128, 127, 128, 127, 127, 127, 127, 127, 127, 128, 127, 128, 127, 127]</msg>
<status status="PASS" starttime="20201022 13:53:56.321" endtime="20201022 13:53:56.322"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.316" endtime="20201022 13:53:56.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.329" endtime="20201022 13:53:56.615"></status>
</kw>
<msg timestamp="20201022 13:53:56.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031352569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031471417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:56.327" endtime="20201022 13:53:56.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031352569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031471417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:56.620" endtime="20201022 13:53:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.628" endtime="20201022 13:53:56.630"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.325" endtime="20201022 13:53:56.630"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.323" endtime="20201022 13:53:56.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:56.634" level="INFO">${RESULT} = [{'diff': 0.00011884800000000473}, {'diff': 0.0001188049999999996}, {'diff': 0.00011909799999999804}, {'diff': 0.00011888900000000396}, {'diff': 0.00011905599999999933}, {'diff': 0.0001188879999999975...</msg>
<status status="PASS" starttime="20201022 13:53:56.631" endtime="20201022 13:53:56.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:56.639" level="INFO">${ACCURACY} = {'diff': [0.00011884800000000473, 0.0001188049999999996, 0.00011909799999999804, 0.00011888900000000396, 0.00011905599999999933, 0.00011888799999999755, 0.00011833299999999825, 0.00011834799999999729,...</msg>
<status status="PASS" starttime="20201022 13:53:56.635" endtime="20201022 13:53:56.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.644" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201022 13:53:56.643" endtime="20201022 13:53:56.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.646" level="INFO">VALUE: [0.00011884800000000473, 0.0001188049999999996, 0.00011909799999999804, 0.00011888900000000396, 0.00011905599999999933, 0.00011888799999999755, 0.00011833299999999825, 0.00011834799999999729, 0.00011890300000000353, 0.00011880600000000602, 0.00011897200000000191, 0.0001184170000000026, 0.00011888900000000396, 0.00011855599999999883, 0.0001189300000000032, 0.00011831900000000561, 0.00011912500000000464, 0.00011915300000000378, 0.00011823600000000073, 0.00011887499999999745, 0.00011854099999999979, 0.00011890300000000353, 0.00011822200000000116, 0.00011827699999999997, 0.00011908399999999847, 0.00011918000000000345, 0.0001184170000000026, 0.00011870800000000209, 0.00011892999999999626, 0.00011854199999999926, 0.00011904199999999976, 0.00011834800000000423, 0.00011905499999999986, 0.00011866600000000338, 0.00011915300000000378, 0.0001189579999999954, 0.00011895900000000181, 0.00011872200000000166, 0.0001189029999999966, 0.00011820799999999465, 0.00011861199999999711, 0.00011916599999999694, 0.0001186379999999973, 0.00011870799999999515, 0.00011901400000000062, 0.00011861200000000405, 0.00011916700000000335, 0.00011891699999999616, 0.00011915299999999684, 0.00011868000000000295]</msg>
<status status="PASS" starttime="20201022 13:53:56.645" endtime="20201022 13:53:56.647"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.640" endtime="20201022 13:53:56.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:56.651" endtime="20201022 13:53:56.670"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.649" endtime="20201022 13:53:56.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.648" endtime="20201022 13:53:56.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.160" endtime="20201022 13:53:56.671"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.159" endtime="20201022 13:53:56.672"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.680" endtime="20201022 13:53:56.815"></status>
</kw>
<msg timestamp="20201022 13:53:56.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'data': [{'dut-result': '130'}, {'dut-result': '128'}, {'dut-result': '129'}, {'dut-result': '129'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:56.679" endtime="20201022 13:53:56.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'data': [{'dut-result': '130'}, {'dut-result': '128'}, {'dut-result': '129'}, {'dut-result': '129'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:56.817" endtime="20201022 13:53:56.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.820" endtime="20201022 13:53:56.822"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.676" endtime="20201022 13:53:56.822"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.674" endtime="20201022 13:53:56.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:56.828" level="INFO">${RESULT} = {'dut-result': [130, 128, 129, 129, 129, 129, 129, 128, 129, 128, 129, 128, 129, 128, 128, 128, 128, 128, 129, 129, 129, 128, 129, 129, 129, 129, 129, 129, 128, 128, 129, 129, 128, 128, 129, 129, 128,...</msg>
<status status="PASS" starttime="20201022 13:53:56.824" endtime="20201022 13:53:56.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.833" level="INFO">NAME: accuracy-TIMER_SET-90-dut</msg>
<status status="PASS" starttime="20201022 13:53:56.832" endtime="20201022 13:53:56.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:56.835" level="INFO">VALUE: [130, 128, 129, 129, 129, 129, 129, 128, 129, 128, 129, 128, 129, 128, 128, 128, 128, 128, 129, 129, 129, 128, 129, 129, 129, 129, 129, 129, 128, 128, 129, 129, 128, 128, 129, 129, 128, 128, 129, 129, 128, 128, 128, 128, 128, 129, 129, 129, 129, 128]</msg>
<status status="PASS" starttime="20201022 13:53:56.834" endtime="20201022 13:53:56.835"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.829" endtime="20201022 13:53:56.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:56.842" endtime="20201022 13:53:57.129"></status>
</kw>
<msg timestamp="20201022 13:53:57.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031377236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031496778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:56.841" endtime="20201022 13:53:57.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031377236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031496778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:57.133" endtime="20201022 13:53:57.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.141" endtime="20201022 13:53:57.143"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.838" endtime="20201022 13:53:57.143"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.836" endtime="20201022 13:53:57.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:57.147" level="INFO">${RESULT} = [{'diff': 0.00011954200000000026}, {'diff': 0.00012015299999999784}, {'diff': 0.0001195829999999995}, {'diff': 0.00011984699999999932}, {'diff': 0.00011994400000000377}, {'diff': 0.0001194439999999963...</msg>
<status status="PASS" starttime="20201022 13:53:57.144" endtime="20201022 13:53:57.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:57.152" level="INFO">${ACCURACY} = {'diff': [0.00011954200000000026, 0.00012015299999999784, 0.0001195829999999995, 0.00011984699999999932, 0.00011994400000000377, 0.00011944399999999633, 0.00012011099999999914, 0.00011934800000000523,...</msg>
<status status="PASS" starttime="20201022 13:53:57.148" endtime="20201022 13:53:57.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.157" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201022 13:53:57.156" endtime="20201022 13:53:57.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.160" level="INFO">VALUE: [0.00011954200000000026, 0.00012015299999999784, 0.0001195829999999995, 0.00011984699999999932, 0.00011994400000000377, 0.00011944399999999633, 0.00012011099999999914, 0.00011934800000000523, 0.0001201249999999987, 0.000120083, 0.00011977800000000094, 0.00011977700000000147, 0.00011958400000000591, 0.00011965299999999734, 0.00011961099999999864, 0.00011936099999999839, 0.00011965300000000428, 0.00012001400000000162, 0.00012005600000000033, 0.00011983399999999922, 0.00011956899999999993, 0.00011945899999999537, 0.00012004200000000076, 0.00011959699999999907, 0.00011968000000000395, 0.00011984699999999932, 0.00011940199999999762, 0.00011936100000000532, 0.00012015299999999784, 0.0001193050000000001, 0.00012004200000000076, 0.00011997299999999544, 0.00011940200000000456, 0.00011927800000000044, 0.00011967999999999701, 0.00011943099999999623, 0.00011936099999999839, 0.00012016699999999741, 0.00011969399999999658, 0.00011955500000000036, 0.00012008399999999947, 0.00011970799999999615, 0.00012000000000000205, 0.00011991699999999716, 0.00011929100000000054, 0.0001194170000000036, 0.00011936099999999839, 0.00011941699999999666, 0.00012005499999999392, 0.00011973600000000223]</msg>
<status status="PASS" starttime="20201022 13:53:57.159" endtime="20201022 13:53:57.161"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.153" endtime="20201022 13:53:57.161"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:57.165" endtime="20201022 13:53:57.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.164" endtime="20201022 13:53:57.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.162" endtime="20201022 13:53:57.186"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.672" endtime="20201022 13:53:57.186"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:56.672" endtime="20201022 13:53:57.186"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.195" endtime="20201022 13:53:57.330"></status>
</kw>
<msg timestamp="20201022 13:53:57.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'data': [{'dut-result': '131'}, {'dut-result': '129'}, {'dut-result': '130'}, {'dut-result': '129'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:57.194" endtime="20201022 13:53:57.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'data': [{'dut-result': '131'}, {'dut-result': '129'}, {'dut-result': '130'}, {'dut-result': '129'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:57.332" endtime="20201022 13:53:57.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.335" endtime="20201022 13:53:57.337"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.191" endtime="20201022 13:53:57.337"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.189" endtime="20201022 13:53:57.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:57.342" level="INFO">${RESULT} = {'dut-result': [131, 129, 130, 129, 130, 130, 129, 130, 130, 130, 130, 130, 130, 129, 129, 130, 129, 130, 130, 130, 129, 129, 130, 130, 129, 129, 130, 129, 130, 130, 129, 130, 130, 129, 129, 129, 129,...</msg>
<status status="PASS" starttime="20201022 13:53:57.338" endtime="20201022 13:53:57.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.347" level="INFO">NAME: accuracy-TIMER_SET-91-dut</msg>
<status status="PASS" starttime="20201022 13:53:57.346" endtime="20201022 13:53:57.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.349" level="INFO">VALUE: [131, 129, 130, 129, 130, 130, 129, 130, 130, 130, 130, 130, 130, 129, 129, 130, 129, 130, 130, 130, 129, 129, 130, 130, 129, 129, 130, 129, 130, 130, 129, 130, 130, 129, 129, 129, 129, 129, 129, 129, 130, 129, 129, 130, 130, 129, 129, 129, 129, 130]</msg>
<status status="PASS" starttime="20201022 13:53:57.348" endtime="20201022 13:53:57.349"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.343" endtime="20201022 13:53:57.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.356" endtime="20201022 13:53:57.642"></status>
</kw>
<msg timestamp="20201022 13:53:57.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031853333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031973681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:57.355" endtime="20201022 13:53:57.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031853333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031973681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:57.646" endtime="20201022 13:53:57.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.654" endtime="20201022 13:53:57.656"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.352" endtime="20201022 13:53:57.656"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.351" endtime="20201022 13:53:57.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:57.660" level="INFO">${RESULT} = [{'diff': 0.00012034799999999929}, {'diff': 0.00012029199999999407}, {'diff': 0.00012097300000000338}, {'diff': 0.00012027800000000144}, {'diff': 0.0001206249999999992}, {'diff': 0.0001206809999999974...</msg>
<status status="PASS" starttime="20201022 13:53:57.657" endtime="20201022 13:53:57.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:57.665" level="INFO">${ACCURACY} = {'diff': [0.00012034799999999929, 0.00012029199999999407, 0.00012097300000000338, 0.00012027800000000144, 0.0001206249999999992, 0.00012068099999999748, 0.00012047199999999647, 0.00012077800000000194,...</msg>
<status status="PASS" starttime="20201022 13:53:57.661" endtime="20201022 13:53:57.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.670" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201022 13:53:57.669" endtime="20201022 13:53:57.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.673" level="INFO">VALUE: [0.00012034799999999929, 0.00012029199999999407, 0.00012097300000000338, 0.00012027800000000144, 0.0001206249999999992, 0.00012068099999999748, 0.00012047199999999647, 0.00012077800000000194, 0.00012036100000000632, 0.00012052800000000169, 0.00012077800000000194, 0.00012098699999999601, 0.00012045900000000331, 0.00012080599999999414, 0.00012065300000000528, 0.00012027700000000197, 0.00012052800000000169, 0.00012058399999999997, 0.00012061099999999964, 0.00012106900000000143, 0.00012079200000000151, 0.000120777999999995, 0.00012037499999999896, 0.00012034699999999982, 0.00012091599999999869, 0.00012034799999999929, 0.00012040300000000503, 0.00012091699999999816, 0.00012031900000000068, 0.00012027699999999503, 0.00012033300000000025, 0.00012070799999999715, 0.00012076399999999543, 0.00012066599999999844, 0.00012118099999999798, 0.000121083000000001, 0.00012059700000000007, 0.00012050000000000255, 0.00012105500000000186, 0.00012045800000000384, 0.00012084700000000032, 0.00012077800000000194, 0.00012029200000000101, 0.00012066700000000485, 0.00012109700000000057, 0.00012102800000000219, 0.0001204170000000046, 0.00012076400000000237, 0.00012102799999999525, 0.00012104200000000176]</msg>
<status status="PASS" starttime="20201022 13:53:57.671" endtime="20201022 13:53:57.673"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.666" endtime="20201022 13:53:57.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:57.677" endtime="20201022 13:53:57.697"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.676" endtime="20201022 13:53:57.697"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.674" endtime="20201022 13:53:57.697"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.187" endtime="20201022 13:53:57.698"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.187" endtime="20201022 13:53:57.698"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.707" endtime="20201022 13:53:57.842"></status>
</kw>
<msg timestamp="20201022 13:53:57.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'data': [{'dut-result': '132'}, {'dut-result': '130'}, {'dut-result': '130'}, {'dut-result': '130'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:57.705" endtime="20201022 13:53:57.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'data': [{'dut-result': '132'}, {'dut-result': '130'}, {'dut-result': '130'}, {'dut-result': '130'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:57.843" endtime="20201022 13:53:57.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.846" endtime="20201022 13:53:57.848"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.702" endtime="20201022 13:53:57.849"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.700" endtime="20201022 13:53:57.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:57.853" level="INFO">${RESULT} = {'dut-result': [132, 130, 130, 130, 130, 131, 131, 131, 130, 131, 131, 130, 131, 131, 130, 131, 130, 131, 130, 130, 130, 130, 130, 131, 130, 130, 131, 131, 131, 131, 130, 130, 130, 130, 131, 130, 130,...</msg>
<status status="PASS" starttime="20201022 13:53:57.850" endtime="20201022 13:53:57.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.858" level="INFO">NAME: accuracy-TIMER_SET-92-dut</msg>
<status status="PASS" starttime="20201022 13:53:57.857" endtime="20201022 13:53:57.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:57.861" level="INFO">VALUE: [132, 130, 130, 130, 130, 131, 131, 131, 130, 131, 131, 130, 131, 131, 130, 131, 130, 131, 130, 130, 130, 130, 130, 131, 130, 130, 131, 131, 131, 131, 130, 130, 130, 130, 131, 130, 130, 130, 131, 131, 130, 131, 130, 130, 131, 130, 131, 130, 131, 131]</msg>
<status status="PASS" starttime="20201022 13:53:57.860" endtime="20201022 13:53:57.861"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.854" endtime="20201022 13:53:57.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:57.868" endtime="20201022 13:53:58.154"></status>
</kw>
<msg timestamp="20201022 13:53:58.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031369875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031490833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:57.866" endtime="20201022 13:53:58.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031369875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031490833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:58.158" endtime="20201022 13:53:58.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.167" endtime="20201022 13:53:58.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.864" endtime="20201022 13:53:58.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.862" endtime="20201022 13:53:58.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:58.174" level="INFO">${RESULT} = [{'diff': 0.00012095800000000434}, {'diff': 0.00012147200000000441}, {'diff': 0.00012177699999999653}, {'diff': 0.0001212500000000033}, {'diff': 0.00012177800000000294}, {'diff': 0.0001214999999999966...</msg>
<status status="PASS" starttime="20201022 13:53:58.171" endtime="20201022 13:53:58.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:58.178" level="INFO">${ACCURACY} = {'diff': [0.00012095800000000434, 0.00012147200000000441, 0.00012177699999999653, 0.0001212500000000033, 0.00012177800000000294, 0.00012149999999999661, 0.00012170899999999762, 0.00012170799999999815,...</msg>
<status status="PASS" starttime="20201022 13:53:58.175" endtime="20201022 13:53:58.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.184" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201022 13:53:58.182" endtime="20201022 13:53:58.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.186" level="INFO">VALUE: [0.00012095800000000434, 0.00012147200000000441, 0.00012177699999999653, 0.0001212500000000033, 0.00012177800000000294, 0.00012149999999999661, 0.00012170899999999762, 0.00012170799999999815, 0.00012129199999999507, 0.00012213900000000028, 0.00012197200000000491, 0.00012129200000000201, 0.00012127800000000244, 0.00012174999999999686, 0.00012167999999999901, 0.00012165199999999987, 0.00012179199999999557, 0.00012172200000000466, 0.00012187500000000046, 0.0001214579999999979, 0.00012209699999999463, 0.00012199999999999711, 0.00012176400000000337, 0.00012141699999999866, 0.00012192999999999926, 0.00012159700000000107, 0.00012120799999999765, 0.0001221250000000007, 0.00012126399999999593, 0.00012211100000000114, 0.00012148600000000398, 0.00012122199999999722, 0.0001215700000000014, 0.00012148599999999704, 0.0001212500000000033, 0.00012179199999999557, 0.00012147199999999747, 0.00012123600000000373, 0.00012219399999999908, 0.00012181999999999471, 0.00012215200000000037, 0.00012172199999999772, 0.00012173600000000423, 0.00012170899999999762, 0.00012138899999999953, 0.0001212909999999956, 0.00012188900000000003, 0.00012166699999999891, 0.00012186100000000089, 0.00012177699999999653]</msg>
<status status="PASS" starttime="20201022 13:53:58.185" endtime="20201022 13:53:58.187"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.179" endtime="20201022 13:53:58.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:58.191" endtime="20201022 13:53:58.210"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.189" endtime="20201022 13:53:58.211"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.188" endtime="20201022 13:53:58.211"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.699" endtime="20201022 13:53:58.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:57.698" endtime="20201022 13:53:58.212"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.220" endtime="20201022 13:53:58.356"></status>
</kw>
<msg timestamp="20201022 13:53:58.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'data': [{'dut-result': '133'}, {'dut-result': '131'}, {'dut-result': '132'}, {'dut-result': '131'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:58.219" endtime="20201022 13:53:58.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'data': [{'dut-result': '133'}, {'dut-result': '131'}, {'dut-result': '132'}, {'dut-result': '131'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:58.357" endtime="20201022 13:53:58.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.361" endtime="20201022 13:53:58.362"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.216" endtime="20201022 13:53:58.363"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.214" endtime="20201022 13:53:58.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:58.367" level="INFO">${RESULT} = {'dut-result': [133, 131, 132, 131, 131, 131, 131, 132, 132, 131, 132, 131, 131, 131, 132, 131, 131, 131, 132, 131, 131, 132, 131, 131, 132, 131, 132, 131, 132, 132, 132, 132, 131, 131, 131, 131, 131,...</msg>
<status status="PASS" starttime="20201022 13:53:58.364" endtime="20201022 13:53:58.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.372" level="INFO">NAME: accuracy-TIMER_SET-93-dut</msg>
<status status="PASS" starttime="20201022 13:53:58.371" endtime="20201022 13:53:58.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.374" level="INFO">VALUE: [133, 131, 132, 131, 131, 131, 131, 132, 132, 131, 132, 131, 131, 131, 132, 131, 131, 131, 132, 131, 131, 132, 131, 131, 132, 131, 132, 131, 132, 132, 132, 132, 131, 131, 131, 131, 131, 132, 132, 131, 131, 131, 132, 132, 131, 131, 131, 132, 131, 131]</msg>
<status status="PASS" starttime="20201022 13:53:58.373" endtime="20201022 13:53:58.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.368" endtime="20201022 13:53:58.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.384" endtime="20201022 13:53:58.669"></status>
</kw>
<msg timestamp="20201022 13:53:58.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031382264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:58.382" endtime="20201022 13:53:58.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031382264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031504278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:58.673" endtime="20201022 13:53:58.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.682" endtime="20201022 13:53:58.683"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.379" endtime="20201022 13:53:58.684"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.375" endtime="20201022 13:53:58.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:58.688" level="INFO">${RESULT} = [{'diff': 0.00012201399999999668}, {'diff': 0.00012290200000000112}, {'diff': 0.00012222199999999822}, {'diff': 0.00012309700000000257}, {'diff': 0.00012313899999999434}, {'diff': 0.000122653000000000...</msg>
<status status="PASS" starttime="20201022 13:53:58.685" endtime="20201022 13:53:58.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:58.692" level="INFO">${ACCURACY} = {'diff': [0.00012201399999999668, 0.00012290200000000112, 0.00012222199999999822, 0.00012309700000000257, 0.00012313899999999434, 0.00012265300000000035, 0.0001229160000000007, 0.00012277800000000394,...</msg>
<status status="PASS" starttime="20201022 13:53:58.689" endtime="20201022 13:53:58.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.697" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201022 13:53:58.696" endtime="20201022 13:53:58.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.699" level="INFO">VALUE: [0.00012201399999999668, 0.00012290200000000112, 0.00012222199999999822, 0.00012309700000000257, 0.00012313899999999434, 0.00012265300000000035, 0.0001229160000000007, 0.00012277800000000394, 0.00012244400000000627, 0.00012247199999999847, 0.0001229160000000007, 0.0001224579999999989, 0.00012220899999999812, 0.00012313900000000128, 0.00012318099999999998, 0.0001227359999999983, 0.00012233300000000225, 0.00012274999999999786, 0.00012240200000000062, 0.00012254199999999632, 0.0001226380000000013, 0.00012234699999999488, 0.0001227359999999983, 0.00012316700000000042, 0.00012222199999999822, 0.00012233400000000172, 0.00012280499999999667, 0.000122568999999996, 0.00012313900000000128, 0.0001229999999999981, 0.00012233300000000225, 0.000123083000000003, 0.00012313899999999434, 0.000122777999999997, 0.00012227800000000344, 0.00012259700000000207, 0.00012315300000000085, 0.00012319499999999955, 0.00012231900000000268, 0.0001228329999999958, 0.00012245900000000531, 0.00012268, 0.00012244399999999933, 0.00012258299999999556, 0.00012315200000000137, 0.00012254200000000326, 0.0001229449999999993, 0.0001228329999999958, 0.00012236100000000139, 0.00012233300000000225]</msg>
<status status="PASS" starttime="20201022 13:53:58.698" endtime="20201022 13:53:58.699"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.693" endtime="20201022 13:53:58.700"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:58.704" endtime="20201022 13:53:58.724"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.702" endtime="20201022 13:53:58.724"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.701" endtime="20201022 13:53:58.725"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.213" endtime="20201022 13:53:58.725"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.212" endtime="20201022 13:53:58.725"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.734" endtime="20201022 13:53:58.869"></status>
</kw>
<msg timestamp="20201022 13:53:58.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'data': [{'dut-result': '134'}, {'dut-result': '133'}, {'dut-result': '133'}, {'dut-result': '132'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:58.733" endtime="20201022 13:53:58.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'data': [{'dut-result': '134'}, {'dut-result': '133'}, {'dut-result': '133'}, {'dut-result': '132'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:58.871" endtime="20201022 13:53:58.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.874" endtime="20201022 13:53:58.876"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.730" endtime="20201022 13:53:58.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.728" endtime="20201022 13:53:58.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:58.881" level="INFO">${RESULT} = {'dut-result': [134, 133, 133, 132, 133, 132, 132, 132, 132, 133, 132, 132, 133, 132, 133, 133, 132, 132, 132, 132, 133, 133, 133, 133, 133, 133, 132, 133, 132, 132, 132, 133, 132, 132, 132, 132, 132,...</msg>
<status status="PASS" starttime="20201022 13:53:58.878" endtime="20201022 13:53:58.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.885" level="INFO">NAME: accuracy-TIMER_SET-94-dut</msg>
<status status="PASS" starttime="20201022 13:53:58.884" endtime="20201022 13:53:58.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:58.887" level="INFO">VALUE: [134, 133, 133, 132, 133, 132, 132, 132, 132, 133, 132, 132, 133, 132, 133, 133, 132, 132, 132, 132, 133, 133, 133, 133, 133, 133, 132, 133, 132, 132, 132, 133, 132, 132, 132, 132, 132, 133, 133, 132, 133, 132, 133, 133, 133, 133, 133, 133, 132, 133]</msg>
<status status="PASS" starttime="20201022 13:53:58.886" endtime="20201022 13:53:58.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.882" endtime="20201022 13:53:58.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:58.896" endtime="20201022 13:53:59.181"></status>
</kw>
<msg timestamp="20201022 13:53:59.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032637528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032761347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:58.894" endtime="20201022 13:53:59.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032637528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032761347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:59.186" endtime="20201022 13:53:59.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.194" endtime="20201022 13:53:59.196"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.891" endtime="20201022 13:53:59.196"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.889" endtime="20201022 13:53:59.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:59.201" level="INFO">${RESULT} = [{'diff': 0.00012381900000000418}, {'diff': 0.00012404100000000529}, {'diff': 0.00012383300000000375}, {'diff': 0.0001234999999999986}, {'diff': 0.00012369500000000005}, {'diff': 0.0001240560000000043...</msg>
<status status="PASS" starttime="20201022 13:53:59.197" endtime="20201022 13:53:59.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:59.205" level="INFO">${ACCURACY} = {'diff': [0.00012381900000000418, 0.00012404100000000529, 0.00012383300000000375, 0.0001234999999999986, 0.00012369500000000005, 0.00012405600000000433, 0.00012413900000000228, 0.00012412499999999577,...</msg>
<status status="PASS" starttime="20201022 13:53:59.202" endtime="20201022 13:53:59.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.209" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201022 13:53:59.208" endtime="20201022 13:53:59.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.212" level="INFO">VALUE: [0.00012381900000000418, 0.00012404100000000529, 0.00012383300000000375, 0.0001234999999999986, 0.00012369500000000005, 0.00012405600000000433, 0.00012413900000000228, 0.00012412499999999577, 0.0001234449999999998, 0.00012344400000000033, 0.00012404099999999835, 0.00012413899999999534, 0.00012338900000000153, 0.00012332000000000315, 0.00012369400000000058, 0.0001231800000000005, 0.00012327800000000444, 0.00012352700000000522, 0.00012401399999999868, 0.00012350000000000555, 0.0001241250000000027, 0.0001232359999999988, 0.0001239439999999939, 0.000124083000000004, 0.00012344400000000033, 0.00012354200000000426, 0.00012332000000000315, 0.00012408299999999706, 0.0001238199999999967, 0.00012387500000000246, 0.00012319400000000008, 0.00012319499999999955, 0.00012376399999999843, 0.00012315300000000085, 0.00012369400000000058, 0.00012343000000000076, 0.00012388900000000203, 0.00012394400000000083, 0.00012374999999999886, 0.00012369400000000058, 0.00012324999999999836, 0.00012324999999999836, 0.00012398599999999954, 0.00012401400000000562, 0.00012413900000000228, 0.0001232229999999987, 0.00012374999999999886, 0.00012348599999999904, 0.00012337500000000196, 0.00012402799999999825]</msg>
<status status="PASS" starttime="20201022 13:53:59.211" endtime="20201022 13:53:59.212"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.205" endtime="20201022 13:53:59.213"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:59.217" endtime="20201022 13:53:59.236"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.215" endtime="20201022 13:53:59.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.214" endtime="20201022 13:53:59.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.726" endtime="20201022 13:53:59.237"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:58.726" endtime="20201022 13:53:59.237"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.247" endtime="20201022 13:53:59.383"></status>
</kw>
<msg timestamp="20201022 13:53:59.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'data': [{'dut-result': '135'}, {'dut-result': '134'}, {'dut-result': '134'}, {'dut-result': '133'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:59.246" endtime="20201022 13:53:59.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'data': [{'dut-result': '135'}, {'dut-result': '134'}, {'dut-result': '134'}, {'dut-result': '133'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:59.384" endtime="20201022 13:53:59.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.387" endtime="20201022 13:53:59.389"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.243" endtime="20201022 13:53:59.390"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.240" endtime="20201022 13:53:59.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:59.394" level="INFO">${RESULT} = {'dut-result': [135, 134, 134, 133, 133, 133, 133, 133, 134, 134, 134, 133, 133, 134, 134, 133, 133, 133, 134, 134, 134, 133, 133, 134, 133, 134, 134, 134, 134, 134, 133, 133, 134, 133, 133, 134, 133,...</msg>
<status status="PASS" starttime="20201022 13:53:59.391" endtime="20201022 13:53:59.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.398" level="INFO">NAME: accuracy-TIMER_SET-95-dut</msg>
<status status="PASS" starttime="20201022 13:53:59.397" endtime="20201022 13:53:59.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.401" level="INFO">VALUE: [135, 134, 134, 133, 133, 133, 133, 133, 134, 134, 134, 133, 133, 134, 134, 133, 133, 133, 134, 134, 134, 133, 133, 134, 133, 134, 134, 134, 134, 134, 133, 133, 134, 133, 133, 134, 133, 133, 133, 134, 134, 133, 133, 134, 134, 134, 133, 134, 133, 133]</msg>
<status status="PASS" starttime="20201022 13:53:59.400" endtime="20201022 13:53:59.401"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.395" endtime="20201022 13:53:59.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.408" endtime="20201022 13:53:59.695"></status>
</kw>
<msg timestamp="20201022 13:53:59.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:59.406" endtime="20201022 13:53:59.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032667306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032792125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:59.699" endtime="20201022 13:53:59.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.707" endtime="20201022 13:53:59.709"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.404" endtime="20201022 13:53:59.710"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.402" endtime="20201022 13:53:59.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:59.714" level="INFO">${RESULT} = [{'diff': 0.00012481899999999824}, {'diff': 0.00012470900000000062}, {'diff': 0.00012513899999999634}, {'diff': 0.00012474999999999986}, {'diff': 0.00012470900000000062}, {'diff': 0.000124667000000001...</msg>
<status status="PASS" starttime="20201022 13:53:59.711" endtime="20201022 13:53:59.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:53:59.718" level="INFO">${ACCURACY} = {'diff': [0.00012481899999999824, 0.00012470900000000062, 0.00012513899999999634, 0.00012474999999999986, 0.00012470900000000062, 0.00012466700000000192, 0.00012437500000000296, 0.00012436099999999645...</msg>
<status status="PASS" starttime="20201022 13:53:59.715" endtime="20201022 13:53:59.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.722" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201022 13:53:59.721" endtime="20201022 13:53:59.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.725" level="INFO">VALUE: [0.00012481899999999824, 0.00012470900000000062, 0.00012513899999999634, 0.00012474999999999986, 0.00012470900000000062, 0.00012466700000000192, 0.00012437500000000296, 0.00012436099999999645, 0.00012422200000000022, 0.00012468100000000149, 0.0001251250000000037, 0.0001244450000000008, 0.0001242779999999985, 0.00012506999999999796, 0.00012470800000000115, 0.0001250700000000049, 0.00012452799999999875, 0.0001241800000000015, 0.0001244030000000021, 0.0001250000000000001, 0.00012448600000000004, 0.00012474999999999986, 0.00012462499999999627, 0.0001249439999999949, 0.00012488900000000303, 0.00012441700000000167, 0.00012424999999999936, 0.00012420800000000065, 0.00012424999999999936, 0.00012419400000000108, 0.00012412499999999577, 0.00012474999999999986, 0.0001251250000000037, 0.0001248329999999978, 0.00012506999999999796, 0.00012463900000000278, 0.00012487500000000346, 0.00012463900000000278, 0.00012436200000000286, 0.0001245559999999979, 0.0001242779999999985, 0.00012433300000000425, 0.00012470800000000115, 0.0001249030000000026, 0.00012444400000000133, 0.00012494400000000183, 0.00012504200000000576, 0.00012426399999999893, 0.00012431899999999774, 0.00012448600000000004]</msg>
<status status="PASS" starttime="20201022 13:53:59.724" endtime="20201022 13:53:59.725"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.719" endtime="20201022 13:53:59.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:53:59.729" endtime="20201022 13:53:59.749"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.728" endtime="20201022 13:53:59.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.727" endtime="20201022 13:53:59.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.238" endtime="20201022 13:53:59.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.238" endtime="20201022 13:53:59.750"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.760" endtime="20201022 13:53:59.896"></status>
</kw>
<msg timestamp="20201022 13:53:59.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'data': [{'dut-result': '136'}, {'dut-result': '134'}, {'dut-result': '134'}, {'dut-result': '135'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:59.757" endtime="20201022 13:53:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'data': [{'dut-result': '136'}, {'dut-result': '134'}, {'dut-result': '134'}, {'dut-result': '135'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:53:59.897" endtime="20201022 13:53:59.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.901" endtime="20201022 13:53:59.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.755" endtime="20201022 13:53:59.903"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.753" endtime="20201022 13:53:59.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:53:59.907" level="INFO">${RESULT} = {'dut-result': [136, 134, 134, 135, 134, 135, 135, 135, 135, 135, 135, 134, 134, 134, 134, 134, 134, 134, 134, 134, 135, 134, 134, 134, 135, 134, 134, 134, 134, 135, 134, 135, 134, 134, 135, 135, 134,...</msg>
<status status="PASS" starttime="20201022 13:53:59.904" endtime="20201022 13:53:59.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.912" level="INFO">NAME: accuracy-TIMER_SET-96-dut</msg>
<status status="PASS" starttime="20201022 13:53:59.911" endtime="20201022 13:53:59.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:53:59.914" level="INFO">VALUE: [136, 134, 134, 135, 134, 135, 135, 135, 135, 135, 135, 134, 134, 134, 134, 134, 134, 134, 134, 134, 135, 134, 134, 134, 135, 134, 134, 134, 134, 135, 134, 135, 134, 134, 135, 135, 134, 135, 134, 134, 135, 134, 134, 134, 135, 135, 134, 134, 135, 135]</msg>
<status status="PASS" starttime="20201022 13:53:59.913" endtime="20201022 13:53:59.915"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.908" endtime="20201022 13:53:59.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:53:59.922" endtime="20201022 13:54:00.207"></status>
</kw>
<msg timestamp="20201022 13:54:00.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032677139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032802917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:53:59.920" endtime="20201022 13:54:00.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032677139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032802917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:00.212" endtime="20201022 13:54:00.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.220" endtime="20201022 13:54:00.221"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.917" endtime="20201022 13:54:00.222"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.916" endtime="20201022 13:54:00.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:00.226" level="INFO">${RESULT} = [{'diff': 0.000125778}, {'diff': 0.0001260689999999995}, {'diff': 0.0001252360000000008}, {'diff': 0.0001259580000000024}, {'diff': 0.0001256250000000042}, {'diff': 0.0001257910000000001}, {'diff': 0....</msg>
<status status="PASS" starttime="20201022 13:54:00.223" endtime="20201022 13:54:00.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:00.230" level="INFO">${ACCURACY} = {'diff': [0.000125778, 0.0001260689999999995, 0.0001252360000000008, 0.0001259580000000024, 0.0001256250000000042, 0.0001257910000000001, 0.00012613900000000428, 0.0001254030000000031, 0.0001258189999...</msg>
<status status="PASS" starttime="20201022 13:54:00.227" endtime="20201022 13:54:00.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.235" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201022 13:54:00.234" endtime="20201022 13:54:00.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.237" level="INFO">VALUE: [0.000125778, 0.0001260689999999995, 0.0001252360000000008, 0.0001259580000000024, 0.0001256250000000042, 0.0001257910000000001, 0.00012613900000000428, 0.0001254030000000031, 0.00012581899999999924, 0.00012612499999999777, 0.00012536200000000386, 0.0001261529999999969, 0.00012616700000000342, 0.00012561100000000464, 0.00012569500000000206, 0.00012601400000000068, 0.00012595900000000188, 0.00012608299999999906, 0.00012597199999999503, 0.0001260689999999995, 0.0001259439999999959, 0.00012526399999999993, 0.0001253480000000043, 0.00012566600000000344, 0.00012570800000000215, 0.00012545900000000137, 0.0001253329999999983, 0.0001254030000000031, 0.0001259030000000036, 0.00012538800000000405, 0.00012593100000000274, 0.0001253480000000043, 0.00012520800000000165, 0.00012556999999999846, 0.00012549999999999367, 0.0001260689999999995, 0.00012575000000000086, 0.00012533399999999778, 0.00012604199999999982, 0.00012570800000000215, 0.000125778, 0.0001255000000000006, 0.00012590299999999666, 0.00012605600000000633, 0.0001253889999999966, 0.00012526399999999993, 0.00012534700000000482, 0.00012586100000000489, 0.0001259580000000024, 0.00012583399999999828]</msg>
<status status="PASS" starttime="20201022 13:54:00.236" endtime="20201022 13:54:00.238"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.231" endtime="20201022 13:54:00.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:00.242" endtime="20201022 13:54:00.261"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.240" endtime="20201022 13:54:00.262"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.239" endtime="20201022 13:54:00.262"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.751" endtime="20201022 13:54:00.263"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:59.751" endtime="20201022 13:54:00.263"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.272" endtime="20201022 13:54:00.408"></status>
</kw>
<msg timestamp="20201022 13:54:00.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'data': [{'dut-result': '137'}, {'dut-result': '135'}, {'dut-result': '135'}, {'dut-result': '135'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:00.270" endtime="20201022 13:54:00.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'data': [{'dut-result': '137'}, {'dut-result': '135'}, {'dut-result': '135'}, {'dut-result': '135'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:00.410" endtime="20201022 13:54:00.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.413" endtime="20201022 13:54:00.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.268" endtime="20201022 13:54:00.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.265" endtime="20201022 13:54:00.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:00.420" level="INFO">${RESULT} = {'dut-result': [137, 135, 135, 135, 135, 135, 136, 136, 135, 135, 135, 135, 135, 136, 135, 136, 135, 135, 135, 135, 135, 135, 136, 135, 135, 135, 135, 136, 136, 136, 135, 135, 136, 136, 135, 135, 135,...</msg>
<status status="PASS" starttime="20201022 13:54:00.417" endtime="20201022 13:54:00.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.424" level="INFO">NAME: accuracy-TIMER_SET-97-dut</msg>
<status status="PASS" starttime="20201022 13:54:00.423" endtime="20201022 13:54:00.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.426" level="INFO">VALUE: [137, 135, 135, 135, 135, 135, 136, 136, 135, 135, 135, 135, 135, 136, 135, 136, 135, 135, 135, 135, 135, 135, 136, 135, 135, 135, 135, 136, 136, 136, 135, 135, 136, 136, 135, 135, 135, 135, 135, 136, 136, 136, 135, 135, 136, 135, 136, 135, 135, 136]</msg>
<status status="PASS" starttime="20201022 13:54:00.425" endtime="20201022 13:54:00.427"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.421" endtime="20201022 13:54:00.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.434" endtime="20201022 13:54:00.720"></status>
</kw>
<msg timestamp="20201022 13:54:00.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033088889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033214861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:00.432" endtime="20201022 13:54:00.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033088889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033214861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:00.724" endtime="20201022 13:54:00.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.732" endtime="20201022 13:54:00.734"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.430" endtime="20201022 13:54:00.734"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.428" endtime="20201022 13:54:00.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:00.739" level="INFO">${RESULT} = [{'diff': 0.00012597199999999503}, {'diff': 0.00012637499999999802}, {'diff': 0.00012652700000000128}, {'diff': 0.0001268889999999981}, {'diff': 0.00012713900000000528}, {'diff': 0.0001264030000000041...</msg>
<status status="PASS" starttime="20201022 13:54:00.735" endtime="20201022 13:54:00.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:00.743" level="INFO">${ACCURACY} = {'diff': [0.00012597199999999503, 0.00012637499999999802, 0.00012652700000000128, 0.0001268889999999981, 0.00012713900000000528, 0.0001264030000000041, 0.0001266659999999975, 0.00012720899999999619, 0...</msg>
<status status="PASS" starttime="20201022 13:54:00.740" endtime="20201022 13:54:00.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.748" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201022 13:54:00.747" endtime="20201022 13:54:00.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.751" level="INFO">VALUE: [0.00012597199999999503, 0.00012637499999999802, 0.00012652700000000128, 0.0001268889999999981, 0.00012713900000000528, 0.0001264030000000041, 0.0001266659999999975, 0.00012720899999999619, 0.00012704200000000082, 0.00012641599999999725, 0.0001263889999999976, 0.0001267910000000011, 0.00012659699999999913, 0.0001271109999999992, 0.00012708300000000006, 0.0001264580000000029, 0.0001264160000000042, 0.00012658299999999956, 0.0001268199999999997, 0.00012647200000000247, 0.00012708300000000006, 0.0001265000000000016, 0.0001265979999999986, 0.00012708300000000006, 0.00012620900000000213, 0.00012706999999999996, 0.00012687499999999852, 0.0001270000000000021, 0.00012626400000000093, 0.00012622200000000222, 0.00012687499999999852, 0.00012690299999999766, 0.00012630599999999964, 0.0001267910000000011, 0.00012693100000000374, 0.0001271250000000057, 0.00012622199999999528, 0.00012651399999999424, 0.00012655500000000042, 0.0001268329999999998, 0.00012704199999999388, 0.0001264030000000041, 0.00012641599999999725, 0.00012647200000000247, 0.00012654100000000085, 0.00012691699999999723, 0.00012626400000000093, 0.00012633399999999878, 0.00012672200000000272, 0.00012647200000000247]</msg>
<status status="PASS" starttime="20201022 13:54:00.749" endtime="20201022 13:54:00.751"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.744" endtime="20201022 13:54:00.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:00.755" endtime="20201022 13:54:00.775"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.754" endtime="20201022 13:54:00.775"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.753" endtime="20201022 13:54:00.776"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.264" endtime="20201022 13:54:00.776"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.263" endtime="20201022 13:54:00.776"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.785" endtime="20201022 13:54:00.921"></status>
</kw>
<msg timestamp="20201022 13:54:00.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'data': [{'dut-result': '138'}, {'dut-result': '137'}, {'dut-result': '136'}, {'dut-result': '136'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:00.783" endtime="20201022 13:54:00.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'data': [{'dut-result': '138'}, {'dut-result': '137'}, {'dut-result': '136'}, {'dut-result': '136'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:00.923" endtime="20201022 13:54:00.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.926" endtime="20201022 13:54:00.928"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.781" endtime="20201022 13:54:00.928"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.779" endtime="20201022 13:54:00.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:00.933" level="INFO">${RESULT} = {'dut-result': [138, 137, 136, 136, 136, 137, 136, 136, 136, 137, 136, 137, 136, 136, 137, 136, 136, 137, 137, 136, 137, 136, 136, 136, 137, 137, 136, 136, 137, 136, 137, 137, 136, 136, 136, 136, 137,...</msg>
<status status="PASS" starttime="20201022 13:54:00.930" endtime="20201022 13:54:00.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.937" level="INFO">NAME: accuracy-TIMER_SET-98-dut</msg>
<status status="PASS" starttime="20201022 13:54:00.936" endtime="20201022 13:54:00.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:00.939" level="INFO">VALUE: [138, 137, 136, 136, 136, 137, 136, 136, 136, 137, 136, 137, 136, 136, 137, 136, 136, 137, 137, 136, 137, 136, 136, 136, 137, 137, 136, 136, 137, 136, 137, 137, 136, 136, 136, 136, 137, 137, 137, 136, 137, 137, 137, 136, 136, 136, 137, 137, 136, 137]</msg>
<status status="PASS" starttime="20201022 13:54:00.938" endtime="20201022 13:54:00.940"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.934" endtime="20201022 13:54:00.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:00.947" endtime="20201022 13:54:01.233"></status>
</kw>
<msg timestamp="20201022 13:54:01.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031815167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031942208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:00.945" endtime="20201022 13:54:01.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031815167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031942208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:01.237" endtime="20201022 13:54:01.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.245" endtime="20201022 13:54:01.247"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.942" endtime="20201022 13:54:01.247"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.941" endtime="20201022 13:54:01.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:01.252" level="INFO">${RESULT} = [{'diff': 0.00012704100000000135}, {'diff': 0.00012791699999999823}, {'diff': 0.0001278889999999991}, {'diff': 0.00012722199999999628}, {'diff': 0.00012724999999999542}, {'diff': 0.0001275000000000026...</msg>
<status status="PASS" starttime="20201022 13:54:01.248" endtime="20201022 13:54:01.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:01.256" level="INFO">${ACCURACY} = {'diff': [0.00012704100000000135, 0.00012791699999999823, 0.0001278889999999991, 0.00012722199999999628, 0.00012724999999999542, 0.0001275000000000026, 0.00012797199999999703, 0.0001276109999999997, 0...</msg>
<status status="PASS" starttime="20201022 13:54:01.253" endtime="20201022 13:54:01.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.261" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201022 13:54:01.260" endtime="20201022 13:54:01.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.263" level="INFO">VALUE: [0.00012704100000000135, 0.00012791699999999823, 0.0001278889999999991, 0.00012722199999999628, 0.00012724999999999542, 0.0001275000000000026, 0.00012797199999999703, 0.0001276109999999997, 0.00012797200000000397, 0.00012768099999999755, 0.00012790199999999918, 0.00012717999999999757, 0.00012812499999999977, 0.00012730500000000117, 0.00012783400000000028, 0.00012737499999999902, 0.00012767999999999807, 0.00012729200000000107, 0.00012755599999999395, 0.00012741700000000467, 0.00012740299999999816, 0.00012716699999999748, 0.0001275000000000026, 0.00012743100000000424, 0.0001272910000000016, 0.00012722299999999576, 0.00012747199999999653, 0.00012744400000000433, 0.00012807000000000096, 0.00012787499999999952, 0.00012793100000000474, 0.00012762499999999927, 0.00012730500000000117, 0.00012786099999999995, 0.00012793000000000526, 0.00012812499999999977, 0.00012809700000000063, 0.00012784799999999985, 0.00012720800000000365, 0.00012797199999999703, 0.00012774999999999592, 0.00012743000000000476, 0.00012755500000000142, 0.0001280560000000014, 0.00012779200000000157, 0.00012802800000000225, 0.00012780600000000114, 0.00012802800000000225, 0.00012786099999999995, 0.000127263999999995]</msg>
<status status="PASS" starttime="20201022 13:54:01.262" endtime="20201022 13:54:01.264"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.257" endtime="20201022 13:54:01.264"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:01.268" endtime="20201022 13:54:01.287"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.266" endtime="20201022 13:54:01.288"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.265" endtime="20201022 13:54:01.288"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.777" endtime="20201022 13:54:01.289"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:00.776" endtime="20201022 13:54:01.289"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.297" endtime="20201022 13:54:01.433"></status>
</kw>
<msg timestamp="20201022 13:54:01.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'data': [{'dut-result': '139'}, {'dut-result': '138'}, {'dut-result': '138'}, {'dut-result': '138'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:01.296" endtime="20201022 13:54:01.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'data': [{'dut-result': '139'}, {'dut-result': '138'}, {'dut-result': '138'}, {'dut-result': '138'}, {'dut-result...</msg>
<status status="PASS" starttime="20201022 13:54:01.435" endtime="20201022 13:54:01.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.438" endtime="20201022 13:54:01.440"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.293" endtime="20201022 13:54:01.440"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.291" endtime="20201022 13:54:01.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:01.445" level="INFO">${RESULT} = {'dut-result': [139, 138, 138, 138, 138, 138, 138, 137, 137, 138, 137, 138, 137, 138, 138, 138, 138, 137, 138, 138, 138, 137, 138, 137, 137, 137, 137, 138, 137, 137, 137, 138, 137, 138, 137, 138, 137,...</msg>
<status status="PASS" starttime="20201022 13:54:01.441" endtime="20201022 13:54:01.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.450" level="INFO">NAME: accuracy-TIMER_SET-99-dut</msg>
<status status="PASS" starttime="20201022 13:54:01.449" endtime="20201022 13:54:01.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.452" level="INFO">VALUE: [139, 138, 138, 138, 138, 138, 138, 137, 137, 138, 137, 138, 137, 138, 138, 138, 138, 137, 138, 138, 138, 137, 138, 137, 137, 137, 137, 138, 137, 137, 137, 138, 137, 138, 137, 138, 137, 137, 138, 138, 138, 138, 138, 137, 137, 137, 138, 137, 138, 137]</msg>
<status status="PASS" starttime="20201022 13:54:01.451" endtime="20201022 13:54:01.453"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.446" endtime="20201022 13:54:01.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.460" endtime="20201022 13:54:01.745"></status>
</kw>
<msg timestamp="20201022 13:54:01.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031687486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031816222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:01.458" endtime="20201022 13:54:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031687486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031816222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:01.749" endtime="20201022 13:54:01.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.757" endtime="20201022 13:54:01.759"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.456" endtime="20201022 13:54:01.760"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.454" endtime="20201022 13:54:01.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:01.764" level="INFO">${RESULT} = [{'diff': 0.00012873599999999735}, {'diff': 0.0001282360000000038}, {'diff': 0.0001284859999999971}, {'diff': 0.0001289309999999988}, {'diff': 0.0001287360000000043}, {'diff': 0.000129166}, {'diff': 0...</msg>
<status status="PASS" starttime="20201022 13:54:01.761" endtime="20201022 13:54:01.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:01.771" level="INFO">${ACCURACY} = {'diff': [0.00012873599999999735, 0.0001282360000000038, 0.0001284859999999971, 0.0001289309999999988, 0.0001287360000000043, 0.000129166, 0.00012842999999999882, 0.00012836100000000045, 0.00012836100...</msg>
<status status="PASS" starttime="20201022 13:54:01.765" endtime="20201022 13:54:01.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.775" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201022 13:54:01.774" endtime="20201022 13:54:01.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.778" level="INFO">VALUE: [0.00012873599999999735, 0.0001282360000000038, 0.0001284859999999971, 0.0001289309999999988, 0.0001287360000000043, 0.000129166, 0.00012842999999999882, 0.00012836100000000045, 0.00012836100000000045, 0.00012890299999999966, 0.00012824999999999642, 0.00012829199999999513, 0.00012838900000000653, 0.00012867999999999907, 0.00012904200000000282, 0.00012904100000000335, 0.0001284859999999971, 0.00012847199999999753, 0.0001284450000000048, 0.0001289309999999988, 0.00012855500000000242, 0.00012851399999999624, 0.00012824999999999642, 0.00012873599999999735, 0.000128680000000006, 0.00012867999999999907, 0.00012895900000000488, 0.00012827799999999556, 0.00012891599999999975, 0.00012879200000000257, 0.0001284309999999983, 0.0001287360000000043, 0.0001291110000000012, 0.00012890200000000018, 0.0001288330000000018, 0.00012848600000000404, 0.00012843100000000524, 0.00012887500000000052, 0.00012884800000000085, 0.00012848699999999658, 0.0001289439999999989, 0.00012852700000000328, 0.0001283189999999948, 0.00012899999999999717, 0.00012834800000000035, 0.0001286110000000007, 0.00012845799999999796, 0.0001284309999999983, 0.00012902800000000325, 0.000128569000000002]</msg>
<status status="PASS" starttime="20201022 13:54:01.776" endtime="20201022 13:54:01.778"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.772" endtime="20201022 13:54:01.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:01.782" endtime="20201022 13:54:01.802"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.781" endtime="20201022 13:54:01.802"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.780" endtime="20201022 13:54:01.803"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.290" endtime="20201022 13:54:01.803"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.289" endtime="20201022 13:54:01.803"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.812" endtime="20201022 13:54:01.948"></status>
</kw>
<msg timestamp="20201022 13:54:01.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'data': [{'dut-result': '140'}, {'dut-result': '139'}, {'dut-result': '138'}, {'dut-result': '139'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:01.811" endtime="20201022 13:54:01.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'data': [{'dut-result': '140'}, {'dut-result': '139'}, {'dut-result': '138'}, {'dut-result': '139'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:01.950" endtime="20201022 13:54:01.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.953" endtime="20201022 13:54:01.955"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.807" endtime="20201022 13:54:01.955"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.805" endtime="20201022 13:54:01.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:01.961" level="INFO">${RESULT} = {'dut-result': [140, 139, 138, 139, 138, 139, 139, 138, 138, 138, 139, 139, 138, 138, 139, 138, 139, 138, 138, 139, 139, 138, 138, 139, 138, 139, 139, 138, 138, 139, 139, 139, 139, 138, 138, 139, 139,...</msg>
<status status="PASS" starttime="20201022 13:54:01.957" endtime="20201022 13:54:01.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.965" level="INFO">NAME: accuracy-TIMER_SET-100-dut</msg>
<status status="PASS" starttime="20201022 13:54:01.964" endtime="20201022 13:54:01.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:01.967" level="INFO">VALUE: [140, 139, 138, 139, 138, 139, 139, 138, 138, 138, 139, 139, 138, 138, 139, 138, 139, 138, 138, 139, 139, 138, 138, 139, 138, 139, 139, 138, 138, 139, 139, 139, 139, 138, 138, 139, 139, 139, 139, 138, 139, 138, 138, 138, 138, 138, 139, 138, 138, 139]</msg>
<status status="PASS" starttime="20201022 13:54:01.966" endtime="20201022 13:54:01.968"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.961" endtime="20201022 13:54:01.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:01.975" endtime="20201022 13:54:02.279"></status>
</kw>
<msg timestamp="20201022 13:54:02.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032524931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:01.973" endtime="20201022 13:54:02.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032524931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:02.283" endtime="20201022 13:54:02.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.291" endtime="20201022 13:54:02.293"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.970" endtime="20201022 13:54:02.293"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.969" endtime="20201022 13:54:02.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:02.297" level="INFO">${RESULT} = [{'diff': 0.00012907000000000196}, {'diff': 0.00012917999999999957}, {'diff': 0.00012979099999999716}, {'diff': 0.00012973599999999835}, {'diff': 0.00012916699999999948}, {'diff': 0.000129902000000001...</msg>
<status status="PASS" starttime="20201022 13:54:02.294" endtime="20201022 13:54:02.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:02.302" level="INFO">${ACCURACY} = {'diff': [0.00012907000000000196, 0.00012917999999999957, 0.00012979099999999716, 0.00012973599999999835, 0.00012916699999999948, 0.00012990200000000118, 0.00013002699999999784, 0.00012962500000000127...</msg>
<status status="PASS" starttime="20201022 13:54:02.298" endtime="20201022 13:54:02.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.306" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201022 13:54:02.305" endtime="20201022 13:54:02.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.309" level="INFO">VALUE: [0.00012907000000000196, 0.00012917999999999957, 0.00012979099999999716, 0.00012973599999999835, 0.00012916699999999948, 0.00012990200000000118, 0.00013002699999999784, 0.00012962500000000127, 0.00013006999999999602, 0.0001297079999999992, 0.00012940300000000016, 0.00012975000000000486, 0.0001301110000000022, 0.00013004100000000435, 0.00012916699999999948, 0.0001292910000000036, 0.00012923599999999785, 0.00012919399999999914, 0.00012972200000000572, 0.00012924999999999742, 0.0001301110000000022, 0.00012942999999999982, 0.0001294859999999981, 0.00012979199999999663, 0.00013008400000000253, 0.0001297079999999992, 0.00012958400000000203, 0.00012916699999999948, 0.0001300279999999973, 0.00012940300000000016, 0.00012986100000000195, 0.0001300560000000034, 0.00013002699999999784, 0.0001297769999999976, 0.0001293330000000023, 0.00013009700000000263, 0.00012940300000000016, 0.00012979099999999716, 0.0001293890000000006, 0.00013002800000000425, 0.0001294859999999981, 0.0001293890000000006, 0.00012927700000000403, 0.0001295980000000016, 0.00012979199999999663, 0.00012969499999999912, 0.00013004200000000382, 0.00012974999999999792, 0.00012987500000000152, 0.0001295969999999952]</msg>
<status status="PASS" starttime="20201022 13:54:02.307" endtime="20201022 13:54:02.310"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.303" endtime="20201022 13:54:02.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:02.314" endtime="20201022 13:54:02.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.312" endtime="20201022 13:54:02.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.311" endtime="20201022 13:54:02.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.804" endtime="20201022 13:54:02.334"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:01.803" endtime="20201022 13:54:02.335"></status>
</kw>
<status status="PASS" starttime="20201022 13:53:11.693" endtime="20201022 13:54:02.335"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:53:11.625" endtime="20201022 13:54:02.335" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:02.342" endtime="20201022 13:54:02.362"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.341" endtime="20201022 13:54:02.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.375" endtime="20201022 13:54:02.388"></status>
</kw>
<msg timestamp="20201022 13:54:02.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:02.374" endtime="20201022 13:54:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:02.390" endtime="20201022 13:54:02.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.394" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:02.392" endtime="20201022 13:54:02.395"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:02.371" endtime="20201022 13:54:02.395"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:02.369" endtime="20201022 13:54:02.396"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.367" endtime="20201022 13:54:02.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:02.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:02.399" endtime="20201022 13:54:02.400"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.397" endtime="20201022 13:54:02.400"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.366" endtime="20201022 13:54:02.401"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.366" endtime="20201022 13:54:02.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.402" endtime="20201022 13:54:02.403"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.365" endtime="20201022 13:54:02.404"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.363" endtime="20201022 13:54:02.404"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.339" endtime="20201022 13:54:02.404"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.413" endtime="20201022 13:54:02.531"></status>
</kw>
<msg timestamp="20201022 13:54:02.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:02.412" endtime="20201022 13:54:02.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:02.533" endtime="20201022 13:54:02.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.537" endtime="20201022 13:54:02.538"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.409" endtime="20201022 13:54:02.539"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.407" endtime="20201022 13:54:02.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:02.543" level="INFO">${RESULT} = {'dut-result': [41, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, ...</msg>
<status status="PASS" starttime="20201022 13:54:02.540" endtime="20201022 13:54:02.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.549" level="INFO">NAME: accuracy-TIMER_SLEEP-1-dut</msg>
<status status="PASS" starttime="20201022 13:54:02.548" endtime="20201022 13:54:02.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.551" level="INFO">VALUE: [41, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40]</msg>
<status status="PASS" starttime="20201022 13:54:02.550" endtime="20201022 13:54:02.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.544" endtime="20201022 13:54:02.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.558" endtime="20201022 13:54:02.844"></status>
</kw>
<msg timestamp="20201022 13:54:02.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067078194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:02.557" endtime="20201022 13:54:02.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067078194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067109319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:02.849" endtime="20201022 13:54:02.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.857" endtime="20201022 13:54:02.858"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.554" endtime="20201022 13:54:02.859"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.553" endtime="20201022 13:54:02.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:02.863" level="INFO">${RESULT} = [{'diff': 3.112500000000684e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.0624999999992464e-05}, {'diff': 3.063899999999897e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:02.860" endtime="20201022 13:54:02.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:02.869" level="INFO">${ACCURACY} = {'diff': [3.112500000000684e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.063899999999897e-05, 3.063900000001285e-05, 3.063900000001285e-05, 3.059...</msg>
<status status="PASS" starttime="20201022 13:54:02.864" endtime="20201022 13:54:02.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.875" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201022 13:54:02.874" endtime="20201022 13:54:02.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:02.878" level="INFO">VALUE: [3.112500000000684e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.063899999999897e-05, 3.063900000001285e-05, 3.063900000001285e-05, 3.05970000000072e-05, 3.06379999999995e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.062500000000634e-05, 3.066599999999864e-05, 3.0596999999993324e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.056999999999366e-05, 3.0624999999992464e-05, 3.063899999999897e-05, 3.055500000000155e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.062500000000634e-05, 3.062500000000634e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.05970000000072e-05, 3.0624999999992464e-05, 3.066599999999864e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.062500000000634e-05, 3.062500000000634e-05, 3.0652999999991604e-05, 3.062500000000634e-05, 3.0540999999995044e-05, 3.061099999999983e-05, 3.0652999999991604e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.0624999999992464e-05, 3.063899999999897e-05, 3.06379999999995e-05, 3.062500000000634e-05, 3.063899999999897e-05]</msg>
<status status="PASS" starttime="20201022 13:54:02.876" endtime="20201022 13:54:02.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.869" endtime="20201022 13:54:02.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:02.885" endtime="20201022 13:54:02.907"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.883" endtime="20201022 13:54:02.908"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.880" endtime="20201022 13:54:02.908"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.406" endtime="20201022 13:54:02.908"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.405" endtime="20201022 13:54:02.909"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:02.917" endtime="20201022 13:54:03.035"></status>
</kw>
<msg timestamp="20201022 13:54:03.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:02.916" endtime="20201022 13:54:03.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:03.037" endtime="20201022 13:54:03.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.040" endtime="20201022 13:54:03.042"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.913" endtime="20201022 13:54:03.043"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.911" endtime="20201022 13:54:03.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:03.047" level="INFO">${RESULT} = {'dut-result': [41, 40, 40, 40, 40, 40, 40, 39, 40, 39, 40, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 39, 40, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, ...</msg>
<status status="PASS" starttime="20201022 13:54:03.044" endtime="20201022 13:54:03.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.051" level="INFO">NAME: accuracy-TIMER_SLEEP-2-dut</msg>
<status status="PASS" starttime="20201022 13:54:03.050" endtime="20201022 13:54:03.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.053" level="INFO">VALUE: [41, 40, 40, 40, 40, 40, 40, 39, 40, 39, 40, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 39, 40, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40]</msg>
<status status="PASS" starttime="20201022 13:54:03.052" endtime="20201022 13:54:03.055"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.048" endtime="20201022 13:54:03.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.062" endtime="20201022 13:54:03.349"></status>
</kw>
<msg timestamp="20201022 13:54:03.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02769625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027727389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:03.060" endtime="20201022 13:54:03.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02769625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027727389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:03.354" endtime="20201022 13:54:03.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.362" endtime="20201022 13:54:03.363"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.057" endtime="20201022 13:54:03.364"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.056" endtime="20201022 13:54:03.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:03.369" level="INFO">${RESULT} = [{'diff': 3.113900000000294e-05}, {'diff': 3.067999999999821e-05}, {'diff': 3.063900000000244e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.06379999999995e-05}, {'diff': 3.0612000000002776e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:54:03.365" endtime="20201022 13:54:03.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:03.373" level="INFO">${ACCURACY} = {'diff': [3.113900000000294e-05, 3.067999999999821e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.06379999999995e-05, 3.0612000000002776e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.06389...</msg>
<status status="PASS" starttime="20201022 13:54:03.370" endtime="20201022 13:54:03.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.378" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201022 13:54:03.377" endtime="20201022 13:54:03.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.381" level="INFO">VALUE: [3.113900000000294e-05, 3.067999999999821e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.06379999999995e-05, 3.0612000000002776e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.063899999999897e-05, 3.069499999999725e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.066600000000211e-05, 3.065200000000254e-05, 3.061099999999983e-05, 3.06110000000033e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.066699999999811e-05, 3.065299999999854e-05, 3.065199999999907e-05, 3.056900000000112e-05, 3.06379999999995e-05, 3.06249999999994e-05, 3.05700000000006e-05, 3.0597999999999737e-05, 3.06249999999994e-05, 3.063900000000244e-05, 3.058300000000069e-05, 3.0596999999996793e-05, 3.054200000000146e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.065299999999854e-05, 3.06110000000033e-05, 3.0597999999999737e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.062500000000287e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.066599999999864e-05]</msg>
<status status="PASS" starttime="20201022 13:54:03.379" endtime="20201022 13:54:03.381"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.374" endtime="20201022 13:54:03.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:03.385" endtime="20201022 13:54:03.405"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.384" endtime="20201022 13:54:03.405"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.383" endtime="20201022 13:54:03.406"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.910" endtime="20201022 13:54:03.406"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:02.909" endtime="20201022 13:54:03.406"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.415" endtime="20201022 13:54:03.533"></status>
</kw>
<msg timestamp="20201022 13:54:03.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:03.413" endtime="20201022 13:54:03.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:03.535" endtime="20201022 13:54:03.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.538" endtime="20201022 13:54:03.540"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.411" endtime="20201022 13:54:03.540"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.409" endtime="20201022 13:54:03.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:03.545" level="INFO">${RESULT} = {'dut-result': [41, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, ...</msg>
<status status="PASS" starttime="20201022 13:54:03.541" endtime="20201022 13:54:03.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.549" level="INFO">NAME: accuracy-TIMER_SLEEP-3-dut</msg>
<status status="PASS" starttime="20201022 13:54:03.548" endtime="20201022 13:54:03.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.551" level="INFO">VALUE: [41, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40]</msg>
<status status="PASS" starttime="20201022 13:54:03.550" endtime="20201022 13:54:03.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.545" endtime="20201022 13:54:03.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.560" endtime="20201022 13:54:03.845"></status>
</kw>
<msg timestamp="20201022 13:54:03.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:03.558" endtime="20201022 13:54:03.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025267764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:03.849" endtime="20201022 13:54:03.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.858" endtime="20201022 13:54:03.859"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.555" endtime="20201022 13:54:03.860"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.553" endtime="20201022 13:54:03.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:03.864" level="INFO">${RESULT} = [{'diff': 3.113900000000294e-05}, {'diff': 3.063900000000244e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.066600000000211e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.063900000000244e-05}, {'...</msg>
<status status="PASS" starttime="20201022 13:54:03.861" endtime="20201022 13:54:03.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:03.868" level="INFO">${ACCURACY} = {'diff': [3.113900000000294e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.066600000000211e-05, 3.068100000000115e-05, 3.063900000000244e-05, 3.0596999999996793e-05, 3.063899999999897e-05, 3.0638...</msg>
<status status="PASS" starttime="20201022 13:54:03.865" endtime="20201022 13:54:03.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.873" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201022 13:54:03.872" endtime="20201022 13:54:03.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:03.875" level="INFO">VALUE: [3.113900000000294e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.066600000000211e-05, 3.068100000000115e-05, 3.063900000000244e-05, 3.0596999999996793e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.0597999999999737e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.062500000000287e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.058300000000069e-05, 3.0597999999999737e-05, 3.063900000000244e-05, 3.06249999999994e-05, 3.063900000000244e-05, 3.066699999999811e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.063900000000244e-05, 3.063899999999897e-05, 3.065300000000201e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.062500000000287e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.059700000000026e-05, 3.065299999999854e-05, 3.063899999999897e-05, 3.068099999999768e-05, 3.062500000000287e-05, 3.065299999999854e-05, 3.067999999999821e-05]</msg>
<status status="PASS" starttime="20201022 13:54:03.874" endtime="20201022 13:54:03.876"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.869" endtime="20201022 13:54:03.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:03.880" endtime="20201022 13:54:03.900"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.878" endtime="20201022 13:54:03.901"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.877" endtime="20201022 13:54:03.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.407" endtime="20201022 13:54:03.902"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.406" endtime="20201022 13:54:03.902"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:03.915" endtime="20201022 13:54:04.034"></status>
</kw>
<msg timestamp="20201022 13:54:04.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:03.913" endtime="20201022 13:54:04.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '40'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:04.036" endtime="20201022 13:54:04.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.039" endtime="20201022 13:54:04.041"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.909" endtime="20201022 13:54:04.042"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.906" endtime="20201022 13:54:04.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:04.046" level="INFO">${RESULT} = {'dut-result': [41, 40, 39, 40, 40, 40, 40, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 39, 40, 40, 39, ...</msg>
<status status="PASS" starttime="20201022 13:54:04.043" endtime="20201022 13:54:04.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.050" level="INFO">NAME: accuracy-TIMER_SLEEP-4-dut</msg>
<status status="PASS" starttime="20201022 13:54:04.049" endtime="20201022 13:54:04.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.053" level="INFO">VALUE: [41, 40, 39, 40, 40, 40, 40, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 39, 40, 40, 39, 40, 40, 40, 40]</msg>
<status status="PASS" starttime="20201022 13:54:04.052" endtime="20201022 13:54:04.053"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.047" endtime="20201022 13:54:04.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.061" endtime="20201022 13:54:04.346"></status>
</kw>
<msg timestamp="20201022 13:54:04.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032199764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032230889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:04.059" endtime="20201022 13:54:04.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032199764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032230889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:04.350" endtime="20201022 13:54:04.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.359" endtime="20201022 13:54:04.362"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.056" endtime="20201022 13:54:04.362"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.054" endtime="20201022 13:54:04.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:04.368" level="INFO">${RESULT} = [{'diff': 3.11249999999999e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.063900000000591e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.066699999999811e-05}, {'di...</msg>
<status status="PASS" starttime="20201022 13:54:04.364" endtime="20201022 13:54:04.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:04.372" level="INFO">${ACCURACY} = {'diff': [3.11249999999999e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063900000000591e-05, 3.06249999999994e-05, 3.066699999999811e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.06390000...</msg>
<status status="PASS" starttime="20201022 13:54:04.369" endtime="20201022 13:54:04.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.378" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201022 13:54:04.377" endtime="20201022 13:54:04.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.381" level="INFO">VALUE: [3.11249999999999e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063900000000591e-05, 3.06249999999994e-05, 3.066699999999811e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063900000000591e-05, 3.056900000000112e-05, 3.063899999999897e-05, 3.066599999999864e-05, 3.06379999999995e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.066599999999864e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.06379999999995e-05, 3.055500000000155e-05, 3.063900000000591e-05, 3.061099999999983e-05, 3.06379999999995e-05, 3.063900000000591e-05, 3.06249999999994e-05, 3.06379999999995e-05, 3.055600000000103e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.063900000000591e-05, 3.063899999999897e-05, 3.059700000000026e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.063800000000644e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.067999999999821e-05, 3.062500000000634e-05, 3.06249999999994e-05, 3.0584000000000167e-05, 3.06379999999995e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.062500000000634e-05]</msg>
<status status="PASS" starttime="20201022 13:54:04.380" endtime="20201022 13:54:04.382"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.373" endtime="20201022 13:54:04.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:04.387" endtime="20201022 13:54:04.407"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.385" endtime="20201022 13:54:04.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.384" endtime="20201022 13:54:04.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.904" endtime="20201022 13:54:04.409"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:03.903" endtime="20201022 13:54:04.409"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.418" endtime="20201022 13:54:04.536"></status>
</kw>
<msg timestamp="20201022 13:54:04.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:04.417" endtime="20201022 13:54:04.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'data': [{'dut-result': '41'}, {'dut-result': '39'}, {'dut-result': '40'}, {'dut-result': '40'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:04.538" endtime="20201022 13:54:04.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.541" endtime="20201022 13:54:04.543"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.414" endtime="20201022 13:54:04.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.411" endtime="20201022 13:54:04.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:04.548" level="INFO">${RESULT} = {'dut-result': [41, 39, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 39, ...</msg>
<status status="PASS" starttime="20201022 13:54:04.545" endtime="20201022 13:54:04.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.552" level="INFO">NAME: accuracy-TIMER_SLEEP-5-dut</msg>
<status status="PASS" starttime="20201022 13:54:04.551" endtime="20201022 13:54:04.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.555" level="INFO">VALUE: [41, 39, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 39, 40, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 40, 39, 40, 40, 40, 40, 39, 40, 40, 39, 40, 40, 40, 39]</msg>
<status status="PASS" starttime="20201022 13:54:04.554" endtime="20201022 13:54:04.555"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.549" endtime="20201022 13:54:04.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.562" endtime="20201022 13:54:04.850"></status>
</kw>
<msg timestamp="20201022 13:54:04.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026855486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:04.560" endtime="20201022 13:54:04.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026824347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026855486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:04.854" endtime="20201022 13:54:04.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.863" endtime="20201022 13:54:04.864"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.558" endtime="20201022 13:54:04.865"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.556" endtime="20201022 13:54:04.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:04.869" level="INFO">${RESULT} = [{'diff': 3.113900000000294e-05}, {'diff': 3.06249999999994e-05}, {'diff': 3.063900000000244e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.0584000000000167e-05}, {'diff': 3.063899999999897e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:04.866" endtime="20201022 13:54:04.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:04.873" level="INFO">${ACCURACY} = {'diff': [3.113900000000294e-05, 3.06249999999994e-05, 3.063900000000244e-05, 3.061099999999983e-05, 3.0584000000000167e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.0624...</msg>
<status status="PASS" starttime="20201022 13:54:04.870" endtime="20201022 13:54:04.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.878" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201022 13:54:04.877" endtime="20201022 13:54:04.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:04.881" level="INFO">VALUE: [3.113900000000294e-05, 3.06249999999994e-05, 3.063900000000244e-05, 3.061099999999983e-05, 3.0584000000000167e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.066700000000158e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.068100000000115e-05, 3.062500000000287e-05, 3.0584000000000167e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.061099999999983e-05, 3.06249999999994e-05, 3.0597999999999737e-05, 3.062500000000287e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.0611999999999306e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.06249999999994e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.070800000000082e-05, 3.06249999999994e-05, 3.068099999999768e-05, 3.0597999999999737e-05, 3.062500000000287e-05, 3.06249999999994e-05, 3.061099999999983e-05, 3.063899999999897e-05, 3.063900000000244e-05, 3.062500000000287e-05, 3.062500000000287e-05, 3.06249999999994e-05, 3.065300000000201e-05, 3.054199999999799e-05, 3.061099999999983e-05]</msg>
<status status="PASS" starttime="20201022 13:54:04.879" endtime="20201022 13:54:04.881"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.874" endtime="20201022 13:54:04.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:04.885" endtime="20201022 13:54:04.904"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.884" endtime="20201022 13:54:04.905"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.882" endtime="20201022 13:54:04.905"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.410" endtime="20201022 13:54:04.906"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.409" endtime="20201022 13:54:04.906"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:04.914" endtime="20201022 13:54:05.034"></status>
</kw>
<msg timestamp="20201022 13:54:05.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:04.913" endtime="20201022 13:54:05.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:05.036" endtime="20201022 13:54:05.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.039" endtime="20201022 13:54:05.040"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.910" endtime="20201022 13:54:05.041"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.908" endtime="20201022 13:54:05.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:05.045" level="INFO">${RESULT} = {'dut-result': [46, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 44, 44, 44, 44, 45, 45, 44, 44, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 44, 45, 44, 45, 45, 45, ...</msg>
<status status="PASS" starttime="20201022 13:54:05.042" endtime="20201022 13:54:05.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.050" level="INFO">NAME: accuracy-TIMER_SLEEP-6-dut</msg>
<status status="PASS" starttime="20201022 13:54:05.049" endtime="20201022 13:54:05.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.052" level="INFO">VALUE: [46, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 44, 44, 44, 44, 45, 45, 44, 44, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 44, 45, 44, 45, 45, 45, 45, 44, 45, 45]</msg>
<status status="PASS" starttime="20201022 13:54:05.051" endtime="20201022 13:54:05.052"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.046" endtime="20201022 13:54:05.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.059" endtime="20201022 13:54:05.358"></status>
</kw>
<msg timestamp="20201022 13:54:05.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026467458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:05.057" endtime="20201022 13:54:05.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026431361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026467458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:05.363" endtime="20201022 13:54:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.371" endtime="20201022 13:54:05.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.055" endtime="20201022 13:54:05.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.053" endtime="20201022 13:54:05.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:05.379" level="INFO">${RESULT} = [{'diff': 3.6096999999998824e-05}, {'diff': 3.5541000000000045e-05}, {'diff': 3.5555000000003084e-05}, {'diff': 3.552799999999995e-05}, {'diff': 3.5569000000002654e-05}, {'diff': 3.548599999999777e-05...</msg>
<status status="PASS" starttime="20201022 13:54:05.374" endtime="20201022 13:54:05.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:05.383" level="INFO">${ACCURACY} = {'diff': [3.6096999999998824e-05, 3.5541000000000045e-05, 3.5555000000003084e-05, 3.552799999999995e-05, 3.5569000000002654e-05, 3.548599999999777e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3...</msg>
<status status="PASS" starttime="20201022 13:54:05.380" endtime="20201022 13:54:05.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.387" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201022 13:54:05.386" endtime="20201022 13:54:05.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.390" level="INFO">VALUE: [3.6096999999998824e-05, 3.5541000000000045e-05, 3.5555000000003084e-05, 3.552799999999995e-05, 3.5569000000002654e-05, 3.548599999999777e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.5638999999997034e-05, 3.5568999999999185e-05, 3.554199999999952e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.5611000000001364e-05, 3.554200000000299e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.556999999999866e-05, 3.5554999999999615e-05, 3.552799999999995e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.550000000000081e-05, 3.555599999999909e-05, 3.5555000000003084e-05, 3.5541000000000045e-05, 3.555600000000256e-05, 3.550000000000081e-05, 3.556999999999866e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.561200000000084e-05, 3.5554999999999615e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.5569000000002654e-05, 3.5527000000000475e-05, 3.5625000000000934e-05, 3.550000000000081e-05, 3.556999999999866e-05, 3.5597000000001794e-05, 3.06249999999994e-05, 3.554199999999952e-05, 3.5568999999999185e-05]</msg>
<status status="PASS" starttime="20201022 13:54:05.388" endtime="20201022 13:54:05.390"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.384" endtime="20201022 13:54:05.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:05.394" endtime="20201022 13:54:05.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.393" endtime="20201022 13:54:05.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.392" endtime="20201022 13:54:05.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.907" endtime="20201022 13:54:05.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:04.906" endtime="20201022 13:54:05.415"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.424" endtime="20201022 13:54:05.542"></status>
</kw>
<msg timestamp="20201022 13:54:05.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:05.422" endtime="20201022 13:54:05.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:05.544" endtime="20201022 13:54:05.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.547" endtime="20201022 13:54:05.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.420" endtime="20201022 13:54:05.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.418" endtime="20201022 13:54:05.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:05.555" level="INFO">${RESULT} = {'dut-result': [46, 45, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 44, 45, 44, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 44, 44, 44, 45, 45, 45, ...</msg>
<status status="PASS" starttime="20201022 13:54:05.552" endtime="20201022 13:54:05.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.560" level="INFO">NAME: accuracy-TIMER_SLEEP-7-dut</msg>
<status status="PASS" starttime="20201022 13:54:05.559" endtime="20201022 13:54:05.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.562" level="INFO">VALUE: [46, 45, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 44, 45, 44, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45]</msg>
<status status="PASS" starttime="20201022 13:54:05.561" endtime="20201022 13:54:05.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.556" endtime="20201022 13:54:05.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.569" endtime="20201022 13:54:05.856"></status>
</kw>
<msg timestamp="20201022 13:54:05.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025509083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025545139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:05.567" endtime="20201022 13:54:05.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025509083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025545139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:05.860" endtime="20201022 13:54:05.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.868" endtime="20201022 13:54:05.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.565" endtime="20201022 13:54:05.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.563" endtime="20201022 13:54:05.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:05.875" level="INFO">${RESULT} = [{'diff': 3.605600000000306e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.5527000000000475e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.556999999999866e-05}, {'diff': 3.5611000000001364e-05}...</msg>
<status status="PASS" starttime="20201022 13:54:05.871" endtime="20201022 13:54:05.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:05.880" level="INFO">${ACCURACY} = {'diff': [3.605600000000306e-05, 3.5554999999999615e-05, 3.5527000000000475e-05, 3.554199999999952e-05, 3.556999999999866e-05, 3.5611000000001364e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3....</msg>
<status status="PASS" starttime="20201022 13:54:05.876" endtime="20201022 13:54:05.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.884" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201022 13:54:05.883" endtime="20201022 13:54:05.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:05.887" level="INFO">VALUE: [3.605600000000306e-05, 3.5554999999999615e-05, 3.5527000000000475e-05, 3.554199999999952e-05, 3.556999999999866e-05, 3.5611000000001364e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3.556999999999866e-05, 3.548700000000071e-05, 3.548600000000124e-05, 3.557000000000213e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5569000000002654e-05, 3.5554999999999615e-05, 3.555600000000256e-05, 3.557000000000213e-05, 3.552799999999995e-05, 3.5554999999999615e-05, 3.5568999999999185e-05, 3.554199999999952e-05, 3.547200000000167e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.5541000000000045e-05, 3.5541000000000045e-05, 3.557000000000213e-05, 3.5541000000000045e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.554199999999952e-05, 3.555600000000256e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5541000000000045e-05, 3.5611000000001364e-05, 3.55979999999978e-05, 3.5569000000002654e-05, 3.5527000000000475e-05, 3.556999999999866e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.555600000000256e-05, 3.548700000000071e-05]</msg>
<status status="PASS" starttime="20201022 13:54:05.885" endtime="20201022 13:54:05.887"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.881" endtime="20201022 13:54:05.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:05.891" endtime="20201022 13:54:05.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.890" endtime="20201022 13:54:05.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.888" endtime="20201022 13:54:05.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.416" endtime="20201022 13:54:05.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.415" endtime="20201022 13:54:05.912"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:05.921" endtime="20201022 13:54:06.040"></status>
</kw>
<msg timestamp="20201022 13:54:06.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:05.920" endtime="20201022 13:54:06.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:06.042" endtime="20201022 13:54:06.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.045" endtime="20201022 13:54:06.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.917" endtime="20201022 13:54:06.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.915" endtime="20201022 13:54:06.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:06.053" level="INFO">${RESULT} = {'dut-result': [46, 45, 45, 45, 44, 45, 45, 44, 45, 44, 44, 45, 44, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 44, 45, 45, 44, 44, 45, 44, 45, 44, 45, 45, 45, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 44, ...</msg>
<status status="PASS" starttime="20201022 13:54:06.048" endtime="20201022 13:54:06.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.057" level="INFO">NAME: accuracy-TIMER_SLEEP-8-dut</msg>
<status status="PASS" starttime="20201022 13:54:06.056" endtime="20201022 13:54:06.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.059" level="INFO">VALUE: [46, 45, 45, 45, 44, 45, 45, 44, 45, 44, 44, 45, 44, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 44, 45, 45, 44, 44, 45, 44, 45, 44, 45, 45, 45, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 44, 45, 45, 45, 45]</msg>
<status status="PASS" starttime="20201022 13:54:06.058" endtime="20201022 13:54:06.059"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.053" endtime="20201022 13:54:06.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.066" endtime="20201022 13:54:06.353"></status>
</kw>
<msg timestamp="20201022 13:54:06.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026298986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:06.065" endtime="20201022 13:54:06.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026298986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026335042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:06.359" endtime="20201022 13:54:06.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.370" endtime="20201022 13:54:06.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.062" endtime="20201022 13:54:06.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.061" endtime="20201022 13:54:06.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:06.379" level="INFO">${RESULT} = [{'diff': 3.605599999999959e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.5597000000001794e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.552799999999995e-05}, {'diff': 3.555599999999909e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:06.376" endtime="20201022 13:54:06.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:06.384" level="INFO">${ACCURACY} = {'diff': [3.605599999999959e-05, 3.551400000000038e-05, 3.5597000000001794e-05, 3.554199999999952e-05, 3.552799999999995e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5541000000000045e-05, 3.55...</msg>
<status status="PASS" starttime="20201022 13:54:06.381" endtime="20201022 13:54:06.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.390" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201022 13:54:06.388" endtime="20201022 13:54:06.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.392" level="INFO">VALUE: [3.605599999999959e-05, 3.551400000000038e-05, 3.5597000000001794e-05, 3.554199999999952e-05, 3.552799999999995e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5541000000000045e-05, 3.5568999999999185e-05, 3.5554999999999615e-05, 3.548600000000124e-05, 3.5554999999999615e-05, 3.5610999999997894e-05, 3.548599999999777e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.554200000000299e-05, 3.555599999999909e-05, 3.55840000000017e-05, 3.548600000000124e-05, 3.5554999999999615e-05, 3.5554999999999615e-05, 3.555600000000256e-05, 3.5569000000002654e-05, 3.5555000000003084e-05, 3.555600000000256e-05, 3.554200000000299e-05, 3.550000000000081e-05, 3.555599999999909e-05, 3.5541000000000045e-05, 3.55840000000017e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.552799999999995e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3.5554999999999615e-05, 3.5596999999998324e-05, 3.552799999999995e-05, 3.555600000000256e-05, 3.5569000000002654e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.5541000000000045e-05, 3.552799999999995e-05, 3.5541000000000045e-05]</msg>
<status status="PASS" starttime="20201022 13:54:06.391" endtime="20201022 13:54:06.392"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.385" endtime="20201022 13:54:06.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:06.397" endtime="20201022 13:54:06.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.395" endtime="20201022 13:54:06.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.394" endtime="20201022 13:54:06.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.914" endtime="20201022 13:54:06.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:05.913" endtime="20201022 13:54:06.418"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.426" endtime="20201022 13:54:06.545"></status>
</kw>
<msg timestamp="20201022 13:54:06.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '44'}, {'dut-result': '45'}, {'dut-result': '44'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:06.425" endtime="20201022 13:54:06.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '44'}, {'dut-result': '45'}, {'dut-result': '44'}, {'dut-result': '...</msg>
<status status="PASS" starttime="20201022 13:54:06.546" endtime="20201022 13:54:06.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.550" endtime="20201022 13:54:06.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.422" endtime="20201022 13:54:06.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.420" endtime="20201022 13:54:06.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:06.557" level="INFO">${RESULT} = {'dut-result': [46, 44, 45, 44, 45, 44, 45, 45, 45, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 45, 44, 45, 44, 45, 45, 45, 45, 44, 45, 44, 45, 45, 44, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, ...</msg>
<status status="PASS" starttime="20201022 13:54:06.553" endtime="20201022 13:54:06.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.562" level="INFO">NAME: accuracy-TIMER_SLEEP-9-dut</msg>
<status status="PASS" starttime="20201022 13:54:06.561" endtime="20201022 13:54:06.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.564" level="INFO">VALUE: [46, 44, 45, 44, 45, 44, 45, 45, 45, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 45, 44, 45, 44, 45, 45, 45, 45, 44, 45, 44, 45, 45, 44, 45, 45, 45, 45, 45, 45, 44, 45, 45, 45, 45, 44, 45, 45, 45]</msg>
<status status="PASS" starttime="20201022 13:54:06.563" endtime="20201022 13:54:06.564"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.558" endtime="20201022 13:54:06.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.571" endtime="20201022 13:54:06.856"></status>
</kw>
<msg timestamp="20201022 13:54:06.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025548611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:06.569" endtime="20201022 13:54:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025548611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:06.861" endtime="20201022 13:54:06.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.870" endtime="20201022 13:54:06.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.567" endtime="20201022 13:54:06.872"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.565" endtime="20201022 13:54:06.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:06.876" level="INFO">${RESULT} = [{'diff': 3.604200000000002e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.5568999999999185e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.555599999999909e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:06.873" endtime="20201022 13:54:06.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:06.881" level="INFO">${ACCURACY} = {'diff': [3.604200000000002e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.548599999999777e-05, 3.555599999999909e-05, 3.555...</msg>
<status status="PASS" starttime="20201022 13:54:06.877" endtime="20201022 13:54:06.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.886" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201022 13:54:06.885" endtime="20201022 13:54:06.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:06.888" level="INFO">VALUE: [3.604200000000002e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5568999999999185e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.548599999999777e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.555600000000256e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.555599999999909e-05, 3.5526999999997005e-05, 3.5569000000002654e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.5569000000002654e-05, 3.554199999999952e-05, 3.557000000000213e-05, 3.556999999999866e-05, 3.5596999999998324e-05, 3.5554999999999615e-05, 3.5555000000003084e-05, 3.555599999999909e-05, 3.5582999999998755e-05, 3.5569000000002654e-05, 3.555600000000256e-05, 3.5555000000003084e-05, 3.555599999999909e-05, 3.5582999999998755e-05, 3.555599999999909e-05, 3.551400000000038e-05, 3.552799999999995e-05, 3.555599999999909e-05, 3.555600000000256e-05, 3.555600000000256e-05, 3.5541000000000045e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.5625000000000934e-05, 3.5554999999999615e-05, 3.5582999999998755e-05, 3.557000000000213e-05, 3.552799999999995e-05, 3.548600000000124e-05, 3.555599999999909e-05]</msg>
<status status="PASS" starttime="20201022 13:54:06.887" endtime="20201022 13:54:06.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.882" endtime="20201022 13:54:06.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:06.893" endtime="20201022 13:54:06.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.891" endtime="20201022 13:54:06.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.890" endtime="20201022 13:54:06.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.418" endtime="20201022 13:54:06.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.418" endtime="20201022 13:54:06.913"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:06.922" endtime="20201022 13:54:07.041"></status>
</kw>
<msg timestamp="20201022 13:54:07.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:06.921" endtime="20201022 13:54:07.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'data': [{'dut-result': '46'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result': '45'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:07.043" endtime="20201022 13:54:07.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.046" endtime="20201022 13:54:07.048"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.918" endtime="20201022 13:54:07.048"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.916" endtime="20201022 13:54:07.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:07.053" level="INFO">${RESULT} = {'dut-result': [46, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 44, 45, 44, 44, 44, 45, 44, 44, 45, 45, 45, 45, 44, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, ...</msg>
<status status="PASS" starttime="20201022 13:54:07.049" endtime="20201022 13:54:07.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.058" level="INFO">NAME: accuracy-TIMER_SLEEP-10-dut</msg>
<status status="PASS" starttime="20201022 13:54:07.057" endtime="20201022 13:54:07.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.060" level="INFO">VALUE: [46, 45, 45, 45, 45, 45, 45, 45, 44, 45, 45, 44, 45, 44, 44, 44, 45, 44, 44, 45, 45, 45, 45, 44, 45, 45, 45, 45, 44, 44, 45, 45, 45, 45, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45]</msg>
<status status="PASS" starttime="20201022 13:54:07.059" endtime="20201022 13:54:07.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.055" endtime="20201022 13:54:07.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.068" endtime="20201022 13:54:07.355"></status>
</kw>
<msg timestamp="20201022 13:54:07.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025895083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:07.066" endtime="20201022 13:54:07.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025895083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025931139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:07.360" endtime="20201022 13:54:07.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.368" endtime="20201022 13:54:07.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.064" endtime="20201022 13:54:07.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.062" endtime="20201022 13:54:07.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:07.375" level="INFO">${RESULT} = [{'diff': 3.605599999999959e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.554199999999952e-05}, {'diff': 3.5554999999999615e-05}, {'diff': 3.555599999999909e-05}, {'diff': 3.555599999999909e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:07.371" endtime="20201022 13:54:07.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:07.380" level="INFO">${ACCURACY} = {'diff': [3.605599999999959e-05, 3.555599999999909e-05, 3.554199999999952e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5639000000000504e-05, 3.5554999999999615e-05, 3.5...</msg>
<status status="PASS" starttime="20201022 13:54:07.376" endtime="20201022 13:54:07.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.384" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201022 13:54:07.383" endtime="20201022 13:54:07.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.387" level="INFO">VALUE: [3.605599999999959e-05, 3.555599999999909e-05, 3.554199999999952e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.5639000000000504e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.545900000000157e-05, 3.556999999999866e-05, 3.5554999999999615e-05, 3.5554999999999615e-05, 3.551400000000038e-05, 3.555599999999909e-05, 3.555600000000256e-05, 3.5568999999999185e-05, 3.5568999999999185e-05, 3.5541000000000045e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.551400000000038e-05, 3.5555000000003084e-05, 3.554199999999952e-05, 3.554199999999952e-05, 3.555599999999909e-05, 3.552799999999995e-05, 3.551400000000038e-05, 3.555600000000256e-05, 3.5569000000002654e-05, 3.5555000000003084e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.5554999999999615e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.5554999999999615e-05, 3.554199999999952e-05, 3.5554999999999615e-05, 3.556999999999866e-05, 3.555599999999909e-05, 3.5554999999999615e-05, 3.552799999999995e-05, 3.5582999999998755e-05, 3.555600000000256e-05, 3.5568999999999185e-05, 3.5554999999999615e-05, 3.557000000000213e-05, 3.556999999999866e-05]</msg>
<status status="PASS" starttime="20201022 13:54:07.385" endtime="20201022 13:54:07.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.381" endtime="20201022 13:54:07.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:07.391" endtime="20201022 13:54:07.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.390" endtime="20201022 13:54:07.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.388" endtime="20201022 13:54:07.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.914" endtime="20201022 13:54:07.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:06.914" endtime="20201022 13:54:07.412"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.421" endtime="20201022 13:54:07.540"></status>
</kw>
<msg timestamp="20201022 13:54:07.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:07.420" endtime="20201022 13:54:07.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:07.542" endtime="20201022 13:54:07.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.545" endtime="20201022 13:54:07.547"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.417" endtime="20201022 13:54:07.547"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.414" endtime="20201022 13:54:07.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:07.553" level="INFO">${RESULT} = {'dut-result': [51, 50, 49, 50, 49, 49, 50, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 49, 50, 49, 50, 50, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 49, 50, 50, 49, 49, 50, 50, 50, 49, 50, 49, ...</msg>
<status status="PASS" starttime="20201022 13:54:07.549" endtime="20201022 13:54:07.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.557" level="INFO">NAME: accuracy-TIMER_SLEEP-11-dut</msg>
<status status="PASS" starttime="20201022 13:54:07.556" endtime="20201022 13:54:07.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.559" level="INFO">VALUE: [51, 50, 49, 50, 49, 49, 50, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 49, 50, 49, 50, 50, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 49, 50, 50, 49, 49, 50, 50, 50, 49, 50, 49, 50, 50, 50, 50]</msg>
<status status="PASS" starttime="20201022 13:54:07.558" endtime="20201022 13:54:07.560"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.554" endtime="20201022 13:54:07.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.566" endtime="20201022 13:54:07.852"></status>
</kw>
<msg timestamp="20201022 13:54:07.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026442472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:07.565" endtime="20201022 13:54:07.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026442472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026483444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:07.856" endtime="20201022 13:54:07.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.865" endtime="20201022 13:54:07.866"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.562" endtime="20201022 13:54:07.867"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.561" endtime="20201022 13:54:07.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:07.871" level="INFO">${RESULT} = [{'diff': 4.097199999999676e-05}, {'diff': 4.0445000000000064e-05}, {'diff': 4.0472999999999204e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.04859999999993e-05}, {'diff': 4.04859999999993e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:07.868" endtime="20201022 13:54:07.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:07.875" level="INFO">${ACCURACY} = {'diff': [4.097199999999676e-05, 4.0445000000000064e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.047...</msg>
<status status="PASS" starttime="20201022 13:54:07.872" endtime="20201022 13:54:07.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.882" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201022 13:54:07.881" endtime="20201022 13:54:07.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:07.885" level="INFO">VALUE: [4.097199999999676e-05, 4.0445000000000064e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.0472999999999204e-05, 4.044399999999712e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.04859999999993e-05, 4.0458999999999634e-05, 4.0458999999999634e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.041600000000145e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.048600000000277e-05, 4.045800000000016e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.0473000000002674e-05, 4.0458999999999634e-05, 4.0388999999998315e-05, 4.047199999999973e-05, 4.0403000000001354e-05, 4.0431000000000494e-05, 4.0472999999999204e-05, 4.0458999999999634e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.049999999999887e-05, 4.047199999999973e-05, 4.0416999999997455e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.047199999999973e-05]</msg>
<status status="PASS" starttime="20201022 13:54:07.883" endtime="20201022 13:54:07.885"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.876" endtime="20201022 13:54:07.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:07.890" endtime="20201022 13:54:07.909"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.888" endtime="20201022 13:54:07.910"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.887" endtime="20201022 13:54:07.910"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.413" endtime="20201022 13:54:07.910"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.412" endtime="20201022 13:54:07.910"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:07.919" endtime="20201022 13:54:08.038"></status>
</kw>
<msg timestamp="20201022 13:54:08.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result': '49'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:07.918" endtime="20201022 13:54:08.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result': '49'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:08.040" endtime="20201022 13:54:08.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.043" endtime="20201022 13:54:08.045"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.915" endtime="20201022 13:54:08.045"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.913" endtime="20201022 13:54:08.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:08.050" level="INFO">${RESULT} = {'dut-result': [51, 50, 49, 49, 50, 50, 50, 50, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 50, 50, 50, 49, 49, 49, 49, 50, 50, 49, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 50, 49, 49, 49, ...</msg>
<status status="PASS" starttime="20201022 13:54:08.047" endtime="20201022 13:54:08.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.055" level="INFO">NAME: accuracy-TIMER_SLEEP-12-dut</msg>
<status status="PASS" starttime="20201022 13:54:08.053" endtime="20201022 13:54:08.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.058" level="INFO">VALUE: [51, 50, 49, 49, 50, 50, 50, 50, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 50, 50, 50, 49, 49, 49, 49, 50, 50, 49, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 50, 49, 49, 49, 50, 50, 50, 49]</msg>
<status status="PASS" starttime="20201022 13:54:08.057" endtime="20201022 13:54:08.058"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.051" endtime="20201022 13:54:08.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.065" endtime="20201022 13:54:08.351"></status>
</kw>
<msg timestamp="20201022 13:54:08.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025947514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025988486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:08.063" endtime="20201022 13:54:08.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025947514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025988486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:08.356" endtime="20201022 13:54:08.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.364" endtime="20201022 13:54:08.366"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.061" endtime="20201022 13:54:08.366"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.059" endtime="20201022 13:54:08.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:08.371" level="INFO">${RESULT} = [{'diff': 4.097200000000023e-05}, {'diff': 4.0527000000002006e-05}, {'diff': 4.048600000000277e-05}, {'diff': 4.045800000000016e-05}, {'diff': 4.038800000000231e-05}, {'diff': 4.047199999999973e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:08.368" endtime="20201022 13:54:08.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:08.376" level="INFO">${ACCURACY} = {'diff': [4.097200000000023e-05, 4.0527000000002006e-05, 4.048600000000277e-05, 4.045800000000016e-05, 4.038800000000231e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.045800000000016e-05, 4.04...</msg>
<status status="PASS" starttime="20201022 13:54:08.372" endtime="20201022 13:54:08.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.382" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201022 13:54:08.380" endtime="20201022 13:54:08.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.386" level="INFO">VALUE: [4.097200000000023e-05, 4.0527000000002006e-05, 4.048600000000277e-05, 4.045800000000016e-05, 4.038800000000231e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.0486999999998774e-05, 4.047199999999973e-05, 4.0430999999997025e-05, 4.0473000000002674e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.048600000000277e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.0473000000002674e-05, 4.045800000000016e-05, 4.048600000000277e-05, 4.0445000000000064e-05, 4.044400000000059e-05, 4.0417000000000924e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.0431000000000494e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.054199999999758e-05, 4.047199999999973e-05, 4.051399999999844e-05, 4.044400000000059e-05, 4.044400000000059e-05, 4.045800000000016e-05, 4.04720000000032e-05, 4.0445000000000064e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.047199999999973e-05, 4.048600000000277e-05, 4.047199999999973e-05, 4.045800000000016e-05]</msg>
<status status="PASS" starttime="20201022 13:54:08.384" endtime="20201022 13:54:08.388"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.376" endtime="20201022 13:54:08.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:08.394" endtime="20201022 13:54:08.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.392" endtime="20201022 13:54:08.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.391" endtime="20201022 13:54:08.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.911" endtime="20201022 13:54:08.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:07.911" endtime="20201022 13:54:08.416"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.426" endtime="20201022 13:54:08.546"></status>
</kw>
<msg timestamp="20201022 13:54:08.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:08.425" endtime="20201022 13:54:08.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result': '49'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:08.547" endtime="20201022 13:54:08.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.551" endtime="20201022 13:54:08.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.422" endtime="20201022 13:54:08.553"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.420" endtime="20201022 13:54:08.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:08.557" level="INFO">${RESULT} = {'dut-result': [51, 50, 50, 49, 50, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 49, 49, 50, 50, 50, 50, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 50, 49, 50, 50, 50, 50, 49, 50, ...</msg>
<status status="PASS" starttime="20201022 13:54:08.554" endtime="20201022 13:54:08.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.562" level="INFO">NAME: accuracy-TIMER_SLEEP-13-dut</msg>
<status status="PASS" starttime="20201022 13:54:08.561" endtime="20201022 13:54:08.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.564" level="INFO">VALUE: [51, 50, 50, 49, 50, 50, 50, 50, 49, 50, 50, 50, 50, 50, 49, 50, 49, 49, 50, 50, 50, 50, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 50, 49, 50, 50, 50, 50, 49, 50, 49, 50, 49, 49]</msg>
<status status="PASS" starttime="20201022 13:54:08.563" endtime="20201022 13:54:08.564"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.558" endtime="20201022 13:54:08.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.572" endtime="20201022 13:54:08.858"></status>
</kw>
<msg timestamp="20201022 13:54:08.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028672375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:08.571" endtime="20201022 13:54:08.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028672375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028713361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:08.863" endtime="20201022 13:54:08.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.871" endtime="20201022 13:54:08.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.568" endtime="20201022 13:54:08.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.566" endtime="20201022 13:54:08.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:08.878" level="INFO">${RESULT} = [{'diff': 4.09859999999998e-05}, {'diff': 4.0458999999999634e-05}, {'diff': 4.0445000000000064e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.045800000000016e-05}, {'diff': 4.045800000000016e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:08.875" endtime="20201022 13:54:08.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:08.882" level="INFO">${ACCURACY} = {'diff': [4.09859999999998e-05, 4.0458999999999634e-05, 4.0445000000000064e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.0472999999999204e-05, 4.0473000000002674e-05, 4.0...</msg>
<status status="PASS" starttime="20201022 13:54:08.879" endtime="20201022 13:54:08.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.886" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201022 13:54:08.885" endtime="20201022 13:54:08.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:08.889" level="INFO">VALUE: [4.09859999999998e-05, 4.0458999999999634e-05, 4.0445000000000064e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.0472999999999204e-05, 4.0473000000002674e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.045800000000016e-05, 4.044400000000059e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.0472999999999204e-05, 4.048600000000277e-05, 4.049999999999887e-05, 4.04859999999993e-05, 4.045800000000016e-05, 4.0431000000000494e-05, 4.04720000000032e-05, 4.0458999999999634e-05, 4.0459000000003104e-05, 4.049999999999887e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.0403000000001354e-05, 4.0445000000000064e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.0486999999998774e-05, 4.041600000000145e-05, 4.0458999999999634e-05, 4.051400000000191e-05, 4.045800000000016e-05, 4.0487000000002243e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.051399999999844e-05, 4.04859999999993e-05, 4.0458999999999634e-05, 4.047200000000667e-05, 4.049999999999887e-05, 4.047199999999973e-05]</msg>
<status status="PASS" starttime="20201022 13:54:08.887" endtime="20201022 13:54:08.889"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.883" endtime="20201022 13:54:08.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:08.893" endtime="20201022 13:54:08.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.892" endtime="20201022 13:54:08.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.891" endtime="20201022 13:54:08.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.418" endtime="20201022 13:54:08.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.417" endtime="20201022 13:54:08.914"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:08.925" endtime="20201022 13:54:09.044"></status>
</kw>
<msg timestamp="20201022 13:54:09.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '49'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:08.923" endtime="20201022 13:54:09.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '49'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:09.046" endtime="20201022 13:54:09.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.049" endtime="20201022 13:54:09.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.920" endtime="20201022 13:54:09.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.917" endtime="20201022 13:54:09.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:09.056" level="INFO">${RESULT} = {'dut-result': [51, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 50, 49, 50, 50, 49, 50, 50, 50, 50, 49, 50, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 49, ...</msg>
<status status="PASS" starttime="20201022 13:54:09.052" endtime="20201022 13:54:09.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.060" level="INFO">NAME: accuracy-TIMER_SLEEP-14-dut</msg>
<status status="PASS" starttime="20201022 13:54:09.059" endtime="20201022 13:54:09.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.062" level="INFO">VALUE: [51, 49, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 49, 50, 49, 50, 50, 49, 50, 50, 50, 50, 49, 50, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 49, 50, 50, 49, 49]</msg>
<status status="PASS" starttime="20201022 13:54:09.061" endtime="20201022 13:54:09.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.056" endtime="20201022 13:54:09.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.069" endtime="20201022 13:54:09.357"></status>
</kw>
<msg timestamp="20201022 13:54:09.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027749389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027790375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:09.068" endtime="20201022 13:54:09.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027749389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027790375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:09.361" endtime="20201022 13:54:09.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.369" endtime="20201022 13:54:09.371"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.065" endtime="20201022 13:54:09.371"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.064" endtime="20201022 13:54:09.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:09.376" level="INFO">${RESULT} = [{'diff': 4.09859999999998e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.0486999999998774e-05}, {'diff': 4.04859999999993e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.0527000000002006e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:09.373" endtime="20201022 13:54:09.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:09.380" level="INFO">${ACCURACY} = {'diff': [4.09859999999998e-05, 4.047199999999973e-05, 4.0486999999998774e-05, 4.04859999999993e-05, 4.047199999999973e-05, 4.0527000000002006e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.047...</msg>
<status status="PASS" starttime="20201022 13:54:09.377" endtime="20201022 13:54:09.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.384" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201022 13:54:09.383" endtime="20201022 13:54:09.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.387" level="INFO">VALUE: [4.09859999999998e-05, 4.047199999999973e-05, 4.0486999999998774e-05, 4.04859999999993e-05, 4.047199999999973e-05, 4.0527000000002006e-05, 4.045800000000016e-05, 4.0458999999999634e-05, 4.047199999999973e-05, 4.0445000000000064e-05, 4.0473000000002674e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0473000000002674e-05, 4.048600000000277e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.0486999999998774e-05, 4.0431000000000494e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.04720000000032e-05, 4.045800000000016e-05, 4.0472999999999204e-05, 4.0472999999999204e-05, 4.045800000000016e-05, 4.044400000000059e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0473000000002674e-05, 4.045800000000016e-05, 4.0472999999999204e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.0402999999997885e-05, 4.054200000000105e-05, 4.045800000000016e-05, 4.0527000000002006e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.0512999999998967e-05, 4.047199999999973e-05, 4.0444999999996595e-05, 4.0472999999999204e-05, 4.045800000000016e-05]</msg>
<status status="PASS" starttime="20201022 13:54:09.385" endtime="20201022 13:54:09.392"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.381" endtime="20201022 13:54:09.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:09.396" endtime="20201022 13:54:09.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.395" endtime="20201022 13:54:09.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.393" endtime="20201022 13:54:09.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.915" endtime="20201022 13:54:09.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:08.915" endtime="20201022 13:54:09.417"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.427" endtime="20201022 13:54:09.546"></status>
</kw>
<msg timestamp="20201022 13:54:09.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:09.425" endtime="20201022 13:54:09.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'data': [{'dut-result': '51'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result': '50'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:09.548" endtime="20201022 13:54:09.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.551" endtime="20201022 13:54:09.553"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.422" endtime="20201022 13:54:09.553"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.420" endtime="20201022 13:54:09.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:09.558" level="INFO">${RESULT} = {'dut-result': [51, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 49, 50, 50, 50, 50, 50, 50, 49, 50, 50, 49, 50, 50, 50, 50, 54, 50, 54, 50, 50, 50, 50, 50, 54, 50, 50, 50, 50, 54, 50, 49, 50, ...</msg>
<status status="PASS" starttime="20201022 13:54:09.555" endtime="20201022 13:54:09.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.562" level="INFO">NAME: accuracy-TIMER_SLEEP-15-dut</msg>
<status status="PASS" starttime="20201022 13:54:09.561" endtime="20201022 13:54:09.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.564" level="INFO">VALUE: [51, 50, 50, 50, 49, 50, 50, 50, 50, 50, 50, 50, 50, 49, 49, 50, 50, 50, 50, 50, 50, 49, 50, 50, 49, 50, 50, 50, 50, 54, 50, 54, 50, 50, 50, 50, 50, 54, 50, 50, 50, 50, 54, 50, 49, 50, 54, 54, 50, 50]</msg>
<status status="PASS" starttime="20201022 13:54:09.563" endtime="20201022 13:54:09.565"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.558" endtime="20201022 13:54:09.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.572" endtime="20201022 13:54:09.859"></status>
</kw>
<msg timestamp="20201022 13:54:09.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:09.570" endtime="20201022 13:54:09.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027114069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027155069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:09.863" endtime="20201022 13:54:09.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.871" endtime="20201022 13:54:09.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.567" endtime="20201022 13:54:09.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.566" endtime="20201022 13:54:09.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:09.878" level="INFO">${RESULT} = [{'diff': 4.099999999999937e-05}, {'diff': 4.044399999999712e-05}, {'diff': 4.050000000000234e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.0416999999997455e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:09.875" endtime="20201022 13:54:09.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:09.882" level="INFO">${ACCURACY} = {'diff': [4.099999999999937e-05, 4.044399999999712e-05, 4.050000000000234e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0416999999997455e-05, 4.045800000000016e-05, 4.051399999999844e-05, 4.047...</msg>
<status status="PASS" starttime="20201022 13:54:09.879" endtime="20201022 13:54:09.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.887" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201022 13:54:09.886" endtime="20201022 13:54:09.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:09.889" level="INFO">VALUE: [4.099999999999937e-05, 4.044399999999712e-05, 4.050000000000234e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0416999999997455e-05, 4.045800000000016e-05, 4.051399999999844e-05, 4.04720000000032e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.0473000000002674e-05, 4.047199999999973e-05, 4.04859999999993e-05, 4.04859999999993e-05, 4.0472999999999204e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0473000000002674e-05, 4.0431000000000494e-05, 4.047199999999973e-05, 4.5416999999998986e-05, 4.043000000000102e-05, 4.050000000000234e-05, 4.0472999999999204e-05, 4.0526999999998536e-05, 4.04859999999993e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.0417000000000924e-05, 4.049999999999887e-05, 4.050000000000234e-05, 4.0458999999999634e-05, 4.048600000000277e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.5402999999999416e-05, 4.0540999999998106e-05, 4.04859999999993e-05, 4.051400000000191e-05, 4.047199999999973e-05, 4.047199999999973e-05, 4.045800000000016e-05, 4.044400000000059e-05, 4.048600000000277e-05, 4.0487000000002243e-05, 4.045800000000016e-05]</msg>
<status status="PASS" starttime="20201022 13:54:09.888" endtime="20201022 13:54:09.890"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.883" endtime="20201022 13:54:09.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:09.894" endtime="20201022 13:54:09.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.892" endtime="20201022 13:54:09.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.891" endtime="20201022 13:54:09.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.418" endtime="20201022 13:54:09.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.417" endtime="20201022 13:54:09.915"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:09.924" endtime="20201022 13:54:10.044"></status>
</kw>
<msg timestamp="20201022 13:54:10.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:09.922" endtime="20201022 13:54:10.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:10.046" endtime="20201022 13:54:10.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.049" endtime="20201022 13:54:10.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.919" endtime="20201022 13:54:10.052"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.917" endtime="20201022 13:54:10.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:10.056" level="INFO">${RESULT} = {'dut-result': [56, 55, 54, 55, 55, 54, 55, 54, 54, 55, 54, 55, 54, 54, 54, 55, 55, 54, 55, 54, 55, 55, 54, 55, 55, 54, 55, 55, 55, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 54, 55, 54, 54, 54, 54, 55, ...</msg>
<status status="PASS" starttime="20201022 13:54:10.053" endtime="20201022 13:54:10.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.060" level="INFO">NAME: accuracy-TIMER_SLEEP-16-dut</msg>
<status status="PASS" starttime="20201022 13:54:10.059" endtime="20201022 13:54:10.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.062" level="INFO">VALUE: [56, 55, 54, 55, 55, 54, 55, 54, 54, 55, 54, 55, 54, 54, 54, 55, 55, 54, 55, 54, 55, 55, 54, 55, 55, 54, 55, 55, 55, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 54, 55, 54, 54, 54, 54, 55, 55, 55, 55, 55]</msg>
<status status="PASS" starttime="20201022 13:54:10.061" endtime="20201022 13:54:10.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.057" endtime="20201022 13:54:10.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.070" endtime="20201022 13:54:10.357"></status>
</kw>
<msg timestamp="20201022 13:54:10.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027501069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027542028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:10.069" endtime="20201022 13:54:10.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027501069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027542028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:10.361" endtime="20201022 13:54:10.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.370" endtime="20201022 13:54:10.372"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.066" endtime="20201022 13:54:10.372"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.064" endtime="20201022 13:54:10.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:10.377" level="INFO">${RESULT} = [{'diff': 4.0959000000000134e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.542999999999908e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5389000000003316e-0...</msg>
<status status="PASS" starttime="20201022 13:54:10.373" endtime="20201022 13:54:10.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:10.382" level="INFO">${ACCURACY} = {'diff': [4.0959000000000134e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.542999999999908e-05, 4.5388999999999846e-05, 4.5389000000003316e-05, 4.5388999999999846e-05, 4.5375000000000276e-05,...</msg>
<status status="PASS" starttime="20201022 13:54:10.378" endtime="20201022 13:54:10.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.386" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201022 13:54:10.385" endtime="20201022 13:54:10.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.389" level="INFO">VALUE: [4.0959000000000134e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.542999999999908e-05, 4.5388999999999846e-05, 4.5389000000003316e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5417000000002455e-05, 4.5388999999999846e-05, 4.541599999999951e-05, 4.5388999999999846e-05, 4.540199999999994e-05, 4.5375000000000276e-05, 4.5361000000000706e-05, 4.541599999999951e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.540199999999994e-05, 4.540199999999994e-05, 4.5347000000001136e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5347000000001136e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5444999999998126e-05, 4.538800000000037e-05, 4.5388999999999846e-05, 4.538800000000037e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.538800000000037e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5403000000002885e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5459000000001165e-05, 4.5375000000000276e-05, 4.5347000000001136e-05, 4.5347000000001136e-05, 4.5388999999999846e-05, 4.5388999999999846e-05]</msg>
<status status="PASS" starttime="20201022 13:54:10.387" endtime="20201022 13:54:10.389"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.382" endtime="20201022 13:54:10.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:10.393" endtime="20201022 13:54:10.413"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.392" endtime="20201022 13:54:10.413"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.391" endtime="20201022 13:54:10.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.916" endtime="20201022 13:54:10.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:09.915" endtime="20201022 13:54:10.414"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.423" endtime="20201022 13:54:10.543"></status>
</kw>
<msg timestamp="20201022 13:54:10.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:10.421" endtime="20201022 13:54:10.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:10.545" endtime="20201022 13:54:10.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.549" endtime="20201022 13:54:10.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.419" endtime="20201022 13:54:10.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.416" endtime="20201022 13:54:10.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:10.555" level="INFO">${RESULT} = {'dut-result': [56, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 54, 55, 55, 55, 54, 54, 55, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 55, 55, 55, 54, 55, 55, 55, 55, 54, 54, 55, 54, 54, 54, 54, 54, 55, ...</msg>
<status status="PASS" starttime="20201022 13:54:10.552" endtime="20201022 13:54:10.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.560" level="INFO">NAME: accuracy-TIMER_SLEEP-17-dut</msg>
<status status="PASS" starttime="20201022 13:54:10.559" endtime="20201022 13:54:10.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.562" level="INFO">VALUE: [56, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 54, 55, 55, 55, 54, 54, 55, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 55, 55, 55, 54, 55, 55, 55, 55, 54, 54, 55, 54, 54, 54, 54, 54, 55, 55, 54, 55, 54]</msg>
<status status="PASS" starttime="20201022 13:54:10.561" endtime="20201022 13:54:10.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.556" endtime="20201022 13:54:10.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.569" endtime="20201022 13:54:10.854"></status>
</kw>
<msg timestamp="20201022 13:54:10.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026430208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026476125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:10.567" endtime="20201022 13:54:10.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026430208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026476125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:10.859" endtime="20201022 13:54:10.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.867" endtime="20201022 13:54:10.869"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.565" endtime="20201022 13:54:10.869"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.563" endtime="20201022 13:54:10.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:10.874" level="INFO">${RESULT} = [{'diff': 4.5916999999999486e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5388999999999846e-...</msg>
<status status="PASS" starttime="20201022 13:54:10.871" endtime="20201022 13:54:10.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:10.879" level="INFO">${ACCURACY} = {'diff': [4.5916999999999486e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5375000000000276e-05...</msg>
<status status="PASS" starttime="20201022 13:54:10.875" endtime="20201022 13:54:10.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.883" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201022 13:54:10.882" endtime="20201022 13:54:10.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:10.886" level="INFO">VALUE: [4.5916999999999486e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.533400000000104e-05, 4.540199999999994e-05, 4.538800000000037e-05, 4.5388999999999846e-05, 4.5417000000002455e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5375000000000276e-05, 4.5333000000001566e-05, 4.5388999999999846e-05, 4.53879999999969e-05, 4.5375000000000276e-05, 4.536099999999724e-05, 4.5430999999998556e-05, 4.536200000000018e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.544399999999865e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5417000000002455e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5333000000001566e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5459000000001165e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5361000000000706e-05, 4.5388999999999846e-05]</msg>
<status status="PASS" starttime="20201022 13:54:10.884" endtime="20201022 13:54:10.886"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.880" endtime="20201022 13:54:10.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:10.891" endtime="20201022 13:54:10.910"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.889" endtime="20201022 13:54:10.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.888" endtime="20201022 13:54:10.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.415" endtime="20201022 13:54:10.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.414" endtime="20201022 13:54:10.912"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:10.920" endtime="20201022 13:54:11.040"></status>
</kw>
<msg timestamp="20201022 13:54:11.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:10.919" endtime="20201022 13:54:11.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:11.042" endtime="20201022 13:54:11.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.045" endtime="20201022 13:54:11.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.916" endtime="20201022 13:54:11.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.914" endtime="20201022 13:54:11.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:11.054" level="INFO">${RESULT} = {'dut-result': [56, 54, 55, 55, 55, 54, 54, 55, 54, 55, 55, 55, 55, 55, 54, 54, 55, 55, 55, 55, 54, 55, 55, 54, 55, 55, 55, 54, 55, 54, 55, 54, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 54, 55, 54, 54, ...</msg>
<status status="PASS" starttime="20201022 13:54:11.048" endtime="20201022 13:54:11.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.059" level="INFO">NAME: accuracy-TIMER_SLEEP-18-dut</msg>
<status status="PASS" starttime="20201022 13:54:11.058" endtime="20201022 13:54:11.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.061" level="INFO">VALUE: [56, 54, 55, 55, 55, 54, 54, 55, 54, 55, 55, 55, 55, 55, 54, 54, 55, 55, 55, 55, 54, 55, 55, 54, 55, 55, 55, 54, 55, 54, 55, 54, 55, 54, 55, 55, 55, 54, 55, 55, 55, 55, 54, 55, 54, 54, 55, 55, 55, 54]</msg>
<status status="PASS" starttime="20201022 13:54:11.060" endtime="20201022 13:54:11.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.055" endtime="20201022 13:54:11.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.068" endtime="20201022 13:54:11.359"></status>
</kw>
<msg timestamp="20201022 13:54:11.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02622275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026268556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:11.067" endtime="20201022 13:54:11.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02622275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026268556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:11.363" endtime="20201022 13:54:11.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.371" endtime="20201022 13:54:11.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.064" endtime="20201022 13:54:11.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.062" endtime="20201022 13:54:11.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:11.378" level="INFO">${RESULT} = [{'diff': 4.580599999999893e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.541599999999951e-05}, {'diff': 4.540199999999994e-05}, {'diff': 4.5388999999999846e-05}...</msg>
<status status="PASS" starttime="20201022 13:54:11.375" endtime="20201022 13:54:11.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:11.384" level="INFO">${ACCURACY} = {'diff': [4.580599999999893e-05, 4.5375000000000276e-05, 4.5333000000001566e-05, 4.541599999999951e-05, 4.540199999999994e-05, 4.5388999999999846e-05, 4.5416999999998986e-05, 4.5388999999999846e-05, 4...</msg>
<status status="PASS" starttime="20201022 13:54:11.380" endtime="20201022 13:54:11.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.389" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201022 13:54:11.388" endtime="20201022 13:54:11.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.391" level="INFO">VALUE: [4.580599999999893e-05, 4.5375000000000276e-05, 4.5333000000001566e-05, 4.541599999999951e-05, 4.540199999999994e-05, 4.5388999999999846e-05, 4.5416999999998986e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.540199999999994e-05, 4.534699999999767e-05, 4.536200000000018e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5361000000000706e-05, 4.5430999999998556e-05, 4.538800000000037e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.538800000000037e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.542999999999908e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5333000000001566e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5403000000002885e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.531899999999853e-05, 4.5402999999999416e-05, 4.5375000000000276e-05]</msg>
<status status="PASS" starttime="20201022 13:54:11.390" endtime="20201022 13:54:11.392"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.385" endtime="20201022 13:54:11.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:11.396" endtime="20201022 13:54:11.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.394" endtime="20201022 13:54:11.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.393" endtime="20201022 13:54:11.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.912" endtime="20201022 13:54:11.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:10.912" endtime="20201022 13:54:11.419"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.434" endtime="20201022 13:54:11.555"></status>
</kw>
<msg timestamp="20201022 13:54:11.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:11.431" endtime="20201022 13:54:11.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '55'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:11.556" endtime="20201022 13:54:11.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.559" endtime="20201022 13:54:11.561"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.427" endtime="20201022 13:54:11.562"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.423" endtime="20201022 13:54:11.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:11.567" level="INFO">${RESULT} = {'dut-result': [56, 55, 54, 55, 55, 54, 55, 55, 55, 55, 54, 54, 55, 54, 55, 55, 55, 55, 54, 54, 54, 55, 55, 55, 54, 54, 54, 54, 55, 55, 55, 55, 55, 54, 55, 55, 55, 54, 54, 55, 54, 55, 54, 55, 55, 55, ...</msg>
<status status="PASS" starttime="20201022 13:54:11.563" endtime="20201022 13:54:11.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.571" level="INFO">NAME: accuracy-TIMER_SLEEP-19-dut</msg>
<status status="PASS" starttime="20201022 13:54:11.570" endtime="20201022 13:54:11.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.573" level="INFO">VALUE: [56, 55, 54, 55, 55, 54, 55, 55, 55, 55, 54, 54, 55, 54, 55, 55, 55, 55, 54, 54, 54, 55, 55, 55, 54, 54, 54, 54, 55, 55, 55, 55, 55, 54, 55, 55, 55, 54, 54, 55, 54, 55, 54, 55, 55, 55, 54, 55, 55, 55]</msg>
<status status="PASS" starttime="20201022 13:54:11.572" endtime="20201022 13:54:11.574"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.568" endtime="20201022 13:54:11.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.581" endtime="20201022 13:54:11.867"></status>
</kw>
<msg timestamp="20201022 13:54:11.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035217667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035263514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:11.579" endtime="20201022 13:54:11.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035217667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035263514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:11.872" endtime="20201022 13:54:11.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.880" endtime="20201022 13:54:11.882"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.577" endtime="20201022 13:54:11.882"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.575" endtime="20201022 13:54:11.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:11.886" level="INFO">${RESULT} = [{'diff': 4.5847000000001636e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.5388999999999846e-...</msg>
<status status="PASS" starttime="20201022 13:54:11.883" endtime="20201022 13:54:11.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:11.891" level="INFO">${ACCURACY} = {'diff': [4.5847000000001636e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.540199999999994e-05,...</msg>
<status status="PASS" starttime="20201022 13:54:11.887" endtime="20201022 13:54:11.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.896" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201022 13:54:11.895" endtime="20201022 13:54:11.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:11.898" level="INFO">VALUE: [4.5847000000001636e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.540199999999994e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.540199999999994e-05, 4.538800000000037e-05, 4.5402999999999416e-05, 4.540199999999994e-05, 4.540199999999994e-05, 4.5416999999998986e-05, 4.5375000000000276e-05, 4.5347000000001136e-05, 4.5402999999999416e-05, 4.5347000000001136e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5403000000006355e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.538800000000037e-05, 4.5388999999999846e-05, 4.538800000000037e-05, 4.530599999999496e-05, 4.544399999999865e-05, 4.534800000000061e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5375000000000276e-05]</msg>
<status status="PASS" starttime="20201022 13:54:11.897" endtime="20201022 13:54:11.899"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.892" endtime="20201022 13:54:11.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:11.903" endtime="20201022 13:54:11.922"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.901" endtime="20201022 13:54:11.923"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.900" endtime="20201022 13:54:11.923"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.421" endtime="20201022 13:54:11.924"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.419" endtime="20201022 13:54:11.924"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:11.932" endtime="20201022 13:54:12.052"></status>
</kw>
<msg timestamp="20201022 13:54:12.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '54'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:11.931" endtime="20201022 13:54:12.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'data': [{'dut-result': '56'}, {'dut-result': '55'}, {'dut-result': '54'}, {'dut-result': '54'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:12.054" endtime="20201022 13:54:12.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.057" endtime="20201022 13:54:12.059"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.928" endtime="20201022 13:54:12.060"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.926" endtime="20201022 13:54:12.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:12.065" level="INFO">${RESULT} = {'dut-result': [56, 55, 54, 54, 55, 55, 55, 55, 54, 54, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 55, 55, 55, 55, 54, 55, 55, 54, 59, 55, 55, 55, 55, 54, 55, 54, 55, 54, 55, 54, 54, 55, 59, ...</msg>
<status status="PASS" starttime="20201022 13:54:12.061" endtime="20201022 13:54:12.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.070" level="INFO">NAME: accuracy-TIMER_SLEEP-20-dut</msg>
<status status="PASS" starttime="20201022 13:54:12.069" endtime="20201022 13:54:12.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.072" level="INFO">VALUE: [56, 55, 54, 54, 55, 55, 55, 55, 54, 54, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 55, 55, 55, 55, 54, 55, 55, 54, 59, 55, 55, 55, 55, 54, 55, 54, 55, 54, 55, 54, 54, 55, 59, 59, 54, 55, 55]</msg>
<status status="PASS" starttime="20201022 13:54:12.071" endtime="20201022 13:54:12.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.066" endtime="20201022 13:54:12.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.079" endtime="20201022 13:54:12.364"></status>
</kw>
<msg timestamp="20201022 13:54:12.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026310806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026356694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:12.077" endtime="20201022 13:54:12.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026310806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026356694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:12.368" endtime="20201022 13:54:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.376" endtime="20201022 13:54:12.378"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.075" endtime="20201022 13:54:12.378"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.073" endtime="20201022 13:54:12.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:12.383" level="INFO">${RESULT} = [{'diff': 4.588800000000087e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.5361000000000706e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.5375000000000276e-0...</msg>
<status status="PASS" starttime="20201022 13:54:12.380" endtime="20201022 13:54:12.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:12.388" level="INFO">${ACCURACY} = {'diff': [4.588800000000087e-05, 4.5375000000000276e-05, 4.5430999999998556e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5402999999999416e-05,...</msg>
<status status="PASS" starttime="20201022 13:54:12.384" endtime="20201022 13:54:12.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.393" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201022 13:54:12.392" endtime="20201022 13:54:12.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.396" level="INFO">VALUE: [4.588800000000087e-05, 4.5375000000000276e-05, 4.5430999999998556e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5402999999999416e-05, 4.5402999999999416e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5430999999998556e-05, 4.533400000000104e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5430999999998556e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 5.029200000000039e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 5.030500000000049e-05, 5.037499999999834e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5388999999999846e-05, 4.5375000000000276e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.540199999999994e-05, 4.5388999999999846e-05, 4.5361000000000706e-05, 4.5388999999999846e-05, 4.536200000000018e-05, 5.029100000000092e-05, 4.5388999999999846e-05, 4.53329999999981e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.53879999999969e-05]</msg>
<status status="PASS" starttime="20201022 13:54:12.394" endtime="20201022 13:54:12.396"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.389" endtime="20201022 13:54:12.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:12.401" endtime="20201022 13:54:12.420"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.399" endtime="20201022 13:54:12.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.398" endtime="20201022 13:54:12.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.925" endtime="20201022 13:54:12.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:11.924" endtime="20201022 13:54:12.422"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.430" endtime="20201022 13:54:12.551"></status>
</kw>
<msg timestamp="20201022 13:54:12.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:12.429" endtime="20201022 13:54:12.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:12.553" endtime="20201022 13:54:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.556" endtime="20201022 13:54:12.557"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.426" endtime="20201022 13:54:12.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.424" endtime="20201022 13:54:12.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:12.563" level="INFO">${RESULT} = {'dut-result': [61, 60, 59, 60, 59, 60, 60, 59, 59, 59, 60, 60, 59, 60, 60, 59, 60, 59, 60, 60, 60, 60, 60, 59, 60, 59, 60, 59, 60, 60, 59, 60, 60, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, ...</msg>
<status status="PASS" starttime="20201022 13:54:12.559" endtime="20201022 13:54:12.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.567" level="INFO">NAME: accuracy-TIMER_SLEEP-21-dut</msg>
<status status="PASS" starttime="20201022 13:54:12.566" endtime="20201022 13:54:12.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.570" level="INFO">VALUE: [61, 60, 59, 60, 59, 60, 60, 59, 59, 59, 60, 60, 59, 60, 60, 59, 60, 59, 60, 60, 60, 60, 60, 59, 60, 59, 60, 59, 60, 60, 59, 60, 60, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 59, 60, 60]</msg>
<status status="PASS" starttime="20201022 13:54:12.569" endtime="20201022 13:54:12.570"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.564" endtime="20201022 13:54:12.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.577" endtime="20201022 13:54:12.864"></status>
</kw>
<msg timestamp="20201022 13:54:12.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026837764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:12.575" endtime="20201022 13:54:12.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026837764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:12.868" endtime="20201022 13:54:12.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.876" endtime="20201022 13:54:12.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.573" endtime="20201022 13:54:12.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.571" endtime="20201022 13:54:12.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:12.883" level="INFO">${RESULT} = [{'diff': 5.080500000000099e-05}, {'diff': 5.027800000000082e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.030500000000049e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:12.879" endtime="20201022 13:54:12.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:12.887" level="INFO">${ACCURACY} = {'diff': [5.080500000000099e-05, 5.027800000000082e-05, 5.029200000000039e-05, 5.029200000000039e-05, 5.026400000000125e-05, 5.030500000000049e-05, 5.026299999999831e-05, 5.03330000000031e-05, 5.03329...</msg>
<status status="PASS" starttime="20201022 13:54:12.884" endtime="20201022 13:54:12.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.893" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201022 13:54:12.891" endtime="20201022 13:54:12.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:12.895" level="INFO">VALUE: [5.080500000000099e-05, 5.027800000000082e-05, 5.029200000000039e-05, 5.029200000000039e-05, 5.026400000000125e-05, 5.030500000000049e-05, 5.026299999999831e-05, 5.03330000000031e-05, 5.033299999999963e-05, 5.030500000000049e-05, 5.029099999999745e-05, 5.030599999999996e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.029200000000039e-05, 5.029100000000092e-05, 5.0320000000003e-05, 5.029199999999692e-05, 5.033299999999963e-05, 5.031900000000006e-05, 5.027699999999788e-05, 5.029199999999692e-05, 5.030500000000049e-05, 5.029100000000092e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.031900000000006e-05, 5.029200000000039e-05, 5.031999999999953e-05, 5.030500000000049e-05, 5.033299999999963e-05, 5.034800000000214e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.031900000000006e-05, 5.029100000000092e-05, 5.029199999999692e-05, 5.029200000000039e-05, 5.029100000000092e-05, 5.030599999999996e-05, 5.026400000000125e-05, 5.031999999999953e-05, 5.027800000000082e-05, 5.031900000000006e-05]</msg>
<status status="PASS" starttime="20201022 13:54:12.894" endtime="20201022 13:54:12.895"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.888" endtime="20201022 13:54:12.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:12.900" endtime="20201022 13:54:12.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.898" endtime="20201022 13:54:12.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.897" endtime="20201022 13:54:12.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.423" endtime="20201022 13:54:12.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.422" endtime="20201022 13:54:12.921"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:12.929" endtime="20201022 13:54:13.050"></status>
</kw>
<msg timestamp="20201022 13:54:13.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:12.928" endtime="20201022 13:54:13.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:13.051" endtime="20201022 13:54:13.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.054" endtime="20201022 13:54:13.056"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.925" endtime="20201022 13:54:13.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.923" endtime="20201022 13:54:13.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:13.061" level="INFO">${RESULT} = {'dut-result': [61, 60, 60, 60, 59, 60, 59, 59, 59, 60, 60, 60, 60, 59, 60, 59, 59, 59, 59, 60, 59, 60, 59, 60, 59, 60, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 59, 59, 60, 59, 60, 60, 60, 59, 59, 59, ...</msg>
<status status="PASS" starttime="20201022 13:54:13.058" endtime="20201022 13:54:13.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.066" level="INFO">NAME: accuracy-TIMER_SLEEP-22-dut</msg>
<status status="PASS" starttime="20201022 13:54:13.065" endtime="20201022 13:54:13.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.068" level="INFO">VALUE: [61, 60, 60, 60, 59, 60, 59, 59, 59, 60, 60, 60, 60, 59, 60, 59, 59, 59, 59, 60, 59, 60, 59, 60, 59, 60, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 59, 59, 60, 59, 60, 60, 60, 59, 59, 59, 60, 59, 59, 59]</msg>
<status status="PASS" starttime="20201022 13:54:13.067" endtime="20201022 13:54:13.069"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.062" endtime="20201022 13:54:13.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.076" endtime="20201022 13:54:13.363"></status>
</kw>
<msg timestamp="20201022 13:54:13.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026575375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:13.074" endtime="20201022 13:54:13.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026524583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026575375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:13.367" endtime="20201022 13:54:13.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.376" endtime="20201022 13:54:13.377"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.072" endtime="20201022 13:54:13.378"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.070" endtime="20201022 13:54:13.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:13.382" level="INFO">${RESULT} = [{'diff': 5.079199999999742e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.027800000000082e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:13.379" endtime="20201022 13:54:13.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:13.386" level="INFO">${ACCURACY} = {'diff': [5.079199999999742e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.027800000000082e-05, 5.030500000000049e-05, 5.027800000000082e-05, 5.0305...</msg>
<status status="PASS" starttime="20201022 13:54:13.383" endtime="20201022 13:54:13.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.392" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201022 13:54:13.390" endtime="20201022 13:54:13.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.394" level="INFO">VALUE: [5.079199999999742e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.027800000000082e-05, 5.030500000000049e-05, 5.027800000000082e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.031900000000006e-05, 5.03469999999992e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.031900000000006e-05, 5.036199999999824e-05, 5.026400000000125e-05, 5.024999999999821e-05, 5.029200000000039e-05, 5.03339999999991e-05, 5.030599999999996e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.031999999999953e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.027699999999788e-05, 5.029200000000039e-05, 5.024999999999821e-05, 5.029200000000039e-05, 5.031900000000006e-05, 5.029200000000039e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.034800000000214e-05, 5.030599999999996e-05, 5.036199999999824e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.029199999999692e-05, 5.031999999999953e-05, 5.029100000000092e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.031999999999953e-05]</msg>
<status status="PASS" starttime="20201022 13:54:13.393" endtime="20201022 13:54:13.395"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.387" endtime="20201022 13:54:13.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:13.399" endtime="20201022 13:54:13.419"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.397" endtime="20201022 13:54:13.419"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.396" endtime="20201022 13:54:13.420"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.921" endtime="20201022 13:54:13.420"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:12.921" endtime="20201022 13:54:13.420"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.429" endtime="20201022 13:54:13.549"></status>
</kw>
<msg timestamp="20201022 13:54:13.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:13.427" endtime="20201022 13:54:13.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:13.551" endtime="20201022 13:54:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.554" endtime="20201022 13:54:13.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.425" endtime="20201022 13:54:13.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.423" endtime="20201022 13:54:13.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:13.561" level="INFO">${RESULT} = {'dut-result': [61, 60, 60, 59, 60, 59, 60, 60, 59, 60, 59, 59, 60, 59, 59, 60, 59, 59, 60, 60, 59, 59, 60, 59, 60, 60, 60, 60, 60, 60, 60, 60, 59, 60, 60, 60, 59, 60, 59, 60, 59, 59, 60, 60, 59, 59, ...</msg>
<status status="PASS" starttime="20201022 13:54:13.557" endtime="20201022 13:54:13.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.565" level="INFO">NAME: accuracy-TIMER_SLEEP-23-dut</msg>
<status status="PASS" starttime="20201022 13:54:13.564" endtime="20201022 13:54:13.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.568" level="INFO">VALUE: [61, 60, 60, 59, 60, 59, 60, 60, 59, 60, 59, 59, 60, 59, 59, 60, 59, 59, 60, 60, 59, 59, 60, 59, 60, 60, 60, 60, 60, 60, 60, 60, 59, 60, 60, 60, 59, 60, 59, 60, 59, 59, 60, 60, 59, 59, 59, 59, 59, 59]</msg>
<status status="PASS" starttime="20201022 13:54:13.567" endtime="20201022 13:54:13.568"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.562" endtime="20201022 13:54:13.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.576" endtime="20201022 13:54:13.862"></status>
</kw>
<msg timestamp="20201022 13:54:13.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026679028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026729847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:13.574" endtime="20201022 13:54:13.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026679028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026729847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:13.866" endtime="20201022 13:54:13.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.874" endtime="20201022 13:54:13.876"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.572" endtime="20201022 13:54:13.877"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.569" endtime="20201022 13:54:13.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:13.881" level="INFO">${RESULT} = [{'diff': 5.081900000000056e-05}, {'diff': 5.029200000000039e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.030599999999996e-05}, {'diff': 5.031900000000006e-05}, {'diff': 5.030599999999996e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:13.878" endtime="20201022 13:54:13.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:13.885" level="INFO">${ACCURACY} = {'diff': [5.081900000000056e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.030599999999996e-05, 5.024999999999821e-05, 5.030599999999996e-05, 5.0319...</msg>
<status status="PASS" starttime="20201022 13:54:13.882" endtime="20201022 13:54:13.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.890" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201022 13:54:13.888" endtime="20201022 13:54:13.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:13.892" level="INFO">VALUE: [5.081900000000056e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.030599999999996e-05, 5.024999999999821e-05, 5.030599999999996e-05, 5.031999999999953e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.031900000000006e-05, 5.03339999999991e-05, 5.03469999999992e-05, 5.023599999999864e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.030499999999702e-05, 5.027800000000082e-05, 5.029099999999745e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.037499999999834e-05, 5.030599999999996e-05, 5.029099999999745e-05, 5.029200000000039e-05, 5.030500000000049e-05, 5.029100000000092e-05, 5.0320000000003e-05, 5.030500000000049e-05, 5.029100000000092e-05, 5.029200000000039e-05, 5.026399999999778e-05, 5.023599999999864e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.023600000000211e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.027800000000082e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.027800000000082e-05, 5.029099999999745e-05]</msg>
<status status="PASS" starttime="20201022 13:54:13.891" endtime="20201022 13:54:13.892"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.886" endtime="20201022 13:54:13.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:13.897" endtime="20201022 13:54:13.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.895" endtime="20201022 13:54:13.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.894" endtime="20201022 13:54:13.918"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.421" endtime="20201022 13:54:13.918"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.420" endtime="20201022 13:54:13.918"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:13.927" endtime="20201022 13:54:14.048"></status>
</kw>
<msg timestamp="20201022 13:54:14.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result': '59'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:13.926" endtime="20201022 13:54:14.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '59'}, {'dut-result': '59'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:14.050" endtime="20201022 13:54:14.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.053" endtime="20201022 13:54:14.054"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.923" endtime="20201022 13:54:14.055"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.921" endtime="20201022 13:54:14.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:14.059" level="INFO">${RESULT} = {'dut-result': [61, 60, 59, 59, 59, 59, 59, 60, 60, 59, 60, 59, 60, 60, 60, 59, 59, 60, 59, 59, 60, 60, 60, 59, 60, 59, 60, 60, 59, 60, 60, 59, 59, 59, 60, 59, 59, 60, 60, 60, 60, 59, 59, 59, 59, 59, ...</msg>
<status status="PASS" starttime="20201022 13:54:14.056" endtime="20201022 13:54:14.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.064" level="INFO">NAME: accuracy-TIMER_SLEEP-24-dut</msg>
<status status="PASS" starttime="20201022 13:54:14.063" endtime="20201022 13:54:14.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.066" level="INFO">VALUE: [61, 60, 59, 59, 59, 59, 59, 60, 60, 59, 60, 59, 60, 60, 60, 59, 59, 60, 59, 59, 60, 60, 60, 59, 60, 59, 60, 60, 59, 60, 60, 59, 59, 59, 60, 59, 59, 60, 60, 60, 60, 59, 59, 59, 59, 59, 59, 60, 59, 60]</msg>
<status status="PASS" starttime="20201022 13:54:14.065" endtime="20201022 13:54:14.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.060" endtime="20201022 13:54:14.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.075" endtime="20201022 13:54:14.361"></status>
</kw>
<msg timestamp="20201022 13:54:14.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027770972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027821778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:14.074" endtime="20201022 13:54:14.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027770972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027821778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:14.365" endtime="20201022 13:54:14.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.373" endtime="20201022 13:54:14.375"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.069" endtime="20201022 13:54:14.376"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.067" endtime="20201022 13:54:14.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:14.380" level="INFO">${RESULT} = [{'diff': 5.080599999999699e-05}, {'diff': 5.025000000000168e-05}, {'diff': 5.030500000000049e-05}, {'diff': 5.030500000000049e-05}, {'diff': 5.026400000000125e-05}, {'diff': 5.026300000000178e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:14.377" endtime="20201022 13:54:14.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:14.384" level="INFO">${ACCURACY} = {'diff': [5.080599999999699e-05, 5.025000000000168e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.026400000000125e-05, 5.026300000000178e-05, 5.031900000000006e-05, 5.038899999999791e-05, 5.0305...</msg>
<status status="PASS" starttime="20201022 13:54:14.381" endtime="20201022 13:54:14.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.388" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201022 13:54:14.387" endtime="20201022 13:54:14.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.391" level="INFO">VALUE: [5.080599999999699e-05, 5.025000000000168e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.026400000000125e-05, 5.026300000000178e-05, 5.031900000000006e-05, 5.038899999999791e-05, 5.030599999999996e-05, 5.031900000000006e-05, 5.026400000000125e-05, 5.037499999999834e-05, 5.031999999999953e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.027799999999735e-05, 5.031900000000006e-05, 5.031999999999953e-05, 5.03469999999992e-05, 5.029100000000092e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.027800000000082e-05, 5.031900000000006e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.036099999999877e-05, 5.027700000000135e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.031900000000006e-05, 5.029200000000039e-05, 5.023600000000211e-05, 5.037499999999834e-05, 5.027799999999735e-05, 5.033299999999963e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.025000000000168e-05, 5.026299999999484e-05]</msg>
<status status="PASS" starttime="20201022 13:54:14.390" endtime="20201022 13:54:14.396"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.385" endtime="20201022 13:54:14.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:14.400" endtime="20201022 13:54:14.420"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.398" endtime="20201022 13:54:14.420"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.397" endtime="20201022 13:54:14.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.919" endtime="20201022 13:54:14.421"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:13.918" endtime="20201022 13:54:14.421"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.431" endtime="20201022 13:54:14.552"></status>
</kw>
<msg timestamp="20201022 13:54:14.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:14.430" endtime="20201022 13:54:14.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'data': [{'dut-result': '61'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result': '60'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:14.553" endtime="20201022 13:54:14.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.556" endtime="20201022 13:54:14.558"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.427" endtime="20201022 13:54:14.559"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.424" endtime="20201022 13:54:14.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:14.563" level="INFO">${RESULT} = {'dut-result': [61, 60, 60, 60, 64, 60, 60, 60, 59, 60, 64, 60, 60, 60, 64, 60, 60, 59, 60, 64, 60, 60, 64, 64, 59, 60, 59, 60, 60, 60, 59, 64, 59, 59, 60, 59, 60, 60, 60, 64, 60, 59, 64, 64, 60, 64, ...</msg>
<status status="PASS" starttime="20201022 13:54:14.560" endtime="20201022 13:54:14.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.567" level="INFO">NAME: accuracy-TIMER_SLEEP-25-dut</msg>
<status status="PASS" starttime="20201022 13:54:14.566" endtime="20201022 13:54:14.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.570" level="INFO">VALUE: [61, 60, 60, 60, 64, 60, 60, 60, 59, 60, 64, 60, 60, 60, 64, 60, 60, 59, 60, 64, 60, 60, 64, 64, 59, 60, 59, 60, 60, 60, 59, 64, 59, 59, 60, 59, 60, 60, 60, 64, 60, 59, 64, 64, 60, 64, 60, 60, 59, 60]</msg>
<status status="PASS" starttime="20201022 13:54:14.569" endtime="20201022 13:54:14.570"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.564" endtime="20201022 13:54:14.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.577" endtime="20201022 13:54:14.864"></status>
</kw>
<msg timestamp="20201022 13:54:14.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028351917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028402708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:14.575" endtime="20201022 13:54:14.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028351917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028402708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:14.868" endtime="20201022 13:54:14.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.876" endtime="20201022 13:54:14.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.573" endtime="20201022 13:54:14.878"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.571" endtime="20201022 13:54:14.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:14.883" level="INFO">${RESULT} = [{'diff': 5.079099999999795e-05}, {'diff': 5.026399999999778e-05}, {'diff': 5.030499999999702e-05}, {'diff': 5.0320000000003e-05}, {'diff': 5.024999999999821e-05}, {'diff': 5.026400000000125e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:54:14.880" endtime="20201022 13:54:14.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:14.887" level="INFO">${ACCURACY} = {'diff': [5.079099999999795e-05, 5.026399999999778e-05, 5.030499999999702e-05, 5.0320000000003e-05, 5.024999999999821e-05, 5.026400000000125e-05, 5.033400000000257e-05, 5.030599999999996e-05, 5.033399...</msg>
<status status="PASS" starttime="20201022 13:54:14.884" endtime="20201022 13:54:14.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.892" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201022 13:54:14.891" endtime="20201022 13:54:14.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:14.894" level="INFO">VALUE: [5.079099999999795e-05, 5.026399999999778e-05, 5.030499999999702e-05, 5.0320000000003e-05, 5.024999999999821e-05, 5.026400000000125e-05, 5.033400000000257e-05, 5.030599999999996e-05, 5.03339999999991e-05, 5.023599999999864e-05, 5.030500000000049e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.030500000000049e-05, 5.03469999999992e-05, 5.040299999999748e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.030599999999996e-05, 5.023599999999864e-05, 5.027799999999735e-05, 5.029200000000039e-05, 5.522300000000008e-05, 5.031999999999953e-05, 5.029200000000039e-05, 5.031900000000006e-05, 5.030500000000049e-05, 5.030500000000049e-05, 5.5236000000000174e-05, 5.031999999999953e-05, 5.029199999999692e-05, 5.030500000000049e-05, 5.033400000000257e-05, 5.030500000000049e-05, 5.03339999999991e-05, 5.030599999999996e-05, 5.5236000000000174e-05, 5.031900000000006e-05, 5.030500000000049e-05, 5.031999999999953e-05, 5.037500000000181e-05, 5.030499999999355e-05, 5.5222000000000604e-05, 5.031900000000006e-05, 5.5249999999999744e-05, 5.031900000000006e-05, 5.03469999999992e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.025000000000168e-05]</msg>
<status status="PASS" starttime="20201022 13:54:14.893" endtime="20201022 13:54:14.895"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.888" endtime="20201022 13:54:14.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:14.899" endtime="20201022 13:54:14.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.898" endtime="20201022 13:54:14.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.896" endtime="20201022 13:54:14.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.422" endtime="20201022 13:54:14.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.421" endtime="20201022 13:54:14.920"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:14.930" endtime="20201022 13:54:15.051"></status>
</kw>
<msg timestamp="20201022 13:54:15.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result': '65'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:14.927" endtime="20201022 13:54:15.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result': '65'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:15.053" endtime="20201022 13:54:15.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.056" endtime="20201022 13:54:15.057"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.925" endtime="20201022 13:54:15.058"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.923" endtime="20201022 13:54:15.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:15.062" level="INFO">${RESULT} = {'dut-result': [66, 64, 64, 65, 64, 64, 65, 65, 64, 65, 64, 65, 65, 65, 65, 64, 64, 65, 65, 64, 65, 64, 64, 64, 64, 65, 64, 64, 65, 65, 65, 64, 65, 65, 65, 65, 64, 65, 65, 65, 65, 64, 64, 65, 64, 65, ...</msg>
<status status="PASS" starttime="20201022 13:54:15.059" endtime="20201022 13:54:15.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.067" level="INFO">NAME: accuracy-TIMER_SLEEP-26-dut</msg>
<status status="PASS" starttime="20201022 13:54:15.066" endtime="20201022 13:54:15.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.069" level="INFO">VALUE: [66, 64, 64, 65, 64, 64, 65, 65, 64, 65, 64, 65, 65, 65, 65, 64, 64, 65, 65, 64, 65, 64, 64, 64, 64, 65, 64, 64, 65, 65, 65, 64, 65, 65, 65, 65, 64, 65, 65, 65, 65, 64, 64, 65, 64, 65, 65, 65, 65, 65]</msg>
<status status="PASS" starttime="20201022 13:54:15.068" endtime="20201022 13:54:15.069"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.063" endtime="20201022 13:54:15.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.077" endtime="20201022 13:54:15.363"></status>
</kw>
<msg timestamp="20201022 13:54:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028103431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:15.075" endtime="20201022 13:54:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028103431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028159125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:15.367" endtime="20201022 13:54:15.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.375" endtime="20201022 13:54:15.377"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.072" endtime="20201022 13:54:15.377"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.070" endtime="20201022 13:54:15.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:15.382" level="INFO">${RESULT} = [{'diff': 5.5693999999998495e-05}, {'diff': 5.520900000000051e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.519500000000094e-05}, {'diff': 5.518100000000137e-05}, {'diff': 5.5208000000001034e-05}...</msg>
<status status="PASS" starttime="20201022 13:54:15.379" endtime="20201022 13:54:15.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:15.386" level="INFO">${ACCURACY} = {'diff': [5.5693999999998495e-05, 5.520900000000051e-05, 5.5208000000001034e-05, 5.519500000000094e-05, 5.518100000000137e-05, 5.5208000000001034e-05, 5.522300000000008e-05, 5.5194000000001464e-05, 5....</msg>
<status status="PASS" starttime="20201022 13:54:15.383" endtime="20201022 13:54:15.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.390" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201022 13:54:15.389" endtime="20201022 13:54:15.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.393" level="INFO">VALUE: [5.5693999999998495e-05, 5.520900000000051e-05, 5.5208000000001034e-05, 5.519500000000094e-05, 5.518100000000137e-05, 5.5208000000001034e-05, 5.522300000000008e-05, 5.5194000000001464e-05, 5.5194000000001464e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.519500000000094e-05, 5.5193999999997995e-05, 5.5277999999998884e-05, 5.5194000000001464e-05, 5.527800000000235e-05, 5.5193999999997995e-05, 5.5222000000000604e-05, 5.519500000000094e-05, 5.5249999999999744e-05, 5.520900000000051e-05, 5.5222000000000604e-05, 5.5193999999997995e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.5221999999997134e-05, 5.5151999999999285e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.520900000000051e-05, 5.516699999999833e-05, 5.5236000000000174e-05, 5.522300000000008e-05, 5.513899999999919e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.519500000000441e-05, 5.520900000000051e-05, 5.5208000000001034e-05, 5.5194000000001464e-05, 5.520900000000051e-05, 5.5208000000001034e-05, 5.5208000000001034e-05, 5.5208000000001034e-05, 5.5263999999999314e-05, 5.5208000000001034e-05]</msg>
<status status="PASS" starttime="20201022 13:54:15.391" endtime="20201022 13:54:15.393"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.387" endtime="20201022 13:54:15.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:15.397" endtime="20201022 13:54:15.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.396" endtime="20201022 13:54:15.417"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.395" endtime="20201022 13:54:15.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.921" endtime="20201022 13:54:15.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:14.921" endtime="20201022 13:54:15.418"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.427" endtime="20201022 13:54:15.549"></status>
</kw>
<msg timestamp="20201022 13:54:15.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'data': [{'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:15.425" endtime="20201022 13:54:15.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'data': [{'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:15.551" endtime="20201022 13:54:15.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.554" endtime="20201022 13:54:15.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.423" endtime="20201022 13:54:15.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.421" endtime="20201022 13:54:15.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:15.561" level="INFO">${RESULT} = {'dut-result': [65, 65, 64, 64, 65, 64, 65, 65, 65, 65, 64, 64, 65, 65, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 64, 64, 65, 65, 65, 65, 64, 65, 65, 64, 64, 65, 64, 65, 65, 65, 65, 64, 65, 64, 65, ...</msg>
<status status="PASS" starttime="20201022 13:54:15.558" endtime="20201022 13:54:15.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.565" level="INFO">NAME: accuracy-TIMER_SLEEP-27-dut</msg>
<status status="PASS" starttime="20201022 13:54:15.564" endtime="20201022 13:54:15.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.567" level="INFO">VALUE: [65, 65, 64, 64, 65, 64, 65, 65, 65, 65, 64, 64, 65, 65, 64, 64, 64, 64, 65, 65, 65, 65, 65, 65, 65, 64, 64, 65, 65, 65, 65, 64, 65, 65, 64, 64, 65, 64, 65, 65, 65, 65, 64, 65, 64, 65, 64, 65, 64, 65]</msg>
<status status="PASS" starttime="20201022 13:54:15.566" endtime="20201022 13:54:15.568"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.562" endtime="20201022 13:54:15.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.575" endtime="20201022 13:54:15.860"></status>
</kw>
<msg timestamp="20201022 13:54:15.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028013583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028069292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:15.573" endtime="20201022 13:54:15.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028013583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028069292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:15.865" endtime="20201022 13:54:15.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.873" endtime="20201022 13:54:15.875"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.571" endtime="20201022 13:54:15.875"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.569" endtime="20201022 13:54:15.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:15.880" level="INFO">${RESULT} = [{'diff': 5.570899999999754e-05}, {'diff': 5.51809999999979e-05}, {'diff': 5.51670000000018e-05}, {'diff': 5.520899999999704e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.5222000000000604e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:15.876" endtime="20201022 13:54:15.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:15.884" level="INFO">${ACCURACY} = {'diff': [5.570899999999754e-05, 5.51809999999979e-05, 5.51670000000018e-05, 5.520899999999704e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.52...</msg>
<status status="PASS" starttime="20201022 13:54:15.881" endtime="20201022 13:54:15.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.889" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201022 13:54:15.888" endtime="20201022 13:54:15.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:15.892" level="INFO">VALUE: [5.570899999999754e-05, 5.51809999999979e-05, 5.51670000000018e-05, 5.520899999999704e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.5221999999997134e-05, 5.5222000000000604e-05, 5.5221999999997134e-05, 5.5263999999999314e-05, 5.5207999999997565e-05, 5.513899999999919e-05, 5.519499999999747e-05, 5.5236000000000174e-05, 5.522300000000008e-05, 5.5236000000000174e-05, 5.515299999999876e-05, 5.5277999999998884e-05, 5.5207999999997565e-05, 5.5207999999997565e-05, 5.5222000000000604e-05, 5.519500000000094e-05, 5.5152000000002754e-05, 5.519499999999747e-05, 5.5236000000000174e-05, 5.519500000000094e-05, 5.520900000000051e-05, 5.519499999999747e-05, 5.5194000000001464e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5194000000001464e-05, 5.520899999999704e-05, 5.5194000000001464e-05, 5.519500000000094e-05, 5.5207999999997565e-05, 5.516699999999833e-05, 5.516699999999833e-05, 5.5236000000000174e-05, 5.520899999999704e-05, 5.5194000000001464e-05, 5.5249999999999744e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5193999999994525e-05, 5.515300000000223e-05]</msg>
<status status="PASS" starttime="20201022 13:54:15.890" endtime="20201022 13:54:15.892"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.885" endtime="20201022 13:54:15.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:15.897" endtime="20201022 13:54:15.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.895" endtime="20201022 13:54:15.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.893" endtime="20201022 13:54:15.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.419" endtime="20201022 13:54:15.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.418" endtime="20201022 13:54:15.917"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:15.926" endtime="20201022 13:54:16.047"></status>
</kw>
<msg timestamp="20201022 13:54:16.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:15.924" endtime="20201022 13:54:16.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:16.049" endtime="20201022 13:54:16.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.052" endtime="20201022 13:54:16.054"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.922" endtime="20201022 13:54:16.055"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.920" endtime="20201022 13:54:16.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:16.059" level="INFO">${RESULT} = {'dut-result': [66, 64, 64, 64, 64, 65, 65, 65, 64, 64, 64, 64, 65, 65, 64, 65, 65, 65, 65, 64, 65, 64, 64, 64, 65, 65, 65, 64, 65, 64, 65, 64, 65, 65, 64, 65, 65, 64, 65, 64, 65, 64, 65, 65, 65, 65, ...</msg>
<status status="PASS" starttime="20201022 13:54:16.056" endtime="20201022 13:54:16.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.064" level="INFO">NAME: accuracy-TIMER_SLEEP-28-dut</msg>
<status status="PASS" starttime="20201022 13:54:16.063" endtime="20201022 13:54:16.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.066" level="INFO">VALUE: [66, 64, 64, 64, 64, 65, 65, 65, 64, 64, 64, 64, 65, 65, 64, 65, 65, 65, 65, 64, 65, 64, 64, 64, 65, 65, 65, 64, 65, 64, 65, 64, 65, 65, 64, 65, 65, 64, 65, 64, 65, 64, 65, 65, 65, 65, 64, 64, 64, 64]</msg>
<status status="PASS" starttime="20201022 13:54:16.065" endtime="20201022 13:54:16.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.060" endtime="20201022 13:54:16.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.073" endtime="20201022 13:54:16.359"></status>
</kw>
<msg timestamp="20201022 13:54:16.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026672097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026727806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:16.072" endtime="20201022 13:54:16.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026672097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026727806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:16.363" endtime="20201022 13:54:16.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.372" endtime="20201022 13:54:16.373"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.069" endtime="20201022 13:54:16.374"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.067" endtime="20201022 13:54:16.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:16.378" level="INFO">${RESULT} = [{'diff': 5.570900000000101e-05}, {'diff': 5.5249999999999744e-05}, {'diff': 5.519500000000094e-05}, {'diff': 5.520900000000051e-05}, {'diff': 5.526299999999984e-05}, {'diff': 5.5222000000000604e-05},...</msg>
<status status="PASS" starttime="20201022 13:54:16.375" endtime="20201022 13:54:16.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:16.383" level="INFO">${ACCURACY} = {'diff': [5.570900000000101e-05, 5.5249999999999744e-05, 5.519500000000094e-05, 5.520900000000051e-05, 5.526299999999984e-05, 5.5222000000000604e-05, 5.522300000000008e-05, 5.5222000000000604e-05, 5.5...</msg>
<status status="PASS" starttime="20201022 13:54:16.379" endtime="20201022 13:54:16.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.388" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201022 13:54:16.387" endtime="20201022 13:54:16.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.391" level="INFO">VALUE: [5.570900000000101e-05, 5.5249999999999744e-05, 5.519500000000094e-05, 5.520900000000051e-05, 5.526299999999984e-05, 5.5222000000000604e-05, 5.522300000000008e-05, 5.5222000000000604e-05, 5.5207999999997565e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.5263999999999314e-05, 5.5165999999998855e-05, 5.5207999999997565e-05, 5.5208000000001034e-05, 5.520900000000051e-05, 5.5221999999997134e-05, 5.5193999999997995e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.523699999999965e-05, 5.51670000000018e-05, 5.529200000000192e-05, 5.5236000000000174e-05, 5.5221999999997134e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.5194000000001464e-05, 5.518100000000137e-05, 5.5222000000000604e-05, 5.516699999999833e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5207999999997565e-05, 5.519500000000094e-05, 5.5236000000000174e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.5194000000001464e-05, 5.520899999999704e-05, 5.5222000000000604e-05, 5.519499999999747e-05, 5.5193999999997995e-05, 5.522300000000008e-05, 5.519500000000094e-05, 5.520900000000051e-05]</msg>
<status status="PASS" starttime="20201022 13:54:16.389" endtime="20201022 13:54:16.391"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.384" endtime="20201022 13:54:16.392"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:16.395" endtime="20201022 13:54:16.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.394" endtime="20201022 13:54:16.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.392" endtime="20201022 13:54:16.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.918" endtime="20201022 13:54:16.416"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:15.918" endtime="20201022 13:54:16.416"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.425" endtime="20201022 13:54:16.545"></status>
</kw>
<msg timestamp="20201022 13:54:16.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'data': [{'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '65'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:16.423" endtime="20201022 13:54:16.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'data': [{'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '65'}, {'dut-result': '65'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:16.547" endtime="20201022 13:54:16.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.550" endtime="20201022 13:54:16.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.420" endtime="20201022 13:54:16.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.418" endtime="20201022 13:54:16.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:16.558" level="INFO">${RESULT} = {'dut-result': [65, 65, 65, 65, 65, 64, 65, 65, 64, 64, 65, 64, 65, 64, 65, 65, 65, 64, 65, 65, 64, 65, 65, 64, 65, 65, 64, 65, 65, 65, 65, 65, 65, 65, 64, 65, 65, 65, 65, 64, 64, 64, 64, 65, 64, 64, ...</msg>
<status status="PASS" starttime="20201022 13:54:16.553" endtime="20201022 13:54:16.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.562" level="INFO">NAME: accuracy-TIMER_SLEEP-29-dut</msg>
<status status="PASS" starttime="20201022 13:54:16.561" endtime="20201022 13:54:16.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.564" level="INFO">VALUE: [65, 65, 65, 65, 65, 64, 65, 65, 64, 64, 65, 64, 65, 64, 65, 65, 65, 64, 65, 65, 64, 65, 65, 64, 65, 65, 64, 65, 65, 65, 65, 65, 65, 65, 64, 65, 65, 65, 65, 64, 64, 64, 64, 65, 64, 64, 65, 64, 64, 65]</msg>
<status status="PASS" starttime="20201022 13:54:16.563" endtime="20201022 13:54:16.565"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.558" endtime="20201022 13:54:16.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.572" endtime="20201022 13:54:16.858"></status>
</kw>
<msg timestamp="20201022 13:54:16.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026674681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026730389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:16.570" endtime="20201022 13:54:16.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026674681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026730389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:16.862" endtime="20201022 13:54:16.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.871" endtime="20201022 13:54:16.872"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.567" endtime="20201022 13:54:16.873"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.566" endtime="20201022 13:54:16.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:16.877" level="INFO">${RESULT} = [{'diff': 5.5708000000001534e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.520900000000051e-05}, {'diff': 5.5221999999997134e-05}, {'diff': 5.5222000000000604e-05}, {'diff': 5.5222000000000604e-0...</msg>
<status status="PASS" starttime="20201022 13:54:16.874" endtime="20201022 13:54:16.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:16.882" level="INFO">${ACCURACY} = {'diff': [5.5708000000001534e-05, 5.5208000000001034e-05, 5.520900000000051e-05, 5.5221999999997134e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.522300000000008e-05, ...</msg>
<status status="PASS" starttime="20201022 13:54:16.878" endtime="20201022 13:54:16.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.887" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201022 13:54:16.886" endtime="20201022 13:54:16.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:16.889" level="INFO">VALUE: [5.5708000000001534e-05, 5.5208000000001034e-05, 5.520900000000051e-05, 5.5221999999997134e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.522300000000008e-05, 5.523699999999965e-05, 5.5208000000001034e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.5207999999997565e-05, 5.5222000000000604e-05, 5.520900000000051e-05, 5.5236000000000174e-05, 5.522300000000008e-05, 5.5208000000001034e-05, 5.51809999999979e-05, 5.5180000000001894e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5291999999998453e-05, 5.5208000000001034e-05, 5.520900000000051e-05, 5.5208000000001034e-05, 5.5221999999997134e-05, 5.522300000000008e-05, 5.520900000000051e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5166000000002324e-05, 5.5222000000000604e-05, 5.5221999999997134e-05, 5.519500000000094e-05, 5.5208000000001034e-05, 5.5207999999997565e-05, 5.5263999999999314e-05, 5.5222000000000604e-05, 5.522300000000008e-05, 5.5208000000001034e-05, 5.5222000000000604e-05, 5.523699999999965e-05, 5.51670000000018e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.5235999999996704e-05, 5.5207999999997565e-05]</msg>
<status status="PASS" starttime="20201022 13:54:16.888" endtime="20201022 13:54:16.890"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.883" endtime="20201022 13:54:16.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:16.894" endtime="20201022 13:54:16.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.892" endtime="20201022 13:54:16.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.891" endtime="20201022 13:54:16.914"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.417" endtime="20201022 13:54:16.915"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.416" endtime="20201022 13:54:16.915"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:16.923" endtime="20201022 13:54:17.044"></status>
</kw>
<msg timestamp="20201022 13:54:17.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '65'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:16.922" endtime="20201022 13:54:17.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'data': [{'dut-result': '66'}, {'dut-result': '64'}, {'dut-result': '65'}, {'dut-result': '64'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:17.046" endtime="20201022 13:54:17.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.049" endtime="20201022 13:54:17.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.919" endtime="20201022 13:54:17.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.917" endtime="20201022 13:54:17.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:17.057" level="INFO">${RESULT} = {'dut-result': [66, 64, 65, 64, 65, 69, 65, 65, 65, 65, 69, 69, 65, 65, 69, 65, 65, 65, 64, 65, 69, 65, 65, 64, 64, 65, 65, 65, 65, 65, 64, 65, 69, 65, 69, 69, 69, 65, 65, 64, 69, 64, 69, 64, 65, 65, ...</msg>
<status status="PASS" starttime="20201022 13:54:17.053" endtime="20201022 13:54:17.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.062" level="INFO">NAME: accuracy-TIMER_SLEEP-30-dut</msg>
<status status="PASS" starttime="20201022 13:54:17.061" endtime="20201022 13:54:17.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.064" level="INFO">VALUE: [66, 64, 65, 64, 65, 69, 65, 65, 65, 65, 69, 69, 65, 65, 69, 65, 65, 65, 64, 65, 69, 65, 65, 64, 64, 65, 65, 65, 65, 65, 64, 65, 69, 65, 69, 69, 69, 65, 65, 64, 69, 64, 69, 64, 65, 65, 65, 64, 69, 65]</msg>
<status status="PASS" starttime="20201022 13:54:17.063" endtime="20201022 13:54:17.064"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.058" endtime="20201022 13:54:17.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.071" endtime="20201022 13:54:17.357"></status>
</kw>
<msg timestamp="20201022 13:54:17.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026737014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02679275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:17.070" endtime="20201022 13:54:17.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026737014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02679275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 13:54:17.361" endtime="20201022 13:54:17.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.370" endtime="20201022 13:54:17.371"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.067" endtime="20201022 13:54:17.372"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.065" endtime="20201022 13:54:17.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:17.376" level="INFO">${RESULT} = [{'diff': 5.5736000000000674e-05}, {'diff': 5.5207999999997565e-05}, {'diff': 5.51670000000018e-05}, {'diff': 5.5222000000000604e-05}, {'diff': 6.008299999999897e-05}, {'diff': 6.013900000000072e-05},...</msg>
<status status="PASS" starttime="20201022 13:54:17.373" endtime="20201022 13:54:17.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:17.383" level="INFO">${ACCURACY} = {'diff': [5.5736000000000674e-05, 5.5207999999997565e-05, 5.51670000000018e-05, 5.5222000000000604e-05, 6.008299999999897e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.015300000000029e-05, 5.5...</msg>
<status status="PASS" starttime="20201022 13:54:17.377" endtime="20201022 13:54:17.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.388" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201022 13:54:17.387" endtime="20201022 13:54:17.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.390" level="INFO">VALUE: [5.5736000000000674e-05, 5.5207999999997565e-05, 5.51670000000018e-05, 5.5222000000000604e-05, 6.008299999999897e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.015300000000029e-05, 5.5236000000000174e-05, 5.5208000000001034e-05, 6.0165999999996916e-05, 5.5236000000000174e-05, 6.013900000000072e-05, 5.5236000000000174e-05, 5.5263999999999314e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 6.0137999999997777e-05, 6.015300000000029e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.522300000000008e-05, 5.5222000000000604e-05, 5.5221999999997134e-05, 5.522300000000008e-05, 6.015300000000029e-05, 6.016699999999986e-05, 5.5222000000000604e-05, 5.520900000000051e-05, 6.012500000000115e-05, 5.5208000000001034e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 5.5222000000000604e-05, 6.015300000000029e-05, 6.012500000000115e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.5221999999997134e-05, 5.5249999999999744e-05, 5.5236000000000174e-05, 5.5236000000000174e-05, 6.015300000000029e-05, 6.013900000000072e-05]</msg>
<status status="PASS" starttime="20201022 13:54:17.389" endtime="20201022 13:54:17.390"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.384" endtime="20201022 13:54:17.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:17.395" endtime="20201022 13:54:17.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.393" endtime="20201022 13:54:17.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.392" endtime="20201022 13:54:17.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.916" endtime="20201022 13:54:17.415"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:16.915" endtime="20201022 13:54:17.415"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.425" endtime="20201022 13:54:17.546"></status>
</kw>
<msg timestamp="20201022 13:54:17.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:17.423" endtime="20201022 13:54:17.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:17.548" endtime="20201022 13:54:17.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.551" endtime="20201022 13:54:17.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.420" endtime="20201022 13:54:17.553"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.418" endtime="20201022 13:54:17.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:17.558" level="INFO">${RESULT} = {'dut-result': [71, 70, 69, 70, 69, 70, 69, 69, 69, 70, 69, 69, 70, 69, 69, 69, 69, 69, 69, 69, 69, 69, 70, 69, 70, 69, 70, 70, 70, 70, 69, 70, 70, 69, 70, 69, 69, 70, 70, 70, 69, 70, 69, 70, 69, 70, ...</msg>
<status status="PASS" starttime="20201022 13:54:17.554" endtime="20201022 13:54:17.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.563" level="INFO">NAME: accuracy-TIMER_SLEEP-31-dut</msg>
<status status="PASS" starttime="20201022 13:54:17.562" endtime="20201022 13:54:17.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.565" level="INFO">VALUE: [71, 70, 69, 70, 69, 70, 69, 69, 69, 70, 69, 69, 70, 69, 69, 69, 69, 69, 69, 69, 69, 69, 70, 69, 70, 69, 70, 70, 70, 70, 69, 70, 70, 69, 70, 69, 69, 70, 70, 70, 69, 70, 69, 70, 69, 70, 69, 69, 70, 70]</msg>
<status status="PASS" starttime="20201022 13:54:17.564" endtime="20201022 13:54:17.565"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.559" endtime="20201022 13:54:17.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.572" endtime="20201022 13:54:17.856"></status>
</kw>
<msg timestamp="20201022 13:54:17.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027346958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:17.571" endtime="20201022 13:54:17.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027346958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027407597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:17.861" endtime="20201022 13:54:17.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.869" endtime="20201022 13:54:17.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.568" endtime="20201022 13:54:17.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.566" endtime="20201022 13:54:17.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:17.875" level="INFO">${RESULT} = [{'diff': 6.063899999999775e-05}, {'diff': 6.011099999999811e-05}, {'diff': 6.012499999999768e-05}, {'diff': 6.013900000000072e-05}, {'diff': 6.0194999999999e-05}, {'diff': 6.013900000000072e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:54:17.872" endtime="20201022 13:54:17.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:17.880" level="INFO">${ACCURACY} = {'diff': [6.063899999999775e-05, 6.011099999999811e-05, 6.012499999999768e-05, 6.013900000000072e-05, 6.0194999999999e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.015300...</msg>
<status status="PASS" starttime="20201022 13:54:17.876" endtime="20201022 13:54:17.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.885" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201022 13:54:17.884" endtime="20201022 13:54:17.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:17.888" level="INFO">VALUE: [6.063899999999775e-05, 6.011099999999811e-05, 6.012499999999768e-05, 6.013900000000072e-05, 6.0194999999999e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.013899999999725e-05, 6.011099999999811e-05, 6.012499999999768e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.0138000000001246e-05, 6.0207999999999096e-05, 6.012499999999768e-05, 6.015300000000029e-05, 6.0152000000000816e-05, 6.0138000000001246e-05, 6.008299999999897e-05, 6.012499999999768e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.0179999999999956e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.012500000000115e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.016699999999986e-05, 6.013900000000072e-05, 6.0166000000000386e-05, 6.016699999999986e-05, 6.012499999999768e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.0138000000001246e-05, 6.015300000000029e-05, 6.013899999999725e-05, 6.013900000000072e-05, 6.013900000000419e-05, 6.012499999999421e-05, 6.013900000000072e-05]</msg>
<status status="PASS" starttime="20201022 13:54:17.886" endtime="20201022 13:54:17.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.881" endtime="20201022 13:54:17.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:17.892" endtime="20201022 13:54:17.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.891" endtime="20201022 13:54:17.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.890" endtime="20201022 13:54:17.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.417" endtime="20201022 13:54:17.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.416" endtime="20201022 13:54:17.913"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:17.923" endtime="20201022 13:54:18.045"></status>
</kw>
<msg timestamp="20201022 13:54:18.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:17.921" endtime="20201022 13:54:18.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:18.047" endtime="20201022 13:54:18.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.050" endtime="20201022 13:54:18.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.918" endtime="20201022 13:54:18.052"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.915" endtime="20201022 13:54:18.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:18.057" level="INFO">${RESULT} = {'dut-result': [71, 70, 69, 70, 70, 70, 70, 70, 70, 69, 70, 70, 69, 70, 69, 69, 69, 69, 70, 69, 69, 70, 70, 69, 69, 70, 70, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 69, 70, 70, 69, 69, 69, 70, ...</msg>
<status status="PASS" starttime="20201022 13:54:18.053" endtime="20201022 13:54:18.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.062" level="INFO">NAME: accuracy-TIMER_SLEEP-32-dut</msg>
<status status="PASS" starttime="20201022 13:54:18.061" endtime="20201022 13:54:18.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.064" level="INFO">VALUE: [71, 70, 69, 70, 70, 70, 70, 70, 70, 69, 70, 70, 69, 70, 69, 69, 69, 69, 70, 69, 69, 70, 70, 69, 69, 70, 70, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 70, 69, 69, 70, 70, 69, 69, 69, 70, 69, 70, 70, 70]</msg>
<status status="PASS" starttime="20201022 13:54:18.063" endtime="20201022 13:54:18.064"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.058" endtime="20201022 13:54:18.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.071" endtime="20201022 13:54:18.357"></status>
</kw>
<msg timestamp="20201022 13:54:18.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028781278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:18.070" endtime="20201022 13:54:18.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028781278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:18.362" endtime="20201022 13:54:18.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.370" endtime="20201022 13:54:18.372"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.067" endtime="20201022 13:54:18.372"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.065" endtime="20201022 13:54:18.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:18.377" level="INFO">${RESULT} = [{'diff': 6.065300000000079e-05}, {'diff': 6.0151999999997346e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.020900000000204e-05}, {'diff': 6.0166000000000386e-05},...</msg>
<status status="PASS" starttime="20201022 13:54:18.374" endtime="20201022 13:54:18.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:18.382" level="INFO">${ACCURACY} = {'diff': [6.065300000000079e-05, 6.0151999999997346e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.020900000000204e-05, 6.0166000000000386e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.01...</msg>
<status status="PASS" starttime="20201022 13:54:18.378" endtime="20201022 13:54:18.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.386" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201022 13:54:18.385" endtime="20201022 13:54:18.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.389" level="INFO">VALUE: [6.065300000000079e-05, 6.0151999999997346e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.020900000000204e-05, 6.0166000000000386e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.0152000000000816e-05, 6.0166000000000386e-05, 6.015300000000029e-05, 6.0166000000000386e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.0166000000000386e-05, 6.0152000000000816e-05, 6.013900000000072e-05, 6.013899999999725e-05, 6.015300000000029e-05, 6.013899999999725e-05, 6.015299999999682e-05, 6.015300000000029e-05, 6.015299999999682e-05, 6.008300000000244e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.013899999999378e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.0152000000000816e-05, 6.016599999999345e-05, 6.0152000000000816e-05, 6.012500000000115e-05, 6.018099999999943e-05, 6.0152000000000816e-05, 6.0194999999999e-05, 6.011100000000158e-05, 6.013899999999378e-05, 6.015300000000029e-05, 6.0166000000000386e-05]</msg>
<status status="PASS" starttime="20201022 13:54:18.387" endtime="20201022 13:54:18.389"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.383" endtime="20201022 13:54:18.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:18.393" endtime="20201022 13:54:18.413"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.392" endtime="20201022 13:54:18.413"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.391" endtime="20201022 13:54:18.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.914" endtime="20201022 13:54:18.414"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:17.913" endtime="20201022 13:54:18.414"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.423" endtime="20201022 13:54:18.544"></status>
</kw>
<msg timestamp="20201022 13:54:18.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '69'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:18.421" endtime="20201022 13:54:18.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '69'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:18.546" endtime="20201022 13:54:18.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.549" endtime="20201022 13:54:18.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.419" endtime="20201022 13:54:18.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.416" endtime="20201022 13:54:18.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:18.555" level="INFO">${RESULT} = {'dut-result': [71, 69, 69, 70, 69, 69, 70, 69, 69, 70, 69, 70, 70, 69, 69, 70, 69, 70, 70, 69, 69, 69, 70, 70, 69, 69, 69, 70, 69, 70, 70, 69, 69, 69, 69, 70, 69, 69, 69, 69, 69, 69, 69, 70, 70, 69, ...</msg>
<status status="PASS" starttime="20201022 13:54:18.552" endtime="20201022 13:54:18.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.562" level="INFO">NAME: accuracy-TIMER_SLEEP-33-dut</msg>
<status status="PASS" starttime="20201022 13:54:18.560" endtime="20201022 13:54:18.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.564" level="INFO">VALUE: [71, 69, 69, 70, 69, 69, 70, 69, 69, 70, 69, 70, 70, 69, 69, 70, 69, 70, 70, 69, 69, 69, 70, 70, 69, 69, 69, 70, 69, 70, 70, 69, 69, 69, 69, 70, 69, 69, 69, 69, 69, 69, 69, 70, 70, 69, 69, 70, 69, 70]</msg>
<status status="PASS" starttime="20201022 13:54:18.563" endtime="20201022 13:54:18.564"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.557" endtime="20201022 13:54:18.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.571" endtime="20201022 13:54:18.856"></status>
</kw>
<msg timestamp="20201022 13:54:18.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027105736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:18.569" endtime="20201022 13:54:18.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027105736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:18.860" endtime="20201022 13:54:18.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.869" endtime="20201022 13:54:18.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.567" endtime="20201022 13:54:18.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.565" endtime="20201022 13:54:18.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:18.875" level="INFO">${RESULT} = [{'diff': 6.065299999999732e-05}, {'diff': 6.013900000000072e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.015300000000029e-05}, {'diff': 6.013900000000072e-05}, {'diff': 6.018099999999943e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:18.872" endtime="20201022 13:54:18.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:18.879" level="INFO">${ACCURACY} = {'diff': [6.065299999999732e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.018099999999943e-05, 6.0151999999997346e-05, 6.018099999999943e-05, 6.015...</msg>
<status status="PASS" starttime="20201022 13:54:18.876" endtime="20201022 13:54:18.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.885" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201022 13:54:18.883" endtime="20201022 13:54:18.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:18.887" level="INFO">VALUE: [6.065299999999732e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.018099999999943e-05, 6.0151999999997346e-05, 6.018099999999943e-05, 6.015299999999682e-05, 6.0166000000000386e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.0152000000000816e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.0166000000000386e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.016699999999986e-05, 6.0152000000000816e-05, 6.0152000000000816e-05, 6.009699999999854e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.0179999999999956e-05, 6.013899999999725e-05, 6.015300000000029e-05, 6.013899999999725e-05, 6.018099999999943e-05, 6.018099999999943e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.0138000000001246e-05, 6.012499999999768e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.0152000000000816e-05, 6.016699999999986e-05, 6.0152000000000816e-05, 6.0194999999999e-05, 6.012499999999768e-05, 6.0137999999997777e-05, 6.0098000000001484e-05, 6.0151999999997346e-05]</msg>
<status status="PASS" starttime="20201022 13:54:18.886" endtime="20201022 13:54:18.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.880" endtime="20201022 13:54:18.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:18.892" endtime="20201022 13:54:18.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.890" endtime="20201022 13:54:18.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.889" endtime="20201022 13:54:18.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.415" endtime="20201022 13:54:18.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.414" endtime="20201022 13:54:18.913"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:18.922" endtime="20201022 13:54:19.043"></status>
</kw>
<msg timestamp="20201022 13:54:19.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:18.920" endtime="20201022 13:54:19.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '70'}, {'dut-result': '69'}, {'dut-result': '70'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:19.045" endtime="20201022 13:54:19.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.048" endtime="20201022 13:54:19.050"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.917" endtime="20201022 13:54:19.050"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.915" endtime="20201022 13:54:19.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:19.054" level="INFO">${RESULT} = {'dut-result': [71, 70, 69, 70, 69, 70, 69, 69, 70, 70, 69, 69, 69, 70, 70, 69, 69, 69, 69, 70, 69, 70, 69, 70, 69, 69, 69, 69, 69, 69, 69, 70, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 70, 69, 70, 70, ...</msg>
<status status="PASS" starttime="20201022 13:54:19.051" endtime="20201022 13:54:19.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.059" level="INFO">NAME: accuracy-TIMER_SLEEP-34-dut</msg>
<status status="PASS" starttime="20201022 13:54:19.058" endtime="20201022 13:54:19.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.061" level="INFO">VALUE: [71, 70, 69, 70, 69, 70, 69, 69, 70, 70, 69, 69, 69, 70, 70, 69, 69, 69, 69, 70, 69, 70, 69, 70, 69, 69, 69, 69, 69, 69, 69, 70, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 70, 69, 70, 70, 70, 70, 69, 70]</msg>
<status status="PASS" starttime="20201022 13:54:19.060" endtime="20201022 13:54:19.061"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.055" endtime="20201022 13:54:19.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.070" endtime="20201022 13:54:19.356"></status>
</kw>
<msg timestamp="20201022 13:54:19.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027344056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:19.068" endtime="20201022 13:54:19.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027344056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027404681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:19.360" endtime="20201022 13:54:19.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.368" endtime="20201022 13:54:19.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.065" endtime="20201022 13:54:19.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.063" endtime="20201022 13:54:19.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:19.375" level="INFO">${RESULT} = [{'diff': 6.062500000000165e-05}, {'diff': 6.0137999999997777e-05}, {'diff': 6.013900000000072e-05}, {'diff': 6.012500000000115e-05}, {'diff': 6.013899999999725e-05}, {'diff': 6.013900000000072e-05}, ...</msg>
<status status="PASS" starttime="20201022 13:54:19.372" endtime="20201022 13:54:19.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:19.379" level="INFO">${ACCURACY} = {'diff': [6.062500000000165e-05, 6.0137999999997777e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.013899999999725e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013899999999725e-05, 6.015...</msg>
<status status="PASS" starttime="20201022 13:54:19.376" endtime="20201022 13:54:19.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.383" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201022 13:54:19.382" endtime="20201022 13:54:19.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.386" level="INFO">VALUE: [6.062500000000165e-05, 6.0137999999997777e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.013899999999725e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013899999999725e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.013899999999725e-05, 6.008300000000244e-05, 6.013900000000072e-05, 6.0137999999997777e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.008300000000244e-05, 6.0208000000002565e-05, 6.015300000000029e-05, 6.011099999999811e-05, 6.015300000000029e-05, 6.016699999999986e-05, 6.009700000000201e-05, 6.016699999999986e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.011099999999811e-05, 6.016699999999986e-05, 6.0152000000000816e-05, 6.013900000000072e-05, 6.020899999999857e-05, 6.015300000000029e-05, 6.012500000000115e-05, 6.015300000000029e-05, 6.013900000000072e-05, 6.018099999999943e-05, 6.013899999999725e-05, 6.012499999999768e-05, 6.0194999999999e-05, 6.016699999999986e-05, 6.020900000000204e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.016699999999986e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.006900000000287e-05]</msg>
<status status="PASS" starttime="20201022 13:54:19.385" endtime="20201022 13:54:19.387"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.380" endtime="20201022 13:54:19.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:19.391" endtime="20201022 13:54:19.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.389" endtime="20201022 13:54:19.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.388" endtime="20201022 13:54:19.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.914" endtime="20201022 13:54:19.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:18.913" endtime="20201022 13:54:19.413"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.421" endtime="20201022 13:54:19.543"></status>
</kw>
<msg timestamp="20201022 13:54:19.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '74'}, {'dut-result': '69'}, {'dut-result': '69'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:19.420" endtime="20201022 13:54:19.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'data': [{'dut-result': '71'}, {'dut-result': '74'}, {'dut-result': '69'}, {'dut-result': '69'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:19.544" endtime="20201022 13:54:19.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.548" endtime="20201022 13:54:19.549"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.417" endtime="20201022 13:54:19.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.415" endtime="20201022 13:54:19.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:19.554" level="INFO">${RESULT} = {'dut-result': [71, 74, 69, 69, 69, 74, 70, 74, 70, 69, 69, 74, 69, 70, 74, 74, 69, 70, 70, 74, 74, 70, 70, 70, 70, 69, 74, 74, 70, 69, 70, 70, 70, 70, 69, 74, 74, 70, 70, 69, 74, 69, 74, 74, 74, 69, ...</msg>
<status status="PASS" starttime="20201022 13:54:19.551" endtime="20201022 13:54:19.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.558" level="INFO">NAME: accuracy-TIMER_SLEEP-35-dut</msg>
<status status="PASS" starttime="20201022 13:54:19.557" endtime="20201022 13:54:19.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.561" level="INFO">VALUE: [71, 74, 69, 69, 69, 74, 70, 74, 70, 69, 69, 74, 69, 70, 74, 74, 69, 70, 70, 74, 74, 70, 70, 70, 70, 69, 74, 74, 70, 69, 70, 70, 70, 70, 69, 74, 74, 70, 70, 69, 74, 69, 74, 74, 74, 69, 70, 70, 74, 74]</msg>
<status status="PASS" starttime="20201022 13:54:19.560" endtime="20201022 13:54:19.561"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.555" endtime="20201022 13:54:19.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.569" endtime="20201022 13:54:19.856"></status>
</kw>
<msg timestamp="20201022 13:54:19.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027755056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027815722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:19.567" endtime="20201022 13:54:19.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027755056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027815722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:19.860" endtime="20201022 13:54:19.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.868" endtime="20201022 13:54:19.870"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.564" endtime="20201022 13:54:19.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.562" endtime="20201022 13:54:19.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:19.875" level="INFO">${RESULT} = [{'diff': 6.0666000000000886e-05}, {'diff': 6.019500000000247e-05}, {'diff': 6.011099999999811e-05}, {'diff': 6.0152000000000816e-05}, {'diff': 6.506899999999746e-05}, {'diff': 6.015299999999682e-05},...</msg>
<status status="PASS" starttime="20201022 13:54:19.872" endtime="20201022 13:54:19.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:19.880" level="INFO">${ACCURACY} = {'diff': [6.0666000000000886e-05, 6.019500000000247e-05, 6.011099999999811e-05, 6.0152000000000816e-05, 6.506899999999746e-05, 6.015299999999682e-05, 6.012500000000115e-05, 6.015300000000029e-05, 6.50...</msg>
<status status="PASS" starttime="20201022 13:54:19.876" endtime="20201022 13:54:19.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.884" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201022 13:54:19.883" endtime="20201022 13:54:19.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:19.887" level="INFO">VALUE: [6.0666000000000886e-05, 6.019500000000247e-05, 6.011099999999811e-05, 6.0152000000000816e-05, 6.506899999999746e-05, 6.015299999999682e-05, 6.012500000000115e-05, 6.015300000000029e-05, 6.504200000000127e-05, 6.016699999999986e-05, 6.501399999999866e-05, 6.0194000000002995e-05, 6.511099999999964e-05, 6.505499999999789e-05, 6.0166000000000386e-05, 6.505499999999789e-05, 6.0152000000000816e-05, 6.015300000000029e-05, 6.50700000000004e-05, 6.015300000000029e-05, 6.50830000000005e-05, 6.504099999999832e-05, 6.015300000000029e-05, 6.012500000000115e-05, 6.50700000000004e-05, 6.015299999999682e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.0152000000000816e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.013900000000072e-05, 6.011099999999811e-05, 6.015300000000029e-05, 6.505500000000136e-05, 6.011099999999811e-05, 6.012499999999768e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.011099999999811e-05, 6.011100000000158e-05, 6.505599999999737e-05, 6.015300000000029e-05, 6.015300000000029e-05, 6.020900000000551e-05, 6.013900000000072e-05, 6.50830000000005e-05, 6.512499999999921e-05, 6.013900000000072e-05, 6.016699999999986e-05]</msg>
<status status="PASS" starttime="20201022 13:54:19.885" endtime="20201022 13:54:19.887"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.881" endtime="20201022 13:54:19.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:19.891" endtime="20201022 13:54:19.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.890" endtime="20201022 13:54:19.911"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.888" endtime="20201022 13:54:19.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.413" endtime="20201022 13:54:19.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.413" endtime="20201022 13:54:19.912"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:19.922" endtime="20201022 13:54:20.044"></status>
</kw>
<msg timestamp="20201022 13:54:20.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'data': [{'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:19.920" endtime="20201022 13:54:20.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'data': [{'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:20.045" endtime="20201022 13:54:20.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.048" endtime="20201022 13:54:20.050"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.917" endtime="20201022 13:54:20.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.914" endtime="20201022 13:54:20.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:20.055" level="INFO">${RESULT} = {'dut-result': [75, 75, 75, 74, 74, 74, 74, 75, 74, 74, 75, 75, 74, 75, 74, 74, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 75, 75, 74, 74, 74, 75, 74, 74, 75, 74, ...</msg>
<status status="PASS" starttime="20201022 13:54:20.052" endtime="20201022 13:54:20.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.059" level="INFO">NAME: accuracy-TIMER_SLEEP-36-dut</msg>
<status status="PASS" starttime="20201022 13:54:20.058" endtime="20201022 13:54:20.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.062" level="INFO">VALUE: [75, 75, 75, 74, 74, 74, 74, 75, 74, 74, 75, 75, 74, 75, 74, 74, 75, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 75, 75, 74, 74, 74, 75, 74, 74, 75, 74, 74, 74, 75, 74]</msg>
<status status="PASS" starttime="20201022 13:54:20.061" endtime="20201022 13:54:20.062"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.056" endtime="20201022 13:54:20.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.069" endtime="20201022 13:54:20.355"></status>
</kw>
<msg timestamp="20201022 13:54:20.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028221861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:20.068" endtime="20201022 13:54:20.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028221861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028287431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:20.360" endtime="20201022 13:54:20.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.368" endtime="20201022 13:54:20.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.065" endtime="20201022 13:54:20.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.063" endtime="20201022 13:54:20.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:20.375" level="INFO">${RESULT} = [{'diff': 6.556999999999744e-05}, {'diff': 6.506900000000093e-05}, {'diff': 6.508399999999998e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.498599999999952e-05}, {'diff': 6.505600000000084e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:20.371" endtime="20201022 13:54:20.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:20.379" level="INFO">${ACCURACY} = {'diff': [6.556999999999744e-05, 6.506900000000093e-05, 6.508399999999998e-05, 6.505600000000084e-05, 6.498599999999952e-05, 6.505600000000084e-05, 6.505600000000084e-05, 6.505500000000136e-05, 6.5056...</msg>
<status status="PASS" starttime="20201022 13:54:20.376" endtime="20201022 13:54:20.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.383" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201022 13:54:20.382" endtime="20201022 13:54:20.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.386" level="INFO">VALUE: [6.556999999999744e-05, 6.506900000000093e-05, 6.508399999999998e-05, 6.505600000000084e-05, 6.498599999999952e-05, 6.505600000000084e-05, 6.505600000000084e-05, 6.505500000000136e-05, 6.505600000000084e-05, 6.50830000000005e-05, 6.501399999999866e-05, 6.50830000000005e-05, 6.504200000000127e-05, 6.505600000000084e-05, 6.505499999999789e-05, 6.497199999999995e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.505499999999789e-05, 6.504200000000127e-05, 6.505600000000084e-05, 6.512499999999921e-05, 6.504200000000127e-05, 6.50700000000004e-05, 6.50419999999978e-05, 6.505500000000136e-05, 6.506900000000093e-05, 6.505599999999737e-05, 6.499999999999909e-05, 6.505599999999737e-05, 6.505500000000136e-05, 6.505600000000084e-05, 6.50700000000004e-05, 6.50419999999978e-05, 6.50419999999978e-05, 6.50280000000017e-05, 6.508399999999998e-05, 6.506900000000093e-05, 6.504099999999485e-05, 6.501400000000213e-05, 6.513899999999878e-05, 6.50559999999939e-05, 6.505600000000084e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.504100000000179e-05, 6.505500000000136e-05, 6.505600000000084e-05, 6.505500000000136e-05, 6.501400000000213e-05]</msg>
<status status="PASS" starttime="20201022 13:54:20.384" endtime="20201022 13:54:20.386"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.380" endtime="20201022 13:54:20.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:20.390" endtime="20201022 13:54:20.410"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.389" endtime="20201022 13:54:20.410"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.387" endtime="20201022 13:54:20.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.913" endtime="20201022 13:54:20.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:19.912" endtime="20201022 13:54:20.411"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.422" endtime="20201022 13:54:20.544"></status>
</kw>
<msg timestamp="20201022 13:54:20.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:20.418" endtime="20201022 13:54:20.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:20.546" endtime="20201022 13:54:20.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.549" endtime="20201022 13:54:20.551"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.415" endtime="20201022 13:54:20.552"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.413" endtime="20201022 13:54:20.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:20.556" level="INFO">${RESULT} = {'dut-result': [76, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 74, 74, 74, 75, 75, 74, 74, 75, 74, 74, ...</msg>
<status status="PASS" starttime="20201022 13:54:20.553" endtime="20201022 13:54:20.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.560" level="INFO">NAME: accuracy-TIMER_SLEEP-37-dut</msg>
<status status="PASS" starttime="20201022 13:54:20.559" endtime="20201022 13:54:20.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.563" level="INFO">VALUE: [76, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 74, 74, 74, 75, 75, 74, 74, 75, 74, 74, 74, 75, 74, 74]</msg>
<status status="PASS" starttime="20201022 13:54:20.562" endtime="20201022 13:54:20.563"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.557" endtime="20201022 13:54:20.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.570" endtime="20201022 13:54:20.856"></status>
</kw>
<msg timestamp="20201022 13:54:20.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:20.568" endtime="20201022 13:54:20.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029820403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029885958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:20.861" endtime="20201022 13:54:20.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.869" endtime="20201022 13:54:20.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.566" endtime="20201022 13:54:20.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.564" endtime="20201022 13:54:20.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:20.876" level="INFO">${RESULT} = [{'diff': 6.555500000000186e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.505500000000136e-05}, {'diff': 6.50700000000004e-05}, {'diff': 6.50830000000005e-05}, {'diff': 6.50830000000005e-05}, {'di...</msg>
<status status="PASS" starttime="20201022 13:54:20.872" endtime="20201022 13:54:20.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:20.881" level="INFO">${ACCURACY} = {'diff': [6.555500000000186e-05, 6.509700000000007e-05, 6.505500000000136e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.508399999999998e-05, 6.5055000...</msg>
<status status="PASS" starttime="20201022 13:54:20.877" endtime="20201022 13:54:20.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.885" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201022 13:54:20.884" endtime="20201022 13:54:20.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:20.887" level="INFO">VALUE: [6.555500000000186e-05, 6.509700000000007e-05, 6.505500000000136e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.508399999999998e-05, 6.505500000000136e-05, 6.508399999999998e-05, 6.511200000000258e-05, 6.501399999999866e-05, 6.50700000000004e-05, 6.50700000000004e-05, 6.511199999999912e-05, 6.508399999999998e-05, 6.50280000000017e-05, 6.506900000000093e-05, 6.505500000000136e-05, 6.504100000000179e-05, 6.505600000000084e-05, 6.508299999999356e-05, 6.505500000000136e-05, 6.509799999999955e-05, 6.505600000000084e-05, 6.512499999999921e-05, 6.50700000000004e-05, 6.50700000000004e-05, 6.499999999999562e-05, 6.50700000000004e-05, 6.50700000000004e-05, 6.513899999999878e-05, 6.511099999999964e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.509700000000007e-05, 6.50700000000004e-05, 6.501400000000213e-05, 6.505500000000136e-05, 6.505500000000136e-05, 6.50830000000005e-05, 6.50559999999939e-05, 6.50700000000004e-05, 6.50559999999939e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.505600000000084e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.505500000000136e-05]</msg>
<status status="PASS" starttime="20201022 13:54:20.886" endtime="20201022 13:54:20.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.881" endtime="20201022 13:54:20.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:20.892" endtime="20201022 13:54:20.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.891" endtime="20201022 13:54:20.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.889" endtime="20201022 13:54:20.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.412" endtime="20201022 13:54:20.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.411" endtime="20201022 13:54:20.913"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:20.922" endtime="20201022 13:54:21.044"></status>
</kw>
<msg timestamp="20201022 13:54:21.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:20.920" endtime="20201022 13:54:21.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result': '74'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:21.046" endtime="20201022 13:54:21.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.049" endtime="20201022 13:54:21.050"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.918" endtime="20201022 13:54:21.051"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.916" endtime="20201022 13:54:21.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:21.056" level="INFO">${RESULT} = {'dut-result': [76, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 75, 74, 74, 75, 75, 75, 75, 74, 74, 74, 75, 75, 74, 74, 75, 75, 74, 74, 74, 74, 74, 75, 74, 75, 74, 74, 74, 75, 74, 74, ...</msg>
<status status="PASS" starttime="20201022 13:54:21.052" endtime="20201022 13:54:21.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.061" level="INFO">NAME: accuracy-TIMER_SLEEP-38-dut</msg>
<status status="PASS" starttime="20201022 13:54:21.060" endtime="20201022 13:54:21.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.063" level="INFO">VALUE: [76, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 75, 74, 74, 74, 75, 74, 74, 75, 75, 75, 75, 74, 74, 74, 75, 75, 74, 74, 75, 75, 74, 74, 74, 74, 74, 75, 74, 75, 74, 74, 74, 75, 74, 74, 75, 75, 75, 74]</msg>
<status status="PASS" starttime="20201022 13:54:21.062" endtime="20201022 13:54:21.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.057" endtime="20201022 13:54:21.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.070" endtime="20201022 13:54:21.356"></status>
</kw>
<msg timestamp="20201022 13:54:21.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027300806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027366361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:21.068" endtime="20201022 13:54:21.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027300806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027366361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:21.360" endtime="20201022 13:54:21.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.369" endtime="20201022 13:54:21.370"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.066" endtime="20201022 13:54:21.371"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.064" endtime="20201022 13:54:21.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:21.375" level="INFO">${RESULT} = [{'diff': 6.555499999999839e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.511200000000258e-05}, {'diff': 6.509700000000007e-05}, {'diff': 6.506900000000093e-05}, {'diff': 6.508399999999998e-05}, {...</msg>
<status status="PASS" starttime="20201022 13:54:21.372" endtime="20201022 13:54:21.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:21.380" level="INFO">${ACCURACY} = {'diff': [6.555499999999839e-05, 6.509700000000007e-05, 6.511200000000258e-05, 6.509700000000007e-05, 6.506900000000093e-05, 6.508399999999998e-05, 6.502699999999875e-05, 6.50830000000005e-05, 6.50689...</msg>
<status status="PASS" starttime="20201022 13:54:21.376" endtime="20201022 13:54:21.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.385" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201022 13:54:21.384" endtime="20201022 13:54:21.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.387" level="INFO">VALUE: [6.555499999999839e-05, 6.509700000000007e-05, 6.511200000000258e-05, 6.509700000000007e-05, 6.506900000000093e-05, 6.508399999999998e-05, 6.502699999999875e-05, 6.50830000000005e-05, 6.506899999999746e-05, 6.509799999999955e-05, 6.505500000000136e-05, 6.506900000000093e-05, 6.506900000000093e-05, 6.502700000000222e-05, 6.509700000000007e-05, 6.501399999999866e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.506900000000093e-05, 6.50830000000005e-05, 6.504200000000127e-05, 6.502799999999823e-05, 6.506899999999746e-05, 6.506900000000093e-05, 6.508399999999998e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.50700000000004e-05, 6.499999999999909e-05, 6.504099999999832e-05, 6.506900000000093e-05, 6.511099999999964e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.498599999999952e-05, 6.505500000000136e-05, 6.506900000000093e-05, 6.511199999999912e-05, 6.50830000000005e-05, 6.505600000000084e-05, 6.506899999999746e-05, 6.505499999999789e-05, 6.50700000000004e-05, 6.508399999999998e-05, 6.50700000000004e-05, 6.505500000000136e-05, 6.502699999999875e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.506900000000093e-05]</msg>
<status status="PASS" starttime="20201022 13:54:21.386" endtime="20201022 13:54:21.388"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.381" endtime="20201022 13:54:21.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:21.392" endtime="20201022 13:54:21.411"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.390" endtime="20201022 13:54:21.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.389" endtime="20201022 13:54:21.412"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.914" endtime="20201022 13:54:21.413"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:20.914" endtime="20201022 13:54:21.413"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.421" endtime="20201022 13:54:21.543"></status>
</kw>
<msg timestamp="20201022 13:54:21.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:21.420" endtime="20201022 13:54:21.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'data': [{'dut-result': '76'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result': '75'}, {'dut-result':...</msg>
<status status="PASS" starttime="20201022 13:54:21.545" endtime="20201022 13:54:21.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.548" endtime="20201022 13:54:21.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.417" endtime="20201022 13:54:21.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.415" endtime="20201022 13:54:21.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:21.556" level="INFO">${RESULT} = {'dut-result': [76, 75, 75, 75, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 74, 74, 75, 74, 75, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, ...</msg>
<status status="PASS" starttime="20201022 13:54:21.552" endtime="20201022 13:54:21.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.560" level="INFO">NAME: accuracy-TIMER_SLEEP-39-dut</msg>
<status status="PASS" starttime="20201022 13:54:21.559" endtime="20201022 13:54:21.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.562" level="INFO">VALUE: [76, 75, 75, 75, 74, 74, 74, 74, 74, 75, 74, 74, 74, 74, 74, 75, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 75, 75, 74, 74, 75, 74, 75, 74, 74, 74, 75, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74, 74]</msg>
<status status="PASS" starttime="20201022 13:54:21.561" endtime="20201022 13:54:21.563"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.557" endtime="20201022 13:54:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.570" endtime="20201022 13:54:21.856"></status>
</kw>
<msg timestamp="20201022 13:54:21.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027213986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027279611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:21.568" endtime="20201022 13:54:21.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027213986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027279611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:21.861" endtime="20201022 13:54:21.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.869" endtime="20201022 13:54:21.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.565" endtime="20201022 13:54:21.871"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.564" endtime="20201022 13:54:21.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:21.876" level="INFO">${RESULT} = [{'diff': 6.562499999999971e-05}, {'diff': 6.50700000000004e-05}, {'diff': 6.50830000000005e-05}, {'diff': 6.508399999999998e-05}, {'diff': 6.501400000000213e-05}, {'diff': 6.509700000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201022 13:54:21.873" endtime="20201022 13:54:21.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:21.881" level="INFO">${ACCURACY} = {'diff': [6.562499999999971e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.508399999999998e-05, 6.501400000000213e-05, 6.509700000000007e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.5069000...</msg>
<status status="PASS" starttime="20201022 13:54:21.877" endtime="20201022 13:54:21.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.885" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201022 13:54:21.884" endtime="20201022 13:54:21.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:21.888" level="INFO">VALUE: [6.562499999999971e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.508399999999998e-05, 6.501400000000213e-05, 6.509700000000007e-05, 6.50700000000004e-05, 6.505600000000084e-05, 6.506900000000093e-05, 6.504100000000179e-05, 6.501400000000213e-05, 6.50830000000005e-05, 6.509700000000007e-05, 6.505600000000084e-05, 6.499999999999909e-05, 6.504099999999832e-05, 6.50700000000004e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.50830000000005e-05, 6.504200000000127e-05, 6.505499999999789e-05, 6.50830000000005e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.505500000000136e-05, 6.509700000000007e-05, 6.505600000000084e-05, 6.50419999999978e-05, 6.512499999999921e-05, 6.506899999999746e-05, 6.505500000000136e-05, 6.505599999999737e-05, 6.504100000000179e-05, 6.505600000000084e-05, 6.504099999999832e-05, 6.511099999999964e-05, 6.506999999999694e-05, 6.505600000000084e-05, 6.50830000000005e-05, 6.506899999999746e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.511099999999964e-05, 6.505600000000084e-05, 6.504100000000179e-05, 6.505499999999442e-05, 6.505600000000084e-05, 6.504100000000179e-05]</msg>
<status status="PASS" starttime="20201022 13:54:21.886" endtime="20201022 13:54:21.888"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.882" endtime="20201022 13:54:21.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:21.892" endtime="20201022 13:54:21.912"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.891" endtime="20201022 13:54:21.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.890" endtime="20201022 13:54:21.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.414" endtime="20201022 13:54:21.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.413" endtime="20201022 13:54:21.914"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:21.923" endtime="20201022 13:54:22.056"></status>
</kw>
<msg timestamp="20201022 13:54:22.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '143'}, {'dut-result': '143'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:21.921" endtime="20201022 13:54:22.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '143'}, {'dut-result': '143'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:22.058" endtime="20201022 13:54:22.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.061" endtime="20201022 13:54:22.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.918" endtime="20201022 13:54:22.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.916" endtime="20201022 13:54:22.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:22.069" level="INFO">${RESULT} = {'dut-result': [145, 144, 143, 143, 144, 144, 143, 144, 143, 144, 144, 144, 144, 143, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 143, 144, 144,...</msg>
<status status="PASS" starttime="20201022 13:54:22.064" endtime="20201022 13:54:22.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.074" level="INFO">NAME: accuracy-TIMER_SLEEP-40-dut</msg>
<status status="PASS" starttime="20201022 13:54:22.072" endtime="20201022 13:54:22.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.076" level="INFO">VALUE: [145, 144, 143, 143, 144, 144, 143, 144, 143, 144, 144, 144, 144, 143, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 143, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 143, 143, 144, 144, 144]</msg>
<status status="PASS" starttime="20201022 13:54:22.075" endtime="20201022 13:54:22.076"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.070" endtime="20201022 13:54:22.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.083" endtime="20201022 13:54:22.369"></status>
</kw>
<msg timestamp="20201022 13:54:22.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031676722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:22.081" endtime="20201022 13:54:22.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031676722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:22.373" endtime="20201022 13:54:22.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.381" endtime="20201022 13:54:22.383"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.079" endtime="20201022 13:54:22.384"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.077" endtime="20201022 13:54:22.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:22.388" level="INFO">${RESULT} = [{'diff': 0.00013441700000000473}, {'diff': 0.0001344719999999966}, {'diff': 0.00013440299999999822}, {'diff': 0.00013437499999999908}, {'diff': 0.00013444399999999745}, {'diff': 0.0001344449999999969...</msg>
<status status="PASS" starttime="20201022 13:54:22.385" endtime="20201022 13:54:22.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:22.393" level="INFO">${ACCURACY} = {'diff': [0.00013441700000000473, 0.0001344719999999966, 0.00013440299999999822, 0.00013437499999999908, 0.00013444399999999745, 0.00013444499999999693, 0.00013440299999999822, 0.00013441599999999831,...</msg>
<status status="PASS" starttime="20201022 13:54:22.389" endtime="20201022 13:54:22.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.397" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201022 13:54:22.396" endtime="20201022 13:54:22.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.400" level="INFO">VALUE: [0.00013441700000000473, 0.0001344719999999966, 0.00013440299999999822, 0.00013437499999999908, 0.00013444399999999745, 0.00013444499999999693, 0.00013440299999999822, 0.00013441599999999831, 0.00013443099999999736, 0.00013447299999999607, 0.00013438899999999865, 0.00013442999999999788, 0.00013442999999999788, 0.0001344169999999978, 0.00013440299999999822, 0.00013441700000000473, 0.0001344310000000043, 0.00013445900000000344, 0.00013440300000000516, 0.00013442999999999788, 0.00013440299999999822, 0.00013437499999999908, 0.00013433399999999984, 0.0001343890000000056, 0.0001344310000000043, 0.00013440199999999874, 0.00013437499999999908, 0.00013441599999999831, 0.00013445800000000396, 0.0001344860000000031, 0.00013444500000000387, 0.00013441599999999831, 0.0001344440000000044, 0.00013440299999999822, 0.00013440199999999874, 0.0001344169999999978, 0.00013440199999999874, 0.0001344169999999978, 0.00013441700000000473, 0.0001344169999999978, 0.0001344169999999978, 0.00013441700000000473, 0.00013443099999999736, 0.00013443099999999736, 0.00013440300000000516, 0.0001344169999999978, 0.0001344169999999978, 0.0001344169999999978, 0.00013434699999999994, 0.00013442999999999788]</msg>
<status status="PASS" starttime="20201022 13:54:22.398" endtime="20201022 13:54:22.400"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.394" endtime="20201022 13:54:22.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:22.404" endtime="20201022 13:54:22.424"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.403" endtime="20201022 13:54:22.424"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.401" endtime="20201022 13:54:22.425"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.915" endtime="20201022 13:54:22.425"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:21.914" endtime="20201022 13:54:22.425"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.434" endtime="20201022 13:54:22.568"></status>
</kw>
<msg timestamp="20201022 13:54:22.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '143'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:22.433" endtime="20201022 13:54:22.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '143'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:22.569" endtime="20201022 13:54:22.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.573" endtime="20201022 13:54:22.574"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.430" endtime="20201022 13:54:22.575"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.428" endtime="20201022 13:54:22.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:22.580" level="INFO">${RESULT} = {'dut-result': [145, 143, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144,...</msg>
<status status="PASS" starttime="20201022 13:54:22.576" endtime="20201022 13:54:22.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.585" level="INFO">NAME: accuracy-TIMER_SLEEP-41-dut</msg>
<status status="PASS" starttime="20201022 13:54:22.584" endtime="20201022 13:54:22.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.587" level="INFO">VALUE: [145, 143, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 143, 143, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144]</msg>
<status status="PASS" starttime="20201022 13:54:22.586" endtime="20201022 13:54:22.587"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.581" endtime="20201022 13:54:22.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.594" endtime="20201022 13:54:22.881"></status>
</kw>
<msg timestamp="20201022 13:54:22.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031193861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031328236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:22.592" endtime="20201022 13:54:22.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031193861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031328236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:22.885" endtime="20201022 13:54:22.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.894" endtime="20201022 13:54:22.895"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.590" endtime="20201022 13:54:22.896"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.588" endtime="20201022 13:54:22.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:22.900" level="INFO">${RESULT} = [{'diff': 0.00013437500000000255}, {'diff': 0.00013442999999999788}, {'diff': 0.00013443099999999736}, {'diff': 0.0001344169999999978}, {'diff': 0.00013440299999999822}, {'diff': 0.0001344449999999969...</msg>
<status status="PASS" starttime="20201022 13:54:22.897" endtime="20201022 13:54:22.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:22.905" level="INFO">${ACCURACY} = {'diff': [0.00013437500000000255, 0.00013442999999999788, 0.00013443099999999736, 0.0001344169999999978, 0.00013440299999999822, 0.00013444499999999693, 0.00013450000000000267, 0.00013443099999999736,...</msg>
<status status="PASS" starttime="20201022 13:54:22.901" endtime="20201022 13:54:22.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.910" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201022 13:54:22.908" endtime="20201022 13:54:22.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:22.912" level="INFO">VALUE: [0.00013437500000000255, 0.00013442999999999788, 0.00013443099999999736, 0.0001344169999999978, 0.00013440299999999822, 0.00013444499999999693, 0.00013450000000000267, 0.00013443099999999736, 0.00013444399999999745, 0.0001344169999999978, 0.0001344169999999978, 0.0001344169999999978, 0.00013441700000000473, 0.00013441700000000473, 0.00013440300000000516, 0.0001343479999999994, 0.0001344310000000043, 0.00013441599999999831, 0.0001343609999999995, 0.00013440300000000516, 0.00013438899999999865, 0.0001343609999999995, 0.00013443000000000482, 0.00013438899999999865, 0.00013441599999999831, 0.00013440299999999822, 0.00013441600000000525, 0.00013440199999999874, 0.00013445799999999702, 0.00013450000000000267, 0.00013444499999999693, 0.00013443099999999736, 0.00013440300000000516, 0.0001344310000000043, 0.00013437500000000602, 0.00013441700000000473, 0.00013441600000000525, 0.00013442999999999788, 0.00013441700000000473, 0.0001344169999999978, 0.0001344860000000031, 0.00013440200000000568, 0.0001344719999999966, 0.00013442999999999788, 0.00013438899999999865, 0.0001343890000000056, 0.00013444500000000387, 0.0001344169999999978, 0.0001344169999999978, 0.00013443000000000482]</msg>
<status status="PASS" starttime="20201022 13:54:22.911" endtime="20201022 13:54:22.913"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.906" endtime="20201022 13:54:22.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:22.917" endtime="20201022 13:54:22.936"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.915" endtime="20201022 13:54:22.937"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.914" endtime="20201022 13:54:22.938"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.426" endtime="20201022 13:54:22.938"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.426" endtime="20201022 13:54:22.938"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:22.948" endtime="20201022 13:54:23.081"></status>
</kw>
<msg timestamp="20201022 13:54:23.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:22.946" endtime="20201022 13:54:23.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:23.083" endtime="20201022 13:54:23.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.086" endtime="20201022 13:54:23.088"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.943" endtime="20201022 13:54:23.088"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.941" endtime="20201022 13:54:23.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:23.093" level="INFO">${RESULT} = {'dut-result': [145, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 143, 144, 144, 143, 143, 144, 143, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144,...</msg>
<status status="PASS" starttime="20201022 13:54:23.089" endtime="20201022 13:54:23.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.098" level="INFO">NAME: accuracy-TIMER_SLEEP-42-dut</msg>
<status status="PASS" starttime="20201022 13:54:23.097" endtime="20201022 13:54:23.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.100" level="INFO">VALUE: [145, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 143, 144, 144, 143, 143, 144, 143, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 143, 144]</msg>
<status status="PASS" starttime="20201022 13:54:23.099" endtime="20201022 13:54:23.101"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.093" endtime="20201022 13:54:23.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.107" endtime="20201022 13:54:23.393"></status>
</kw>
<msg timestamp="20201022 13:54:23.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031882111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032016514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:23.106" endtime="20201022 13:54:23.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031882111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032016514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:23.397" endtime="20201022 13:54:23.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.406" endtime="20201022 13:54:23.407"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.103" endtime="20201022 13:54:23.408"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.102" endtime="20201022 13:54:23.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:23.412" level="INFO">${RESULT} = [{'diff': 0.00013440300000000516}, {'diff': 0.00013440300000000516}, {'diff': 0.00013434699999999994}, {'diff': 0.00013438899999999865}, {'diff': 0.0001344169999999978}, {'diff': 0.0001344299999999978...</msg>
<status status="PASS" starttime="20201022 13:54:23.409" endtime="20201022 13:54:23.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:23.416" level="INFO">${ACCURACY} = {'diff': [0.00013440300000000516, 0.00013440300000000516, 0.00013434699999999994, 0.00013438899999999865, 0.0001344169999999978, 0.00013442999999999788, 0.0001344169999999978, 0.00013440299999999822, ...</msg>
<status status="PASS" starttime="20201022 13:54:23.413" endtime="20201022 13:54:23.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.422" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201022 13:54:23.420" endtime="20201022 13:54:23.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.424" level="INFO">VALUE: [0.00013440300000000516, 0.00013440300000000516, 0.00013434699999999994, 0.00013438899999999865, 0.0001344169999999978, 0.00013442999999999788, 0.0001344169999999978, 0.00013440299999999822, 0.00013440199999999874, 0.00013438899999999865, 0.00013440300000000516, 0.00013444399999999745, 0.00013444499999999693, 0.00013438899999999865, 0.00013440300000000516, 0.00013438899999999865, 0.00013438899999999865, 0.00013440199999999874, 0.0001344169999999978, 0.00013443099999999736, 0.00013440299999999822, 0.00013438899999999865, 0.00013440299999999822, 0.00013440299999999822, 0.00013440299999999822, 0.00013440300000000516, 0.00013440299999999822, 0.00013440199999999874, 0.0001344310000000043, 0.00013443099999999736, 0.00013444499999999693, 0.00013444399999999745, 0.00013444399999999745, 0.00013441599999999831, 0.00013441599999999831, 0.0001344860000000031, 0.0001344169999999978, 0.00013437499999999908, 0.00013440299999999822, 0.00013441600000000525, 0.00013441700000000473, 0.00013440199999999874, 0.00013437499999999908, 0.00013444500000000387, 0.00013440299999999822, 0.00013437499999999908, 0.0001343609999999995, 0.00013437500000000602, 0.00013440300000000516, 0.00013440299999999822]</msg>
<status status="PASS" starttime="20201022 13:54:23.423" endtime="20201022 13:54:23.424"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.417" endtime="20201022 13:54:23.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:23.429" endtime="20201022 13:54:23.448"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.427" endtime="20201022 13:54:23.449"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.426" endtime="20201022 13:54:23.449"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.939" endtime="20201022 13:54:23.449"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:22.939" endtime="20201022 13:54:23.450"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.458" endtime="20201022 13:54:23.592"></status>
</kw>
<msg timestamp="20201022 13:54:23.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:23.457" endtime="20201022 13:54:23.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'data': [{'dut-result': '145'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-result': '144'}, {'dut-resu...</msg>
<status status="PASS" starttime="20201022 13:54:23.593" endtime="20201022 13:54:23.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.596" endtime="20201022 13:54:23.598"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.454" endtime="20201022 13:54:23.599"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.452" endtime="20201022 13:54:23.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:23.603" level="INFO">${RESULT} = {'dut-result': [145, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 143, 144, 144, 144, 143, 143, 144, 143, 144, 143, 144, 144, 144, 144, 144, 144,...</msg>
<status status="PASS" starttime="20201022 13:54:23.600" endtime="20201022 13:54:23.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-dut</arg>
<arg>${RESULT['dut-result']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.608" level="INFO">NAME: accuracy-TIMER_SLEEP-43-dut</msg>
<status status="PASS" starttime="20201022 13:54:23.607" endtime="20201022 13:54:23.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.610" level="INFO">VALUE: [145, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 143, 144, 144, 144, 143, 143, 144, 143, 144, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 143, 144, 144, 144, 144, 144, 144, 144, 143, 144]</msg>
<status status="PASS" starttime="20201022 13:54:23.609" endtime="20201022 13:54:23.610"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.604" endtime="20201022 13:54:23.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.620" endtime="20201022 13:54:23.905"></status>
</kw>
<msg timestamp="20201022 13:54:23.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030821236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:23.618" endtime="20201022 13:54:23.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030686889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030821236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:23.910" endtime="20201022 13:54:23.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.918" endtime="20201022 13:54:23.919"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.615" endtime="20201022 13:54:23.920"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.612" endtime="20201022 13:54:23.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:23.924" level="INFO">${RESULT} = [{'diff': 0.00013434699999999994}, {'diff': 0.00013438899999999865}, {'diff': 0.00013440199999999874}, {'diff': 0.00013441700000000126}, {'diff': 0.0001344169999999978}, {'diff': 0.0001344019999999987...</msg>
<status status="PASS" starttime="20201022 13:54:23.921" endtime="20201022 13:54:23.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201022 13:54:23.928" level="INFO">${ACCURACY} = {'diff': [0.00013434699999999994, 0.00013438899999999865, 0.00013440199999999874, 0.00013441700000000126, 0.0001344169999999978, 0.00013440199999999874, 0.0001344440000000044, 0.00013440299999999822, ...</msg>
<status status="PASS" starttime="20201022 13:54:23.925" endtime="20201022 13:54:23.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.934" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201022 13:54:23.932" endtime="20201022 13:54:23.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:23.937" level="INFO">VALUE: [0.00013434699999999994, 0.00013438899999999865, 0.00013440199999999874, 0.00013441700000000126, 0.0001344169999999978, 0.00013440199999999874, 0.0001344440000000044, 0.00013440299999999822, 0.00013444499999999693, 0.00013438899999999865, 0.00013444499999999693, 0.00013440200000000568, 0.00013440299999999822, 0.00013443099999999736, 0.00013441700000000473, 0.0001343890000000056, 0.00013440299999999822, 0.00013438899999999865, 0.00013440299999999822, 0.00013440299999999822, 0.00013438899999999865, 0.0001343609999999995, 0.00013441700000000473, 0.00013440299999999822, 0.0001344169999999978, 0.00013445900000000344, 0.0001344169999999978, 0.00013440299999999822, 0.00013441700000000473, 0.00013440299999999822, 0.00013438799999999917, 0.00013442999999999788, 0.00013440300000000516, 0.00013441700000000473, 0.00013441599999999831, 0.0001344169999999978, 0.00013440300000000516, 0.00013441599999999831, 0.0001344169999999978, 0.00013438899999999865, 0.00013447200000000353, 0.0001344169999999978, 0.00013444399999999745, 0.0001344860000000031, 0.0001344169999999978, 0.00013444499999999693, 0.00013441700000000473, 0.00013440299999999822, 0.00013438899999999865, 0.00013440299999999822]</msg>
<status status="PASS" starttime="20201022 13:54:23.936" endtime="20201022 13:54:23.937"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.929" endtime="20201022 13:54:23.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:23.942" endtime="20201022 13:54:23.962"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.940" endtime="20201022 13:54:23.963"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.939" endtime="20201022 13:54:23.963"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.450" endtime="20201022 13:54:23.963"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:23.450" endtime="20201022 13:54:23.963"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:23.973" endtime="20201022 13:54:24.989"></status>
</kw>
<msg timestamp="20201022 13:54:24.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201022 13:54:23.971" endtime="20201022 13:54:24.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:24.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201022 13:54:24.993" endtime="20201022 13:54:24.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:25.002" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201022 13:54:24.998" endtime="20201022 13:54:25.003"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:23.968" endtime="20201022 13:54:25.004"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:23.966" endtime="20201022 13:54:25.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:25.014" endtime="20201022 13:54:25.036"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:25.011" endtime="20201022 13:54:25.037"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:25.008" endtime="20201022 13:54:25.038"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:23.964" endtime="20201022 13:54:25.039"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:23.964" endtime="20201022 13:54:25.039"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:02.405" endtime="20201022 13:54:25.040"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201022 13:54:02.337" endtime="20201022 13:54:25.041" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201022 13:53:10.136" endtime="20201022 13:54:25.055"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201022 13:54:25.122" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201022 13:54:25.131" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201022 13:54:26.254" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201022 13:54:25.121" endtime="20201022 13:54:26.255"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201022 13:54:26.258" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201022 13:54:26.256" endtime="20201022 13:54:26.258"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:25.120" endtime="20201022 13:54:26.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:26.261" endtime="20201022 13:54:26.492"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.259" endtime="20201022 13:54:26.493"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.512" endtime="20201022 13:54:26.533"></status>
</kw>
<msg timestamp="20201022 13:54:26.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:26.508" endtime="20201022 13:54:26.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:26.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:26.536" endtime="20201022 13:54:26.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:26.546" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:26.542" endtime="20201022 13:54:26.547"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:26.503" endtime="20201022 13:54:26.549"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:26.499" endtime="20201022 13:54:26.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.498" endtime="20201022 13:54:26.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:26.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:26.557" endtime="20201022 13:54:26.559"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.553" endtime="20201022 13:54:26.560"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.497" endtime="20201022 13:54:26.560"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.496" endtime="20201022 13:54:26.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.562" endtime="20201022 13:54:26.565"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.495" endtime="20201022 13:54:26.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.568" endtime="20201022 13:54:26.571"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.494" endtime="20201022 13:54:26.572"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:25.118" endtime="20201022 13:54:26.573"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:26.586" endtime="20201022 13:54:26.606"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.581" endtime="20201022 13:54:26.607"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.621" endtime="20201022 13:54:26.634"></status>
</kw>
<msg timestamp="20201022 13:54:26.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:26.620" endtime="20201022 13:54:26.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:26.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:26.635" endtime="20201022 13:54:26.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:26.640" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:26.638" endtime="20201022 13:54:26.640"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:26.617" endtime="20201022 13:54:26.641"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:26.614" endtime="20201022 13:54:26.641"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.613" endtime="20201022 13:54:26.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:26.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:26.644" endtime="20201022 13:54:26.645"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.642" endtime="20201022 13:54:26.646"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.612" endtime="20201022 13:54:26.646"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.611" endtime="20201022 13:54:26.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.647" endtime="20201022 13:54:26.648"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.610" endtime="20201022 13:54:26.649"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.608" endtime="20201022 13:54:26.649"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.578" endtime="20201022 13:54:26.649"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:26.658" endtime="20201022 13:54:32.152"></status>
</kw>
<msg timestamp="20201022 13:54:32.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:26.656" endtime="20201022 13:54:32.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:32.156" endtime="20201022 13:54:32.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.161" endtime="20201022 13:54:32.166"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.653" endtime="20201022 13:54:32.167"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.652" endtime="20201022 13:54:32.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:32.173" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201022 13:54:32.170" endtime="20201022 13:54:32.174"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:54:32.211" level="INFO">${intervals} = []</msg>
<status status="PASS" starttime="20201022 13:54:32.175" endtime="20201022 13:54:32.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.215" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:54:32.214" endtime="20201022 13:54:32.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.217" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201022 13:54:32.216" endtime="20201022 13:54:32.218"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.212" endtime="20201022 13:54:32.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.224" endtime="20201022 13:54:32.525"></status>
</kw>
<msg timestamp="20201022 13:54:32.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.560083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.659666583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:54:32.223" endtime="20201022 13:54:32.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.560083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.659666583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201022 13:54:32.529" endtime="20201022 13:54:32.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.537" endtime="20201022 13:54:32.539"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.220" endtime="20201022 13:54:32.539"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.219" endtime="20201022 13:54:32.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:54:32.544" level="INFO">${FILTERED} = [{'diff': 0.09958358300000003}, {'diff': 0.09957951399999998}, {'diff': 0.09958475}, {'diff': 0.09958858300000006}, {'diff': 0.09957420900000014}, {'diff': 0.09958038899999999}, {'diff': 0.09956030499...</msg>
<status status="PASS" starttime="20201022 13:54:32.541" endtime="20201022 13:54:32.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:32.548" level="INFO">${RESULT} = {'diff': [0.09958358300000003, 0.09957951399999998, 0.09958475, 0.09958858300000006, 0.09957420900000014, 0.09958038899999999, 0.0995603049999998, 0.09957283400000017, 0.09959011100000015, 0.099576722...</msg>
<status status="PASS" starttime="20201022 13:54:32.545" endtime="20201022 13:54:32.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.553" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:54:32.552" endtime="20201022 13:54:32.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.555" level="INFO">VALUE: [0.09958358300000003, 0.09957951399999998, 0.09958475, 0.09958858300000006, 0.09957420900000014, 0.09958038899999999, 0.0995603049999998, 0.09957283400000017, 0.09959011100000015, 0.09957672200000012, 0.09958006899999994, 0.09957616600000008, 0.09957324999999995, 0.09958576399999997, 0.09958773599999993, 0.0995791800000001, 0.09957387499999992, 0.09958919500000007, 0.09959308399999989, 0.099577472, 0.09959087500000008, 0.09958666599999999, 0.09959654200000001, 0.09958212499999997, 0.09958266699999996, 0.09959417999999998, 0.09960072199999992, 0.09958654200000039, 0.09958511100000011, 0.09957474999999993, 0.09958276299999991, 0.09958930499999985, 0.09957661100000026, 0.09959348600000029, 0.09957498599999992, 0.09957779099999975, 0.09956681899999964, 0.09958540299999985, 0.09957687500000034, 0.09959751400000005, 0.09958098599999943, 0.09959015300000029, 0.09959476400000078, 0.09958348600000022, 0.09957547199999972, 0.09957848599999952, 0.09957147200000005, 0.09957961100000023, 0.09957819400000023, 0.09958477699999957]</msg>
<status status="PASS" starttime="20201022 13:54:32.554" endtime="20201022 13:54:32.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.549" endtime="20201022 13:54:32.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:26.650" endtime="20201022 13:54:32.557"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:26.573" endtime="20201022 13:54:32.557" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:32.564" endtime="20201022 13:54:32.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.562" endtime="20201022 13:54:32.584"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.597" endtime="20201022 13:54:32.609"></status>
</kw>
<msg timestamp="20201022 13:54:32.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:32.595" endtime="20201022 13:54:32.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:32.611" endtime="20201022 13:54:32.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:32.615" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:32.613" endtime="20201022 13:54:32.616"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:32.593" endtime="20201022 13:54:32.616"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:32.590" endtime="20201022 13:54:32.617"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.589" endtime="20201022 13:54:32.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:32.621" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:32.620" endtime="20201022 13:54:32.621"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.618" endtime="20201022 13:54:32.622"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.588" endtime="20201022 13:54:32.622"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.588" endtime="20201022 13:54:32.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.623" endtime="20201022 13:54:32.624"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.586" endtime="20201022 13:54:32.625"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.585" endtime="20201022 13:54:32.625"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.561" endtime="20201022 13:54:32.625"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:32.635" endtime="20201022 13:54:38.146"></status>
</kw>
<msg timestamp="20201022 13:54:38.147" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '12250'}, {'interval': '14500'}, {'interval': '16750'}, {'interval': '19000'}],...</msg>
<status status="PASS" starttime="20201022 13:54:32.633" endtime="20201022 13:54:38.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.152" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '12250'}, {'interval': '14500'}, {'interval': '16750'}, {'interval': '19000'}],...</msg>
<status status="PASS" starttime="20201022 13:54:38.149" endtime="20201022 13:54:38.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.155" endtime="20201022 13:54:38.158"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.629" endtime="20201022 13:54:38.159"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.627" endtime="20201022 13:54:38.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:38.171" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10000, 12250, 14500, 16750, 19000]}</msg>
<status status="PASS" starttime="20201022 13:54:38.167" endtime="20201022 13:54:38.171"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:54:38.181" level="INFO">${intervals} = [10000, 12250, 14500, 16750, 19000]</msg>
<status status="PASS" starttime="20201022 13:54:38.173" endtime="20201022 13:54:38.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.189" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:54:38.187" endtime="20201022 13:54:38.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.193" level="INFO">VALUE: [10000, 12250, 14500, 16750, 19000]</msg>
<status status="PASS" starttime="20201022 13:54:38.191" endtime="20201022 13:54:38.194"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.183" endtime="20201022 13:54:38.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.209" endtime="20201022 13:54:38.513"></status>
</kw>
<msg timestamp="20201022 13:54:38.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.561217444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.660796819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:38.206" endtime="20201022 13:54:38.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.561217444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.660796819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:38.517" endtime="20201022 13:54:38.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.525" endtime="20201022 13:54:38.527"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.200" endtime="20201022 13:54:38.527"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.196" endtime="20201022 13:54:38.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:54:38.532" level="INFO">${FILTERED} = [{'diff': 0.09957937500000003}, {'diff': 0.09967569499999995}, {'diff': 0.09948636099999997}, {'diff': 0.09959716600000001}, {'diff': 0.0995761810000001}, {'diff': 0.09959123599999997}, {'diff': 0.099...</msg>
<status status="PASS" starttime="20201022 13:54:38.528" endtime="20201022 13:54:38.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:38.536" level="INFO">${RESULT} = {'diff': [0.09957937500000003, 0.09967569499999995, 0.09948636099999997, 0.09959716600000001, 0.0995761810000001, 0.09959123599999997, 0.09960009700000017, 0.09959118100000008, 0.09960334800000004, 0....</msg>
<status status="PASS" starttime="20201022 13:54:38.533" endtime="20201022 13:54:38.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.540" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:54:38.539" endtime="20201022 13:54:38.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.543" level="INFO">VALUE: [0.09957937500000003, 0.09967569499999995, 0.09948636099999997, 0.09959716600000001, 0.0995761810000001, 0.09959123599999997, 0.09960009700000017, 0.09959118100000008, 0.09960334800000004, 0.09959383300000013, 0.09958115300000014, 0.09960693099999984, 0.09959454100000009, 0.09958637500000012, 0.09958176300000021, 0.09958576399999997, 0.0995971520000003, 0.09958445800000026, 0.09959515299999966, 0.09958990300000004, 0.09959497200000023, 0.09959015299999985, 0.0996021800000002, 0.09963684699999975, 0.09955092999999993, 0.09958288900000012, 0.09959276400000006, 0.0995976380000001, 0.0995937360000001, 0.09958287499999985, 0.09960330500000003, 0.09960056999999978, 0.09958976400000008, 0.09959697200000006, 0.09960250000000048, 0.0995866809999999, 0.09960129200000001, 0.0995882219999995, 0.09958155599999952, 0.09958100000000059, 0.09958475, 0.09958920899999946, 0.0995895839999994, 0.09958061100000037, 0.09962016599999934, 0.09953822199999962, 0.09959323599999959, 0.09957612500000046, 0.09959617999999981, 0.09957904200000023]</msg>
<status status="PASS" starttime="20201022 13:54:38.541" endtime="20201022 13:54:38.543"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.537" endtime="20201022 13:54:38.544"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:32.626" endtime="20201022 13:54:38.544"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:32.559" endtime="20201022 13:54:38.545" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:38.551" endtime="20201022 13:54:38.571"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.550" endtime="20201022 13:54:38.571"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.585" endtime="20201022 13:54:38.597"></status>
</kw>
<msg timestamp="20201022 13:54:38.598" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:38.583" endtime="20201022 13:54:38.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.600" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:38.599" endtime="20201022 13:54:38.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:38.603" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:38.601" endtime="20201022 13:54:38.603"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:38.581" endtime="20201022 13:54:38.604"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:38.578" endtime="20201022 13:54:38.605"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.577" endtime="20201022 13:54:38.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:38.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:38.608" endtime="20201022 13:54:38.609"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.606" endtime="20201022 13:54:38.609"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.576" endtime="20201022 13:54:38.610"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.575" endtime="20201022 13:54:38.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.611" endtime="20201022 13:54:38.612"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.574" endtime="20201022 13:54:38.613"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.572" endtime="20201022 13:54:38.613"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.548" endtime="20201022 13:54:38.613"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:38.623" endtime="20201022 13:54:44.156"></status>
</kw>
<msg timestamp="20201022 13:54:44.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '20000'}, {'interval': '30000'}, {'interval': '40000'}, {'interval': '50000'},...</msg>
<status status="PASS" starttime="20201022 13:54:38.621" endtime="20201022 13:54:44.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.163" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '20000'}, {'interval': '30000'}, {'interval': '40000'}, {'interval': '50000'},...</msg>
<status status="PASS" starttime="20201022 13:54:44.159" endtime="20201022 13:54:44.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.165" endtime="20201022 13:54:44.168"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.618" endtime="20201022 13:54:44.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.615" endtime="20201022 13:54:44.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:44.175" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000]}</msg>
<status status="PASS" starttime="20201022 13:54:44.172" endtime="20201022 13:54:44.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:54:44.180" level="INFO">${intervals} = [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000]</msg>
<status status="PASS" starttime="20201022 13:54:44.176" endtime="20201022 13:54:44.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.184" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:54:44.183" endtime="20201022 13:54:44.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.186" level="INFO">VALUE: [10000, 20000, 30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000]</msg>
<status status="PASS" starttime="20201022 13:54:44.185" endtime="20201022 13:54:44.186"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.181" endtime="20201022 13:54:44.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.193" endtime="20201022 13:54:44.491"></status>
</kw>
<msg timestamp="20201022 13:54:44.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.563593222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.663001819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:44.192" endtime="20201022 13:54:44.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.563593222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.663001819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:44.495" endtime="20201022 13:54:44.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.503" endtime="20201022 13:54:44.504"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.189" endtime="20201022 13:54:44.505"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.187" endtime="20201022 13:54:44.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:54:44.509" level="INFO">${FILTERED} = [{'diff': 0.09940859700000004}, {'diff': 0.09995170799999997}, {'diff': 0.099236306}, {'diff': 0.09959309699999996}, {'diff': 0.09959158300000015}, {'diff': 0.09958422200000006}, {'diff': 0.0995999719...</msg>
<status status="PASS" starttime="20201022 13:54:44.506" endtime="20201022 13:54:44.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:44.515" level="INFO">${RESULT} = {'diff': [0.09940859700000004, 0.09995170799999997, 0.099236306, 0.09959309699999996, 0.09959158300000015, 0.09958422200000006, 0.09959997199999981, 0.09959548600000012, 0.09960720800000011, 0.0995845...</msg>
<status status="PASS" starttime="20201022 13:54:44.510" endtime="20201022 13:54:44.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.519" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:54:44.518" endtime="20201022 13:54:44.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.521" level="INFO">VALUE: [0.09940859700000004, 0.09995170799999997, 0.099236306, 0.09959309699999996, 0.09959158300000015, 0.09958422200000006, 0.09959997199999981, 0.09959548600000012, 0.09960720800000011, 0.09958451300000015, 0.0996048060000001, 0.09960004099999997, 0.09958356899999998, 0.09959529200000006, 0.09960015200000005, 0.09958866600000027, 0.09959973600000005, 0.09958819499999993, 0.09960020800000002, 0.09958923599999991, 0.09958297200000032, 0.0995838619999998, 0.09958758299999992, 0.09958265300000013, 0.09957837500000011, 0.0995790969999999, 0.09958408299999988, 0.0995716390000001, 0.099582222, 0.09958001399999983, 0.09958756899999965, 0.09957027799999985, 0.09957400000000005, 0.09959008299999983, 0.0996007919999995, 0.09959712499999984, 0.09959161100000014, 0.09958306999999955, 0.09958551400000015, 0.09958795899999995, 0.0995850969999994, 0.09958344500000038, 0.09958644499999991, 0.09959084699999998, 0.09959012499999975, 0.09959497299999942, 0.09959986100000062, 0.09960366699999934, 0.09958513800000013, 0.09960140299999942]</msg>
<status status="PASS" starttime="20201022 13:54:44.520" endtime="20201022 13:54:44.522"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.516" endtime="20201022 13:54:44.522"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:38.614" endtime="20201022 13:54:44.523"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:38.546" endtime="20201022 13:54:44.523" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:44.530" endtime="20201022 13:54:44.550"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.528" endtime="20201022 13:54:44.550"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.564" endtime="20201022 13:54:44.576"></status>
</kw>
<msg timestamp="20201022 13:54:44.576" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:44.562" endtime="20201022 13:54:44.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:44.577" endtime="20201022 13:54:44.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:44.583" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:44.580" endtime="20201022 13:54:44.583"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:44.559" endtime="20201022 13:54:44.584"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:44.556" endtime="20201022 13:54:44.584"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.555" endtime="20201022 13:54:44.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:44.588" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:44.588" endtime="20201022 13:54:44.589"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.585" endtime="20201022 13:54:44.589"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.554" endtime="20201022 13:54:44.589"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.554" endtime="20201022 13:54:44.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.590" endtime="20201022 13:54:44.592"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.552" endtime="20201022 13:54:44.592"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.551" endtime="20201022 13:54:44.592"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.527" endtime="20201022 13:54:44.593"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:44.601" endtime="20201022 13:54:50.166"></status>
</kw>
<msg timestamp="20201022 13:54:50.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '16428'}, {'interval': '22856'}, {'interval': '29284'}, {'interval': '35712'},...</msg>
<status status="PASS" starttime="20201022 13:54:44.599" endtime="20201022 13:54:50.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.176" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '16428'}, {'interval': '22856'}, {'interval': '29284'}, {'interval': '35712'},...</msg>
<status status="PASS" starttime="20201022 13:54:50.171" endtime="20201022 13:54:50.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.180" endtime="20201022 13:54:50.185"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.597" endtime="20201022 13:54:50.188"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.595" endtime="20201022 13:54:50.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:50.194" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10000, 16428, 22856, 29284, 35712, 42140, 48568, 54996, 61424, 67852, 74280, 80708, 87136, 93564, 99992]}</msg>
<status status="PASS" starttime="20201022 13:54:50.190" endtime="20201022 13:54:50.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:54:50.202" level="INFO">${intervals} = [10000, 16428, 22856, 29284, 35712, 42140, 48568, 54996, 61424, 67852, 74280, 80708, 87136, 93564, 99992]</msg>
<status status="PASS" starttime="20201022 13:54:50.196" endtime="20201022 13:54:50.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.208" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:54:50.206" endtime="20201022 13:54:50.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.212" level="INFO">VALUE: [10000, 16428, 22856, 29284, 35712, 42140, 48568, 54996, 61424, 67852, 74280, 80708, 87136, 93564, 99992]</msg>
<status status="PASS" starttime="20201022 13:54:50.210" endtime="20201022 13:54:50.213"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.203" endtime="20201022 13:54:50.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.225" endtime="20201022 13:54:50.526"></status>
</kw>
<msg timestamp="20201022 13:54:50.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.564776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.664241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:50.222" endtime="20201022 13:54:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.564776125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.664241056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:50.530" endtime="20201022 13:54:50.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.538" endtime="20201022 13:54:50.540"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.218" endtime="20201022 13:54:50.540"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.215" endtime="20201022 13:54:50.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:54:50.544" level="INFO">${FILTERED} = [{'diff': 0.09946493100000009}, {'diff': 0.099461264}, {'diff': 0.09981504100000005}, {'diff': 0.09937065300000003}, {'diff': 0.09960231900000005}, {'diff': 0.09959409699999999}, {'diff': 0.0995861109...</msg>
<status status="PASS" starttime="20201022 13:54:50.541" endtime="20201022 13:54:50.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:50.548" level="INFO">${RESULT} = {'diff': [0.09946493100000009, 0.099461264, 0.09981504100000005, 0.09937065300000003, 0.09960231900000005, 0.09959409699999999, 0.09958611099999981, 0.09959723599999992, 0.09959202700000014, 0.0996001...</msg>
<status status="PASS" starttime="20201022 13:54:50.545" endtime="20201022 13:54:50.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.552" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:54:50.551" endtime="20201022 13:54:50.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.555" level="INFO">VALUE: [0.09946493100000009, 0.099461264, 0.09981504100000005, 0.09937065300000003, 0.09960231900000005, 0.09959409699999999, 0.09958611099999981, 0.09959723599999992, 0.09959202700000014, 0.09960013900000009, 0.09959702799999981, 0.09960236099999986, 0.09958455500000007, 0.09959658299999985, 0.09960079199999972, 0.09959305600000024, 0.09959733299999973, 0.09959038900000028, 0.09958276399999999, 0.09958633299999997, 0.09968543099999971, 0.09949030500000022, 0.09958488899999995, 0.09957754099999994, 0.09958262499999959, 0.0995841529999999, 0.09959638900000023, 0.09960113900000023, 0.09959281899999972, 0.0995965550000002, 0.09959290300000001, 0.09958218100000016, 0.09958951399999982, 0.09960668100000003, 0.09960184700000019, 0.09959958299999983, 0.09958567999999968, 0.09957894399999923, 0.09959037500000001, 0.09959073599999968, 0.0995815130000004, 0.09959011100000037, 0.09958584699999928, 0.09959962500000064, 0.09968505500000013, 0.09949059699999996, 0.09959573599999949, 0.09957877800000059, 0.09958013899999951, 0.09958774999999953]</msg>
<status status="PASS" starttime="20201022 13:54:50.553" endtime="20201022 13:54:50.555"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.549" endtime="20201022 13:54:50.556"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:44.593" endtime="20201022 13:54:50.556"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:44.525" endtime="20201022 13:54:50.557" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:50.563" endtime="20201022 13:54:50.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.562" endtime="20201022 13:54:50.583"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.597" endtime="20201022 13:54:50.609"></status>
</kw>
<msg timestamp="20201022 13:54:50.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:50.596" endtime="20201022 13:54:50.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:50.611" endtime="20201022 13:54:50.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:50.616" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:50.614" endtime="20201022 13:54:50.616"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:50.593" endtime="20201022 13:54:50.617"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:50.590" endtime="20201022 13:54:50.617"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.588" endtime="20201022 13:54:50.618"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:50.622" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:50.621" endtime="20201022 13:54:50.622"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.619" endtime="20201022 13:54:50.622"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.588" endtime="20201022 13:54:50.622"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.587" endtime="20201022 13:54:50.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.623" endtime="20201022 13:54:50.625"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.585" endtime="20201022 13:54:50.625"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.584" endtime="20201022 13:54:50.626"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.560" endtime="20201022 13:54:50.626"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:50.634" endtime="20201022 13:54:56.196"></status>
</kw>
<msg timestamp="20201022 13:54:56.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '14736'}, {'interval': '19472'}, {'interval': '24208'}, {'interval': '28944'},...</msg>
<status status="PASS" starttime="20201022 13:54:50.633" endtime="20201022 13:54:56.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '14736'}, {'interval': '19472'}, {'interval': '24208'}, {'interval': '28944'},...</msg>
<status status="PASS" starttime="20201022 13:54:56.199" endtime="20201022 13:54:56.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.205" endtime="20201022 13:54:56.208"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.630" endtime="20201022 13:54:56.210"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.628" endtime="20201022 13:54:56.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:56.217" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10000, 14736, 19472, 24208, 28944, 33680, 38416, 43152, 47888, 52624, 57360, 62096, 66832, 71568, 76304, 81040, 85776, 90512, 95248, 99984]}</msg>
<status status="PASS" starttime="20201022 13:54:56.212" endtime="20201022 13:54:56.217"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:54:56.228" level="INFO">${intervals} = [10000, 14736, 19472, 24208, 28944, 33680, 38416, 43152, 47888, 52624, 57360, 62096, 66832, 71568, 76304, 81040, 85776, 90512, 95248, 99984]</msg>
<status status="PASS" starttime="20201022 13:54:56.219" endtime="20201022 13:54:56.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.238" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:54:56.233" endtime="20201022 13:54:56.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.242" level="INFO">VALUE: [10000, 14736, 19472, 24208, 28944, 33680, 38416, 43152, 47888, 52624, 57360, 62096, 66832, 71568, 76304, 81040, 85776, 90512, 95248, 99984]</msg>
<status status="PASS" starttime="20201022 13:54:56.240" endtime="20201022 13:54:56.243"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.229" endtime="20201022 13:54:56.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.254" endtime="20201022 13:54:56.552"></status>
</kw>
<msg timestamp="20201022 13:54:56.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.566564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.666179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:56.253" endtime="20201022 13:54:56.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.566564306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.666179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:54:56.556" endtime="20201022 13:54:56.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.564" endtime="20201022 13:54:56.566"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.249" endtime="20201022 13:54:56.567"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.245" endtime="20201022 13:54:56.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:54:56.571" level="INFO">${FILTERED} = [{'diff': 0.09961502700000002}, {'diff': 0.09961087499999999}, {'diff': 0.09943716700000005}, {'diff': 0.0994315}, {'diff': 0.09982402800000001}, {'diff': 0.09935756899999992}, {'diff': 0.099592431000...</msg>
<status status="PASS" starttime="20201022 13:54:56.568" endtime="20201022 13:54:56.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:54:56.575" level="INFO">${RESULT} = {'diff': [0.09961502700000002, 0.09961087499999999, 0.09943716700000005, 0.0994315, 0.09982402800000001, 0.09935756899999992, 0.09959243100000004, 0.09959618000000003, 0.099601944, 0.09959069500000006...</msg>
<status status="PASS" starttime="20201022 13:54:56.572" endtime="20201022 13:54:56.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.579" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:54:56.578" endtime="20201022 13:54:56.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.582" level="INFO">VALUE: [0.09961502700000002, 0.09961087499999999, 0.09943716700000005, 0.0994315, 0.09982402800000001, 0.09935756899999992, 0.09959243100000004, 0.09959618000000003, 0.099601944, 0.09959069500000006, 0.09959648600000004, 0.09958258300000011, 0.09958897299999991, 0.09957370899999995, 0.09961100000000012, 0.09958786099999983, 0.09958973599999998, 0.09971113900000006, 0.09960512500000007, 0.09949412499999966, 0.09953544400000025, 0.09957923599999985, 0.09958523699999988, 0.09957926400000039, 0.0995902769999999, 0.09959586100000006, 0.09958822200000039, 0.09958691699999989, 0.099585861, 0.09957666700000001, 0.09958919399999999, 0.09958370799999994, 0.09959080500000006, 0.09960284699999988, 0.09965715299999989, 0.09951315300000019, 0.09958059699999922, 0.09959223600000033, 0.09958411100000042, 0.09959633400000012, 0.09959387500000005, 0.09959132000000004, 0.09959604099999986, 0.09958411199999961, 0.09958827699999961, 0.09957955599999924, 0.0995820700000003, 0.09959661099999995, 0.09958756899999965, 0.0995885000000003]</msg>
<status status="PASS" starttime="20201022 13:54:56.580" endtime="20201022 13:54:56.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.576" endtime="20201022 13:54:56.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:50.627" endtime="20201022 13:54:56.584"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:50.558" endtime="20201022 13:54:56.584" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:54:56.591" endtime="20201022 13:54:56.611"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.589" endtime="20201022 13:54:56.612"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.632" endtime="20201022 13:54:56.644"></status>
</kw>
<msg timestamp="20201022 13:54:56.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:56.630" endtime="20201022 13:54:56.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.647" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:54:56.646" endtime="20201022 13:54:56.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:54:56.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:54:56.648" endtime="20201022 13:54:56.651"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:56.627" endtime="20201022 13:54:56.652"></status>
</kw>
<status status="FAIL" starttime="20201022 13:54:56.624" endtime="20201022 13:54:56.652"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.621" endtime="20201022 13:54:56.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:54:56.656" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:54:56.655" endtime="20201022 13:54:56.657"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.653" endtime="20201022 13:54:56.657"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.620" endtime="20201022 13:54:56.657"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.619" endtime="20201022 13:54:56.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.658" endtime="20201022 13:54:56.659"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.616" endtime="20201022 13:54:56.660"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.612" endtime="20201022 13:54:56.660"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.588" endtime="20201022 13:54:56.661"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:54:56.670" endtime="20201022 13:55:02.259"></status>
</kw>
<msg timestamp="20201022 13:55:02.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '13750'}, {'interval': '17500'}, {'interval': '21250'}, {'interval': '25000'},...</msg>
<status status="PASS" starttime="20201022 13:54:56.667" endtime="20201022 13:55:02.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'focus': '100000'}, {'interval': '10000'}, {'interval': '13750'}, {'interval': '17500'}, {'interval': '21250'}, {'interval': '25000'},...</msg>
<status status="PASS" starttime="20201022 13:55:02.263" endtime="20201022 13:55:02.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:02.269" endtime="20201022 13:55:02.272"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.665" endtime="20201022 13:55:02.274"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.663" endtime="20201022 13:55:02.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:02.281" level="INFO">${RESULT} = {'focus': [100000], 'interval': [10000, 13750, 17500, 21250, 25000, 28750, 32500, 36250, 40000, 43750, 47500, 51250, 55000, 58750, 62500, 66250, 70000, 73750, 77500, 81250, 85000, 88750, 92500, 96250,...</msg>
<status status="PASS" starttime="20201022 13:55:02.276" endtime="20201022 13:55:02.282"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${intervals}</var>
</assign>
<msg timestamp="20201022 13:55:02.291" level="INFO">${intervals} = [10000, 13750, 17500, 21250, 25000, 28750, 32500, 36250, 40000, 43750, 47500, 51250, 55000, 58750, 62500, 66250, 70000, 73750, 77500, 81250, 85000, 88750, 92500, 96250, 100000]</msg>
<status status="PASS" starttime="20201022 13:55:02.283" endtime="20201022 13:55:02.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${intervals}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.299" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201022 13:55:02.297" endtime="20201022 13:55:02.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.303" level="INFO">VALUE: [10000, 13750, 17500, 21250, 25000, 28750, 32500, 36250, 40000, 43750, 47500, 51250, 55000, 58750, 62500, 66250, 70000, 73750, 77500, 81250, 85000, 88750, 92500, 96250, 100000]</msg>
<status status="PASS" starttime="20201022 13:55:02.301" endtime="20201022 13:55:02.304"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.293" endtime="20201022 13:55:02.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:02.315" endtime="20201022 13:55:02.611"></status>
</kw>
<msg timestamp="20201022 13:55:02.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.576600028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.676238694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:02.314" endtime="20201022 13:55:02.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.576600028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.676238694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:02.615" endtime="20201022 13:55:02.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:02.632" endtime="20201022 13:55:02.634"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.310" endtime="20201022 13:55:02.634"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.306" endtime="20201022 13:55:02.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201022 13:55:02.639" level="INFO">${FILTERED} = [{'diff': 0.09963866600000004}, {'diff': 0.09942084699999998}, {'diff': 0.09937863899999999}, {'diff': 0.09952736200000001}, {'diff': 0.09963509699999995}, {'diff': 0.09953962500000002}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201022 13:55:02.636" endtime="20201022 13:55:02.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:02.644" level="INFO">${RESULT} = {'diff': [0.09963866600000004, 0.09942084699999998, 0.09937863899999999, 0.09952736200000001, 0.09963509699999995, 0.09953962500000002, 0.09976993099999998, 0.09941986099999989, 0.0995886800000001, 0....</msg>
<status status="PASS" starttime="20201022 13:55:02.640" endtime="20201022 13:55:02.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.648" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201022 13:55:02.647" endtime="20201022 13:55:02.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.650" level="INFO">VALUE: [0.09963866600000004, 0.09942084699999998, 0.09937863899999999, 0.09952736200000001, 0.09963509699999995, 0.09953962500000002, 0.09976993099999998, 0.09941986099999989, 0.0995886800000001, 0.09957986100000005, 0.099578583, 0.09958934800000008, 0.0995789589999998, 0.099576208, 0.09957629099999998, 0.09958063799999994, 0.099578583, 0.09963818099999999, 0.09951158299999996, 0.09958723600000008, 0.09960852800000009, 0.09955668100000015, 0.09956838900000031, 0.09959394399999999, 0.09957988900000014, 0.099594556, 0.09965470799999965, 0.0995337919999999, 0.09958413900000007, 0.09959372199999983, 0.09958331899999973, 0.09943683400000003, 0.09959509699999991, 0.09959231999999973, 0.09958793099999985, 0.09968352799999991, 0.09952802799999994, 0.09958798599999952, 0.09959098599999994, 0.09958974999999981, 0.09957876399999943, 0.09959540299999947, 0.0995958340000005, 0.09959541599999966, 0.09973516600000032, 0.09946913899999998, 0.09968992999999937, 0.09950324999999971, 0.09960994500000009, 0.09960387500000056]</msg>
<status status="PASS" starttime="20201022 13:55:02.649" endtime="20201022 13:55:02.651"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.645" endtime="20201022 13:55:02.651"></status>
</kw>
<status status="PASS" starttime="20201022 13:54:56.661" endtime="20201022 13:55:02.652"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201022 13:54:56.586" endtime="20201022 13:55:02.652" critical="yes"></status>
</test>
<status status="PASS" starttime="20201022 13:54:25.074" endtime="20201022 13:55:02.659"></status>
</suite>
<suite id="s1-s5" name="Drift" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/04__drift.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201022 13:55:02.724" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201022 13:55:02.732" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201022 13:55:03.928" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201022 13:55:02.723" endtime="20201022 13:55:03.929"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201022 13:55:03.931" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201022 13:55:03.930" endtime="20201022 13:55:03.932"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.721" endtime="20201022 13:55:03.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:03.934" endtime="20201022 13:55:04.124"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:03.933" endtime="20201022 13:55:04.125"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.144" endtime="20201022 13:55:04.156"></status>
</kw>
<msg timestamp="20201022 13:55:04.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:04.142" endtime="20201022 13:55:04.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:04.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:04.158" endtime="20201022 13:55:04.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:55:04.163" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:55:04.161" endtime="20201022 13:55:04.164"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:04.137" endtime="20201022 13:55:04.164"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:04.134" endtime="20201022 13:55:04.165"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.131" endtime="20201022 13:55:04.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:55:04.169" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:55:04.168" endtime="20201022 13:55:04.169"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.166" endtime="20201022 13:55:04.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.130" endtime="20201022 13:55:04.170"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.129" endtime="20201022 13:55:04.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.171" endtime="20201022 13:55:04.172"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.128" endtime="20201022 13:55:04.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.173" endtime="20201022 13:55:04.175"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.126" endtime="20201022 13:55:04.175"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:02.720" endtime="20201022 13:55:04.176"></status>
</kw>
<test id="s1-s5-t1" name="Measure Drift Template">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:04.183" endtime="20201022 13:55:04.202"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.180" endtime="20201022 13:55:04.203"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.216" endtime="20201022 13:55:04.228"></status>
</kw>
<msg timestamp="20201022 13:55:04.229" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:04.214" endtime="20201022 13:55:04.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:04.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:04.230" endtime="20201022 13:55:04.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:55:04.234" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:55:04.232" endtime="20201022 13:55:04.234"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:04.212" endtime="20201022 13:55:04.235"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:04.209" endtime="20201022 13:55:04.236"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.208" endtime="20201022 13:55:04.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:55:04.240" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:55:04.239" endtime="20201022 13:55:04.240"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.237" endtime="20201022 13:55:04.240"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.207" endtime="20201022 13:55:04.240"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.207" endtime="20201022 13:55:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.241" endtime="20201022 13:55:04.243"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.205" endtime="20201022 13:55:04.243"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.204" endtime="20201022 13:55:04.244"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.179" endtime="20201022 13:55:04.244"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>1000000</arg>
</arguments>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:04.253" endtime="20201022 13:55:05.266"></status>
</kw>
<msg timestamp="20201022 13:55:05.267" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:04.252" endtime="20201022 13:55:05.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.272" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:05.269" endtime="20201022 13:55:05.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:05.274" endtime="20201022 13:55:05.279"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.249" endtime="20201022 13:55:05.281"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.247" endtime="20201022 13:55:05.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.290" level="INFO">NAME: dut-result-1000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:55:05.288" endtime="20201022 13:55:05.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.295" level="INFO">VALUE: ['1.000104']</msg>
<status status="PASS" starttime="20201022 13:55:05.293" endtime="20201022 13:55:05.295"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.283" endtime="20201022 13:55:05.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:05.310" endtime="20201022 13:55:05.575"></status>
</kw>
<msg timestamp="20201022 13:55:05.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060903306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.057281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:05.307" endtime="20201022 13:55:05.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060903306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.057281097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:05.576" endtime="20201022 13:55:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:05.580" endtime="20201022 13:55:05.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.301" endtime="20201022 13:55:05.583"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.298" endtime="20201022 13:55:05.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:05.587" level="INFO">${PHILIP_RES} = [{'diff': 0.9963777909999999}]</msg>
<status status="PASS" starttime="20201022 13:55:05.585" endtime="20201022 13:55:05.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:05.589" level="INFO">${RESULT} = {'diff': [0.9963777909999999]}</msg>
<status status="PASS" starttime="20201022 13:55:05.588" endtime="20201022 13:55:05.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.593" level="INFO">NAME: philip-result-1000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:55:05.592" endtime="20201022 13:55:05.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:05.595" level="INFO">VALUE: [0.9963777909999999]</msg>
<status status="PASS" starttime="20201022 13:55:05.594" endtime="20201022 13:55:05.596"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.590" endtime="20201022 13:55:05.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:05.598" endtime="20201022 13:55:05.617"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.597" endtime="20201022 13:55:05.618"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.247" endtime="20201022 13:55:05.618"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:05.626" endtime="20201022 13:55:06.633"></status>
</kw>
<msg timestamp="20201022 13:55:06.634" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:05.624" endtime="20201022 13:55:06.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.636" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:06.635" endtime="20201022 13:55:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:06.637" endtime="20201022 13:55:06.639"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.621" endtime="20201022 13:55:06.639"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.619" endtime="20201022 13:55:06.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.644" level="INFO">NAME: dut-result-1000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:55:06.643" endtime="20201022 13:55:06.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.646" level="INFO">VALUE: ['1.000104']</msg>
<status status="PASS" starttime="20201022 13:55:06.645" endtime="20201022 13:55:06.647"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.641" endtime="20201022 13:55:06.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:06.655" endtime="20201022 13:55:06.910"></status>
</kw>
<msg timestamp="20201022 13:55:06.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.014470319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:55:06.653" endtime="20201022 13:55:06.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.014470319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 13:55:06.913" endtime="20201022 13:55:06.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:06.918" endtime="20201022 13:55:06.922"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.649" endtime="20201022 13:55:06.923"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.648" endtime="20201022 13:55:06.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:06.929" level="INFO">${PHILIP_RES} = [{'diff': 0.9962818189999999}]</msg>
<status status="PASS" starttime="20201022 13:55:06.925" endtime="20201022 13:55:06.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:06.934" level="INFO">${RESULT} = {'diff': [0.9962818189999999]}</msg>
<status status="PASS" starttime="20201022 13:55:06.931" endtime="20201022 13:55:06.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.943" level="INFO">NAME: philip-result-1000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:55:06.941" endtime="20201022 13:55:06.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:06.947" level="INFO">VALUE: [0.9962818189999999]</msg>
<status status="PASS" starttime="20201022 13:55:06.945" endtime="20201022 13:55:06.948"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.935" endtime="20201022 13:55:06.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:06.953" endtime="20201022 13:55:06.975"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.950" endtime="20201022 13:55:06.976"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:05.618" endtime="20201022 13:55:06.977"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:06.992" endtime="20201022 13:55:08.005"></status>
</kw>
<msg timestamp="20201022 13:55:08.006" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:06.988" endtime="20201022 13:55:08.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.013" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:08.009" endtime="20201022 13:55:08.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:08.016" endtime="20201022 13:55:08.021"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.983" endtime="20201022 13:55:08.023"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.979" endtime="20201022 13:55:08.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.036" level="INFO">NAME: dut-result-1000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:55:08.033" endtime="20201022 13:55:08.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.041" level="INFO">VALUE: ['1.000104']</msg>
<status status="PASS" starttime="20201022 13:55:08.039" endtime="20201022 13:55:08.042"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.026" endtime="20201022 13:55:08.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:08.057" endtime="20201022 13:55:08.314"></status>
</kw>
<msg timestamp="20201022 13:55:08.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028449264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.024713625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:08.054" endtime="20201022 13:55:08.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028449264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.024713625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:08.315" endtime="20201022 13:55:08.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:08.318" endtime="20201022 13:55:08.319"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.048" endtime="20201022 13:55:08.320"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.045" endtime="20201022 13:55:08.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:08.323" level="INFO">${PHILIP_RES} = [{'diff': 0.9962643609999999}]</msg>
<status status="PASS" starttime="20201022 13:55:08.321" endtime="20201022 13:55:08.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:08.326" level="INFO">${RESULT} = {'diff': [0.9962643609999999]}</msg>
<status status="PASS" starttime="20201022 13:55:08.324" endtime="20201022 13:55:08.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.331" level="INFO">NAME: philip-result-1000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:55:08.330" endtime="20201022 13:55:08.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:08.333" level="INFO">VALUE: [0.9962643609999999]</msg>
<status status="PASS" starttime="20201022 13:55:08.332" endtime="20201022 13:55:08.333"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.327" endtime="20201022 13:55:08.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:08.336" endtime="20201022 13:55:08.355"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.334" endtime="20201022 13:55:08.356"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:06.977" endtime="20201022 13:55:08.356"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:08.363" endtime="20201022 13:55:09.375"></status>
</kw>
<msg timestamp="20201022 13:55:09.377" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:08.361" endtime="20201022 13:55:09.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.382" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:09.379" endtime="20201022 13:55:09.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:09.384" endtime="20201022 13:55:09.388"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.359" endtime="20201022 13:55:09.389"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.357" endtime="20201022 13:55:09.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.398" level="INFO">NAME: dut-result-1000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:55:09.396" endtime="20201022 13:55:09.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.403" level="INFO">VALUE: ['1.000104']</msg>
<status status="PASS" starttime="20201022 13:55:09.401" endtime="20201022 13:55:09.403"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.391" endtime="20201022 13:55:09.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:09.418" endtime="20201022 13:55:09.675"></status>
</kw>
<msg timestamp="20201022 13:55:09.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.013784819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:09.415" endtime="20201022 13:55:09.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.013784819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:09.677" endtime="20201022 13:55:09.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:09.679" endtime="20201022 13:55:09.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.410" endtime="20201022 13:55:09.682"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.406" endtime="20201022 13:55:09.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:09.685" level="INFO">${PHILIP_RES} = [{'diff': 0.996240652}]</msg>
<status status="PASS" starttime="20201022 13:55:09.683" endtime="20201022 13:55:09.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:09.687" level="INFO">${RESULT} = {'diff': [0.996240652]}</msg>
<status status="PASS" starttime="20201022 13:55:09.686" endtime="20201022 13:55:09.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.691" level="INFO">NAME: philip-result-1000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:55:09.690" endtime="20201022 13:55:09.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:09.693" level="INFO">VALUE: [0.996240652]</msg>
<status status="PASS" starttime="20201022 13:55:09.692" endtime="20201022 13:55:09.694"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.688" endtime="20201022 13:55:09.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:09.696" endtime="20201022 13:55:09.715"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.695" endtime="20201022 13:55:09.716"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:08.356" endtime="20201022 13:55:09.716"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:09.724" endtime="20201022 13:55:10.737"></status>
</kw>
<msg timestamp="20201022 13:55:10.738" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:09.723" endtime="20201022 13:55:10.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:10.744" level="INFO">${RESULT} = {'cmd': 'drift: 1000000 us', 'msg': ['drift 1000000\r\n'], 'data': ['1.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:10.740" endtime="20201022 13:55:10.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:10.746" endtime="20201022 13:55:10.749"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.720" endtime="20201022 13:55:10.750"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.717" endtime="20201022 13:55:10.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:10.760" level="INFO">NAME: dut-result-1000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:55:10.758" endtime="20201022 13:55:10.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:10.764" level="INFO">VALUE: ['1.000104']</msg>
<status status="PASS" starttime="20201022 13:55:10.762" endtime="20201022 13:55:10.765"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:10.753" endtime="20201022 13:55:10.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:10.779" endtime="20201022 13:55:11.029"></status>
</kw>
<msg timestamp="20201022 13:55:11.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.014964875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:10.777" endtime="20201022 13:55:11.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:11.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.014964875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 13:55:11.030" endtime="20201022 13:55:11.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:11.033" endtime="20201022 13:55:11.035"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:10.771" endtime="20201022 13:55:11.035"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:10.767" endtime="20201022 13:55:11.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:11.038" level="INFO">${PHILIP_RES} = [{'diff': 0.996268097}]</msg>
<status status="PASS" starttime="20201022 13:55:11.036" endtime="20201022 13:55:11.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:11.040" level="INFO">${RESULT} = {'diff': [0.996268097]}</msg>
<status status="PASS" starttime="20201022 13:55:11.039" endtime="20201022 13:55:11.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:11.045" level="INFO">NAME: philip-result-1000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:55:11.044" endtime="20201022 13:55:11.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:11.047" level="INFO">VALUE: [0.996268097]</msg>
<status status="PASS" starttime="20201022 13:55:11.046" endtime="20201022 13:55:11.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.041" endtime="20201022 13:55:11.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:11.050" endtime="20201022 13:55:11.069"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.048" endtime="20201022 13:55:11.070"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:09.717" endtime="20201022 13:55:11.070"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.246" endtime="20201022 13:55:11.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:11.074" endtime="20201022 13:55:11.093"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.072" endtime="20201022 13:55:11.094"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:11.109" endtime="20201022 13:55:11.120"></status>
</kw>
<msg timestamp="20201022 13:55:11.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:11.107" endtime="20201022 13:55:11.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:11.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:11.122" endtime="20201022 13:55:11.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:55:11.127" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:55:11.124" endtime="20201022 13:55:11.127"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:11.104" endtime="20201022 13:55:11.128"></status>
</kw>
<status status="FAIL" starttime="20201022 13:55:11.102" endtime="20201022 13:55:11.128"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.100" endtime="20201022 13:55:11.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:55:11.132" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:55:11.132" endtime="20201022 13:55:11.133"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.129" endtime="20201022 13:55:11.133"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.099" endtime="20201022 13:55:11.133"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.099" endtime="20201022 13:55:11.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:11.134" endtime="20201022 13:55:11.136"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.096" endtime="20201022 13:55:11.136"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.094" endtime="20201022 13:55:11.137"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.071" endtime="20201022 13:55:11.137"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:04.245" endtime="20201022 13:55:11.137"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>15000000</arg>
</arguments>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:11.146" endtime="20201022 13:55:26.103"></status>
</kw>
<msg timestamp="20201022 13:55:26.104" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:11.145" endtime="20201022 13:55:26.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.109" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:26.106" endtime="20201022 13:55:26.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:26.112" endtime="20201022 13:55:26.115"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.142" endtime="20201022 13:55:26.116"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.140" endtime="20201022 13:55:26.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.126" level="INFO">NAME: dut-result-15000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:55:26.124" endtime="20201022 13:55:26.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.130" level="INFO">VALUE: ['15.000104']</msg>
<status status="PASS" starttime="20201022 13:55:26.128" endtime="20201022 13:55:26.131"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.118" endtime="20201022 13:55:26.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:26.145" endtime="20201022 13:55:26.405"></status>
</kw>
<msg timestamp="20201022 13:55:26.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062732278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 15.004856042, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:26.142" endtime="20201022 13:55:26.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062732278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 15.004856042, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:26.413" endtime="20201022 13:55:26.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:26.416" endtime="20201022 13:55:26.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.137" endtime="20201022 13:55:26.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.133" endtime="20201022 13:55:26.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:26.422" level="INFO">${PHILIP_RES} = [{'diff': 14.942123764}]</msg>
<status status="PASS" starttime="20201022 13:55:26.420" endtime="20201022 13:55:26.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:26.424" level="INFO">${RESULT} = {'diff': [14.942123764]}</msg>
<status status="PASS" starttime="20201022 13:55:26.423" endtime="20201022 13:55:26.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.428" level="INFO">NAME: philip-result-15000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:55:26.427" endtime="20201022 13:55:26.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:26.430" level="INFO">VALUE: [14.942123764]</msg>
<status status="PASS" starttime="20201022 13:55:26.429" endtime="20201022 13:55:26.431"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.425" endtime="20201022 13:55:26.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:26.433" endtime="20201022 13:55:26.452"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.432" endtime="20201022 13:55:26.453"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.139" endtime="20201022 13:55:26.453"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:26.460" endtime="20201022 13:55:41.418"></status>
</kw>
<msg timestamp="20201022 13:55:41.419" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:26.459" endtime="20201022 13:55:41.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.424" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:41.421" endtime="20201022 13:55:41.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:41.427" endtime="20201022 13:55:41.430"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.456" endtime="20201022 13:55:41.431"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.454" endtime="20201022 13:55:41.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.441" level="INFO">NAME: dut-result-15000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:55:41.438" endtime="20201022 13:55:41.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.445" level="INFO">VALUE: ['15.000104']</msg>
<status status="PASS" starttime="20201022 13:55:41.443" endtime="20201022 13:55:41.446"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.433" endtime="20201022 13:55:41.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:41.460" endtime="20201022 13:55:41.725"></status>
</kw>
<msg timestamp="20201022 13:55:41.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960324264, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:41.457" endtime="20201022 13:55:41.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017679917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960324264, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:41.727" endtime="20201022 13:55:41.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:41.730" endtime="20201022 13:55:41.732"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.452" endtime="20201022 13:55:41.732"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.448" endtime="20201022 13:55:41.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:41.735" level="INFO">${PHILIP_RES} = [{'diff': 14.942644347}]</msg>
<status status="PASS" starttime="20201022 13:55:41.734" endtime="20201022 13:55:41.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:41.738" level="INFO">${RESULT} = {'diff': [14.942644347]}</msg>
<status status="PASS" starttime="20201022 13:55:41.736" endtime="20201022 13:55:41.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.742" level="INFO">NAME: philip-result-15000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:55:41.741" endtime="20201022 13:55:41.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:41.745" level="INFO">VALUE: [14.942644347]</msg>
<status status="PASS" starttime="20201022 13:55:41.743" endtime="20201022 13:55:41.746"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.738" endtime="20201022 13:55:41.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:41.748" endtime="20201022 13:55:41.768"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.747" endtime="20201022 13:55:41.768"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:26.454" endtime="20201022 13:55:41.768"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:41.775" endtime="20201022 13:55:56.734"></status>
</kw>
<msg timestamp="20201022 13:55:56.735" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:41.774" endtime="20201022 13:55:56.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:56.741" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:56.738" endtime="20201022 13:55:56.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:56.743" endtime="20201022 13:55:56.746"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.771" endtime="20201022 13:55:56.747"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.769" endtime="20201022 13:55:56.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:56.757" level="INFO">NAME: dut-result-15000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:55:56.755" endtime="20201022 13:55:56.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:56.761" level="INFO">VALUE: ['15.000105']</msg>
<status status="PASS" starttime="20201022 13:55:56.759" endtime="20201022 13:55:56.762"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:56.750" endtime="20201022 13:55:56.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:56.776" endtime="20201022 13:55:57.026"></status>
</kw>
<msg timestamp="20201022 13:55:57.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960113806, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:56.774" endtime="20201022 13:55:57.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:55:57.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960113806, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:55:57.027" endtime="20201022 13:55:57.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:57.030" endtime="20201022 13:55:57.031"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:56.768" endtime="20201022 13:55:57.032"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:56.764" endtime="20201022 13:55:57.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:55:57.035" level="INFO">${PHILIP_RES} = [{'diff': 14.942486889000001}]</msg>
<status status="PASS" starttime="20201022 13:55:57.033" endtime="20201022 13:55:57.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:55:57.038" level="INFO">${RESULT} = {'diff': [14.942486889000001]}</msg>
<status status="PASS" starttime="20201022 13:55:57.036" endtime="20201022 13:55:57.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:55:57.042" level="INFO">NAME: philip-result-15000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:55:57.041" endtime="20201022 13:55:57.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:55:57.044" level="INFO">VALUE: [14.942486889000001]</msg>
<status status="PASS" starttime="20201022 13:55:57.043" endtime="20201022 13:55:57.044"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:57.038" endtime="20201022 13:55:57.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:55:57.047" endtime="20201022 13:55:57.066"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:57.045" endtime="20201022 13:55:57.067"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:41.769" endtime="20201022 13:55:57.067"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:55:57.075" endtime="20201022 13:56:12.036"></status>
</kw>
<msg timestamp="20201022 13:56:12.037" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:55:57.074" endtime="20201022 13:56:12.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.042" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:12.039" endtime="20201022 13:56:12.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:12.044" endtime="20201022 13:56:12.047"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:57.070" endtime="20201022 13:56:12.049"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:57.068" endtime="20201022 13:56:12.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.058" level="INFO">NAME: dut-result-15000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:56:12.056" endtime="20201022 13:56:12.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.063" level="INFO">VALUE: ['15.000105']</msg>
<status status="PASS" starttime="20201022 13:56:12.061" endtime="20201022 13:56:12.063"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.051" endtime="20201022 13:56:12.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:12.078" endtime="20201022 13:56:12.340"></status>
</kw>
<msg timestamp="20201022 13:56:12.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018871486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.962968486, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:12.075" endtime="20201022 13:56:12.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018871486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.962968486, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:12.342" endtime="20201022 13:56:12.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:12.344" endtime="20201022 13:56:12.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.069" endtime="20201022 13:56:12.346"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.066" endtime="20201022 13:56:12.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:56:12.350" level="INFO">${PHILIP_RES} = [{'diff': 14.944097}]</msg>
<status status="PASS" starttime="20201022 13:56:12.348" endtime="20201022 13:56:12.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:56:12.352" level="INFO">${RESULT} = {'diff': [14.944097]}</msg>
<status status="PASS" starttime="20201022 13:56:12.351" endtime="20201022 13:56:12.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.357" level="INFO">NAME: philip-result-15000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:56:12.356" endtime="20201022 13:56:12.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:12.359" level="INFO">VALUE: [14.944097]</msg>
<status status="PASS" starttime="20201022 13:56:12.358" endtime="20201022 13:56:12.359"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.353" endtime="20201022 13:56:12.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:56:12.362" endtime="20201022 13:56:12.381"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.360" endtime="20201022 13:56:12.381"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:57.067" endtime="20201022 13:56:12.382"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:12.389" endtime="20201022 13:56:27.348"></status>
</kw>
<msg timestamp="20201022 13:56:27.349" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:12.387" endtime="20201022 13:56:27.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.354" level="INFO">${RESULT} = {'cmd': 'drift: 15000000 us', 'msg': ['drift 15000000\r\n'], 'data': ['15.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:27.352" endtime="20201022 13:56:27.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.357" endtime="20201022 13:56:27.360"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.385" endtime="20201022 13:56:27.361"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.383" endtime="20201022 13:56:27.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.371" level="INFO">NAME: dut-result-15000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:56:27.369" endtime="20201022 13:56:27.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.375" level="INFO">VALUE: ['15.000104']</msg>
<status status="PASS" starttime="20201022 13:56:27.373" endtime="20201022 13:56:27.376"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.363" endtime="20201022 13:56:27.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.390" endtime="20201022 13:56:27.639"></status>
</kw>
<msg timestamp="20201022 13:56:27.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960659764, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:27.388" endtime="20201022 13:56:27.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 14.960659764, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:27.641" endtime="20201022 13:56:27.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.643" endtime="20201022 13:56:27.645"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.384" endtime="20201022 13:56:27.645"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.378" endtime="20201022 13:56:27.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:56:27.648" level="INFO">${PHILIP_RES} = [{'diff': 14.943000458}]</msg>
<status status="PASS" starttime="20201022 13:56:27.646" endtime="20201022 13:56:27.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:56:27.651" level="INFO">${RESULT} = {'diff': [14.943000458]}</msg>
<status status="PASS" starttime="20201022 13:56:27.649" endtime="20201022 13:56:27.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.655" level="INFO">NAME: philip-result-15000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:56:27.654" endtime="20201022 13:56:27.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.657" level="INFO">VALUE: [14.943000458]</msg>
<status status="PASS" starttime="20201022 13:56:27.656" endtime="20201022 13:56:27.658"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.652" endtime="20201022 13:56:27.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:56:27.660" endtime="20201022 13:56:27.680"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.659" endtime="20201022 13:56:27.680"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:12.382" endtime="20201022 13:56:27.681"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.139" endtime="20201022 13:56:27.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:56:27.684" endtime="20201022 13:56:27.704"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.683" endtime="20201022 13:56:27.704"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.718" endtime="20201022 13:56:27.729"></status>
</kw>
<msg timestamp="20201022 13:56:27.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:27.716" endtime="20201022 13:56:27.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.732" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:27.731" endtime="20201022 13:56:27.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:56:27.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:56:27.733" endtime="20201022 13:56:27.737"></status>
</kw>
<status status="FAIL" starttime="20201022 13:56:27.713" endtime="20201022 13:56:27.737"></status>
</kw>
<status status="FAIL" starttime="20201022 13:56:27.711" endtime="20201022 13:56:27.738"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.710" endtime="20201022 13:56:27.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:56:27.742" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:56:27.741" endtime="20201022 13:56:27.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.739" endtime="20201022 13:56:27.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.709" endtime="20201022 13:56:27.743"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.708" endtime="20201022 13:56:27.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.744" endtime="20201022 13:56:27.746"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.707" endtime="20201022 13:56:27.746"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.705" endtime="20201022 13:56:27.747"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.682" endtime="20201022 13:56:27.747"></status>
</kw>
<status status="PASS" starttime="20201022 13:55:11.138" endtime="20201022 13:56:27.747"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>30000000</arg>
</arguments>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:27.756" endtime="20201022 13:56:57.654"></status>
</kw>
<msg timestamp="20201022 13:56:57.656" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:27.754" endtime="20201022 13:56:57.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.661" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:57.658" endtime="20201022 13:56:57.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:57.663" endtime="20201022 13:56:57.667"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.752" endtime="20201022 13:56:57.668"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.750" endtime="20201022 13:56:57.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.677" level="INFO">NAME: dut-result-30000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:56:57.675" endtime="20201022 13:56:57.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.682" level="INFO">VALUE: ['30.000104']</msg>
<status status="PASS" starttime="20201022 13:56:57.680" endtime="20201022 13:56:57.683"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.670" endtime="20201022 13:56:57.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:57.697" endtime="20201022 13:56:57.954"></status>
</kw>
<msg timestamp="20201022 13:56:57.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061936639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.946493583, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:57.694" endtime="20201022 13:56:57.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061936639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.946493583, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:56:57.956" endtime="20201022 13:56:57.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:57.958" endtime="20201022 13:56:57.960"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.689" endtime="20201022 13:56:57.961"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.685" endtime="20201022 13:56:57.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:56:57.964" level="INFO">${PHILIP_RES} = [{'diff': 29.884556944}]</msg>
<status status="PASS" starttime="20201022 13:56:57.962" endtime="20201022 13:56:57.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:56:57.966" level="INFO">${RESULT} = {'diff': [29.884556944]}</msg>
<status status="PASS" starttime="20201022 13:56:57.965" endtime="20201022 13:56:57.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.970" level="INFO">NAME: philip-result-30000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:56:57.969" endtime="20201022 13:56:57.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:56:57.972" level="INFO">VALUE: [29.884556944]</msg>
<status status="PASS" starttime="20201022 13:56:57.971" endtime="20201022 13:56:57.973"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.967" endtime="20201022 13:56:57.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:56:57.975" endtime="20201022 13:56:57.995"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.974" endtime="20201022 13:56:57.995"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.749" endtime="20201022 13:56:57.995"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:56:58.004" endtime="20201022 13:57:27.903"></status>
</kw>
<msg timestamp="20201022 13:57:27.904" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:56:58.002" endtime="20201022 13:57:27.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:57:27.910" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:57:27.907" endtime="20201022 13:57:27.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:27.913" endtime="20201022 13:57:27.916"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:58.000" endtime="20201022 13:57:27.917"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.996" endtime="20201022 13:57:27.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:57:27.927" level="INFO">NAME: dut-result-30000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:57:27.925" endtime="20201022 13:57:27.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:57:27.931" level="INFO">VALUE: ['30.000104']</msg>
<status status="PASS" starttime="20201022 13:57:27.929" endtime="20201022 13:57:27.932"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:27.920" endtime="20201022 13:57:27.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:27.947" endtime="20201022 13:57:28.204"></status>
</kw>
<msg timestamp="20201022 13:57:28.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905020056, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:57:27.943" endtime="20201022 13:57:28.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:57:28.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905020056, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:57:28.205" endtime="20201022 13:57:28.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:28.208" endtime="20201022 13:57:28.210"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:27.938" endtime="20201022 13:57:28.210"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:27.934" endtime="20201022 13:57:28.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:57:28.213" level="INFO">${PHILIP_RES} = [{'diff': 29.885798584}]</msg>
<status status="PASS" starttime="20201022 13:57:28.211" endtime="20201022 13:57:28.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:57:28.216" level="INFO">${RESULT} = {'diff': [29.885798584]}</msg>
<status status="PASS" starttime="20201022 13:57:28.214" endtime="20201022 13:57:28.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:57:28.220" level="INFO">NAME: philip-result-30000000-repeat-1</msg>
<status status="PASS" starttime="20201022 13:57:28.219" endtime="20201022 13:57:28.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:57:28.222" level="INFO">VALUE: [29.885798584]</msg>
<status status="PASS" starttime="20201022 13:57:28.221" endtime="20201022 13:57:28.222"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:28.216" endtime="20201022 13:57:28.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:57:28.225" endtime="20201022 13:57:28.244"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:28.223" endtime="20201022 13:57:28.245"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:57.996" endtime="20201022 13:57:28.245"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:28.252" endtime="20201022 13:57:58.152"></status>
</kw>
<msg timestamp="20201022 13:57:58.153" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:57:28.251" endtime="20201022 13:57:58.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.158" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:57:58.155" endtime="20201022 13:57:58.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:58.161" endtime="20201022 13:57:58.165"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:28.248" endtime="20201022 13:57:58.166"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:28.246" endtime="20201022 13:57:58.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.175" level="INFO">NAME: dut-result-30000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:57:58.173" endtime="20201022 13:57:58.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.180" level="INFO">VALUE: ['30.000105']</msg>
<status status="PASS" starttime="20201022 13:57:58.178" endtime="20201022 13:57:58.181"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.168" endtime="20201022 13:57:58.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:58.195" endtime="20201022 13:57:58.457"></status>
</kw>
<msg timestamp="20201022 13:57:58.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017758861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.903743778, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:57:58.192" endtime="20201022 13:57:58.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017758861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.903743778, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:57:58.458" endtime="20201022 13:57:58.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:58.461" endtime="20201022 13:57:58.463"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.186" endtime="20201022 13:57:58.463"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.183" endtime="20201022 13:57:58.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:57:58.466" level="INFO">${PHILIP_RES} = [{'diff': 29.885984917}]</msg>
<status status="PASS" starttime="20201022 13:57:58.464" endtime="20201022 13:57:58.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:57:58.468" level="INFO">${RESULT} = {'diff': [29.885984917]}</msg>
<status status="PASS" starttime="20201022 13:57:58.467" endtime="20201022 13:57:58.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.473" level="INFO">NAME: philip-result-30000000-repeat-2</msg>
<status status="PASS" starttime="20201022 13:57:58.472" endtime="20201022 13:57:58.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:57:58.475" level="INFO">VALUE: [29.885984917]</msg>
<status status="PASS" starttime="20201022 13:57:58.474" endtime="20201022 13:57:58.475"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.469" endtime="20201022 13:57:58.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:57:58.478" endtime="20201022 13:57:58.497"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.476" endtime="20201022 13:57:58.498"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:28.245" endtime="20201022 13:57:58.498"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:57:58.505" endtime="20201022 13:58:28.406"></status>
</kw>
<msg timestamp="20201022 13:58:28.407" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:57:58.503" endtime="20201022 13:58:28.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.413" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:28.410" endtime="20201022 13:58:28.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:28.415" endtime="20201022 13:58:28.418"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.501" endtime="20201022 13:58:28.419"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.499" endtime="20201022 13:58:28.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.435" level="INFO">NAME: dut-result-30000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:58:28.433" endtime="20201022 13:58:28.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.440" level="INFO">VALUE: ['30.000104']</msg>
<status status="PASS" starttime="20201022 13:58:28.438" endtime="20201022 13:58:28.441"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.428" endtime="20201022 13:58:28.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:28.458" endtime="20201022 13:58:28.713"></status>
</kw>
<msg timestamp="20201022 13:58:28.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905594806, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:58:28.454" endtime="20201022 13:58:28.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905594806, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:58:28.714" endtime="20201022 13:58:28.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:28.717" endtime="20201022 13:58:28.718"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.447" endtime="20201022 13:58:28.719"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.443" endtime="20201022 13:58:28.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:58:28.722" level="INFO">${PHILIP_RES} = [{'diff': 29.887909112}]</msg>
<status status="PASS" starttime="20201022 13:58:28.720" endtime="20201022 13:58:28.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:58:28.724" level="INFO">${RESULT} = {'diff': [29.887909112]}</msg>
<status status="PASS" starttime="20201022 13:58:28.723" endtime="20201022 13:58:28.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.729" level="INFO">NAME: philip-result-30000000-repeat-3</msg>
<status status="PASS" starttime="20201022 13:58:28.728" endtime="20201022 13:58:28.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:58:28.731" level="INFO">VALUE: [29.887909112]</msg>
<status status="PASS" starttime="20201022 13:58:28.730" endtime="20201022 13:58:28.731"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.725" endtime="20201022 13:58:28.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:58:28.734" endtime="20201022 13:58:28.753"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.732" endtime="20201022 13:58:28.754"></status>
</kw>
<status status="PASS" starttime="20201022 13:57:58.498" endtime="20201022 13:58:28.754"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:28.761" endtime="20201022 13:58:58.663"></status>
</kw>
<msg timestamp="20201022 13:58:58.664" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:28.759" endtime="20201022 13:58:58.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.669" level="INFO">${RESULT} = {'cmd': 'drift: 30000000 us', 'msg': ['drift 30000000\r\n'], 'data': ['30.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:58.666" endtime="20201022 13:58:58.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:58.671" endtime="20201022 13:58:58.674"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.757" endtime="20201022 13:58:58.675"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.755" endtime="20201022 13:58:58.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.686" level="INFO">NAME: dut-result-30000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:58:58.683" endtime="20201022 13:58:58.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.690" level="INFO">VALUE: ['30.000104']</msg>
<status status="PASS" starttime="20201022 13:58:58.688" endtime="20201022 13:58:58.691"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:58.678" endtime="20201022 13:58:58.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:58.706" endtime="20201022 13:58:58.963"></status>
</kw>
<msg timestamp="20201022 13:58:58.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905706903, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:58:58.703" endtime="20201022 13:58:58.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 29.905706903, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:58:58.965" endtime="20201022 13:58:58.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:58.967" endtime="20201022 13:58:58.969"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:58.697" endtime="20201022 13:58:58.969"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:58.693" endtime="20201022 13:58:58.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:58:58.972" level="INFO">${PHILIP_RES} = [{'diff': 29.888039084}]</msg>
<status status="PASS" starttime="20201022 13:58:58.971" endtime="20201022 13:58:58.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:58:58.977" level="INFO">${RESULT} = {'diff': [29.888039084]}</msg>
<status status="PASS" starttime="20201022 13:58:58.973" endtime="20201022 13:58:58.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.982" level="INFO">NAME: philip-result-30000000-repeat-4</msg>
<status status="PASS" starttime="20201022 13:58:58.981" endtime="20201022 13:58:58.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:58:58.984" level="INFO">VALUE: [29.888039084]</msg>
<status status="PASS" starttime="20201022 13:58:58.983" endtime="20201022 13:58:58.984"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:58.978" endtime="20201022 13:58:58.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:58:58.986" endtime="20201022 13:58:59.006"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:58.985" endtime="20201022 13:58:59.007"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:28.754" endtime="20201022 13:58:59.007"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.749" endtime="20201022 13:58:59.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:58:59.011" endtime="20201022 13:58:59.030"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.009" endtime="20201022 13:58:59.031"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:59.044" endtime="20201022 13:58:59.056"></status>
</kw>
<msg timestamp="20201022 13:58:59.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:59.042" endtime="20201022 13:58:59.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:58:59.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:59.057" endtime="20201022 13:58:59.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 13:58:59.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 13:58:59.060" endtime="20201022 13:58:59.063"></status>
</kw>
<status status="FAIL" starttime="20201022 13:58:59.040" endtime="20201022 13:58:59.063"></status>
</kw>
<status status="FAIL" starttime="20201022 13:58:59.037" endtime="20201022 13:58:59.064"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.036" endtime="20201022 13:58:59.064"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 13:58:59.068" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 13:58:59.067" endtime="20201022 13:58:59.068"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.065" endtime="20201022 13:58:59.069"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.035" endtime="20201022 13:58:59.069"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.035" endtime="20201022 13:58:59.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:59.070" endtime="20201022 13:58:59.071"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.033" endtime="20201022 13:58:59.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.031" endtime="20201022 13:58:59.072"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.008" endtime="20201022 13:58:59.073"></status>
</kw>
<status status="PASS" starttime="20201022 13:56:27.748" endtime="20201022 13:58:59.073"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>45000000</arg>
</arguments>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:58:59.083" endtime="20201022 13:59:43.930"></status>
</kw>
<msg timestamp="20201022 13:59:43.931" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:58:59.081" endtime="20201022 13:59:43.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:59:43.936" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:59:43.933" endtime="20201022 13:59:43.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:59:43.938" endtime="20201022 13:59:43.942"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.078" endtime="20201022 13:59:43.943"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.076" endtime="20201022 13:59:43.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:59:43.953" level="INFO">NAME: dut-result-45000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:59:43.951" endtime="20201022 13:59:43.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:59:43.957" level="INFO">VALUE: ['45.000104']</msg>
<status status="PASS" starttime="20201022 13:59:43.955" endtime="20201022 13:59:43.958"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:43.946" endtime="20201022 13:59:43.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:59:43.973" endtime="20201022 13:59:44.228"></status>
</kw>
<msg timestamp="20201022 13:59:44.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062606056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.895292153, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:59:43.970" endtime="20201022 13:59:44.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 13:59:44.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062606056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.895292153, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 13:59:44.229" endtime="20201022 13:59:44.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:59:44.232" endtime="20201022 13:59:44.234"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:43.964" endtime="20201022 13:59:44.234"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:43.961" endtime="20201022 13:59:44.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 13:59:44.238" level="INFO">${PHILIP_RES} = [{'diff': 44.832686097}]</msg>
<status status="PASS" starttime="20201022 13:59:44.236" endtime="20201022 13:59:44.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 13:59:44.240" level="INFO">${RESULT} = {'diff': [44.832686097]}</msg>
<status status="PASS" starttime="20201022 13:59:44.239" endtime="20201022 13:59:44.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 13:59:44.244" level="INFO">NAME: philip-result-45000000-repeat-0</msg>
<status status="PASS" starttime="20201022 13:59:44.243" endtime="20201022 13:59:44.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 13:59:44.247" level="INFO">VALUE: [44.832686097]</msg>
<status status="PASS" starttime="20201022 13:59:44.246" endtime="20201022 13:59:44.247"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:44.241" endtime="20201022 13:59:44.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 13:59:44.249" endtime="20201022 13:59:44.269"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:44.248" endtime="20201022 13:59:44.270"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.075" endtime="20201022 13:59:44.270"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 13:59:44.277" endtime="20201022 14:00:29.126"></status>
</kw>
<msg timestamp="20201022 14:00:29.127" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 13:59:44.275" endtime="20201022 14:00:29.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.132" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:00:29.129" endtime="20201022 14:00:29.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:00:29.134" endtime="20201022 14:00:29.137"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:44.273" endtime="20201022 14:00:29.138"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:44.271" endtime="20201022 14:00:29.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.148" level="INFO">NAME: dut-result-45000000-repeat-1</msg>
<status status="PASS" starttime="20201022 14:00:29.146" endtime="20201022 14:00:29.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.155" level="INFO">VALUE: ['45.000104']</msg>
<status status="PASS" starttime="20201022 14:00:29.153" endtime="20201022 14:00:29.156"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.141" endtime="20201022 14:00:29.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:00:29.171" endtime="20201022 14:00:29.425"></status>
</kw>
<msg timestamp="20201022 14:00:29.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.854162194, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:00:29.167" endtime="20201022 14:00:29.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017660375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.854162194, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:00:29.426" endtime="20201022 14:00:29.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:00:29.429" endtime="20201022 14:00:29.431"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.162" endtime="20201022 14:00:29.431"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.158" endtime="20201022 14:00:29.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:00:29.434" level="INFO">${PHILIP_RES} = [{'diff': 44.836501819}]</msg>
<status status="PASS" starttime="20201022 14:00:29.432" endtime="20201022 14:00:29.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:00:29.437" level="INFO">${RESULT} = {'diff': [44.836501819]}</msg>
<status status="PASS" starttime="20201022 14:00:29.435" endtime="20201022 14:00:29.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.441" level="INFO">NAME: philip-result-45000000-repeat-1</msg>
<status status="PASS" starttime="20201022 14:00:29.440" endtime="20201022 14:00:29.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:00:29.443" level="INFO">VALUE: [44.836501819]</msg>
<status status="PASS" starttime="20201022 14:00:29.442" endtime="20201022 14:00:29.444"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.438" endtime="20201022 14:00:29.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:00:29.446" endtime="20201022 14:00:29.466"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.445" endtime="20201022 14:00:29.466"></status>
</kw>
<status status="PASS" starttime="20201022 13:59:44.270" endtime="20201022 14:00:29.466"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:00:29.473" endtime="20201022 14:01:14.323"></status>
</kw>
<msg timestamp="20201022 14:01:14.324" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:00:29.472" endtime="20201022 14:01:14.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.329" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:01:14.326" endtime="20201022 14:01:14.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:14.332" endtime="20201022 14:01:14.335"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.469" endtime="20201022 14:01:14.336"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.467" endtime="20201022 14:01:14.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.346" level="INFO">NAME: dut-result-45000000-repeat-2</msg>
<status status="PASS" starttime="20201022 14:01:14.344" endtime="20201022 14:01:14.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.350" level="INFO">VALUE: ['45.000104']</msg>
<status status="PASS" starttime="20201022 14:01:14.348" endtime="20201022 14:01:14.351"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.338" endtime="20201022 14:01:14.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:14.366" endtime="20201022 14:01:14.625"></status>
</kw>
<msg timestamp="20201022 14:01:14.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.855043, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 14:01:14.362" endtime="20201022 14:01:14.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.855043, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201022 14:01:14.626" endtime="20201022 14:01:14.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:14.629" endtime="20201022 14:01:14.631"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.357" endtime="20201022 14:01:14.631"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.353" endtime="20201022 14:01:14.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:01:14.634" level="INFO">${PHILIP_RES} = [{'diff': 44.837413431}]</msg>
<status status="PASS" starttime="20201022 14:01:14.632" endtime="20201022 14:01:14.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:01:14.636" level="INFO">${RESULT} = {'diff': [44.837413431]}</msg>
<status status="PASS" starttime="20201022 14:01:14.635" endtime="20201022 14:01:14.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.641" level="INFO">NAME: philip-result-45000000-repeat-2</msg>
<status status="PASS" starttime="20201022 14:01:14.640" endtime="20201022 14:01:14.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:01:14.643" level="INFO">VALUE: [44.837413431]</msg>
<status status="PASS" starttime="20201022 14:01:14.642" endtime="20201022 14:01:14.644"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.638" endtime="20201022 14:01:14.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:01:14.646" endtime="20201022 14:01:14.665"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.645" endtime="20201022 14:01:14.666"></status>
</kw>
<status status="PASS" starttime="20201022 14:00:29.467" endtime="20201022 14:01:14.666"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:14.673" endtime="20201022 14:01:59.525"></status>
</kw>
<msg timestamp="20201022 14:01:59.526" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:01:14.672" endtime="20201022 14:01:59.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.531" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:01:59.528" endtime="20201022 14:01:59.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:59.533" endtime="20201022 14:01:59.537"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.669" endtime="20201022 14:01:59.538"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.667" endtime="20201022 14:01:59.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.547" level="INFO">NAME: dut-result-45000000-repeat-3</msg>
<status status="PASS" starttime="20201022 14:01:59.545" endtime="20201022 14:01:59.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.552" level="INFO">VALUE: ['45.000104']</msg>
<status status="PASS" starttime="20201022 14:01:59.550" endtime="20201022 14:01:59.553"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.540" endtime="20201022 14:01:59.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:59.567" endtime="20201022 14:01:59.824"></status>
</kw>
<msg timestamp="20201022 14:01:59.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01765525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.856850931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 14:01:59.564" endtime="20201022 14:01:59.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01765525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.856850931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 14:01:59.826" endtime="20201022 14:01:59.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:59.828" endtime="20201022 14:01:59.830"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.558" endtime="20201022 14:01:59.831"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.555" endtime="20201022 14:01:59.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:01:59.837" level="INFO">${PHILIP_RES} = [{'diff': 44.839195681}]</msg>
<status status="PASS" starttime="20201022 14:01:59.832" endtime="20201022 14:01:59.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:01:59.839" level="INFO">${RESULT} = {'diff': [44.839195681]}</msg>
<status status="PASS" starttime="20201022 14:01:59.838" endtime="20201022 14:01:59.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.844" level="INFO">NAME: philip-result-45000000-repeat-3</msg>
<status status="PASS" starttime="20201022 14:01:59.843" endtime="20201022 14:01:59.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:01:59.846" level="INFO">VALUE: [44.839195681]</msg>
<status status="PASS" starttime="20201022 14:01:59.845" endtime="20201022 14:01:59.848"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.840" endtime="20201022 14:01:59.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:01:59.850" endtime="20201022 14:01:59.870"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.849" endtime="20201022 14:01:59.870"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:14.667" endtime="20201022 14:01:59.871"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:01:59.878" endtime="20201022 14:02:44.735"></status>
</kw>
<msg timestamp="20201022 14:02:44.736" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:01:59.876" endtime="20201022 14:02:44.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:02:44.741" level="INFO">${RESULT} = {'cmd': 'drift: 45000000 us', 'msg': ['drift 45000000\r\n'], 'data': ['45.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:02:44.738" endtime="20201022 14:02:44.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:44.743" endtime="20201022 14:02:44.747"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.874" endtime="20201022 14:02:44.748"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.872" endtime="20201022 14:02:44.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:02:44.757" level="INFO">NAME: dut-result-45000000-repeat-4</msg>
<status status="PASS" starttime="20201022 14:02:44.755" endtime="20201022 14:02:44.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:02:44.762" level="INFO">VALUE: ['45.000104']</msg>
<status status="PASS" starttime="20201022 14:02:44.760" endtime="20201022 14:02:44.763"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:44.750" endtime="20201022 14:02:44.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:44.777" endtime="20201022 14:02:45.026"></status>
</kw>
<msg timestamp="20201022 14:02:45.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0176355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.862467569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 14:02:44.774" endtime="20201022 14:02:45.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:02:45.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0176355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 44.862467569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201022 14:02:45.028" endtime="20201022 14:02:45.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:45.030" endtime="20201022 14:02:45.032"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:44.768" endtime="20201022 14:02:45.032"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:44.765" endtime="20201022 14:02:45.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:02:45.035" level="INFO">${PHILIP_RES} = [{'diff': 44.844832069000006}]</msg>
<status status="PASS" starttime="20201022 14:02:45.033" endtime="20201022 14:02:45.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:02:45.038" level="INFO">${RESULT} = {'diff': [44.844832069000006]}</msg>
<status status="PASS" starttime="20201022 14:02:45.036" endtime="20201022 14:02:45.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:02:45.042" level="INFO">NAME: philip-result-45000000-repeat-4</msg>
<status status="PASS" starttime="20201022 14:02:45.041" endtime="20201022 14:02:45.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:02:45.045" level="INFO">VALUE: [44.844832069000006]</msg>
<status status="PASS" starttime="20201022 14:02:45.043" endtime="20201022 14:02:45.045"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.038" endtime="20201022 14:02:45.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:02:45.047" endtime="20201022 14:02:45.067"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.046" endtime="20201022 14:02:45.067"></status>
</kw>
<status status="PASS" starttime="20201022 14:01:59.871" endtime="20201022 14:02:45.068"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.074" endtime="20201022 14:02:45.068"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:02:45.072" endtime="20201022 14:02:45.091"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.070" endtime="20201022 14:02:45.091"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:45.106" endtime="20201022 14:02:45.117"></status>
</kw>
<msg timestamp="20201022 14:02:45.118" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:02:45.104" endtime="20201022 14:02:45.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:02:45.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:02:45.119" endtime="20201022 14:02:45.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 14:02:45.124" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 14:02:45.122" endtime="20201022 14:02:45.124"></status>
</kw>
<status status="FAIL" starttime="20201022 14:02:45.102" endtime="20201022 14:02:45.125"></status>
</kw>
<status status="FAIL" starttime="20201022 14:02:45.099" endtime="20201022 14:02:45.125"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.098" endtime="20201022 14:02:45.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 14:02:45.129" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 14:02:45.129" endtime="20201022 14:02:45.130"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.127" endtime="20201022 14:02:45.130"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.097" endtime="20201022 14:02:45.130"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.096" endtime="20201022 14:02:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:45.131" endtime="20201022 14:02:45.133"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.095" endtime="20201022 14:02:45.133"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.092" endtime="20201022 14:02:45.134"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.069" endtime="20201022 14:02:45.134"></status>
</kw>
<status status="PASS" starttime="20201022 13:58:59.073" endtime="20201022 14:02:45.134"></status>
</kw>
<kw name="Measure Drift">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>59000000</arg>
</arguments>
<kw name="${i} IN RANGE [ 5 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:02:45.143" endtime="20201022 14:03:43.942"></status>
</kw>
<msg timestamp="20201022 14:03:43.943" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:02:45.142" endtime="20201022 14:03:43.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:03:43.948" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:03:43.945" endtime="20201022 14:03:43.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:03:43.950" endtime="20201022 14:03:43.955"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.139" endtime="20201022 14:03:43.956"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.137" endtime="20201022 14:03:43.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:03:43.965" level="INFO">NAME: dut-result-59000000-repeat-0</msg>
<status status="PASS" starttime="20201022 14:03:43.963" endtime="20201022 14:03:43.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:03:43.970" level="INFO">VALUE: ['59.000104']</msg>
<status status="PASS" starttime="20201022 14:03:43.968" endtime="20201022 14:03:43.971"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:43.958" endtime="20201022 14:03:43.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:03:43.988" endtime="20201022 14:03:44.241"></status>
</kw>
<msg timestamp="20201022 14:03:44.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062103847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.849763764, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:03:43.985" endtime="20201022 14:03:44.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:03:44.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062103847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.849763764, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:03:44.242" endtime="20201022 14:03:44.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:03:44.245" endtime="20201022 14:03:44.247"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:43.979" endtime="20201022 14:03:44.247"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:43.973" endtime="20201022 14:03:44.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:03:44.250" level="INFO">${PHILIP_RES} = [{'diff': 58.787659917}]</msg>
<status status="PASS" starttime="20201022 14:03:44.248" endtime="20201022 14:03:44.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:03:44.252" level="INFO">${RESULT} = {'diff': [58.787659917]}</msg>
<status status="PASS" starttime="20201022 14:03:44.251" endtime="20201022 14:03:44.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:03:44.257" level="INFO">NAME: philip-result-59000000-repeat-0</msg>
<status status="PASS" starttime="20201022 14:03:44.256" endtime="20201022 14:03:44.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:03:44.259" level="INFO">VALUE: [58.787659917]</msg>
<status status="PASS" starttime="20201022 14:03:44.258" endtime="20201022 14:03:44.259"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:44.253" endtime="20201022 14:03:44.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:03:44.262" endtime="20201022 14:03:44.281"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:44.260" endtime="20201022 14:03:44.282"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.137" endtime="20201022 14:03:44.282"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:03:44.289" endtime="20201022 14:04:43.090"></status>
</kw>
<msg timestamp="20201022 14:04:43.091" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:03:44.287" endtime="20201022 14:04:43.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.097" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:04:43.093" endtime="20201022 14:04:43.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:04:43.099" endtime="20201022 14:04:43.103"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:44.285" endtime="20201022 14:04:43.104"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:44.283" endtime="20201022 14:04:43.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.115" level="INFO">NAME: dut-result-59000000-repeat-1</msg>
<status status="PASS" starttime="20201022 14:04:43.113" endtime="20201022 14:04:43.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.119" level="INFO">VALUE: ['59.000104']</msg>
<status status="PASS" starttime="20201022 14:04:43.117" endtime="20201022 14:04:43.120"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.107" endtime="20201022 14:04:43.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:04:43.135" endtime="20201022 14:04:43.392"></status>
</kw>
<msg timestamp="20201022 14:04:43.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017619514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.807568389, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:04:43.131" endtime="20201022 14:04:43.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017619514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.807568389, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:04:43.394" endtime="20201022 14:04:43.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:04:43.396" endtime="20201022 14:04:43.399"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.126" endtime="20201022 14:04:43.400"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.122" endtime="20201022 14:04:43.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:04:43.403" level="INFO">${PHILIP_RES} = [{'diff': 58.78994887499999}]</msg>
<status status="PASS" starttime="20201022 14:04:43.401" endtime="20201022 14:04:43.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:04:43.405" level="INFO">${RESULT} = {'diff': [58.78994887499999]}</msg>
<status status="PASS" starttime="20201022 14:04:43.404" endtime="20201022 14:04:43.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.409" level="INFO">NAME: philip-result-59000000-repeat-1</msg>
<status status="PASS" starttime="20201022 14:04:43.408" endtime="20201022 14:04:43.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:04:43.411" level="INFO">VALUE: [58.78994887499999]</msg>
<status status="PASS" starttime="20201022 14:04:43.410" endtime="20201022 14:04:43.412"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.406" endtime="20201022 14:04:43.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:04:43.414" endtime="20201022 14:04:43.433"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.413" endtime="20201022 14:04:43.434"></status>
</kw>
<status status="PASS" starttime="20201022 14:03:44.282" endtime="20201022 14:04:43.434"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:04:43.441" endtime="20201022 14:05:42.239"></status>
</kw>
<msg timestamp="20201022 14:05:42.240" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:04:43.440" endtime="20201022 14:05:42.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.245" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000105'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:05:42.242" endtime="20201022 14:05:42.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:05:42.248" endtime="20201022 14:05:42.251"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.437" endtime="20201022 14:05:42.252"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.435" endtime="20201022 14:05:42.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.262" level="INFO">NAME: dut-result-59000000-repeat-2</msg>
<status status="PASS" starttime="20201022 14:05:42.259" endtime="20201022 14:05:42.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.266" level="INFO">VALUE: ['59.000105']</msg>
<status status="PASS" starttime="20201022 14:05:42.264" endtime="20201022 14:05:42.267"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.254" endtime="20201022 14:05:42.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:05:42.281" endtime="20201022 14:05:42.538"></status>
</kw>
<msg timestamp="20201022 14:05:42.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.807348458, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:05:42.278" endtime="20201022 14:05:42.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.807348458, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:05:42.539" endtime="20201022 14:05:42.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:05:42.542" endtime="20201022 14:05:42.543"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.273" endtime="20201022 14:05:42.544"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.269" endtime="20201022 14:05:42.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:05:42.547" level="INFO">${PHILIP_RES} = [{'diff': 58.78981168}]</msg>
<status status="PASS" starttime="20201022 14:05:42.545" endtime="20201022 14:05:42.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:05:42.549" level="INFO">${RESULT} = {'diff': [58.78981168]}</msg>
<status status="PASS" starttime="20201022 14:05:42.548" endtime="20201022 14:05:42.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.553" level="INFO">NAME: philip-result-59000000-repeat-2</msg>
<status status="PASS" starttime="20201022 14:05:42.552" endtime="20201022 14:05:42.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:05:42.555" level="INFO">VALUE: [58.78981168]</msg>
<status status="PASS" starttime="20201022 14:05:42.554" endtime="20201022 14:05:42.557"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.550" endtime="20201022 14:05:42.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:05:42.559" endtime="20201022 14:05:42.579"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.558" endtime="20201022 14:05:42.579"></status>
</kw>
<status status="PASS" starttime="20201022 14:04:43.435" endtime="20201022 14:05:42.579"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:05:42.586" endtime="20201022 14:06:41.391"></status>
</kw>
<msg timestamp="20201022 14:06:41.392" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:05:42.585" endtime="20201022 14:06:41.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.397" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:06:41.394" endtime="20201022 14:06:41.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:06:41.399" endtime="20201022 14:06:41.402"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.582" endtime="20201022 14:06:41.403"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.580" endtime="20201022 14:06:41.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.413" level="INFO">NAME: dut-result-59000000-repeat-3</msg>
<status status="PASS" starttime="20201022 14:06:41.411" endtime="20201022 14:06:41.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.418" level="INFO">VALUE: ['59.000104']</msg>
<status status="PASS" starttime="20201022 14:06:41.415" endtime="20201022 14:06:41.418"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.405" endtime="20201022 14:06:41.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:06:41.433" endtime="20201022 14:06:41.688"></status>
</kw>
<msg timestamp="20201022 14:06:41.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.813469139, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:06:41.430" endtime="20201022 14:06:41.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.813469139, 'source': 'DUT_IC', 'event': 'FA...</msg>
<status status="PASS" starttime="20201022 14:06:41.690" endtime="20201022 14:06:41.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:06:41.693" endtime="20201022 14:06:41.694"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.424" endtime="20201022 14:06:41.695"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.421" endtime="20201022 14:06:41.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:06:41.698" level="INFO">${PHILIP_RES} = [{'diff': 58.796098486}]</msg>
<status status="PASS" starttime="20201022 14:06:41.696" endtime="20201022 14:06:41.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:06:41.700" level="INFO">${RESULT} = {'diff': [58.796098486]}</msg>
<status status="PASS" starttime="20201022 14:06:41.699" endtime="20201022 14:06:41.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.705" level="INFO">NAME: philip-result-59000000-repeat-3</msg>
<status status="PASS" starttime="20201022 14:06:41.704" endtime="20201022 14:06:41.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:06:41.707" level="INFO">VALUE: [58.796098486]</msg>
<status status="PASS" starttime="20201022 14:06:41.706" endtime="20201022 14:06:41.707"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.701" endtime="20201022 14:06:41.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:06:41.709" endtime="20201022 14:06:41.729"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.708" endtime="20201022 14:06:41.729"></status>
</kw>
<status status="PASS" starttime="20201022 14:05:42.580" endtime="20201022 14:06:41.730"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Drift</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Drift" library="DutDeviceIf">
<doc>Run the drift simple benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:06:41.738" endtime="20201022 14:07:40.540"></status>
</kw>
<msg timestamp="20201022 14:07:40.541" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:06:41.736" endtime="20201022 14:07:40.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.546" level="INFO">${RESULT} = {'cmd': 'drift: 59000000 us', 'msg': ['drift 59000000\r\n'], 'data': ['59.000104'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:07:40.544" endtime="20201022 14:07:40.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:07:40.549" endtime="20201022 14:07:40.552"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.732" endtime="20201022 14:07:40.553"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.731" endtime="20201022 14:07:40.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.563" level="INFO">NAME: dut-result-59000000-repeat-4</msg>
<status status="PASS" starttime="20201022 14:07:40.561" endtime="20201022 14:07:40.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.567" level="INFO">VALUE: ['59.000104']</msg>
<status status="PASS" starttime="20201022 14:07:40.565" endtime="20201022 14:07:40.567"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.555" endtime="20201022 14:07:40.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:07:40.583" endtime="20201022 14:07:40.835"></status>
</kw>
<msg timestamp="20201022 14:07:40.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.81311975, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 14:07:40.579" endtime="20201022 14:07:40.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018636736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 58.81311975, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201022 14:07:40.836" endtime="20201022 14:07:40.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:07:40.839" endtime="20201022 14:07:40.840"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.574" endtime="20201022 14:07:40.841"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.570" endtime="20201022 14:07:40.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201022 14:07:40.844" level="INFO">${PHILIP_RES} = [{'diff': 58.794483014}]</msg>
<status status="PASS" starttime="20201022 14:07:40.842" endtime="20201022 14:07:40.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201022 14:07:40.846" level="INFO">${RESULT} = {'diff': [58.794483014]}</msg>
<status status="PASS" starttime="20201022 14:07:40.845" endtime="20201022 14:07:40.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>philip-result-${duration}-repeat-${i}</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.851" level="INFO">NAME: philip-result-59000000-repeat-4</msg>
<status status="PASS" starttime="20201022 14:07:40.849" endtime="20201022 14:07:40.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.852" level="INFO">VALUE: [58.794483014]</msg>
<status status="PASS" starttime="20201022 14:07:40.852" endtime="20201022 14:07:40.853"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.847" endtime="20201022 14:07:40.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:07:40.855" endtime="20201022 14:07:40.875"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.854" endtime="20201022 14:07:40.875"></status>
</kw>
<status status="PASS" starttime="20201022 14:06:41.730" endtime="20201022 14:07:40.875"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.136" endtime="20201022 14:07:40.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201022 14:07:40.879" endtime="20201022 14:07:40.899"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.878" endtime="20201022 14:07:40.899"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201022 14:07:40.914" endtime="20201022 14:07:40.925"></status>
</kw>
<msg timestamp="20201022 14:07:40.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:07:40.912" endtime="20201022 14:07:40.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201022 14:07:40.926" endtime="20201022 14:07:40.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201022 14:07:40.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201022 14:07:40.929" endtime="20201022 14:07:40.931"></status>
</kw>
<status status="FAIL" starttime="20201022 14:07:40.909" endtime="20201022 14:07:40.932"></status>
</kw>
<status status="FAIL" starttime="20201022 14:07:40.906" endtime="20201022 14:07:40.933"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.905" endtime="20201022 14:07:40.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201022 14:07:40.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201022 14:07:40.936" endtime="20201022 14:07:40.938"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.934" endtime="20201022 14:07:40.938"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.904" endtime="20201022 14:07:40.938"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.903" endtime="20201022 14:07:40.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201022 14:07:40.939" endtime="20201022 14:07:40.941"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.902" endtime="20201022 14:07:40.941"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.900" endtime="20201022 14:07:40.942"></status>
</kw>
<status status="PASS" starttime="20201022 14:07:40.876" endtime="20201022 14:07:40.942"></status>
</kw>
<status status="PASS" starttime="20201022 14:02:45.135" endtime="20201022 14:07:40.942"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201022 13:55:04.176" endtime="20201022 14:07:40.943" critical="yes"></status>
</test>
<status status="PASS" starttime="20201022 13:55:02.679" endtime="20201022 14:07:40.945"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201022 13:52:45.846" endtime="20201022 14:07:40.965"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="17" fail="1">APP_tests_xtimer_benchmarks</stat>
<stat pass="17" fail="1">BOARD_saml10-xpro</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
<stat pass="1" fail="0" id="s1-s5" name="Drift">tests_xtimer_benchmarks.Drift</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
