<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:14:11.362" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.958" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:11.966" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:13.178" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:11.957" endtime="20201029 18:14:13.179"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.181" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:13.180" endtime="20201029 18:14:13.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.955" endtime="20201029 18:14:13.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:13.184" endtime="20201029 18:14:13.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.183" endtime="20201029 18:14:13.423"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.436" endtime="20201029 18:14:13.448"></status>
</kw>
<msg timestamp="20201029 18:14:13.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.434" endtime="20201029 18:14:13.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.451" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.450" endtime="20201029 18:14:13.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.454" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:13.452" endtime="20201029 18:14:13.455"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.432" endtime="20201029 18:14:13.455"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.430" endtime="20201029 18:14:13.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.428" endtime="20201029 18:14:13.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:13.460" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:13.459" endtime="20201029 18:14:13.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.457" endtime="20201029 18:14:13.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.428" endtime="20201029 18:14:13.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.427" endtime="20201029 18:14:13.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.463" endtime="20201029 18:14:13.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.425" endtime="20201029 18:14:13.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.465" endtime="20201029 18:14:13.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.424" endtime="20201029 18:14:13.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.953" endtime="20201029 18:14:13.468"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:13.474" endtime="20201029 18:14:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.472" endtime="20201029 18:14:13.494"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.507" endtime="20201029 18:14:13.519"></status>
</kw>
<msg timestamp="20201029 18:14:13.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.505" endtime="20201029 18:14:13.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.521" endtime="20201029 18:14:13.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.526" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:13.524" endtime="20201029 18:14:13.526"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.503" endtime="20201029 18:14:13.527"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:13.500" endtime="20201029 18:14:13.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.499" endtime="20201029 18:14:13.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:13.532" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:13.531" endtime="20201029 18:14:13.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.529" endtime="20201029 18:14:13.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.498" endtime="20201029 18:14:13.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.497" endtime="20201029 18:14:13.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.533" endtime="20201029 18:14:13.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.496" endtime="20201029 18:14:13.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.494" endtime="20201029 18:14:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.471" endtime="20201029 18:14:13.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.544" endtime="20201029 18:14:13.552"></status>
</kw>
<msg timestamp="20201029 18:14:13.553" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.541" endtime="20201029 18:14:13.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.555" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.554" endtime="20201029 18:14:13.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.556" endtime="20201029 18:14:13.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.539" endtime="20201029 18:14:13.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.537" endtime="20201029 18:14:13.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.562" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:13.561" endtime="20201029 18:14:13.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.564" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:13.564" endtime="20201029 18:14:13.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.559" endtime="20201029 18:14:13.565"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:13.468" endtime="20201029 18:14:13.566" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:11.492" endtime="20201029 18:14:13.568"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.628" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:13.636" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:14.855" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:13.626" endtime="20201029 18:14:14.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.861" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:14.858" endtime="20201029 18:14:14.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.625" endtime="20201029 18:14:14.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:14.867" endtime="20201029 18:14:15.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.864" endtime="20201029 18:14:15.160"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.172" endtime="20201029 18:14:15.185"></status>
</kw>
<msg timestamp="20201029 18:14:15.185" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.171" endtime="20201029 18:14:15.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.188" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.186" endtime="20201029 18:14:15.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.191" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:15.189" endtime="20201029 18:14:15.191"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:15.169" endtime="20201029 18:14:15.192"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:15.166" endtime="20201029 18:14:15.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.165" endtime="20201029 18:14:15.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:15.196" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:15.196" endtime="20201029 18:14:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.193" endtime="20201029 18:14:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.164" endtime="20201029 18:14:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.164" endtime="20201029 18:14:15.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.198" endtime="20201029 18:14:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.163" endtime="20201029 18:14:15.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.201" endtime="20201029 18:14:15.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.161" endtime="20201029 18:14:15.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.624" endtime="20201029 18:14:15.203"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:15.209" endtime="20201029 18:14:15.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.207" endtime="20201029 18:14:15.229"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.242" endtime="20201029 18:14:15.254"></status>
</kw>
<msg timestamp="20201029 18:14:15.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.240" endtime="20201029 18:14:15.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.256" endtime="20201029 18:14:15.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.260" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:15.258" endtime="20201029 18:14:15.261"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:15.238" endtime="20201029 18:14:15.261"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:15.235" endtime="20201029 18:14:15.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.234" endtime="20201029 18:14:15.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:15.266" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:15.265" endtime="20201029 18:14:15.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.263" endtime="20201029 18:14:15.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.233" endtime="20201029 18:14:15.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.233" endtime="20201029 18:14:15.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.268" endtime="20201029 18:14:15.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.232" endtime="20201029 18:14:15.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.230" endtime="20201029 18:14:15.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.206" endtime="20201029 18:14:15.270"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.279" endtime="20201029 18:14:15.290"></status>
</kw>
<msg timestamp="20201029 18:14:15.290" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.277" endtime="20201029 18:14:15.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.291" endtime="20201029 18:14:15.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.294" endtime="20201029 18:14:15.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.274" endtime="20201029 18:14:15.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.273" endtime="20201029 18:14:15.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.303" endtime="20201029 18:14:15.593"></status>
</kw>
<msg timestamp="20201029 18:14:15.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060261333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.301" endtime="20201029 18:14:15.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060260111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060261333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.598" endtime="20201029 18:14:15.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.606" endtime="20201029 18:14:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.299" endtime="20201029 18:14:15.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.297" endtime="20201029 18:14:15.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.613" level="INFO">${RESULT} = [{'diff': 1.2220000000021103e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.1809999999959353e-06}, {'diff': 1.2360000000016802e-06}, {'diff': 1.1940000000029705e-...</msg>
<status status="PASS" starttime="20201029 18:14:15.609" endtime="20201029 18:14:15.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.617" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2220000000021103e-06, 1.1810000000028742e-06, 1.1659999999968917e-06, 1.1809999999959353e-06, 1.2360000000016802e-06, 1.1940000000029705e-06, 1.0980000000049284e-06, 1.1670000000033043e-06...</msg>
<status status="PASS" starttime="20201029 18:14:15.613" endtime="20201029 18:14:15.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:15.620" endtime="20201029 18:14:15.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.624" level="INFO">VALUE: [1.2220000000021103e-06, 1.1810000000028742e-06, 1.1659999999968917e-06, 1.1809999999959353e-06, 1.2360000000016802e-06, 1.1940000000029705e-06, 1.0980000000049284e-06, 1.1670000000033043e-06, 1.1799999999964617e-06, 1.2220000000021103e-06, 1.2220000000021103e-06, 1.1940000000029705e-06, 1.1809999999959353e-06, 1.1800000000034006e-06, 1.1250000000045945e-06, 1.1660000000038306e-06, 1.1659999999968917e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1809999999959353e-06, 1.1940000000029705e-06, 1.1390000000041645e-06, 1.1810000000028742e-06, 1.1950000000024441e-06, 1.1940000000029705e-06, 1.1810000000028742e-06, 1.2080000000025404e-06, 1.1940000000029705e-06, 1.1799999999964617e-06, 1.1810000000028742e-06, 1.1799999999964617e-06, 1.1249999999976557e-06, 1.1669999999963654e-06, 1.222999999994645e-06, 1.1810000000028742e-06, 1.1809999999959353e-06, 1.1939999999960316e-06, 1.1799999999964617e-06, 1.1389999999972256e-06, 1.1809999999959353e-06, 1.1670000000033043e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.2360000000016802e-06, 1.1810000000028742e-06, 1.1800000000034006e-06]</msg>
<status status="PASS" starttime="20201029 18:14:15.622" endtime="20201029 18:14:15.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.618" endtime="20201029 18:14:15.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.272" endtime="20201029 18:14:15.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.271" endtime="20201029 18:14:15.626"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.634" endtime="20201029 18:14:15.644"></status>
</kw>
<msg timestamp="20201029 18:14:15.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.632" endtime="20201029 18:14:15.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.648" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.646" endtime="20201029 18:14:15.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.650" endtime="20201029 18:14:15.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.630" endtime="20201029 18:14:15.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.628" endtime="20201029 18:14:15.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.664" endtime="20201029 18:14:15.983"></status>
</kw>
<msg timestamp="20201029 18:14:15.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061824125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061825319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.661" endtime="20201029 18:14:15.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061824125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061825319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.989" endtime="20201029 18:14:16.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.005" endtime="20201029 18:14:16.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.657" endtime="20201029 18:14:16.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.655" endtime="20201029 18:14:16.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.023" level="INFO">${RESULT} = [{'diff': 1.1939999999960316e-06}, {'diff': 1.1799999999964617e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1809999999959353e-06}, {'diff': 1.1670000000033043e-06}, {'diff': 1.1810000000028742e-...</msg>
<status status="PASS" starttime="20201029 18:14:16.014" endtime="20201029 18:14:16.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.031" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1939999999960316e-06, 1.1799999999964617e-06, 1.1389999999972256e-06, 1.1809999999959353e-06, 1.1670000000033043e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1949999999955052e-06...</msg>
<status status="PASS" starttime="20201029 18:14:16.025" endtime="20201029 18:14:16.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.036" endtime="20201029 18:14:16.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.040" level="INFO">VALUE: [1.1939999999960316e-06, 1.1799999999964617e-06, 1.1389999999972256e-06, 1.1809999999959353e-06, 1.1670000000033043e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.2360000000016802e-06, 1.1810000000028742e-06, 1.1800000000034006e-06, 1.2359999999600468e-06, 1.1809999999612408e-06, 1.194000000037665e-06, 1.1529999999759788e-06, 1.1669999999686098e-06, 1.1529999999759788e-06, 1.1799999999895228e-06, 1.208000000030296e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.26400000000082e-06, 1.194000000037665e-06, 1.15300000003149e-06, 1.181000000016752e-06, 1.195000000009383e-06, 1.180000000045034e-06, 1.195000000009383e-06, 1.125000000046228e-06, 1.236000000015558e-06, 1.181000000016752e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.181000000016752e-06, 1.195000000009383e-06, 1.181000000016752e-06, 1.1659999999968917e-06, 1.181000000016752e-06, 1.250000000008189e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.167000000024121e-06, 1.222000000022927e-06, 1.2079999999747848e-06, 1.1939999999821538e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.194000000037665e-06, 1.1669999999686098e-06, 1.195000000009383e-06, 1.209000000002014e-06, 1.195000000009383e-06, 1.1949999999538718e-06, 1.195000000009383e-06, 1.1799999999895228e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.038" endtime="20201029 18:14:16.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.033" endtime="20201029 18:14:16.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.627" endtime="20201029 18:14:16.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.626" endtime="20201029 18:14:16.041"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.049" endtime="20201029 18:14:16.059"></status>
</kw>
<msg timestamp="20201029 18:14:16.060" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.048" endtime="20201029 18:14:16.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.066" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.061" endtime="20201029 18:14:16.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.069" endtime="20201029 18:14:16.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.045" endtime="20201029 18:14:16.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.043" endtime="20201029 18:14:16.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.087" endtime="20201029 18:14:16.402"></status>
</kw>
<msg timestamp="20201029 18:14:16.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405223819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405224986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.085" endtime="20201029 18:14:16.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405223819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405224986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.408" endtime="20201029 18:14:16.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.420" endtime="20201029 18:14:16.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.077" endtime="20201029 18:14:16.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.074" endtime="20201029 18:14:16.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.430" level="INFO">${RESULT} = [{'diff': 1.167000000024121e-06}, {'diff': 1.222000000022927e-06}, {'diff': 1.2079999999747848e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.1799999999895228e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:16.425" endtime="20201029 18:14:16.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.436" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.167000000024121e-06, 1.222000000022927e-06, 1.2079999999747848e-06, 1.1939999999821538e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.194000000037665e-06, 1.1669999999686098e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:16.432" endtime="20201029 18:14:16.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.440" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.439" endtime="20201029 18:14:16.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.443" level="INFO">VALUE: [1.167000000024121e-06, 1.222000000022927e-06, 1.2079999999747848e-06, 1.1939999999821538e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.194000000037665e-06, 1.1669999999686098e-06, 1.195000000009383e-06, 1.209000000002014e-06, 1.195000000009383e-06, 1.1949999999538718e-06, 1.195000000009383e-06, 1.1799999999895228e-06, 1.236000000015558e-06, 1.1939999999821538e-06, 1.180000000045034e-06, 1.208000000030296e-06, 1.1950000000648942e-06, 1.1669999999686098e-06, 1.1950000000648942e-06, 1.180000000045034e-06, 1.181000000016752e-06, 1.1949999999538718e-06, 1.1529999999204676e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.1949999999538718e-06, 1.181000000016752e-06, 1.209000000002014e-06, 1.180000000045034e-06, 1.1949999999538718e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.180000000045034e-06, 1.181000000016752e-06, 1.180000000045034e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.180000000045034e-06, 1.1950000000648942e-06, 1.1939999999821538e-06, 1.1809999999057297e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1659999999968917e-06, 1.0970000000609659e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.194000000093176e-06, 1.2779999999379399e-06, 1.2219999999674158e-06, 1.180000000045034e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1949999999538718e-06, 1.209000000002014e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.441" endtime="20201029 18:14:16.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.437" endtime="20201029 18:14:16.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.042" endtime="20201029 18:14:16.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.042" endtime="20201029 18:14:16.444"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.453" endtime="20201029 18:14:16.463"></status>
</kw>
<msg timestamp="20201029 18:14:16.464" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.451" endtime="20201029 18:14:16.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.466" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.465" endtime="20201029 18:14:16.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.468" endtime="20201029 18:14:16.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.448" endtime="20201029 18:14:16.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.446" endtime="20201029 18:14:16.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.476" endtime="20201029 18:14:16.776"></status>
</kw>
<msg timestamp="20201029 18:14:16.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.810704181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.810705278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.475" endtime="20201029 18:14:16.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.810704181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.810705278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.781" endtime="20201029 18:14:16.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.791" endtime="20201029 18:14:16.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.472" endtime="20201029 18:14:16.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.471" endtime="20201029 18:14:16.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.797" level="INFO">${RESULT} = [{'diff': 1.0970000000609659e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.194000000093176e-06...</msg>
<status status="PASS" starttime="20201029 18:14:16.794" endtime="20201029 18:14:16.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.803" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0970000000609659e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.194000000093176e-06, 1.2779999999379399e-06, 1.2219999999674158e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:16.799" endtime="20201029 18:14:16.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:16.806" endtime="20201029 18:14:16.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.810" level="INFO">VALUE: [1.0970000000609659e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.194000000093176e-06, 1.2779999999379399e-06, 1.2219999999674158e-06, 1.180000000045034e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1949999999538718e-06, 1.209000000002014e-06, 1.181000000016752e-06, 1.26400000000082e-06, 1.2220000000784381e-06, 1.1800000001560562e-06, 1.1799999999340116e-06, 1.1809999997947074e-06, 1.1669999999686098e-06, 1.1109999999980857e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.2359999999045357e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.0970000001719882e-06, 1.1669999999686098e-06, 1.2229999999391339e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.1809999997947074e-06, 1.2499999999526779e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1949999998428495e-06, 1.26400000000082e-06, 1.2220000000784381e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.809" endtime="20201029 18:14:16.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.804" endtime="20201029 18:14:16.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.445" endtime="20201029 18:14:16.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.445" endtime="20201029 18:14:16.811"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.819" endtime="20201029 18:14:16.829"></status>
</kw>
<msg timestamp="20201029 18:14:16.830" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.818" endtime="20201029 18:14:16.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.832" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.831" endtime="20201029 18:14:16.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.833" endtime="20201029 18:14:16.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.815" endtime="20201029 18:14:16.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.814" endtime="20201029 18:14:16.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.842" endtime="20201029 18:14:17.149"></status>
</kw>
<msg timestamp="20201029 18:14:17.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.205573861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.205575042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.841" endtime="20201029 18:14:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.205573861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.205575042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.154" endtime="20201029 18:14:17.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.164" endtime="20201029 18:14:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.838" endtime="20201029 18:14:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.837" endtime="20201029 18:14:17.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.171" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1950000000648942e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.208000000030296e-06}, {'diff': 1.166000000107914e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:17.167" endtime="20201029 18:14:17.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.177" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1950000000648942e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:17.172" endtime="20201029 18:14:17.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.181" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:17.180" endtime="20201029 18:14:17.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.184" level="INFO">VALUE: [1.181000000016752e-06, 1.1950000000648942e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1949999998428495e-06, 1.26400000000082e-06, 1.2220000000784381e-06, 1.236999999987276e-06, 1.1939999999821538e-06, 1.2360000001265803e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.2229999999391339e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1949999998428495e-06, 1.2220000000784381e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.2079999998082513e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1669999999686098e-06, 1.1380000000116297e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.1800000001560562e-06, 1.1949999998428495e-06, 1.1529999999204676e-06, 1.1809999997947074e-06, 1.1809999997947074e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.1939999999821538e-06]</msg>
<status status="PASS" starttime="20201029 18:14:17.182" endtime="20201029 18:14:17.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.178" endtime="20201029 18:14:17.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.812" endtime="20201029 18:14:17.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.812" endtime="20201029 18:14:17.185"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.193" endtime="20201029 18:14:17.203"></status>
</kw>
<msg timestamp="20201029 18:14:17.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.191" endtime="20201029 18:14:17.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.206" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.205" endtime="20201029 18:14:17.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.207" endtime="20201029 18:14:17.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.189" endtime="20201029 18:14:17.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.187" endtime="20201029 18:14:17.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.216" endtime="20201029 18:14:17.519"></status>
</kw>
<msg timestamp="20201029 18:14:17.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.562545347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.562546583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.214" endtime="20201029 18:14:17.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.562545347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.562546583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.524" endtime="20201029 18:14:17.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.534" endtime="20201029 18:14:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.212" endtime="20201029 18:14:17.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.210" endtime="20201029 18:14:17.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.541" level="INFO">${RESULT} = [{'diff': 1.2360000001265803e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1950000000648942e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 18:14:17.537" endtime="20201029 18:14:17.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.546" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2360000001265803e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1799999999340116e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:17.542" endtime="20201029 18:14:17.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:17.549" endtime="20201029 18:14:17.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.553" level="INFO">VALUE: [1.2360000001265803e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.2780000000489622e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999998858694e-06, 1.208000000030296e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.2499999999526779e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.2780000000489622e-06, 1.208000000030296e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1389999998723255e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2089999998909917e-06, 1.1939999999821538e-06, 1.2220000000784381e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1949999998428495e-06, 1.2499999999526779e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 18:14:17.551" endtime="20201029 18:14:17.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.547" endtime="20201029 18:14:17.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.186" endtime="20201029 18:14:17.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.185" endtime="20201029 18:14:17.554"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.563" endtime="20201029 18:14:17.573"></status>
</kw>
<msg timestamp="20201029 18:14:17.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.561" endtime="20201029 18:14:17.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.576" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.575" endtime="20201029 18:14:17.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.577" endtime="20201029 18:14:17.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.558" endtime="20201029 18:14:17.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.556" endtime="20201029 18:14:17.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.587" endtime="20201029 18:14:17.892"></status>
</kw>
<msg timestamp="20201029 18:14:17.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.926149889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.926151083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.586" endtime="20201029 18:14:17.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.926149889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.926151083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.897" endtime="20201029 18:14:17.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.907" endtime="20201029 18:14:17.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.583" endtime="20201029 18:14:17.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.581" endtime="20201029 18:14:17.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.914" level="INFO">${RESULT} = [{'diff': 1.1939999999821538e-06}, {'diff': 1.2220000000784381e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1800000001560562e-0...</msg>
<status status="PASS" starttime="20201029 18:14:17.910" endtime="20201029 18:14:17.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.919" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1939999999821538e-06, 1.2220000000784381e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1949999998428495e-06, 1.2499999999526779e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:17.915" endtime="20201029 18:14:17.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.923" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:17.922" endtime="20201029 18:14:17.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.926" level="INFO">VALUE: [1.1939999999821538e-06, 1.2220000000784381e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1949999998428495e-06, 1.2499999999526779e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1120000000808261e-06, 1.1670000001906544e-06, 1.2630000001401243e-06, 1.208000000030296e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2220000003004827e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1939999997601092e-06, 1.1529999999204676e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.235999999682491e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.2360000001265803e-06, 1.2780000000489622e-06, 1.181000000016752e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 18:14:17.925" endtime="20201029 18:14:17.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.920" endtime="20201029 18:14:17.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.555" endtime="20201029 18:14:17.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.554" endtime="20201029 18:14:17.928"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.935" endtime="20201029 18:14:17.945"></status>
</kw>
<msg timestamp="20201029 18:14:17.946" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.934" endtime="20201029 18:14:17.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.948" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.947" endtime="20201029 18:14:17.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.950" endtime="20201029 18:14:17.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.931" endtime="20201029 18:14:17.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.930" endtime="20201029 18:14:17.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.958" endtime="20201029 18:14:18.267"></status>
</kw>
<msg timestamp="20201029 18:14:18.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.286835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.286837028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.957" endtime="20201029 18:14:18.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.286835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.286837028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.272" endtime="20201029 18:14:18.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.282" endtime="20201029 18:14:18.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.954" endtime="20201029 18:14:18.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.953" endtime="20201029 18:14:18.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.289" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1380000000116297e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.181000000016752e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:18.286" endtime="20201029 18:14:18.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.295" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.13900000009437e-06, 1.194...</msg>
<status status="PASS" starttime="20201029 18:14:18.290" endtime="20201029 18:14:18.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.299" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.298" endtime="20201029 18:14:18.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.302" level="INFO">VALUE: [1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1380000000116297e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.2360000001265803e-06, 1.2780000000489622e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2499999999526779e-06, 1.1109999999980857e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1800000003781008e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.0970000001719882e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.235999999682491e-06, 1.1949999998428495e-06, 1.2219999998563935e-06, 1.1529999999204676e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.300" endtime="20201029 18:14:18.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.296" endtime="20201029 18:14:18.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.928" endtime="20201029 18:14:18.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.928" endtime="20201029 18:14:18.303"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.311" endtime="20201029 18:14:18.321"></status>
</kw>
<msg timestamp="20201029 18:14:18.321" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.309" endtime="20201029 18:14:18.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.324" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.322" endtime="20201029 18:14:18.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.325" endtime="20201029 18:14:18.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.307" endtime="20201029 18:14:18.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.305" endtime="20201029 18:14:18.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.335" endtime="20201029 18:14:18.652"></status>
</kw>
<msg timestamp="20201029 18:14:18.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.648562431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.648563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.333" endtime="20201029 18:14:18.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.648562431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.648563611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.657" endtime="20201029 18:14:18.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.667" endtime="20201029 18:14:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.330" endtime="20201029 18:14:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.328" endtime="20201029 18:14:18.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.674" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1950000002869388e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.166000000107914e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:18.670" endtime="20201029 18:14:18.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.679" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 18:14:18.675" endtime="20201029 18:14:18.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.683" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:18.682" endtime="20201029 18:14:18.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.685" level="INFO">VALUE: [1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.235999999682491e-06, 1.1949999998428495e-06, 1.2219999998563935e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2090000001130363e-06, 1.1669999997465652e-06, 1.2499999999526779e-06, 1.1809999995726628e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.250000000396767e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.1809999995726628e-06, 1.1669999997465652e-06, 1.1939999997601092e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2220000003004827e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.2220000003004827e-06, 1.1940000002041984e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.166000000107914e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.684" endtime="20201029 18:14:18.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.680" endtime="20201029 18:14:18.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.304" endtime="20201029 18:14:18.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.303" endtime="20201029 18:14:18.688"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.695" endtime="20201029 18:14:18.705"></status>
</kw>
<msg timestamp="20201029 18:14:18.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.694" endtime="20201029 18:14:18.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.707" endtime="20201029 18:14:18.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.709" endtime="20201029 18:14:18.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.691" endtime="20201029 18:14:18.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.690" endtime="20201029 18:14:18.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.718" endtime="20201029 18:14:19.038"></status>
</kw>
<msg timestamp="20201029 18:14:19.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.015087097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.015088319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.717" endtime="20201029 18:14:19.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.015087097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.015088319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.043" endtime="20201029 18:14:19.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.053" endtime="20201029 18:14:19.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.714" endtime="20201029 18:14:19.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.713" endtime="20201029 18:14:19.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.059" level="INFO">${RESULT} = [{'diff': 1.2220000003004827e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.2229999999391339e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.2360000001265803e-06...</msg>
<status status="PASS" starttime="20201029 18:14:19.056" endtime="20201029 18:14:19.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.065" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2220000003004827e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:19.060" endtime="20201029 18:14:19.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.069" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.068" endtime="20201029 18:14:19.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.071" level="INFO">VALUE: [1.2220000003004827e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.2220000003004827e-06, 1.1940000002041984e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.2219999998563935e-06, 1.2229999999391339e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1529999999204676e-06, 1.1800000003781008e-06, 1.1940000002041984e-06, 1.2229999999391339e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1250000002682725e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1799999999340116e-06, 1.111000000442175e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.2090000001130363e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2089999996689471e-06, 1.2089999996689471e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.2640000002228646e-06, 1.277000000410311e-06, 1.2229999999391339e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1250000002682725e-06, 1.166000000107914e-06, 1.1949999998428495e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.070" endtime="20201029 18:14:19.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.066" endtime="20201029 18:14:19.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.688" endtime="20201029 18:14:19.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.688" endtime="20201029 18:14:19.073"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.080" endtime="20201029 18:14:19.090"></status>
</kw>
<msg timestamp="20201029 18:14:19.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.079" endtime="20201029 18:14:19.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.092" endtime="20201029 18:14:19.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.094" endtime="20201029 18:14:19.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.076" endtime="20201029 18:14:19.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.075" endtime="20201029 18:14:19.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.103" endtime="20201029 18:14:19.423"></status>
</kw>
<msg timestamp="20201029 18:14:19.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.387741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.387742472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.102" endtime="20201029 18:14:19.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.387741306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.387742472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.434" endtime="20201029 18:14:19.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.456" endtime="20201029 18:14:19.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.099" endtime="20201029 18:14:19.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.097" endtime="20201029 18:14:19.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.471" level="INFO">${RESULT} = [{'diff': 1.1659999996638248e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:19.463" endtime="20201029 18:14:19.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.481" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1659999996638248e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:14:19.473" endtime="20201029 18:14:19.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.489" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.487" endtime="20201029 18:14:19.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.492" level="INFO">VALUE: [1.1659999996638248e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1250000002682725e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.2499999999526779e-06, 1.1670000001906544e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.2079999995862067e-06, 1.1529999999204676e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.1939999997601092e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1529999999204676e-06, 1.2090000001130363e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1120000000808261e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.2229999999391339e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1940000002041984e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.490" endtime="20201029 18:14:19.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.483" endtime="20201029 18:14:19.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.074" endtime="20201029 18:14:19.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.073" endtime="20201029 18:14:19.493"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.502" endtime="20201029 18:14:19.512"></status>
</kw>
<msg timestamp="20201029 18:14:19.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.499" endtime="20201029 18:14:19.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.515" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.513" endtime="20201029 18:14:19.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.516" endtime="20201029 18:14:19.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.497" endtime="20201029 18:14:19.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.495" endtime="20201029 18:14:19.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.525" endtime="20201029 18:14:19.842"></status>
</kw>
<msg timestamp="20201029 18:14:19.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.762832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.762833472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.523" endtime="20201029 18:14:19.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.762832292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.762833472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.847" endtime="20201029 18:14:19.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.858" endtime="20201029 18:14:19.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.521" endtime="20201029 18:14:19.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.519" endtime="20201029 18:14:19.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.865" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1120000000808261e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1659999996638248e-0...</msg>
<status status="PASS" starttime="20201029 18:14:19.861" endtime="20201029 18:14:19.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.870" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1799999999340116e-06, 1.1120000000808261e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1799999999340116e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:19.866" endtime="20201029 18:14:19.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.874" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:19.873" endtime="20201029 18:14:19.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.877" level="INFO">VALUE: [1.1799999999340116e-06, 1.1799999999340116e-06, 1.1120000000808261e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.2229999999391339e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.2499999995085886e-06, 1.2640000006669538e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1949999993987603e-06, 1.1109999995539965e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.1109999995539965e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1950000002869388e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2080000004743852e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.875" endtime="20201029 18:14:19.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.871" endtime="20201029 18:14:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.494" endtime="20201029 18:14:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.494" endtime="20201029 18:14:19.878"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.886" endtime="20201029 18:14:19.897"></status>
</kw>
<msg timestamp="20201029 18:14:19.897" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.885" endtime="20201029 18:14:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.900" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.898" endtime="20201029 18:14:19.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.901" endtime="20201029 18:14:19.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.882" endtime="20201029 18:14:19.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.880" endtime="20201029 18:14:19.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.910" endtime="20201029 18:14:20.237"></status>
</kw>
<msg timestamp="20201029 18:14:20.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.173364528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.173365681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.908" endtime="20201029 18:14:20.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.173364528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.173365681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.249" endtime="20201029 18:14:20.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.272" endtime="20201029 18:14:20.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.906" endtime="20201029 18:14:20.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.904" endtime="20201029 18:14:20.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.287" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.2639999997787754e-06}, {'diff': 1.1950000002869388e-...</msg>
<status status="PASS" starttime="20201029 18:14:20.279" endtime="20201029 18:14:20.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.299" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1950000002869388e-06, 1.1659999996638248e-06, 1.181000000016752e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:20.289" endtime="20201029 18:14:20.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.303" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.302" endtime="20201029 18:14:20.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.306" level="INFO">VALUE: [1.1530000003645569e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1950000002869388e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2080000004743852e-06, 1.2360000001265803e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.250000000396767e-06, 1.1949999993987603e-06, 1.151999999393638e-06, 1.18000000082219e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.2780000000489622e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.18000000082219e-06, 1.1949999993987603e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.2370000002093207e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 18:14:20.304" endtime="20201029 18:14:20.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.300" endtime="20201029 18:14:20.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.879" endtime="20201029 18:14:20.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.879" endtime="20201029 18:14:20.308"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.315" endtime="20201029 18:14:20.325"></status>
</kw>
<msg timestamp="20201029 18:14:20.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.314" endtime="20201029 18:14:20.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.328" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.327" endtime="20201029 18:14:20.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.329" endtime="20201029 18:14:20.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.311" endtime="20201029 18:14:20.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.309" endtime="20201029 18:14:20.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.338" endtime="20201029 18:14:20.649"></status>
</kw>
<msg timestamp="20201029 18:14:20.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.547148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.547149139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:20.337" endtime="20201029 18:14:20.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.547148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.547149139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:20.654" endtime="20201029 18:14:20.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.664" endtime="20201029 18:14:20.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.334" endtime="20201029 18:14:20.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.332" endtime="20201029 18:14:20.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.671" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.2370000002093207e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.19399999931602e-06}, {'diff': 1.1799999999340116e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:20.668" endtime="20201029 18:14:20.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.676" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.13900000009437e-06, 1.2370000002093207e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 18:14:20.672" endtime="20201029 18:14:20.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.680" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:20.679" endtime="20201029 18:14:20.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.682" level="INFO">VALUE: [1.13900000009437e-06, 1.2370000002093207e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.2360000001265803e-06, 1.1949999993987603e-06, 1.1940000002041984e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.18000000082219e-06, 1.2229999999391339e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1809999991285736e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.2089999996689471e-06, 1.111000000442175e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2359999992384019e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.1670000006347436e-06, 1.1949999993987603e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.2360000001265803e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.1949999993987603e-06]</msg>
<status status="PASS" starttime="20201029 18:14:20.681" endtime="20201029 18:14:20.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.677" endtime="20201029 18:14:20.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.308" endtime="20201029 18:14:20.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.308" endtime="20201029 18:14:20.684"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.694" endtime="20201029 18:14:20.704"></status>
</kw>
<msg timestamp="20201029 18:14:20.705" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.693" endtime="20201029 18:14:20.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.706" endtime="20201029 18:14:20.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.709" endtime="20201029 18:14:20.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.688" endtime="20201029 18:14:20.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.686" endtime="20201029 18:14:20.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.718" endtime="20201029 18:14:21.036"></status>
</kw>
<msg timestamp="20201029 18:14:21.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.965860417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.965861597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.716" endtime="20201029 18:14:21.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.965860417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.965861597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.041" endtime="20201029 18:14:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.051" endtime="20201029 18:14:21.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.713" endtime="20201029 18:14:21.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.712" endtime="20201029 18:14:21.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.058" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.2360000001265803e-06}, {'diff': 1.1670000006347436e-0...</msg>
<status status="PASS" starttime="20201029 18:14:21.055" endtime="20201029 18:14:21.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.064" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.2360000001265803e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:21.059" endtime="20201029 18:14:21.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.068" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.067" endtime="20201029 18:14:21.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.070" level="INFO">VALUE: [1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.2360000001265803e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1109999995539965e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.1949999993987603e-06, 1.2639999997787754e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2369999993211422e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2360000001265803e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.250000000396767e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.069" endtime="20201029 18:14:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.064" endtime="20201029 18:14:21.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.685" endtime="20201029 18:14:21.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.684" endtime="20201029 18:14:21.072"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.080" endtime="20201029 18:14:21.090"></status>
</kw>
<msg timestamp="20201029 18:14:21.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.078" endtime="20201029 18:14:21.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.091" endtime="20201029 18:14:21.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.094" endtime="20201029 18:14:21.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.076" endtime="20201029 18:14:21.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.074" endtime="20201029 18:14:21.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.103" endtime="20201029 18:14:21.421"></status>
</kw>
<msg timestamp="20201029 18:14:21.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.333991458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.333992597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.101" endtime="20201029 18:14:21.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.333991458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.333992597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.426" endtime="20201029 18:14:21.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.436" endtime="20201029 18:14:21.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.099" endtime="20201029 18:14:21.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.097" endtime="20201029 18:14:21.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.443" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.1950000002869388e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1950000002869388e-06}, {'diff': 1.2219999998563935e-06...</msg>
<status status="PASS" starttime="20201029 18:14:21.440" endtime="20201029 18:14:21.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.449" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.13900000009437e-06, 1.1660000005520033e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:21.444" endtime="20201029 18:14:21.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.453" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.452" endtime="20201029 18:14:21.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.455" level="INFO">VALUE: [1.13900000009437e-06, 1.1660000005520033e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.250000000396767e-06, 1.2640000006669538e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.2639999997787754e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.2360000001265803e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.2499999995085886e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1940000002041984e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.454" endtime="20201029 18:14:21.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.450" endtime="20201029 18:14:21.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.073" endtime="20201029 18:14:21.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.072" endtime="20201029 18:14:21.457"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.465" endtime="20201029 18:14:21.475"></status>
</kw>
<msg timestamp="20201029 18:14:21.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.463" endtime="20201029 18:14:21.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.478" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.476" endtime="20201029 18:14:21.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.479" endtime="20201029 18:14:21.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.461" endtime="20201029 18:14:21.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.459" endtime="20201029 18:14:21.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.488" endtime="20201029 18:14:21.798"></status>
</kw>
<msg timestamp="20201029 18:14:21.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.710515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.710517097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.486" endtime="20201029 18:14:21.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.710515917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.710517097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.803" endtime="20201029 18:14:21.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.813" endtime="20201029 18:14:21.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.484" endtime="20201029 18:14:21.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.482" endtime="20201029 18:14:21.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.820" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1529999994763784e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1950000002869388e-...</msg>
<status status="PASS" starttime="20201029 18:14:21.816" endtime="20201029 18:14:21.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.825" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1529999994763784e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.181000000016752e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:21.821" endtime="20201029 18:14:21.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.829" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:21.828" endtime="20201029 18:14:21.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.831" level="INFO">VALUE: [1.1799999999340116e-06, 1.1529999994763784e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.2499999995085886e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.250000000396767e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.2639999997787754e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2639999997787754e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2360000001265803e-06, 1.1940000002041984e-06, 1.111000000442175e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.18000000082219e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1949999993987603e-06, 1.2080000004743852e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.830" endtime="20201029 18:14:21.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.825" endtime="20201029 18:14:21.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.458" endtime="20201029 18:14:21.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.457" endtime="20201029 18:14:21.833"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.841" endtime="20201029 18:14:21.852"></status>
</kw>
<msg timestamp="20201029 18:14:21.852" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.840" endtime="20201029 18:14:21.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.853" endtime="20201029 18:14:21.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.856" endtime="20201029 18:14:21.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.836" endtime="20201029 18:14:21.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.835" endtime="20201029 18:14:21.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.865" endtime="20201029 18:14:22.182"></status>
</kw>
<msg timestamp="20201029 18:14:22.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.085422042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.085423222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.863" endtime="20201029 18:14:22.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.085422042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.085423222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.187" endtime="20201029 18:14:22.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.197" endtime="20201029 18:14:22.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.860" endtime="20201029 18:14:22.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.859" endtime="20201029 18:14:22.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.204" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.18000000082219e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1940000002041984e-06...</msg>
<status status="PASS" starttime="20201029 18:14:22.200" endtime="20201029 18:14:22.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.209" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.18000000082219e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:22.205" endtime="20201029 18:14:22.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.214" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.213" endtime="20201029 18:14:22.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.216" level="INFO">VALUE: [1.1799999999340116e-06, 1.18000000082219e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1949999993987603e-06, 1.2080000004743852e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.2080000004743852e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.262999999696035e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 18:14:22.215" endtime="20201029 18:14:22.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.210" endtime="20201029 18:14:22.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.834" endtime="20201029 18:14:22.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.833" endtime="20201029 18:14:22.218"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.225" endtime="20201029 18:14:22.236"></status>
</kw>
<msg timestamp="20201029 18:14:22.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.224" endtime="20201029 18:14:22.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.239" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.237" endtime="20201029 18:14:22.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.240" endtime="20201029 18:14:22.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.221" endtime="20201029 18:14:22.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.220" endtime="20201029 18:14:22.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.251" endtime="20201029 18:14:22.563"></status>
</kw>
<msg timestamp="20201029 18:14:22.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.452144278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.452145486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.248" endtime="20201029 18:14:22.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.452144278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.452145486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.568" endtime="20201029 18:14:22.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.578" endtime="20201029 18:14:22.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.245" endtime="20201029 18:14:22.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.243" endtime="20201029 18:14:22.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.585" level="INFO">${RESULT} = [{'diff': 1.2080000004743852e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.19399999931602e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:22.581" endtime="20201029 18:14:22.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.591" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2080000004743852e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:22.586" endtime="20201029 18:14:22.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.595" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.594" endtime="20201029 18:14:22.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.597" level="INFO">VALUE: [1.2080000004743852e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.262999999696035e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.2089999996689471e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1659999996638248e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1949999993987603e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2090000005571255e-06, 1.2089999996689471e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.19399999931602e-06]</msg>
<status status="PASS" starttime="20201029 18:14:22.596" endtime="20201029 18:14:22.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.592" endtime="20201029 18:14:22.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.218" endtime="20201029 18:14:22.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.218" endtime="20201029 18:14:22.599"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.607" endtime="20201029 18:14:22.617"></status>
</kw>
<msg timestamp="20201029 18:14:22.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.605" endtime="20201029 18:14:22.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.620" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.619" endtime="20201029 18:14:22.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.621" endtime="20201029 18:14:22.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.602" endtime="20201029 18:14:22.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.601" endtime="20201029 18:14:22.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.631" endtime="20201029 18:14:22.948"></status>
</kw>
<msg timestamp="20201029 18:14:22.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.826148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.826150139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.629" endtime="20201029 18:14:22.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.826148944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.826150139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.953" endtime="20201029 18:14:22.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.963" endtime="20201029 18:14:22.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.626" endtime="20201029 18:14:22.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.625" endtime="20201029 18:14:22.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.970" level="INFO">${RESULT} = [{'diff': 1.1950000002869388e-06}, {'diff': 1.18000000082219e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.2090000005571255e-06}, {'diff': 1.2089999996689471e-06...</msg>
<status status="PASS" starttime="20201029 18:14:22.966" endtime="20201029 18:14:22.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.974" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000002869388e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2090000005571255e-06, 1.2089999996689471e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 18:14:22.971" endtime="20201029 18:14:22.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.979" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:22.977" endtime="20201029 18:14:22.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.981" level="INFO">VALUE: [1.1950000002869388e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2090000005571255e-06, 1.2089999996689471e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.250000000396767e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.2639999997787754e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.2359999992384019e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.19399999931602e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.2219999998563935e-06]</msg>
<status status="PASS" starttime="20201029 18:14:22.980" endtime="20201029 18:14:22.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.975" endtime="20201029 18:14:22.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.600" endtime="20201029 18:14:22.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.599" endtime="20201029 18:14:22.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.271" endtime="20201029 18:14:22.983"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:15.203" endtime="20201029 18:14:22.983" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:22.991" endtime="20201029 18:14:23.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.988" endtime="20201029 18:14:23.011"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.024" endtime="20201029 18:14:23.037"></status>
</kw>
<msg timestamp="20201029 18:14:23.037" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.023" endtime="20201029 18:14:23.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.038" endtime="20201029 18:14:23.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.043" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:23.041" endtime="20201029 18:14:23.043"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:23.020" endtime="20201029 18:14:23.043"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:23.017" endtime="20201029 18:14:23.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.016" endtime="20201029 18:14:23.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:23.048" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:23.047" endtime="20201029 18:14:23.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.045" endtime="20201029 18:14:23.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.015" endtime="20201029 18:14:23.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.015" endtime="20201029 18:14:23.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.050" endtime="20201029 18:14:23.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.013" endtime="20201029 18:14:23.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.012" endtime="20201029 18:14:23.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.987" endtime="20201029 18:14:23.052"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.061" endtime="20201029 18:14:23.073"></status>
</kw>
<msg timestamp="20201029 18:14:23.073" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.059" endtime="20201029 18:14:23.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.076" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.074" endtime="20201029 18:14:23.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.077" endtime="20201029 18:14:23.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.057" endtime="20201029 18:14:23.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.055" endtime="20201029 18:14:23.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.086" endtime="20201029 18:14:23.372"></status>
</kw>
<msg timestamp="20201029 18:14:23.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061902153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061914153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.084" endtime="20201029 18:14:23.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061902153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061914153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.376" endtime="20201029 18:14:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.384" endtime="20201029 18:14:23.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.082" endtime="20201029 18:14:23.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.080" endtime="20201029 18:14:23.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.391" level="INFO">${RESULT} = [{'diff': 1.1999999999998123e-05}, {'diff': 1.1387999999994125e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1375000000000968e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1375000000000968e-...</msg>
<status status="PASS" starttime="20201029 18:14:23.388" endtime="20201029 18:14:23.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.395" level="INFO">${OVERHEAD} = {'diff': [1.1999999999998123e-05, 1.1387999999994125e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1429999999999774e-05, 1.1403000000000107e-05...</msg>
<status status="PASS" starttime="20201029 18:14:23.392" endtime="20201029 18:14:23.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.400" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:23.399" endtime="20201029 18:14:23.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.402" level="INFO">VALUE: [1.1999999999998123e-05, 1.1387999999994125e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1457999999998913e-05, 1.1403000000000107e-05, 1.1402000000000634e-05, 1.1444999999998817e-05, 1.1430999999999247e-05, 1.1389000000000538e-05, 1.1444999999998817e-05, 1.1443999999999344e-05, 1.1375000000007907e-05, 1.1401999999993695e-05, 1.1389000000000538e-05, 1.1402999999993169e-05, 1.1402999999993169e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000007046e-05, 1.1431000000006186e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1374999999994029e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1458000000005852e-05, 1.1389000000000538e-05, 1.1402999999993169e-05, 1.1389000000000538e-05, 1.1375000000007907e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000007046e-05, 1.1333000000002258e-05, 1.1389000000000538e-05, 1.1401999999993695e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1374999999994029e-05]</msg>
<status status="PASS" starttime="20201029 18:14:23.401" endtime="20201029 18:14:23.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.396" endtime="20201029 18:14:23.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.054" endtime="20201029 18:14:23.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.053" endtime="20201029 18:14:23.404"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.412" endtime="20201029 18:14:23.423"></status>
</kw>
<msg timestamp="20201029 18:14:23.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.411" endtime="20201029 18:14:23.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.425" endtime="20201029 18:14:23.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.427" endtime="20201029 18:14:23.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.408" endtime="20201029 18:14:23.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.406" endtime="20201029 18:14:23.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.436" endtime="20201029 18:14:23.742"></status>
</kw>
<msg timestamp="20201029 18:14:23.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063086278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063097667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.435" endtime="20201029 18:14:23.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063086278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063097667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.747" endtime="20201029 18:14:23.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.756" endtime="20201029 18:14:23.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.432" endtime="20201029 18:14:23.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.430" endtime="20201029 18:14:23.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.764" level="INFO">${RESULT} = [{'diff': 1.1389000000000538e-05}, {'diff': 1.1402999999993169e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1375000000007907e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1388000000001064e-...</msg>
<status status="PASS" starttime="20201029 18:14:23.760" endtime="20201029 18:14:23.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.769" level="INFO">${OVERHEAD} = {'diff': [1.1389000000000538e-05, 1.1402999999993169e-05, 1.1389000000000538e-05, 1.1375000000007907e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000007046e-05...</msg>
<status status="PASS" starttime="20201029 18:14:23.765" endtime="20201029 18:14:23.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.773" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:23.772" endtime="20201029 18:14:23.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.776" level="INFO">VALUE: [1.1389000000000538e-05, 1.1402999999993169e-05, 1.1389000000000538e-05, 1.1375000000007907e-05, 1.1389000000000538e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000007046e-05, 1.1333000000002258e-05, 1.1389000000000538e-05, 1.1401999999993695e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1374999999994029e-05, 1.2000000000012001e-05, 1.1375000000035662e-05, 1.1416999999958044e-05, 1.1403000000020924e-05, 1.1402999999965413e-05, 1.1346999999994889e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1389000000028293e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1402999999965413e-05, 1.1374999999980151e-05, 1.1374999999980151e-05, 1.136099999998752e-05, 1.1402999999965413e-05, 1.1389000000028293e-05, 1.1389000000028293e-05, 1.1403000000020924e-05, 1.1388000000001064e-05, 1.1389000000028293e-05, 1.1374999999980151e-05, 1.145800000001973e-05, 1.1374999999980151e-05, 1.1402999999965413e-05, 1.1417000000013555e-05, 1.1388000000001064e-05, 1.1402999999965413e-05, 1.1375000000035662e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1403000000020924e-05, 1.1429999999978957e-05, 1.136099999998752e-05, 1.1374999999980151e-05, 1.1319999999981345e-05, 1.1361000000043031e-05, 1.1348000000022118e-05, 1.1416999999958044e-05, 1.1401999999993695e-05, 1.1415999999986326e-05, 1.1429999999978957e-05, 1.1403000000020924e-05, 1.1458999999991448e-05, 1.1388000000001064e-05, 1.1388999999972782e-05, 1.1401999999993695e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1306000000044225e-05]</msg>
<status status="PASS" starttime="20201029 18:14:23.775" endtime="20201029 18:14:23.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.770" endtime="20201029 18:14:23.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.405" endtime="20201029 18:14:23.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.405" endtime="20201029 18:14:23.778"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.785" endtime="20201029 18:14:23.796"></status>
</kw>
<msg timestamp="20201029 18:14:23.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.784" endtime="20201029 18:14:23.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.798" endtime="20201029 18:14:23.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.800" endtime="20201029 18:14:23.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.781" endtime="20201029 18:14:23.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.780" endtime="20201029 18:14:23.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.809" endtime="20201029 18:14:24.110"></status>
</kw>
<msg timestamp="20201029 18:14:24.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.404367069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.808" endtime="20201029 18:14:24.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.404367069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.115" endtime="20201029 18:14:24.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.126" endtime="20201029 18:14:24.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.805" endtime="20201029 18:14:24.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.803" endtime="20201029 18:14:24.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.144" level="INFO">${RESULT} = [{'diff': 1.1361000000043031e-05}, {'diff': 1.1348000000022118e-05}, {'diff': 1.1416999999958044e-05}, {'diff': 1.1401999999993695e-05}, {'diff': 1.1415999999986326e-05}, {'diff': 1.1429999999978957e-...</msg>
<status status="PASS" starttime="20201029 18:14:24.138" endtime="20201029 18:14:24.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.151" level="INFO">${OVERHEAD} = {'diff': [1.1361000000043031e-05, 1.1348000000022118e-05, 1.1416999999958044e-05, 1.1401999999993695e-05, 1.1415999999986326e-05, 1.1429999999978957e-05, 1.1403000000020924e-05, 1.1458999999991448e-05...</msg>
<status status="PASS" starttime="20201029 18:14:24.145" endtime="20201029 18:14:24.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.156" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:24.155" endtime="20201029 18:14:24.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.159" level="INFO">VALUE: [1.1361000000043031e-05, 1.1348000000022118e-05, 1.1416999999958044e-05, 1.1401999999993695e-05, 1.1415999999986326e-05, 1.1429999999978957e-05, 1.1403000000020924e-05, 1.1458999999991448e-05, 1.1388000000001064e-05, 1.1388999999972782e-05, 1.1401999999993695e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1306000000044225e-05, 1.2000000000012001e-05, 1.1388999999972782e-05, 1.1389000000083804e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1389000000083804e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1333999999973976e-05, 1.1401999999938184e-05, 1.1388999999972782e-05, 1.145900000010247e-05, 1.1389000000083804e-05, 1.1402999999909902e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1445000000054328e-05, 1.1388999999972782e-05, 1.1388000000001064e-05, 1.1402000000049206e-05, 1.1389000000083804e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1402000000049206e-05, 1.1375000000035662e-05, 1.1388000000001064e-05, 1.1402000000049206e-05, 1.1388000000001064e-05, 1.1389000000083804e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388000000001064e-05, 1.1402999999909902e-05, 1.1402999999909902e-05, 1.1402000000049206e-05, 1.1402999999909902e-05, 1.1375000000035662e-05, 1.1416999999958044e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:24.158" endtime="20201029 18:14:24.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.152" endtime="20201029 18:14:24.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.778" endtime="20201029 18:14:24.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.778" endtime="20201029 18:14:24.161"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.169" endtime="20201029 18:14:24.180"></status>
</kw>
<msg timestamp="20201029 18:14:24.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.167" endtime="20201029 18:14:24.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.182" endtime="20201029 18:14:24.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.184" endtime="20201029 18:14:24.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.164" endtime="20201029 18:14:24.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.163" endtime="20201029 18:14:24.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.193" endtime="20201029 18:14:24.499"></status>
</kw>
<msg timestamp="20201029 18:14:24.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.767229722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.767241097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.192" endtime="20201029 18:14:24.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.767229722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.767241097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.503" endtime="20201029 18:14:24.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.514" endtime="20201029 18:14:24.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.189" endtime="20201029 18:14:24.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.187" endtime="20201029 18:14:24.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.521" level="INFO">${RESULT} = [{'diff': 1.1375000000035662e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1388000000001064e-05}, {'diff': 1.1402999999909902e-05}, {'diff': 1.1402999999909902e-...</msg>
<status status="PASS" starttime="20201029 18:14:24.517" endtime="20201029 18:14:24.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.526" level="INFO">${OVERHEAD} = {'diff': [1.1375000000035662e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388000000001064e-05, 1.1402999999909902e-05, 1.1402999999909902e-05, 1.1402000000049206e-05, 1.1402999999909902e-05...</msg>
<status status="PASS" starttime="20201029 18:14:24.522" endtime="20201029 18:14:24.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.530" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:24.529" endtime="20201029 18:14:24.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.533" level="INFO">VALUE: [1.1375000000035662e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388000000001064e-05, 1.1402999999909902e-05, 1.1402999999909902e-05, 1.1402000000049206e-05, 1.1402999999909902e-05, 1.1375000000035662e-05, 1.1416999999958044e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.207000000014169e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1375000000146684e-05, 1.1388000000112086e-05, 1.1430999999895164e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1417000000069066e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1375000000146684e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.1388999999972782e-05, 1.147199999995685e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1416999999847022e-05, 1.1458999999991448e-05, 1.1333000000002258e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05]</msg>
<status status="PASS" starttime="20201029 18:14:24.531" endtime="20201029 18:14:24.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.527" endtime="20201029 18:14:24.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.161" endtime="20201029 18:14:24.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.161" endtime="20201029 18:14:24.534"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.542" endtime="20201029 18:14:24.553"></status>
</kw>
<msg timestamp="20201029 18:14:24.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.541" endtime="20201029 18:14:24.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.555" endtime="20201029 18:14:24.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.557" endtime="20201029 18:14:24.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.538" endtime="20201029 18:14:24.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.536" endtime="20201029 18:14:24.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.566" endtime="20201029 18:14:24.875"></status>
</kw>
<msg timestamp="20201029 18:14:24.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142371125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142382514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.565" endtime="20201029 18:14:24.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142371125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142382514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.881" endtime="20201029 18:14:24.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.892" endtime="20201029 18:14:24.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.562" endtime="20201029 18:14:24.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.560" endtime="20201029 18:14:24.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.899" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1417000000069066e-...</msg>
<status status="PASS" starttime="20201029 18:14:24.895" endtime="20201029 18:14:24.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.904" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1403000000020924e-05...</msg>
<status status="PASS" starttime="20201029 18:14:24.900" endtime="20201029 18:14:24.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.908" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:24.907" endtime="20201029 18:14:24.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.911" level="INFO">VALUE: [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.2027999999997263e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.137499999992464e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1457999999908708e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1415999999986326e-05, 1.1416999999847022e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1431000000117209e-05, 1.1375000000146684e-05, 1.1403000000020924e-05, 1.134800000013314e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1388000000112086e-05, 1.1403000000020924e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.137499999992464e-05, 1.1403000000020924e-05, 1.1458999999991448e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.144400000008261e-05, 1.1443999999860566e-05, 1.1403000000020924e-05, 1.1402000000160228e-05, 1.1417000000069066e-05, 1.1389000000194827e-05]</msg>
<status status="PASS" starttime="20201029 18:14:24.910" endtime="20201029 18:14:24.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.905" endtime="20201029 18:14:24.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.535" endtime="20201029 18:14:24.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.535" endtime="20201029 18:14:24.913"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.920" endtime="20201029 18:14:24.931"></status>
</kw>
<msg timestamp="20201029 18:14:24.932" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.919" endtime="20201029 18:14:24.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.934" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.933" endtime="20201029 18:14:24.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.935" endtime="20201029 18:14:24.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.916" endtime="20201029 18:14:24.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.915" endtime="20201029 18:14:24.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.944" endtime="20201029 18:14:25.238"></status>
</kw>
<msg timestamp="20201029 18:14:25.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505237847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.505249222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.943" endtime="20201029 18:14:25.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.505237847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.505249222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.243" endtime="20201029 18:14:25.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.254" endtime="20201029 18:14:25.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.940" endtime="20201029 18:14:25.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.939" endtime="20201029 18:14:25.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.261" level="INFO">${RESULT} = [{'diff': 1.137499999992464e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1458999999991448e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388000000112086e-05}, {'diff': 1.1388999999972782e-0...</msg>
<status status="PASS" starttime="20201029 18:14:25.257" endtime="20201029 18:14:25.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.265" level="INFO">${OVERHEAD} = {'diff': [1.137499999992464e-05, 1.1403000000020924e-05, 1.1458999999991448e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:25.262" endtime="20201029 18:14:25.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.270" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.269" endtime="20201029 18:14:25.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.273" level="INFO">VALUE: [1.137499999992464e-05, 1.1403000000020924e-05, 1.1458999999991448e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.144400000008261e-05, 1.1443999999860566e-05, 1.1403000000020924e-05, 1.1402000000160228e-05, 1.1417000000069066e-05, 1.1389000000194827e-05, 1.2027999999997263e-05, 1.1388999999972782e-05, 1.1430000000034468e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1431000000117209e-05, 1.1388999999972782e-05, 1.1333000000002258e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1415999999986326e-05, 1.1415999999986326e-05, 1.1401999999938184e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.1443999999860566e-05, 1.1429999999812424e-05, 1.1401999999938184e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1361000000098542e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.137499999992464e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.147199999995685e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:25.271" endtime="20201029 18:14:25.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.266" endtime="20201029 18:14:25.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.913" endtime="20201029 18:14:25.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.913" endtime="20201029 18:14:25.276"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.285" endtime="20201029 18:14:25.296"></status>
</kw>
<msg timestamp="20201029 18:14:25.296" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.283" endtime="20201029 18:14:25.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.299" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.297" endtime="20201029 18:14:25.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.300" endtime="20201029 18:14:25.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.280" endtime="20201029 18:14:25.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.279" endtime="20201029 18:14:25.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.309" endtime="20201029 18:14:25.618"></status>
</kw>
<msg timestamp="20201029 18:14:25.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8735495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.873560875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:25.307" endtime="20201029 18:14:25.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.8735495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.873560875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:25.624" endtime="20201029 18:14:25.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.634" endtime="20201029 18:14:25.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.305" endtime="20201029 18:14:25.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.303" endtime="20201029 18:14:25.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.640" level="INFO">${RESULT} = [{'diff': 1.137499999992464e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1430999999895164e-05}, {'diff': 1.137499999992464e-05}, {'diff': 1.1417000000069066e-05...</msg>
<status status="PASS" starttime="20201029 18:14:25.637" endtime="20201029 18:14:25.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.646" level="INFO">${OVERHEAD} = {'diff': [1.137499999992464e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.137499999992464e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:25.641" endtime="20201029 18:14:25.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.650" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:25.649" endtime="20201029 18:14:25.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.652" level="INFO">VALUE: [1.137499999992464e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.137499999992464e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.147199999995685e-05, 1.1388999999972782e-05, 1.2014000000171166e-05, 1.1374999999702595e-05, 1.1375000000146684e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1346999999606311e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1319000000398205e-05, 1.144400000008261e-05, 1.1429999999812424e-05, 1.1429999999812424e-05, 1.1375000000146684e-05, 1.1320000000036856e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.140199999971614e-05, 1.1375000000146684e-05, 1.1458000000352797e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1402000000160228e-05]</msg>
<status status="PASS" starttime="20201029 18:14:25.651" endtime="20201029 18:14:25.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.646" endtime="20201029 18:14:25.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.277" endtime="20201029 18:14:25.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.276" endtime="20201029 18:14:25.654"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.661" endtime="20201029 18:14:25.672"></status>
</kw>
<msg timestamp="20201029 18:14:25.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.660" endtime="20201029 18:14:25.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.676" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.675" endtime="20201029 18:14:25.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.677" endtime="20201029 18:14:25.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.657" endtime="20201029 18:14:25.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.656" endtime="20201029 18:14:25.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.686" endtime="20201029 18:14:26.010"></status>
</kw>
<msg timestamp="20201029 18:14:26.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228092375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.228103778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.685" endtime="20201029 18:14:26.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228092375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.228103778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.022" endtime="20201029 18:14:26.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.045" endtime="20201029 18:14:26.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.682" endtime="20201029 18:14:26.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.680" endtime="20201029 18:14:26.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.059" level="INFO">${RESULT} = [{'diff': 1.140299999979888e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.140299999979888e-05...</msg>
<status status="PASS" starttime="20201029 18:14:26.052" endtime="20201029 18:14:26.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.065" level="INFO">${OVERHEAD} = {'diff': [1.140299999979888e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:26.060" endtime="20201029 18:14:26.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.069" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.068" endtime="20201029 18:14:26.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.072" level="INFO">VALUE: [1.140299999979888e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1430000000256513e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.13470000000504e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.1360999999876498e-05, 1.1402000000160228e-05, 1.1387999999890042e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1444999999721261e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140199999971614e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:26.070" endtime="20201029 18:14:26.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.066" endtime="20201029 18:14:26.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.654" endtime="20201029 18:14:26.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.654" endtime="20201029 18:14:26.073"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.081" endtime="20201029 18:14:26.092"></status>
</kw>
<msg timestamp="20201029 18:14:26.093" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.080" endtime="20201029 18:14:26.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.094" endtime="20201029 18:14:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.096" endtime="20201029 18:14:26.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.077" endtime="20201029 18:14:26.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.075" endtime="20201029 18:14:26.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.106" endtime="20201029 18:14:26.424"></status>
</kw>
<msg timestamp="20201029 18:14:26.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.595420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.595431583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.103" endtime="20201029 18:14:26.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.595420181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.595431583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.429" endtime="20201029 18:14:26.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.439" endtime="20201029 18:14:26.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.101" endtime="20201029 18:14:26.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.099" endtime="20201029 18:14:26.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.446" level="INFO">${RESULT} = [{'diff': 1.140199999971614e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1417000000069066e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1389000000416871e-05...</msg>
<status status="PASS" starttime="20201029 18:14:26.442" endtime="20201029 18:14:26.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.450" level="INFO">${OVERHEAD} = {'diff': [1.140199999971614e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:14:26.447" endtime="20201029 18:14:26.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.454" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.453" endtime="20201029 18:14:26.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.457" level="INFO">VALUE: [1.140199999971614e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1389000000416871e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1999999999900979e-05, 1.140299999979888e-05, 1.1415999999986326e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1360999999876498e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1415999999986326e-05, 1.1431000000339253e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1417000000069066e-05, 1.1430999999895164e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1431000000339253e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1389000000416871e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:26.455" endtime="20201029 18:14:26.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.451" endtime="20201029 18:14:26.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.074" endtime="20201029 18:14:26.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.074" endtime="20201029 18:14:26.458"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.467" endtime="20201029 18:14:26.478"></status>
</kw>
<msg timestamp="20201029 18:14:26.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.466" endtime="20201029 18:14:26.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.480" endtime="20201029 18:14:26.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.482" endtime="20201029 18:14:26.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.463" endtime="20201029 18:14:26.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.460" endtime="20201029 18:14:26.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.491" endtime="20201029 18:14:26.812"></status>
</kw>
<msg timestamp="20201029 18:14:26.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.004329347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.004340764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.490" endtime="20201029 18:14:26.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.004329347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.004340764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.817" endtime="20201029 18:14:26.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.827" endtime="20201029 18:14:26.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.487" endtime="20201029 18:14:26.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.485" endtime="20201029 18:14:26.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:26.833" level="INFO">${RESULT} = [{'diff': 1.1417000000069066e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1389000000416871e-0...</msg>
<status status="PASS" starttime="20201029 18:14:26.830" endtime="20201029 18:14:26.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:26.839" level="INFO">${OVERHEAD} = {'diff': [1.1417000000069066e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1389000000416871e-05, 1.1375000000146684e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:26.834" endtime="20201029 18:14:26.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.843" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:26.842" endtime="20201029 18:14:26.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.846" level="INFO">VALUE: [1.1417000000069066e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1389000000416871e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.2027999999997263e-05, 1.1402000000160228e-05, 1.134800000013314e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1361999999959238e-05, 1.1320000000036856e-05, 1.140199999971614e-05, 1.1402000000160228e-05, 1.1387999999890042e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.13470000000504e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1431000000339253e-05, 1.1305000000128018e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1431000000339253e-05, 1.1374999999702595e-05, 1.13470000000504e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.140299999979888e-05]</msg>
<status status="PASS" starttime="20201029 18:14:26.844" endtime="20201029 18:14:26.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.840" endtime="20201029 18:14:26.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.459" endtime="20201029 18:14:26.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.459" endtime="20201029 18:14:26.847"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.855" endtime="20201029 18:14:26.866"></status>
</kw>
<msg timestamp="20201029 18:14:26.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.853" endtime="20201029 18:14:26.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.869" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.867" endtime="20201029 18:14:26.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.870" endtime="20201029 18:14:26.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.851" endtime="20201029 18:14:26.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.849" endtime="20201029 18:14:26.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.879" endtime="20201029 18:14:27.190"></status>
</kw>
<msg timestamp="20201029 18:14:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379386889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:26.878" endtime="20201029 18:14:27.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.379375542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.379386889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.194" endtime="20201029 18:14:27.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.204" endtime="20201029 18:14:27.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.875" endtime="20201029 18:14:27.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.873" endtime="20201029 18:14:27.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.212" level="INFO">${RESULT} = [{'diff': 1.13470000000504e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05...</msg>
<status status="PASS" starttime="20201029 18:14:27.208" endtime="20201029 18:14:27.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.217" level="INFO">${OVERHEAD} = {'diff': [1.13470000000504e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:27.213" endtime="20201029 18:14:27.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.221" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.220" endtime="20201029 18:14:27.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.224" level="INFO">VALUE: [1.13470000000504e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.2014000000171166e-05, 1.1403000000242969e-05, 1.140199999971614e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1444999999721261e-05, 1.1403000000242969e-05, 1.1458999999991448e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1334000000307043e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.140199999971614e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1387999999890042e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1458999999991448e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1417000000069066e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1444999999721261e-05]</msg>
<status status="PASS" starttime="20201029 18:14:27.222" endtime="20201029 18:14:27.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.218" endtime="20201029 18:14:27.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.848" endtime="20201029 18:14:27.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.848" endtime="20201029 18:14:27.225"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.233" endtime="20201029 18:14:27.244"></status>
</kw>
<msg timestamp="20201029 18:14:27.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.231" endtime="20201029 18:14:27.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.245" endtime="20201029 18:14:27.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.248" endtime="20201029 18:14:27.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.229" endtime="20201029 18:14:27.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.227" endtime="20201029 18:14:27.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.260" endtime="20201029 18:14:27.574"></status>
</kw>
<msg timestamp="20201029 18:14:27.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.756262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.756274028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.258" endtime="20201029 18:14:27.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.756262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.756274028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.579" endtime="20201029 18:14:27.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.589" endtime="20201029 18:14:27.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.253" endtime="20201029 18:14:27.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.252" endtime="20201029 18:14:27.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.596" level="INFO">${RESULT} = [{'diff': 1.140299999979888e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1458999999991448e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-0...</msg>
<status status="PASS" starttime="20201029 18:14:27.593" endtime="20201029 18:14:27.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.601" level="INFO">${OVERHEAD} = {'diff': [1.140299999979888e-05, 1.1375000000146684e-05, 1.1458999999991448e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:27.597" endtime="20201029 18:14:27.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.605" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.604" endtime="20201029 18:14:27.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.608" level="INFO">VALUE: [1.140299999979888e-05, 1.1375000000146684e-05, 1.1458999999991448e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1417000000069066e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1444999999721261e-05, 1.1999999999900979e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1472000000622984e-05, 1.144400000008261e-05, 1.13470000000504e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1346999999162222e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.140199999927205e-05, 1.1417000000513156e-05, 1.1375000000590774e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1374999999702595e-05, 1.1458000000352797e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.13470000000504e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:27.607" endtime="20201029 18:14:27.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.602" endtime="20201029 18:14:27.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.226" endtime="20201029 18:14:27.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.225" endtime="20201029 18:14:27.610"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.618" endtime="20201029 18:14:27.628"></status>
</kw>
<msg timestamp="20201029 18:14:27.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.616" endtime="20201029 18:14:27.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.630" endtime="20201029 18:14:27.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.633" endtime="20201029 18:14:27.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.613" endtime="20201029 18:14:27.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.612" endtime="20201029 18:14:27.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.642" endtime="20201029 18:14:27.951"></status>
</kw>
<msg timestamp="20201029 18:14:27.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.125233528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.125244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.640" endtime="20201029 18:14:27.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.125233528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.125244986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:27.956" endtime="20201029 18:14:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.966" endtime="20201029 18:14:27.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.638" endtime="20201029 18:14:27.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.636" endtime="20201029 18:14:27.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:27.973" level="INFO">${RESULT} = [{'diff': 1.1458000000352797e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1403000000242969e-0...</msg>
<status status="PASS" starttime="20201029 18:14:27.970" endtime="20201029 18:14:27.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:27.979" level="INFO">${OVERHEAD} = {'diff': [1.1458000000352797e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:27.974" endtime="20201029 18:14:27.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.983" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:27.982" endtime="20201029 18:14:27.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:27.986" level="INFO">VALUE: [1.1458000000352797e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1416000000430415e-05, 1.140299999935479e-05, 1.1402000000160228e-05, 1.1416999999624977e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.144400000008261e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.144500000016535e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1416000000430415e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1416999999624977e-05]</msg>
<status status="PASS" starttime="20201029 18:14:27.984" endtime="20201029 18:14:27.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.980" endtime="20201029 18:14:27.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.610" endtime="20201029 18:14:27.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.610" endtime="20201029 18:14:27.987"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:27.995" endtime="20201029 18:14:28.006"></status>
</kw>
<msg timestamp="20201029 18:14:28.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:27.993" endtime="20201029 18:14:28.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.009" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.007" endtime="20201029 18:14:28.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.010" endtime="20201029 18:14:28.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.991" endtime="20201029 18:14:28.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.989" endtime="20201029 18:14:28.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.019" endtime="20201029 18:14:28.335"></status>
</kw>
<msg timestamp="20201029 18:14:28.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.500707986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.500719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.018" endtime="20201029 18:14:28.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.500707986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.500719375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.341" endtime="20201029 18:14:28.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.351" endtime="20201029 18:14:28.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.015" endtime="20201029 18:14:28.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.013" endtime="20201029 18:14:28.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.357" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 18:14:28.354" endtime="20201029 18:14:28.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.364" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.144500000016535e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:28.359" endtime="20201029 18:14:28.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.368" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.367" endtime="20201029 18:14:28.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.371" level="INFO">VALUE: [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.144500000016535e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1416000000430415e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1333000000668392e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.1417000000513156e-05, 1.1403000000242969e-05, 1.138800000077822e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1415999999542237e-05, 1.13470000000504e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1457999999464619e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1444999999277172e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:28.369" endtime="20201029 18:14:28.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.365" endtime="20201029 18:14:28.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.988" endtime="20201029 18:14:28.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:27.987" endtime="20201029 18:14:28.373"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.383" endtime="20201029 18:14:28.394"></status>
</kw>
<msg timestamp="20201029 18:14:28.395" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.381" endtime="20201029 18:14:28.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.398" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.396" endtime="20201029 18:14:28.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.400" endtime="20201029 18:14:28.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.377" endtime="20201029 18:14:28.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.375" endtime="20201029 18:14:28.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.410" endtime="20201029 18:14:28.728"></status>
</kw>
<msg timestamp="20201029 18:14:28.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.866072861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.866084319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.409" endtime="20201029 18:14:28.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.866072861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.866084319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.733" endtime="20201029 18:14:28.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.743" endtime="20201029 18:14:28.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.406" endtime="20201029 18:14:28.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.405" endtime="20201029 18:14:28.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:28.751" level="INFO">${RESULT} = [{'diff': 1.1457999999464619e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 18:14:28.747" endtime="20201029 18:14:28.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:28.756" level="INFO">${OVERHEAD} = {'diff': [1.1457999999464619e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1444999999277172e-05...</msg>
<status status="PASS" starttime="20201029 18:14:28.752" endtime="20201029 18:14:28.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.760" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:28.759" endtime="20201029 18:14:28.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.763" level="INFO">VALUE: [1.1457999999464619e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1444999999277172e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1388999999972782e-05, 1.1944000000596589e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1387999999890042e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1362000000403327e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.13470000000504e-05]</msg>
<status status="PASS" starttime="20201029 18:14:28.761" endtime="20201029 18:14:28.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.757" endtime="20201029 18:14:28.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.374" endtime="20201029 18:14:28.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.373" endtime="20201029 18:14:28.764"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.772" endtime="20201029 18:14:28.783"></status>
</kw>
<msg timestamp="20201029 18:14:28.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.771" endtime="20201029 18:14:28.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:28.786" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:28.785" endtime="20201029 18:14:28.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.787" endtime="20201029 18:14:28.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.768" endtime="20201029 18:14:28.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.766" endtime="20201029 18:14:28.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:28.796" endtime="20201029 18:14:29.106"></status>
</kw>
<msg timestamp="20201029 18:14:29.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.243801931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.243813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:28.795" endtime="20201029 18:14:29.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.243801931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.243813278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.111" endtime="20201029 18:14:29.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.121" endtime="20201029 18:14:29.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.792" endtime="20201029 18:14:29.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.791" endtime="20201029 18:14:29.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.128" level="INFO">${RESULT} = [{'diff': 1.13470000000504e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.144400000008261e-05}, {'diff': 1.1362000000403327e-05}, {'diff': 1.140199999927205e-05}, {'diff': 1.1403000000242969e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:29.125" endtime="20201029 18:14:29.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.134" level="INFO">${OVERHEAD} = {'diff': [1.13470000000504e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1362000000403327e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:14:29.129" endtime="20201029 18:14:29.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.138" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.137" endtime="20201029 18:14:29.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.141" level="INFO">VALUE: [1.13470000000504e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1362000000403327e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.13470000000504e-05, 1.2013999999282987e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1429999999812424e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.13470000000504e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1429999999812424e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1459000000435537e-05, 1.1417000000513156e-05]</msg>
<status status="PASS" starttime="20201029 18:14:29.139" endtime="20201029 18:14:29.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.135" endtime="20201029 18:14:29.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.765" endtime="20201029 18:14:29.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:28.765" endtime="20201029 18:14:29.142"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.155" endtime="20201029 18:14:29.166"></status>
</kw>
<msg timestamp="20201029 18:14:29.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.148" endtime="20201029 18:14:29.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.167" endtime="20201029 18:14:29.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.170" endtime="20201029 18:14:29.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.146" endtime="20201029 18:14:29.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.144" endtime="20201029 18:14:29.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.179" endtime="20201029 18:14:29.496"></status>
</kw>
<msg timestamp="20201029 18:14:29.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.622187972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.622199375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.177" endtime="20201029 18:14:29.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.622187972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.622199375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.502" endtime="20201029 18:14:29.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.514" endtime="20201029 18:14:29.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.175" endtime="20201029 18:14:29.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.173" endtime="20201029 18:14:29.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.522" level="INFO">${RESULT} = [{'diff': 1.1403000000242969e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1429999999812424e-05}, {'diff': 1.1360999999432408e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 18:14:29.519" endtime="20201029 18:14:29.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.527" level="INFO">${OVERHEAD} = {'diff': [1.1403000000242969e-05, 1.1387999999890042e-05, 1.1429999999812424e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05...</msg>
<status status="PASS" starttime="20201029 18:14:29.523" endtime="20201029 18:14:29.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.531" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.530" endtime="20201029 18:14:29.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.534" level="INFO">VALUE: [1.1403000000242969e-05, 1.1387999999890042e-05, 1.1429999999812424e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1459000000435537e-05, 1.1417000000513156e-05, 1.208300000055118e-05, 1.1374999999702595e-05, 1.1332999999780213e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1415999999542237e-05, 1.1360999999432408e-05, 1.140299999935479e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1415999999542237e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1417000000513156e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1471999999734805e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.144500000016535e-05, 1.144400000008261e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1471999999734805e-05, 1.1403000000242969e-05, 1.1375000000590774e-05]</msg>
<status status="PASS" starttime="20201029 18:14:29.532" endtime="20201029 18:14:29.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.528" endtime="20201029 18:14:29.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.143" endtime="20201029 18:14:29.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.142" endtime="20201029 18:14:29.535"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.544" endtime="20201029 18:14:29.555"></status>
</kw>
<msg timestamp="20201029 18:14:29.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.543" endtime="20201029 18:14:29.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.557" endtime="20201029 18:14:29.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.559" endtime="20201029 18:14:29.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.539" endtime="20201029 18:14:29.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.537" endtime="20201029 18:14:29.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.568" endtime="20201029 18:14:29.879"></status>
</kw>
<msg timestamp="20201029 18:14:29.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993395514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993406944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.567" endtime="20201029 18:14:29.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.993395514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.993406944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.884" endtime="20201029 18:14:29.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.894" endtime="20201029 18:14:29.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.564" endtime="20201029 18:14:29.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.563" endtime="20201029 18:14:29.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:29.901" level="INFO">${RESULT} = [{'diff': 1.1429999999812424e-05}, {'diff': 1.1416000000430415e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.144500000016535e-0...</msg>
<status status="PASS" starttime="20201029 18:14:29.897" endtime="20201029 18:14:29.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:29.906" level="INFO">${OVERHEAD} = {'diff': [1.1429999999812424e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.144500000016535e-05, 1.144400000008261e-05, 1.1402000000160228e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:29.902" endtime="20201029 18:14:29.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.910" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:29.909" endtime="20201029 18:14:29.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.913" level="INFO">VALUE: [1.1429999999812424e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.144500000016535e-05, 1.144400000008261e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1471999999734805e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.2014000000171166e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1415999999542237e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.138900000086096e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1387999999890042e-05, 1.140199999927205e-05]</msg>
<status status="PASS" starttime="20201029 18:14:29.912" endtime="20201029 18:14:29.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.907" endtime="20201029 18:14:29.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.536" endtime="20201029 18:14:29.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.536" endtime="20201029 18:14:29.914"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.923" endtime="20201029 18:14:29.934"></status>
</kw>
<msg timestamp="20201029 18:14:29.934" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.921" endtime="20201029 18:14:29.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.937" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:29.935" endtime="20201029 18:14:29.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.938" endtime="20201029 18:14:29.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.919" endtime="20201029 18:14:29.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.917" endtime="20201029 18:14:29.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:29.947" endtime="20201029 18:14:30.263"></status>
</kw>
<msg timestamp="20201029 18:14:30.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.372150417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.372161833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:29.945" endtime="20201029 18:14:30.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.372150417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.372161833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.268" endtime="20201029 18:14:30.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.278" endtime="20201029 18:14:30.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.943" endtime="20201029 18:14:30.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.941" endtime="20201029 18:14:30.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.285" level="INFO">${RESULT} = [{'diff': 1.1415999999542237e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1430999999895164e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 18:14:30.281" endtime="20201029 18:14:30.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.290" level="INFO">${OVERHEAD} = {'diff': [1.1415999999542237e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05...</msg>
<status status="PASS" starttime="20201029 18:14:30.286" endtime="20201029 18:14:30.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.294" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.293" endtime="20201029 18:14:30.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.297" level="INFO">VALUE: [1.1415999999542237e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.138900000086096e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1387999999890042e-05, 1.140199999927205e-05, 1.198600000051897e-05, 1.1430999999895164e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1362000000403327e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.144400000008261e-05, 1.1417000000513156e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.144500000016535e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.1416000000430415e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1429999999812424e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1430999999895164e-05, 1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1333999999862954e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1375000000590774e-05]</msg>
<status status="PASS" starttime="20201029 18:14:30.296" endtime="20201029 18:14:30.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.291" endtime="20201029 18:14:30.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.916" endtime="20201029 18:14:30.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.915" endtime="20201029 18:14:30.299"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.307" endtime="20201029 18:14:30.318"></status>
</kw>
<msg timestamp="20201029 18:14:30.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.305" endtime="20201029 18:14:30.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.321" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.319" endtime="20201029 18:14:30.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.322" endtime="20201029 18:14:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.303" endtime="20201029 18:14:30.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.301" endtime="20201029 18:14:30.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.332" endtime="20201029 18:14:30.651"></status>
</kw>
<msg timestamp="20201029 18:14:30.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.73976125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.739772653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:30.330" endtime="20201029 18:14:30.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.73976125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.739772653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:30.656" endtime="20201029 18:14:30.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.666" endtime="20201029 18:14:30.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.327" endtime="20201029 18:14:30.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.325" endtime="20201029 18:14:30.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.673" level="INFO">${RESULT} = [{'diff': 1.1403000000242969e-05}, {'diff': 1.1430999999895164e-05}, {'diff': 1.1375000000590774e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 18:14:30.669" endtime="20201029 18:14:30.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:30.677" level="INFO">${OVERHEAD} = {'diff': [1.1403000000242969e-05, 1.1430999999895164e-05, 1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:30.674" endtime="20201029 18:14:30.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.682" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:30.681" endtime="20201029 18:14:30.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.687" level="INFO">VALUE: [1.1403000000242969e-05, 1.1430999999895164e-05, 1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1333999999862954e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1375000000590774e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1458999999547359e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1402000000160228e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1360999999432408e-05, 1.138900000086096e-05, 1.1388999999972782e-05, 1.1320000000480945e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1361999999515149e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 18:14:30.683" endtime="20201029 18:14:30.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.678" endtime="20201029 18:14:30.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.300" endtime="20201029 18:14:30.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.299" endtime="20201029 18:14:30.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.053" endtime="20201029 18:14:30.689"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:22.985" endtime="20201029 18:14:30.689" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:30.696" endtime="20201029 18:14:30.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.694" endtime="20201029 18:14:30.716"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.729" endtime="20201029 18:14:30.741"></status>
</kw>
<msg timestamp="20201029 18:14:30.741" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.727" endtime="20201029 18:14:30.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.742" endtime="20201029 18:14:30.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.747" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:30.745" endtime="20201029 18:14:30.747"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:30.725" endtime="20201029 18:14:30.748"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:30.722" endtime="20201029 18:14:30.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.721" endtime="20201029 18:14:30.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:30.752" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:30.752" endtime="20201029 18:14:30.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.750" endtime="20201029 18:14:30.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.720" endtime="20201029 18:14:30.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.720" endtime="20201029 18:14:30.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.754" endtime="20201029 18:14:30.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.718" endtime="20201029 18:14:30.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.717" endtime="20201029 18:14:30.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.693" endtime="20201029 18:14:30.757"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.767" endtime="20201029 18:14:30.787"></status>
</kw>
<msg timestamp="20201029 18:14:30.787" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.765" endtime="20201029 18:14:30.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.790" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.789" endtime="20201029 18:14:30.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.791" endtime="20201029 18:14:30.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.761" endtime="20201029 18:14:30.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.759" endtime="20201029 18:14:30.794"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.796" endtime="20201029 18:14:30.798"></status>
</kw>
<msg timestamp="20201029 18:14:30.798" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:30.795" endtime="20201029 18:14:30.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.802" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:30.801" endtime="20201029 18:14:30.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.804" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:30.803" endtime="20201029 18:14:30.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.799" endtime="20201029 18:14:30.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.811" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:30.809" endtime="20201029 18:14:30.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.814" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:30.812" endtime="20201029 18:14:30.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.806" endtime="20201029 18:14:30.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.824" endtime="20201029 18:14:31.110"></status>
</kw>
<msg timestamp="20201029 18:14:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063580444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06361325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:30.822" endtime="20201029 18:14:31.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063580444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06361325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:31.115" endtime="20201029 18:14:31.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.125" endtime="20201029 18:14:31.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.818" endtime="20201029 18:14:31.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.816" endtime="20201029 18:14:31.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.131" level="INFO">${RESULT} = [{'diff': 3.280599999999634e-05}, {'diff': 3.2304999999996364e-05}, {'diff': 3.236100000000852e-05}, {'diff': 3.2304999999996364e-05}, {'diff': 3.237500000000115e-05}, {'diff': 3.2304999999996364e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:31.128" endtime="20201029 18:14:31.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.136" level="INFO">${OVERHEAD} = {'diff': [3.280599999999634e-05, 3.2304999999996364e-05, 3.236100000000852e-05, 3.2304999999996364e-05, 3.237500000000115e-05, 3.2304999999996364e-05, 3.229200000000321e-05, 3.231999999998847e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 18:14:31.132" endtime="20201029 18:14:31.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.141" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:31.140" endtime="20201029 18:14:31.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.143" level="INFO">VALUE: [3.280599999999634e-05, 3.2304999999996364e-05, 3.236100000000852e-05, 3.2304999999996364e-05, 3.237500000000115e-05, 3.2304999999996364e-05, 3.229200000000321e-05, 3.231999999998847e-05, 3.2318999999988995e-05, 3.2304999999996364e-05, 3.229200000000321e-05, 3.22779999999967e-05, 3.232000000000235e-05, 3.231900000000287e-05, 3.230500000001024e-05, 3.2304999999996364e-05, 3.229100000000373e-05, 3.2360999999994644e-05, 3.232000000000235e-05, 3.232000000000235e-05, 3.232000000000235e-05, 3.232000000000235e-05, 3.223699999999052e-05, 3.2250000000011436e-05, 3.2276999999997225e-05, 3.233300000000938e-05, 3.230599999999584e-05, 3.230599999999584e-05, 3.234800000000149e-05, 3.2290999999989856e-05, 3.223600000000493e-05, 3.231900000000287e-05, 3.2304999999996364e-05, 3.230500000001024e-05, 3.22779999999967e-05, 3.2360999999994644e-05, 3.230599999999584e-05, 3.2304999999996364e-05, 3.2304999999996364e-05, 3.2304999999996364e-05, 3.229200000000321e-05, 3.226400000000407e-05, 3.2304999999996364e-05, 3.2276999999997225e-05, 3.230599999999584e-05, 3.232000000000235e-05, 3.2306000000009716e-05, 3.230599999999584e-05, 3.229200000000321e-05, 3.2304999999996364e-05]</msg>
<status status="PASS" starttime="20201029 18:14:31.142" endtime="20201029 18:14:31.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.137" endtime="20201029 18:14:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.757" endtime="20201029 18:14:31.145"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:30.691" endtime="20201029 18:14:31.146" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:31.152" endtime="20201029 18:14:31.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.151" endtime="20201029 18:14:31.172"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.185" endtime="20201029 18:14:31.198"></status>
</kw>
<msg timestamp="20201029 18:14:31.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.184" endtime="20201029 18:14:31.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.200" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.199" endtime="20201029 18:14:31.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:31.202" endtime="20201029 18:14:31.204"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:31.181" endtime="20201029 18:14:31.204"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:31.179" endtime="20201029 18:14:31.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.178" endtime="20201029 18:14:31.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:31.210" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:31.209" endtime="20201029 18:14:31.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.206" endtime="20201029 18:14:31.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.177" endtime="20201029 18:14:31.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.176" endtime="20201029 18:14:31.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.212" endtime="20201029 18:14:31.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.175" endtime="20201029 18:14:31.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.173" endtime="20201029 18:14:31.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.150" endtime="20201029 18:14:31.214"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.223" endtime="20201029 18:14:31.466"></status>
</kw>
<msg timestamp="20201029 18:14:31.467" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.221" endtime="20201029 18:14:31.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.470" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.468" endtime="20201029 18:14:31.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.471" endtime="20201029 18:14:31.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.219" endtime="20201029 18:14:31.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.217" endtime="20201029 18:14:31.473"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.476" endtime="20201029 18:14:31.478"></status>
</kw>
<msg timestamp="20201029 18:14:31.478" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:31.474" endtime="20201029 18:14:31.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.482" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:31.481" endtime="20201029 18:14:31.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.484" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:31.483" endtime="20201029 18:14:31.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.479" endtime="20201029 18:14:31.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.489" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:31.488" endtime="20201029 18:14:31.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.491" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:31.490" endtime="20201029 18:14:31.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.486" endtime="20201029 18:14:31.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.498" endtime="20201029 18:14:31.812"></status>
</kw>
<msg timestamp="20201029 18:14:31.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067011333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.497" endtime="20201029 18:14:31.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067011333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067155444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.816" endtime="20201029 18:14:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.824" endtime="20201029 18:14:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.494" endtime="20201029 18:14:31.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.492" endtime="20201029 18:14:31.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.831" level="INFO">${RESULT} = [{'diff': 0.00014411099999998844}, {'diff': 0.00014293099999999892}, {'diff': 0.0001429170000000063}, {'diff': 0.00014290299999999978}, {'diff': 0.00014287500000000064}, {'diff': 0.0001429450000000054...</msg>
<status status="PASS" starttime="20201029 18:14:31.827" endtime="20201029 18:14:31.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:31.835" level="INFO">${OVERHEAD} = {'diff': [0.00014411099999998844, 0.00014293099999999892, 0.0001429170000000063, 0.00014290299999999978, 0.00014287500000000064, 0.00014294500000000543, 0.00014292999999999945, 0.00014290299999999978,...</msg>
<status status="PASS" starttime="20201029 18:14:31.832" endtime="20201029 18:14:31.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.840" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:31.839" endtime="20201029 18:14:31.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.842" level="INFO">VALUE: [0.00014411099999998844, 0.00014293099999999892, 0.0001429170000000063, 0.00014290299999999978, 0.00014287500000000064, 0.00014294500000000543, 0.00014292999999999945, 0.00014290299999999978, 0.0001429170000000063, 0.00014290299999999978, 0.00014293099999999892, 0.00014290299999999978, 0.0001429020000000003, 0.00014292999999998557, 0.00014294500000000543, 0.00014291700000002017, 0.0001429310000000128, 0.00014288900000000715, 0.0001429020000000003, 0.0001429169999999924, 0.0001429310000000128, 0.00014291700000002017, 0.00014291599999999294, 0.0001429160000000207, 0.0001429169999999924, 0.0001429169999999924, 0.00014290299999999978, 0.00014288900000000715, 0.00014288900000000715, 0.00014293099999998504, 0.00014290299999999978, 0.00014290299999999978, 0.00014292999999998557, 0.00014292999999998557, 0.00014294400000000596, 0.0001429310000000128, 0.00014291599999999294, 0.0001429160000000207, 0.00014287500000001452, 0.00014290299999999978, 0.00014290299999999978, 0.00014291700000002017, 0.00014291700000002017, 0.0001428890000000349, 0.00014290300000002754, 0.00014292999999998557, 0.0001429020000000003, 0.0001429440000000337, 0.00014291700000002017, 0.0001429310000000128]</msg>
<status status="PASS" starttime="20201029 18:14:31.841" endtime="20201029 18:14:31.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.836" endtime="20201029 18:14:31.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.215" endtime="20201029 18:14:31.844"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:31.147" endtime="20201029 18:14:31.845" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:31.851" endtime="20201029 18:14:31.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.850" endtime="20201029 18:14:31.871"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.885" endtime="20201029 18:14:31.898"></status>
</kw>
<msg timestamp="20201029 18:14:31.898" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.884" endtime="20201029 18:14:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.899" endtime="20201029 18:14:31.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.904" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:31.902" endtime="20201029 18:14:31.904"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:31.880" endtime="20201029 18:14:31.905"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:31.878" endtime="20201029 18:14:31.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.877" endtime="20201029 18:14:31.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:31.909" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:31.908" endtime="20201029 18:14:31.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.906" endtime="20201029 18:14:31.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.876" endtime="20201029 18:14:31.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.875" endtime="20201029 18:14:31.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.911" endtime="20201029 18:14:31.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.874" endtime="20201029 18:14:31.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.872" endtime="20201029 18:14:31.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.849" endtime="20201029 18:14:31.914"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.922" endtime="20201029 18:14:32.769"></status>
</kw>
<msg timestamp="20201029 18:14:32.770" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.920" endtime="20201029 18:14:32.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.775" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.772" endtime="20201029 18:14:32.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.777" endtime="20201029 18:14:32.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.918" endtime="20201029 18:14:32.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.916" endtime="20201029 18:14:32.783"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.787" endtime="20201029 18:14:32.791"></status>
</kw>
<msg timestamp="20201029 18:14:32.792" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:32.785" endtime="20201029 18:14:32.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.801" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:32.799" endtime="20201029 18:14:32.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.805" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:32.803" endtime="20201029 18:14:32.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.794" endtime="20201029 18:14:32.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.816" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:32.814" endtime="20201029 18:14:32.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.821" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:32.818" endtime="20201029 18:14:32.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.809" endtime="20201029 18:14:32.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.834" endtime="20201029 18:14:33.126"></status>
</kw>
<msg timestamp="20201029 18:14:33.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077255486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.832" endtime="20201029 18:14:33.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077255486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.131" endtime="20201029 18:14:33.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.141" endtime="20201029 18:14:33.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.828" endtime="20201029 18:14:33.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.824" endtime="20201029 18:14:33.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.150" level="INFO">${RESULT} = [{'diff': 0.0002686529999999937}, {'diff': 0.0002618329999999891}, {'diff': 0.0002618479999999951}, {'diff': 0.0002618339999999886}, {'diff': 0.00026181899999999647}, {'diff': 0.0002618190000000242}, ...</msg>
<status status="PASS" starttime="20201029 18:14:33.145" endtime="20201029 18:14:33.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.154" level="INFO">${OVERHEAD} = {'diff': [0.0002686529999999937, 0.0002618329999999891, 0.0002618479999999951, 0.0002618339999999886, 0.00026181899999999647, 0.0002618190000000242, 0.00026181999999999594, 0.00026181999999999594, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:33.151" endtime="20201029 18:14:33.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.158" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:33.157" endtime="20201029 18:14:33.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.161" level="INFO">VALUE: [0.0002686529999999937, 0.0002618329999999891, 0.0002618479999999951, 0.0002618339999999886, 0.00026181899999999647, 0.0002618190000000242, 0.00026181999999999594, 0.00026181999999999594, 0.0002618610000000021, 0.0002618620000000016, 0.0002618889999999874, 0.00026186099999997436, 0.0002618889999999596, 0.00026184700000003724, 0.0002618880000000434, 0.0002618610000000299, 0.0002618329999999891, 0.00026184699999998173, 0.00026186099999997436, 0.0002618329999999891, 0.0002617779999999903, 0.0002618610000000299, 0.00026186099999997436, 0.000261874999999967, 0.00026183400000001633, 0.00026176399999999767, 0.00026184699999998173, 0.00026181899999999647, 0.0002618610000000299, 0.0002618329999999336, 0.000261874999999967, 0.000261875000000078, 0.000261874999999967, 0.00026184699999998173, 0.00026181899999999647, 0.000261874999999967, 0.00026184699999998173, 0.000261874999999967, 0.000261874999999967, 0.0002618610000000299, 0.000261875000000078, 0.0002618199999999682, 0.000261874999999967, 0.00026184699999998173, 0.0002619170000000004, 0.00026188900000001514, 0.00026184699999998173, 0.0002618610000000299, 0.0002618330000000446, 0.00026179199999998293]</msg>
<status status="PASS" starttime="20201029 18:14:33.159" endtime="20201029 18:14:33.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.155" endtime="20201029 18:14:33.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.914" endtime="20201029 18:14:33.162"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:31.846" endtime="20201029 18:14:33.162" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.170" endtime="20201029 18:14:33.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.168" endtime="20201029 18:14:33.190"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.204" endtime="20201029 18:14:33.216"></status>
</kw>
<msg timestamp="20201029 18:14:33.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.202" endtime="20201029 18:14:33.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.217" endtime="20201029 18:14:33.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:33.220" endtime="20201029 18:14:33.222"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.200" endtime="20201029 18:14:33.223"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.197" endtime="20201029 18:14:33.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.196" endtime="20201029 18:14:33.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:33.227" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:33.227" endtime="20201029 18:14:33.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.225" endtime="20201029 18:14:33.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.195" endtime="20201029 18:14:33.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.194" endtime="20201029 18:14:33.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.229" endtime="20201029 18:14:33.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.193" endtime="20201029 18:14:33.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.191" endtime="20201029 18:14:33.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.167" endtime="20201029 18:14:33.232"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.240" endtime="20201029 18:14:33.261"></status>
</kw>
<msg timestamp="20201029 18:14:33.262" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.239" endtime="20201029 18:14:33.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.264" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.263" endtime="20201029 18:14:33.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.265" endtime="20201029 18:14:33.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.236" endtime="20201029 18:14:33.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.234" endtime="20201029 18:14:33.268"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.270" endtime="20201029 18:14:33.272"></status>
</kw>
<msg timestamp="20201029 18:14:33.273" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:33.269" endtime="20201029 18:14:33.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.278" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:33.276" endtime="20201029 18:14:33.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.280" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:33.279" endtime="20201029 18:14:33.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.274" endtime="20201029 18:14:33.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.284" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:33.283" endtime="20201029 18:14:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.286" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:33.285" endtime="20201029 18:14:33.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.281" endtime="20201029 18:14:33.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.293" endtime="20201029 18:14:33.579"></status>
</kw>
<msg timestamp="20201029 18:14:33.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063385458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.292" endtime="20201029 18:14:33.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063379528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063385458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.584" endtime="20201029 18:14:33.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.594" endtime="20201029 18:14:33.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.289" endtime="20201029 18:14:33.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.288" endtime="20201029 18:14:33.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.603" level="INFO">${RESULT} = [{'diff': 5.930000000001212e-06}, {'diff': 5.8329999999967574e-06}, {'diff': 5.916000000008581e-06}, {'diff': 5.903000000001546e-06}, {'diff': 5.903000000001546e-06}, {'diff': 5.860999999995897e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:33.599" endtime="20201029 18:14:33.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:33.616" level="INFO">${OVERHEAD} = {'diff': [5.930000000001212e-06, 5.8329999999967574e-06, 5.916000000008581e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.860999999995897e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.917...</msg>
<status status="PASS" starttime="20201029 18:14:33.605" endtime="20201029 18:14:33.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.625" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:33.623" endtime="20201029 18:14:33.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.628" level="INFO">VALUE: [5.930000000001212e-06, 5.8329999999967574e-06, 5.916000000008581e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.860999999995897e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.917000000008055e-06, 5.84800000000274e-06, 5.889000000008915e-06, 5.860999999995897e-06, 5.931000000000686e-06, 5.930000000001212e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.930000000001212e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.915999999994703e-06, 5.902999999987668e-06, 5.958000000000352e-06, 5.931000000000686e-06, 5.889000000008915e-06, 5.916000000008581e-06, 5.847000000003266e-06, 5.916999999994177e-06, 5.931000000000686e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.915999999994703e-06, 5.889000000008915e-06, 5.985999999999492e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.861000000009775e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.931000000000686e-06, 5.915999999994703e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.944000000007721e-06, 5.915999999994703e-06, 5.915999999994703e-06, 5.917000000008055e-06, 5.915999999994703e-06, 5.916999999994177e-06]</msg>
<status status="PASS" starttime="20201029 18:14:33.626" endtime="20201029 18:14:33.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.618" endtime="20201029 18:14:33.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.232" endtime="20201029 18:14:33.630"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:33.164" endtime="20201029 18:14:33.630" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.638" endtime="20201029 18:14:33.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.636" endtime="20201029 18:14:33.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.670" endtime="20201029 18:14:33.683"></status>
</kw>
<msg timestamp="20201029 18:14:33.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.669" endtime="20201029 18:14:33.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.689" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.686" endtime="20201029 18:14:33.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.695" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:33.691" endtime="20201029 18:14:33.695"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.666" endtime="20201029 18:14:33.697"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:33.664" endtime="20201029 18:14:33.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.663" endtime="20201029 18:14:33.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:33.705" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:33.704" endtime="20201029 18:14:33.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.700" endtime="20201029 18:14:33.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.662" endtime="20201029 18:14:33.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.661" endtime="20201029 18:14:33.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.709" endtime="20201029 18:14:33.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.660" endtime="20201029 18:14:33.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.658" endtime="20201029 18:14:33.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.634" endtime="20201029 18:14:33.715"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.731" endtime="20201029 18:14:33.976"></status>
</kw>
<msg timestamp="20201029 18:14:33.977" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.728" endtime="20201029 18:14:33.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.979" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.978" endtime="20201029 18:14:33.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.980" endtime="20201029 18:14:33.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.724" endtime="20201029 18:14:33.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.719" endtime="20201029 18:14:33.983"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.985" endtime="20201029 18:14:33.987"></status>
</kw>
<msg timestamp="20201029 18:14:33.987" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:33.984" endtime="20201029 18:14:33.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.992" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:33.991" endtime="20201029 18:14:33.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.994" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:33.993" endtime="20201029 18:14:33.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.988" endtime="20201029 18:14:33.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.999" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:33.998" endtime="20201029 18:14:33.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.001" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:34.000" endtime="20201029 18:14:34.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.995" endtime="20201029 18:14:34.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.008" endtime="20201029 18:14:34.318"></status>
</kw>
<msg timestamp="20201029 18:14:34.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091802625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091836111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.007" endtime="20201029 18:14:34.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091802625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091836111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.327" endtime="20201029 18:14:34.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.352" endtime="20201029 18:14:34.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.004" endtime="20201029 18:14:34.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.002" endtime="20201029 18:14:34.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.358" level="INFO">${RESULT} = [{'diff': 3.348599999999924e-05}, {'diff': 3.3444999999993064e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.348599999999924e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:14:34.355" endtime="20201029 18:14:34.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:34.363" level="INFO">${OVERHEAD} = {'diff': [3.348599999999924e-05, 3.3444999999993064e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3555000000004553e-05, 3.348599999999924e-05, 3.34...</msg>
<status status="PASS" starttime="20201029 18:14:34.359" endtime="20201029 18:14:34.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.368" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:34.367" endtime="20201029 18:14:34.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.371" level="INFO">VALUE: [3.348599999999924e-05, 3.3444999999993064e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3555000000004553e-05, 3.348599999999924e-05, 3.348699999999871e-05, 3.3472999999978326e-05, 3.347200000000661e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.3540999999998045e-05, 3.347199999997885e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.343099999997268e-05, 3.348599999999924e-05, 3.3514000000012256e-05, 3.343000000000096e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.348699999999871e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.3514000000012256e-05, 3.349999999999187e-05, 3.349999999999187e-05, 3.3500000000019625e-05, 3.345799999998622e-05, 3.348599999997148e-05, 3.3500000000019625e-05, 3.348599999997148e-05, 3.348699999999871e-05, 3.348599999997148e-05, 3.3486000000026994e-05, 3.345900000001345e-05, 3.3500000000019625e-05, 3.3500000000019625e-05, 3.347199999997885e-05, 3.345800000004173e-05, 3.3499999999964114e-05, 3.347199999997885e-05]</msg>
<status status="PASS" starttime="20201029 18:14:34.369" endtime="20201029 18:14:34.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.364" endtime="20201029 18:14:34.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.716" endtime="20201029 18:14:34.372"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:33.632" endtime="20201029 18:14:34.372" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.380" endtime="20201029 18:14:34.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.378" endtime="20201029 18:14:34.400"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.413" endtime="20201029 18:14:34.425"></status>
</kw>
<msg timestamp="20201029 18:14:34.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.411" endtime="20201029 18:14:34.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.426" endtime="20201029 18:14:34.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.434" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:34.429" endtime="20201029 18:14:34.434"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.409" endtime="20201029 18:14:34.435"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:34.406" endtime="20201029 18:14:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.405" endtime="20201029 18:14:34.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:34.439" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:34.439" endtime="20201029 18:14:34.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.437" endtime="20201029 18:14:34.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.404" endtime="20201029 18:14:34.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.403" endtime="20201029 18:14:34.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.441" endtime="20201029 18:14:34.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.402" endtime="20201029 18:14:34.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.401" endtime="20201029 18:14:34.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.376" endtime="20201029 18:14:34.444"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.452" endtime="20201029 18:14:35.298"></status>
</kw>
<msg timestamp="20201029 18:14:35.299" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.451" endtime="20201029 18:14:35.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.305" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.302" endtime="20201029 18:14:35.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.307" endtime="20201029 18:14:35.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.448" endtime="20201029 18:14:35.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.446" endtime="20201029 18:14:35.312"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.317" endtime="20201029 18:14:35.320"></status>
</kw>
<msg timestamp="20201029 18:14:35.321" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:35.314" endtime="20201029 18:14:35.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.330" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:35.328" endtime="20201029 18:14:35.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.335" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:35.333" endtime="20201029 18:14:35.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.323" endtime="20201029 18:14:35.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.345" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:35.342" endtime="20201029 18:14:35.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.349" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:35.347" endtime="20201029 18:14:35.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.338" endtime="20201029 18:14:35.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.364" endtime="20201029 18:14:35.660"></status>
</kw>
<msg timestamp="20201029 18:14:35.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079570847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.361" endtime="20201029 18:14:35.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079570847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079632306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.664" endtime="20201029 18:14:35.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.672" endtime="20201029 18:14:35.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.355" endtime="20201029 18:14:35.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.352" endtime="20201029 18:14:35.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.680" level="INFO">${RESULT} = [{'diff': 6.145899999999982e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.1500000000006e-05}, {'diff': 6.150000000001987e-05}, {'diff': 6.149999999999212e-05}, {'diff': 6.15559999999904e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:35.677" endtime="20201029 18:14:35.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:35.684" level="INFO">${OVERHEAD} = {'diff': [6.145899999999982e-05, 6.148599999999949e-05, 6.1500000000006e-05, 6.150000000001987e-05, 6.149999999999212e-05, 6.15559999999904e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.1499999...</msg>
<status status="PASS" starttime="20201029 18:14:35.681" endtime="20201029 18:14:35.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.689" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:35.688" endtime="20201029 18:14:35.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.691" level="INFO">VALUE: [6.145899999999982e-05, 6.148599999999949e-05, 6.1500000000006e-05, 6.150000000001987e-05, 6.149999999999212e-05, 6.15559999999904e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.15140000000125e-05, 6.152800000000513e-05, 6.1486000000055e-05, 6.151399999998475e-05, 6.147200000000685e-05, 6.149999999999212e-05, 6.150000000004763e-05, 6.147200000000685e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.155499999999092e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.151399999998475e-05, 6.150000000004763e-05, 6.152700000000566e-05, 6.151399999998475e-05, 6.14999999999366e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.155499999993541e-05, 6.14999999999366e-05, 6.150000000004763e-05, 6.14999999999366e-05, 6.148599999999949e-05, 6.14999999999366e-05, 6.147299999992306e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.151300000001303e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.154099999999829e-05, 6.14999999999366e-05, 6.147200000006237e-05, 6.151399999998475e-05, 6.148599999999949e-05, 6.14999999999366e-05, 6.148599999999949e-05]</msg>
<status status="PASS" starttime="20201029 18:14:35.690" endtime="20201029 18:14:35.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.685" endtime="20201029 18:14:35.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.444" endtime="20201029 18:14:35.693"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:34.374" endtime="20201029 18:14:35.693" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.700" endtime="20201029 18:14:35.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.698" endtime="20201029 18:14:35.720"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.734" endtime="20201029 18:14:35.746"></status>
</kw>
<msg timestamp="20201029 18:14:35.746" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.732" endtime="20201029 18:14:35.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.749" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.748" endtime="20201029 18:14:35.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.752" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:35.750" endtime="20201029 18:14:35.752"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.730" endtime="20201029 18:14:35.753"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:35.726" endtime="20201029 18:14:35.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.725" endtime="20201029 18:14:35.754"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:35.758" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:35.757" endtime="20201029 18:14:35.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.755" endtime="20201029 18:14:35.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.724" endtime="20201029 18:14:35.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.724" endtime="20201029 18:14:35.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.759" endtime="20201029 18:14:35.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.722" endtime="20201029 18:14:35.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.721" endtime="20201029 18:14:35.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.697" endtime="20201029 18:14:35.762"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.765" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:35.774" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:36.977" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:35.764" endtime="20201029 18:14:36.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.980" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:36.979" endtime="20201029 18:14:36.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.763" endtime="20201029 18:14:36.981"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:36.985" endtime="20201029 18:14:37.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.983" endtime="20201029 18:14:37.005"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.015" endtime="20201029 18:14:37.024"></status>
</kw>
<msg timestamp="20201029 18:14:37.024" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.013" endtime="20201029 18:14:37.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.028" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.026" endtime="20201029 18:14:37.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.029" endtime="20201029 18:14:37.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.009" endtime="20201029 18:14:37.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.007" endtime="20201029 18:14:37.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.044" endtime="20201029 18:14:37.331"></status>
</kw>
<msg timestamp="20201029 18:14:37.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020802736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020836722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.042" endtime="20201029 18:14:37.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020802736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020836722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.335" endtime="20201029 18:14:37.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.343" endtime="20201029 18:14:37.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.037" endtime="20201029 18:14:37.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.034" endtime="20201029 18:14:37.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:37.349" level="INFO">${PHILIP_RES} = [{'diff': 3.398599999999974e-05}, {'diff': 3.1804999999999334e-05}, {'diff': 3.17640000000001e-05}, {'diff': 3.173599999999749e-05}, {'diff': 3.1804999999999334e-05}, {'diff': 3.174999999999706e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:14:37.346" endtime="20201029 18:14:37.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.354" level="INFO">${RESULT} = {'diff': [3.398599999999974e-05, 3.1804999999999334e-05, 3.17640000000001e-05, 3.173599999999749e-05, 3.1804999999999334e-05, 3.174999999999706e-05, 3.169399999999878e-05, 3.175000000000053e-05, 3.175...</msg>
<status status="PASS" starttime="20201029 18:14:37.350" endtime="20201029 18:14:37.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.358" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:37.357" endtime="20201029 18:14:37.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.360" level="INFO">VALUE: [3.398599999999974e-05, 3.1804999999999334e-05, 3.17640000000001e-05, 3.173599999999749e-05, 3.1804999999999334e-05, 3.174999999999706e-05, 3.169399999999878e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.169399999999878e-05, 3.1804999999999334e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.17640000000001e-05, 3.17640000000001e-05, 3.172200000000139e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.173599999999749e-05, 3.175000000000053e-05, 3.174999999999706e-05, 3.175000000000053e-05, 3.173699999999696e-05, 3.173600000000096e-05, 3.173599999999749e-05, 3.173600000000096e-05, 3.17640000000001e-05, 3.180599999999881e-05, 3.172199999999792e-05, 3.173600000000096e-05, 3.17640000000001e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.175000000000053e-05, 3.1790999999999764e-05, 3.175000000000053e-05, 3.173599999999749e-05, 3.175000000000053e-05, 3.173599999999749e-05, 3.173600000000096e-05, 3.170899999999782e-05, 3.175000000000053e-05, 3.172199999999792e-05, 3.172300000000086e-05, 3.1804999999999334e-05, 3.175000000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:14:37.359" endtime="20201029 18:14:37.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.354" endtime="20201029 18:14:37.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.005" endtime="20201029 18:14:37.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.982" endtime="20201029 18:14:37.362"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.364" endtime="20201029 18:14:37.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.363" endtime="20201029 18:14:37.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.393" endtime="20201029 18:14:37.402"></status>
</kw>
<msg timestamp="20201029 18:14:37.402" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.391" endtime="20201029 18:14:37.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.405" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.403" endtime="20201029 18:14:37.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.406" endtime="20201029 18:14:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.389" endtime="20201029 18:14:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.386" endtime="20201029 18:14:37.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.415" endtime="20201029 18:14:37.719"></status>
</kw>
<msg timestamp="20201029 18:14:37.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018436083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.414" endtime="20201029 18:14:37.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018377028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018436083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.723" endtime="20201029 18:14:37.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.731" endtime="20201029 18:14:37.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.411" endtime="20201029 18:14:37.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.410" endtime="20201029 18:14:37.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:37.737" level="INFO">${PHILIP_RES} = [{'diff': 5.905499999999883e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.637500000000087e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:37.734" endtime="20201029 18:14:37.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.743" level="INFO">${RESULT} = {'diff': [5.905499999999883e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.6388...</msg>
<status status="PASS" starttime="20201029 18:14:37.738" endtime="20201029 18:14:37.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.747" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:37.746" endtime="20201029 18:14:37.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.749" level="INFO">VALUE: [5.905499999999883e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.638900000000044e-05, 5.637500000000087e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.638899999999697e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.63749999999974e-05, 5.638900000000044e-05, 5.63749999999974e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.638899999999697e-05, 5.63610000000013e-05, 5.640300000000001e-05, 5.6387999999997496e-05, 5.637500000000087e-05, 5.636099999999783e-05, 5.638900000000044e-05, 5.641699999999958e-05, 5.6471999999998385e-05, 5.637500000000087e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.63749999999974e-05, 5.63610000000013e-05, 5.6387999999997496e-05, 5.6387999999997496e-05, 5.637500000000087e-05, 5.63749999999974e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.63610000000013e-05, 5.63749999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:14:37.748" endtime="20201029 18:14:37.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.743" endtime="20201029 18:14:37.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.385" endtime="20201029 18:14:37.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.362" endtime="20201029 18:14:37.751"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.753" endtime="20201029 18:14:37.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.752" endtime="20201029 18:14:37.773"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.781" endtime="20201029 18:14:37.792"></status>
</kw>
<msg timestamp="20201029 18:14:37.792" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.780" endtime="20201029 18:14:37.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.794" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.793" endtime="20201029 18:14:37.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.796" endtime="20201029 18:14:37.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.777" endtime="20201029 18:14:37.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.775" endtime="20201029 18:14:37.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.805" endtime="20201029 18:14:38.091"></status>
</kw>
<msg timestamp="20201029 18:14:38.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017333306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.803" endtime="20201029 18:14:38.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017333306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017419667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.095" endtime="20201029 18:14:38.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.104" endtime="20201029 18:14:38.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.801" endtime="20201029 18:14:38.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.799" endtime="20201029 18:14:38.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.110" level="INFO">${PHILIP_RES} = [{'diff': 8.636100000000008e-05}, {'diff': 8.365300000000297e-05}, {'diff': 8.370799999999831e-05}, {'diff': 8.366700000000254e-05}, {'diff': 8.362500000000037e-05}, {'diff': 8.363899999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:38.107" endtime="20201029 18:14:38.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.115" level="INFO">${RESULT} = {'diff': [8.636100000000008e-05, 8.365300000000297e-05, 8.370799999999831e-05, 8.366700000000254e-05, 8.362500000000037e-05, 8.363899999999994e-05, 8.366699999999908e-05, 8.365200000000003e-05, 8.3666...</msg>
<status status="PASS" starttime="20201029 18:14:38.111" endtime="20201029 18:14:38.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.120" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.119" endtime="20201029 18:14:38.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.122" level="INFO">VALUE: [8.636100000000008e-05, 8.365300000000297e-05, 8.370799999999831e-05, 8.366700000000254e-05, 8.362500000000037e-05, 8.363899999999994e-05, 8.366699999999908e-05, 8.365200000000003e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.369500000000168e-05, 8.36659999999996e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.36529999999995e-05, 8.365300000000297e-05, 8.366699999999908e-05, 8.36659999999996e-05, 8.36529999999995e-05, 8.362500000000037e-05, 8.359799999999723e-05, 8.368099999999865e-05, 8.366700000000254e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.365200000000003e-05, 8.366699999999908e-05, 8.365200000000003e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.365200000000003e-05, 8.36529999999995e-05, 8.365200000000003e-05, 8.366699999999908e-05, 8.368100000000211e-05, 8.36659999999996e-05, 8.36659999999996e-05, 8.368100000000211e-05, 8.368099999999865e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.370900000000125e-05]</msg>
<status status="PASS" starttime="20201029 18:14:38.121" endtime="20201029 18:14:38.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.116" endtime="20201029 18:14:38.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.774" endtime="20201029 18:14:38.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.751" endtime="20201029 18:14:38.123"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.126" endtime="20201029 18:14:38.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.124" endtime="20201029 18:14:38.146"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.154" endtime="20201029 18:14:38.166"></status>
</kw>
<msg timestamp="20201029 18:14:38.167" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.152" endtime="20201029 18:14:38.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.169" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.168" endtime="20201029 18:14:38.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.171" endtime="20201029 18:14:38.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.150" endtime="20201029 18:14:38.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.148" endtime="20201029 18:14:38.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.179" endtime="20201029 18:14:38.466"></status>
</kw>
<msg timestamp="20201029 18:14:38.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017322306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017438333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.178" endtime="20201029 18:14:38.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017322306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017438333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.470" endtime="20201029 18:14:38.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.478" endtime="20201029 18:14:38.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.175" endtime="20201029 18:14:38.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.174" endtime="20201029 18:14:38.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.484" level="INFO">${PHILIP_RES} = [{'diff': 0.00011602700000000118}, {'diff': 0.00011340200000000203}, {'diff': 0.00011349999999999902}, {'diff': 0.00011341700000000107}, {'diff': 0.00011348599999999945}, {'diff': 0.000113417000000001...</msg>
<status status="PASS" starttime="20201029 18:14:38.481" endtime="20201029 18:14:38.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.489" level="INFO">${RESULT} = {'diff': [0.00011602700000000118, 0.00011340200000000203, 0.00011349999999999902, 0.00011341700000000107, 0.00011348599999999945, 0.00011341700000000107, 0.00011343000000000117, 0.00011343000000000117...</msg>
<status status="PASS" starttime="20201029 18:14:38.485" endtime="20201029 18:14:38.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.493" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.492" endtime="20201029 18:14:38.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.495" level="INFO">VALUE: [0.00011602700000000118, 0.00011340200000000203, 0.00011349999999999902, 0.00011341700000000107, 0.00011348599999999945, 0.00011341700000000107, 0.00011343000000000117, 0.00011343000000000117, 0.00011344400000000074, 0.00011340299999999803, 0.00011341700000000107, 0.00011341700000000107, 0.00011345800000000031, 0.00011338900000000193, 0.0001134030000000015, 0.00011341700000000107, 0.0001134160000000016, 0.00011343000000000117, 0.0001133619999999988, 0.0001134169999999976, 0.00011340299999999803, 0.0001134030000000015, 0.00011338899999999846, 0.00011338900000000193, 0.00011340299999999803, 0.0001134169999999976, 0.00011341599999999813, 0.00011340199999999856, 0.0001133749999999989, 0.00011341700000000107, 0.0001134169999999976, 0.00011341700000000107, 0.00011343100000000064, 0.0001133749999999989, 0.00011341599999999813, 0.00011338900000000193, 0.0001134299999999977, 0.00011340299999999803, 0.0001134169999999976, 0.00011340299999999803, 0.00011343099999999717, 0.0001133619999999988, 0.00011340299999999803, 0.00011334699999999975, 0.0001134160000000016, 0.0001134030000000015, 0.0001134030000000015, 0.00011343100000000064, 0.00011341700000000107, 0.00011343100000000064]</msg>
<status status="PASS" starttime="20201029 18:14:38.494" endtime="20201029 18:14:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.489" endtime="20201029 18:14:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.146" endtime="20201029 18:14:38.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.124" endtime="20201029 18:14:38.497"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.499" endtime="20201029 18:14:38.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.498" endtime="20201029 18:14:38.519"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.527" endtime="20201029 18:14:38.542"></status>
</kw>
<msg timestamp="20201029 18:14:38.543" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.526" endtime="20201029 18:14:38.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.546" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.544" endtime="20201029 18:14:38.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.547" endtime="20201029 18:14:38.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.523" endtime="20201029 18:14:38.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.521" endtime="20201029 18:14:38.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.555" endtime="20201029 18:14:38.842"></status>
</kw>
<msg timestamp="20201029 18:14:38.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018349542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.554" endtime="20201029 18:14:38.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018349542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.846" endtime="20201029 18:14:38.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.854" endtime="20201029 18:14:38.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.551" endtime="20201029 18:14:38.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.550" endtime="20201029 18:14:38.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.861" level="INFO">${PHILIP_RES} = [{'diff': 0.00014826399999999865}, {'diff': 0.00014562499999999992}, {'diff': 0.00014559800000000025}, {'diff': 0.00014563800000000002}, {'diff': 0.0001456389999999995}, {'diff': 0.0001456389999999995...</msg>
<status status="PASS" starttime="20201029 18:14:38.857" endtime="20201029 18:14:38.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.865" level="INFO">${RESULT} = {'diff': [0.00014826399999999865, 0.00014562499999999992, 0.00014559800000000025, 0.00014563800000000002, 0.0001456389999999995, 0.0001456389999999995, 0.00014561100000000035, 0.00014565299999999906, ...</msg>
<status status="PASS" starttime="20201029 18:14:38.862" endtime="20201029 18:14:38.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.869" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.868" endtime="20201029 18:14:38.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.871" level="INFO">VALUE: [0.00014826399999999865, 0.00014562499999999992, 0.00014559800000000025, 0.00014563800000000002, 0.0001456389999999995, 0.0001456389999999995, 0.00014561100000000035, 0.00014565299999999906, 0.00014561100000000035, 0.00014562499999999992, 0.0001456389999999995, 0.00014561100000000035, 0.00014562499999999992, 0.00014561099999999688, 0.00014562499999999992, 0.00014566599999999916, 0.00014561100000000035, 0.00014562499999999992, 0.00014559700000000078, 0.0001456389999999995, 0.00014559700000000078, 0.0001456670000000021, 0.00014562499999999992, 0.0001456389999999995, 0.00014561100000000035, 0.00014561100000000035, 0.00014561100000000035, 0.00014561100000000035, 0.00014561100000000035, 0.0001456389999999995, 0.0001456389999999995, 0.0001456389999999995, 0.00014562499999999992, 0.00014562499999999992, 0.00014562499999999992, 0.00014562499999999992, 0.00014562499999999992, 0.00014562499999999992, 0.00014561100000000035, 0.00014561199999999982, 0.0001456519999999996, 0.0001456250000000034, 0.00014563800000000002, 0.00014562499999999992, 0.00014561100000000035, 0.00014562499999999992, 0.00014563900000000296, 0.0001456389999999995, 0.00014562499999999992, 0.00014562499999999992]</msg>
<status status="PASS" starttime="20201029 18:14:38.870" endtime="20201029 18:14:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.865" endtime="20201029 18:14:38.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.520" endtime="20201029 18:14:38.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.497" endtime="20201029 18:14:38.873"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.876" endtime="20201029 18:14:38.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.874" endtime="20201029 18:14:38.896"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.904" endtime="20201029 18:14:38.921"></status>
</kw>
<msg timestamp="20201029 18:14:38.921" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.902" endtime="20201029 18:14:38.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.924" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.922" endtime="20201029 18:14:38.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.925" endtime="20201029 18:14:38.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.900" endtime="20201029 18:14:38.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.898" endtime="20201029 18:14:38.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.934" endtime="20201029 18:14:39.219"></status>
</kw>
<msg timestamp="20201029 18:14:39.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018032806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.932" endtime="20201029 18:14:39.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017849722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018032806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.223" endtime="20201029 18:14:39.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.231" endtime="20201029 18:14:39.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.930" endtime="20201029 18:14:39.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.928" endtime="20201029 18:14:39.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.238" level="INFO">${PHILIP_RES} = [{'diff': 0.00018308400000000002}, {'diff': 0.00018037499999999998}, {'diff': 0.0001804030000000026}, {'diff': 0.00018034699999999737}, {'diff': 0.00018038899999999955}, {'diff': 0.0001803889999999995...</msg>
<status status="PASS" starttime="20201029 18:14:39.235" endtime="20201029 18:14:39.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.242" level="INFO">${RESULT} = {'diff': [0.00018308400000000002, 0.00018037499999999998, 0.0001804030000000026, 0.00018034699999999737, 0.00018038899999999955, 0.00018038899999999955, 0.0001804169999999987, 0.00018040299999999912, ...</msg>
<status status="PASS" starttime="20201029 18:14:39.239" endtime="20201029 18:14:39.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.247" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.246" endtime="20201029 18:14:39.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.249" level="INFO">VALUE: [0.00018308400000000002, 0.00018037499999999998, 0.0001804030000000026, 0.00018034699999999737, 0.00018038899999999955, 0.00018038899999999955, 0.0001804169999999987, 0.00018040299999999912, 0.00018038899999999955, 0.00018038899999999955, 0.00018033400000000074, 0.00018038899999999955, 0.0001803610000000004, 0.00018038899999999955, 0.0001804580000000014, 0.00018038899999999955, 0.00018038899999999955, 0.0001803610000000004, 0.0001803610000000004, 0.00018040199999999965, 0.00018034700000000084, 0.00018037499999999998, 0.00018038899999999955, 0.0001803610000000004, 0.00018037499999999998, 0.00018033300000000127, 0.0001803610000000004, 0.00018043100000000173, 0.00018038900000000302, 0.00018037499999999998, 0.00018041599999999922, 0.00018041700000000216, 0.00018040299999999912, 0.00018041599999999922, 0.00018037499999999998, 0.00018038899999999955, 0.00018038899999999955, 0.00018040299999999912, 0.00018038899999999955, 0.0001804719999999975, 0.00018040299999999912, 0.00018038900000000302, 0.00018041599999999922, 0.00018040299999999912, 0.0001804030000000026, 0.00018038899999999955, 0.00018040299999999912, 0.00018037499999999998, 0.00018038899999999955, 0.00018038900000000302]</msg>
<status status="PASS" starttime="20201029 18:14:39.248" endtime="20201029 18:14:39.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.243" endtime="20201029 18:14:39.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.896" endtime="20201029 18:14:39.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.874" endtime="20201029 18:14:39.251"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.253" endtime="20201029 18:14:39.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.252" endtime="20201029 18:14:39.273"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.281" endtime="20201029 18:14:39.300"></status>
</kw>
<msg timestamp="20201029 18:14:39.300" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.280" endtime="20201029 18:14:39.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.303" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.301" endtime="20201029 18:14:39.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.304" endtime="20201029 18:14:39.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.277" endtime="20201029 18:14:39.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.275" endtime="20201029 18:14:39.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.313" endtime="20201029 18:14:39.602"></status>
</kw>
<msg timestamp="20201029 18:14:39.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017760944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.311" endtime="20201029 18:14:39.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017760944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.609" endtime="20201029 18:14:39.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.621" endtime="20201029 18:14:39.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.309" endtime="20201029 18:14:39.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.307" endtime="20201029 18:14:39.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.636" level="INFO">${PHILIP_RES} = [{'diff': 0.00022024999999999822}, {'diff': 0.00021761100000000297}, {'diff': 0.00021762500000000254}, {'diff': 0.00021763899999999864}, {'diff': 0.00021762499999999907}, {'diff': 0.000217624999999999...</msg>
<status status="PASS" starttime="20201029 18:14:39.630" endtime="20201029 18:14:39.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.642" level="INFO">${RESULT} = {'diff': [0.00022024999999999822, 0.00021761100000000297, 0.00021762500000000254, 0.00021763899999999864, 0.00021762499999999907, 0.00021762499999999907, 0.00021761100000000297, 0.00021762500000000254...</msg>
<status status="PASS" starttime="20201029 18:14:39.638" endtime="20201029 18:14:39.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.648" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.646" endtime="20201029 18:14:39.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.651" level="INFO">VALUE: [0.00022024999999999822, 0.00021761100000000297, 0.00021762500000000254, 0.00021763899999999864, 0.00021762499999999907, 0.00021762499999999907, 0.00021761100000000297, 0.00021762500000000254, 0.00021762499999999907, 0.00021762499999999907, 0.00021759699999999993, 0.0002176109999999995, 0.00021762499999999907, 0.0002176390000000021, 0.0002176109999999995, 0.00021762499999999907, 0.00021754100000000165, 0.00021763899999999864, 0.00021762499999999907, 0.00021762499999999907, 0.0002176109999999995, 0.00021765300000000168, 0.00021762500000000254, 0.0002176109999999995, 0.00021754200000000112, 0.00021759699999999993, 0.00021761100000000297, 0.0002176109999999995, 0.0002176109999999995, 0.00021754200000000112, 0.0002176109999999995, 0.00021762499999999907, 0.00021763899999999864, 0.00021762499999999907, 0.0002176109999999995, 0.00021762499999999907, 0.00021762499999999907, 0.0002176109999999995, 0.0002176109999999995, 0.00021762499999999907, 0.0002176109999999995, 0.0002176109999999995, 0.00021762500000000254, 0.0002176109999999995, 0.0002176950000000004, 0.00021761199999999897, 0.00021763899999999864, 0.00021763899999999864, 0.00021759699999999993, 0.0002176109999999995]</msg>
<status status="PASS" starttime="20201029 18:14:39.649" endtime="20201029 18:14:39.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.643" endtime="20201029 18:14:39.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.274" endtime="20201029 18:14:39.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.251" endtime="20201029 18:14:39.652"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.655" endtime="20201029 18:14:39.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.654" endtime="20201029 18:14:39.676"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.693" endtime="20201029 18:14:39.714"></status>
</kw>
<msg timestamp="20201029 18:14:39.714" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.691" endtime="20201029 18:14:39.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.716" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.715" endtime="20201029 18:14:39.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.718" endtime="20201029 18:14:39.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.688" endtime="20201029 18:14:39.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.678" endtime="20201029 18:14:39.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.730" endtime="20201029 18:14:40.027"></status>
</kw>
<msg timestamp="20201029 18:14:40.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026878819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027138861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.728" endtime="20201029 18:14:40.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026878819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027138861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.031" endtime="20201029 18:14:40.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.039" endtime="20201029 18:14:40.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.726" endtime="20201029 18:14:40.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.724" endtime="20201029 18:14:40.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.045" level="INFO">${PHILIP_RES} = [{'diff': 0.0002600419999999985}, {'diff': 0.0002573199999999984}, {'diff': 0.00025733399999999795}, {'diff': 0.00025733300000000195}, {'diff': 0.00025730499999999934}, {'diff': 0.0002573059999999988}...</msg>
<status status="PASS" starttime="20201029 18:14:40.042" endtime="20201029 18:14:40.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.049" level="INFO">${RESULT} = {'diff': [0.0002600419999999985, 0.0002573199999999984, 0.00025733399999999795, 0.00025733300000000195, 0.00025730499999999934, 0.0002573059999999988, 0.00025725000000000053, 0.00025729199999999924, 0...</msg>
<status status="PASS" starttime="20201029 18:14:40.046" endtime="20201029 18:14:40.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.054" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.053" endtime="20201029 18:14:40.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.056" level="INFO">VALUE: [0.0002600419999999985, 0.0002573199999999984, 0.00025733399999999795, 0.00025733300000000195, 0.00025730499999999934, 0.0002573059999999988, 0.00025725000000000053, 0.00025729199999999924, 0.00025730499999999934, 0.0002572219999999979, 0.0002573190000000024, 0.0002573470000000015, 0.00025743099999999894, 0.0002573190000000024, 0.00025730499999999587, 0.0002573200000000053, 0.00025731900000000585, 0.0002573330000000054, 0.00025729199999999924, 0.00025729199999999924, 0.00025729199999999924, 0.00025730499999999934, 0.0002573199999999984, 0.00025733399999999795, 0.00025730499999999934, 0.0002573189999999989, 0.0002573340000000049, 0.0002573479999999975, 0.0002573189999999989, 0.0002573059999999988, 0.0002573329999999985, 0.0002573329999999985, 0.0002573199999999984, 0.00025736200000000403, 0.0002573479999999975, 0.00025733399999999795, 0.0002573189999999989, 0.0002573329999999985, 0.00025737500000000413, 0.000257347000000005, 0.0002573330000000054, 0.0002573479999999975, 0.0002573619999999971, 0.0002573189999999989, 0.0002573189999999989, 0.0002572920000000062, 0.0002573189999999989, 0.00025730499999999934, 0.00025733399999999795, 0.0002573059999999988]</msg>
<status status="PASS" starttime="20201029 18:14:40.055" endtime="20201029 18:14:40.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.050" endtime="20201029 18:14:40.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.676" endtime="20201029 18:14:40.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.653" endtime="20201029 18:14:40.058"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.060" endtime="20201029 18:14:40.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.059" endtime="20201029 18:14:40.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.089" endtime="20201029 18:14:40.112"></status>
</kw>
<msg timestamp="20201029 18:14:40.112" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.087" endtime="20201029 18:14:40.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.115" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.113" endtime="20201029 18:14:40.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.116" endtime="20201029 18:14:40.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.085" endtime="20201029 18:14:40.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.083" endtime="20201029 18:14:40.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.125" endtime="20201029 18:14:40.412"></status>
</kw>
<msg timestamp="20201029 18:14:40.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017748, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:40.123" endtime="20201029 18:14:40.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017748, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:40.418" endtime="20201029 18:14:40.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.429" endtime="20201029 18:14:40.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.121" endtime="20201029 18:14:40.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.119" endtime="20201029 18:14:40.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.439" level="INFO">${PHILIP_RES} = [{'diff': 0.0003022080000000017}, {'diff': 0.0002995410000000004}, {'diff': 0.0002995140000000007}, {'diff': 0.000299569999999999}, {'diff': 0.00029945899999999845}, {'diff': 0.0002995280000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:14:40.435" endtime="20201029 18:14:40.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.445" level="INFO">${RESULT} = {'diff': [0.0003022080000000017, 0.0002995410000000004, 0.0002995140000000007, 0.000299569999999999, 0.00029945899999999845, 0.0002995280000000003, 0.00029954199999999986, 0.00029955499999999996, 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:40.441" endtime="20201029 18:14:40.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.450" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.449" endtime="20201029 18:14:40.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.452" level="INFO">VALUE: [0.0003022080000000017, 0.0002995410000000004, 0.0002995140000000007, 0.000299569999999999, 0.00029945899999999845, 0.0002995280000000003, 0.00029954199999999986, 0.00029955499999999996, 0.0002995140000000007, 0.0002994860000000016, 0.0002995560000000029, 0.00029955499999999996, 0.0002995140000000007, 0.00029950000000000115, 0.00029950000000000115, 0.0002995279999999968, 0.0002995280000000003, 0.0002995140000000007, 0.0002995140000000007, 0.0002994999999999977, 0.0002995280000000003, 0.0002995410000000004, 0.00029954199999999986, 0.0002995140000000007, 0.00029952699999999735, 0.0002995280000000003, 0.0002995280000000003, 0.0002995270000000008, 0.0002995140000000007, 0.0002994999999999977, 0.0002995410000000004, 0.00029954199999999986, 0.00029954200000000333, 0.00029955599999999943, 0.0002995270000000008, 0.0002995280000000003, 0.00029955599999999943, 0.00029954199999999986, 0.0002995270000000008, 0.0002995140000000007, 0.00029955599999999943, 0.0002995280000000003, 0.0002995140000000007, 0.00029955600000000637, 0.0002995410000000004, 0.00029950000000000115, 0.00029950000000000115, 0.0002995140000000007, 0.00029950000000000115, 0.0002994999999999942]</msg>
<status status="PASS" starttime="20201029 18:14:40.451" endtime="20201029 18:14:40.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.446" endtime="20201029 18:14:40.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.081" endtime="20201029 18:14:40.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.058" endtime="20201029 18:14:40.454"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.456" endtime="20201029 18:14:40.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.455" endtime="20201029 18:14:40.477"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.485" endtime="20201029 18:14:40.510"></status>
</kw>
<msg timestamp="20201029 18:14:40.511" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.483" endtime="20201029 18:14:40.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.513" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.512" endtime="20201029 18:14:40.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.514" endtime="20201029 18:14:40.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.481" endtime="20201029 18:14:40.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.479" endtime="20201029 18:14:40.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.523" endtime="20201029 18:14:40.825"></status>
</kw>
<msg timestamp="20201029 18:14:40.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017666972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018013861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.522" endtime="20201029 18:14:40.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017666972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018013861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.829" endtime="20201029 18:14:40.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.837" endtime="20201029 18:14:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.519" endtime="20201029 18:14:40.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.517" endtime="20201029 18:14:40.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.845" level="INFO">${PHILIP_RES} = [{'diff': 0.00034688899999999953}, {'diff': 0.00034419499999999853}, {'diff': 0.00034419399999999906}, {'diff': 0.00034420900000000157}, {'diff': 0.00034419499999999853}, {'diff': 0.000344166999999999...</msg>
<status status="PASS" starttime="20201029 18:14:40.842" endtime="20201029 18:14:40.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.849" level="INFO">${RESULT} = {'diff': [0.00034688899999999953, 0.00034419499999999853, 0.00034419399999999906, 0.00034420900000000157, 0.00034419499999999853, 0.0003441669999999994, 0.0003442079999999986, 0.0003442080000000021, 0...</msg>
<status status="PASS" starttime="20201029 18:14:40.846" endtime="20201029 18:14:40.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.853" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.852" endtime="20201029 18:14:40.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.855" level="INFO">VALUE: [0.00034688899999999953, 0.00034419499999999853, 0.00034419399999999906, 0.00034420900000000157, 0.00034419499999999853, 0.0003441669999999994, 0.0003442079999999986, 0.0003442080000000021, 0.000344195000000002, 0.0003441669999999994, 0.00034418099999999896, 0.00034423599999999777, 0.0003441799999999995, 0.0003440829999999985, 0.00034413900000000025, 0.0003441529999999998, 0.0003441250000000007, 0.0003441529999999998, 0.00034423600000000124, 0.0003441669999999994, 0.0003441529999999998, 0.0003441799999999995, 0.0003441799999999995, 0.00034415200000000035, 0.0003441799999999995, 0.0003441669999999994, 0.0003441669999999994, 0.0003441110000000011, 0.0003441529999999998, 0.00034419399999999906, 0.0003441799999999995, 0.00034419399999999906, 0.000344195000000002, 0.00034420900000000157, 0.00034423599999999777, 0.0003442089999999981, 0.00034413900000000025, 0.00034419499999999853, 0.00034423599999999777, 0.0003442219999999982, 0.00034418099999999896, 0.0003442219999999982, 0.00034419499999999853, 0.0003441799999999995, 0.0003442089999999981, 0.00034423599999999777, 0.0003442089999999981, 0.00034419399999999906, 0.0003441799999999995, 0.00034422299999999767]</msg>
<status status="PASS" starttime="20201029 18:14:40.854" endtime="20201029 18:14:40.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.850" endtime="20201029 18:14:40.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.477" endtime="20201029 18:14:40.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.454" endtime="20201029 18:14:40.858"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.860" endtime="20201029 18:14:40.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.859" endtime="20201029 18:14:40.880"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.888" endtime="20201029 18:14:40.916"></status>
</kw>
<msg timestamp="20201029 18:14:40.917" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.886" endtime="20201029 18:14:40.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.920" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.918" endtime="20201029 18:14:40.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.921" endtime="20201029 18:14:40.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.884" endtime="20201029 18:14:40.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.882" endtime="20201029 18:14:40.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.931" endtime="20201029 18:14:41.217"></status>
</kw>
<msg timestamp="20201029 18:14:41.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.929" endtime="20201029 18:14:41.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.221" endtime="20201029 18:14:41.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.229" endtime="20201029 18:14:41.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.926" endtime="20201029 18:14:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.925" endtime="20201029 18:14:41.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:41.235" level="INFO">${PHILIP_RES} = [{'diff': 0.00039406999999999984}, {'diff': 0.0003913479999999997}, {'diff': 0.0003912920000000014}, {'diff': 0.0003914159999999986}, {'diff': 0.0003912779999999984}, {'diff': 0.0003913470000000002}, ...</msg>
<status status="PASS" starttime="20201029 18:14:41.232" endtime="20201029 18:14:41.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.239" level="INFO">${RESULT} = {'diff': [0.00039406999999999984, 0.0003913479999999997, 0.0003912920000000014, 0.0003914159999999986, 0.0003912779999999984, 0.0003913470000000002, 0.00039138899999999893, 0.00039141600000000207, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:41.236" endtime="20201029 18:14:41.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.243" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.242" endtime="20201029 18:14:41.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.246" level="INFO">VALUE: [0.00039406999999999984, 0.0003913479999999997, 0.0003912920000000014, 0.0003914159999999986, 0.0003912779999999984, 0.0003913470000000002, 0.00039138899999999893, 0.00039141600000000207, 0.00039133300000000065, 0.0003913470000000002, 0.0003914029999999985, 0.0003913329999999972, 0.0003913470000000002, 0.00039136199999999927, 0.0003913189999999976, 0.0003913470000000002, 0.0003913470000000002, 0.0003913340000000001, 0.00039124999999999924, 0.000391306000000001, 0.00039133300000000065, 0.000391306000000001, 0.0003912920000000014, 0.00039138899999999893, 0.00039137499999999936, 0.0003913340000000001, 0.00039133300000000065, 0.0003913609999999998, 0.00039137500000000283, 0.0003913340000000001, 0.00039136100000000326, 0.0003913609999999998, 0.0003913470000000002, 0.00039142999999999817, 0.00039133300000000065, 0.0003912919999999945, 0.0003913470000000002, 0.00039137499999999936, 0.00039137499999999936, 0.0003913470000000002, 0.00039138899999999893, 0.00039132000000000056, 0.0003913620000000062, 0.0003913329999999937, 0.000391306000000001, 0.0003913609999999998, 0.00039133300000000065, 0.0003913050000000015, 0.0003912920000000014, 0.0003913190000000011]</msg>
<status status="PASS" starttime="20201029 18:14:41.244" endtime="20201029 18:14:41.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.240" endtime="20201029 18:14:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.881" endtime="20201029 18:14:41.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.858" endtime="20201029 18:14:41.248"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.251" endtime="20201029 18:14:41.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.249" endtime="20201029 18:14:41.271"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.279" endtime="20201029 18:14:41.310"></status>
</kw>
<msg timestamp="20201029 18:14:41.310" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.277" endtime="20201029 18:14:41.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.312" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.311" endtime="20201029 18:14:41.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.313" endtime="20201029 18:14:41.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.275" endtime="20201029 18:14:41.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.273" endtime="20201029 18:14:41.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.322" endtime="20201029 18:14:41.609"></status>
</kw>
<msg timestamp="20201029 18:14:41.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01796675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:41.321" endtime="20201029 18:14:41.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01796675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:41.613" endtime="20201029 18:14:41.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.621" endtime="20201029 18:14:41.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.318" endtime="20201029 18:14:41.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.317" endtime="20201029 18:14:41.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:41.627" level="INFO">${PHILIP_RES} = [{'diff': 0.0004436810000000013}, {'diff': 0.00044102800000000303}, {'diff': 0.00044102799999999956}, {'diff': 0.0004410000000000004}, {'diff': 0.000441014}, {'diff': 0.0004410549999999992}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:14:41.624" endtime="20201029 18:14:41.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.632" level="INFO">${RESULT} = {'diff': [0.0004436810000000013, 0.00044102800000000303, 0.00044102799999999956, 0.0004410000000000004, 0.000441014, 0.0004410549999999992, 0.00044104199999999913, 0.000441014, 0.0004410000000000004, ...</msg>
<status status="PASS" starttime="20201029 18:14:41.628" endtime="20201029 18:14:41.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.636" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.635" endtime="20201029 18:14:41.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.639" level="INFO">VALUE: [0.0004436810000000013, 0.00044102800000000303, 0.00044102799999999956, 0.0004410000000000004, 0.000441014, 0.0004410549999999992, 0.00044104199999999913, 0.000441014, 0.0004410000000000004, 0.00044102799999999956, 0.0004410549999999992, 0.0004410270000000001, 0.00044102799999999956, 0.00044107000000000174, 0.000441014, 0.000441014, 0.0004410270000000001, 0.0004409859999999974, 0.000441014, 0.0004410130000000005, 0.00044098600000000085, 0.0004410410000000031, 0.00044104199999999913, 0.0004410689999999988, 0.0004410970000000014, 0.0004410970000000014, 0.0004410970000000014, 0.00044112500000000054, 0.0004411520000000002, 0.00044117999999999935, 0.000441111000000001, 0.0004410970000000014, 0.00044108300000000183, 0.00044099999999999695, 0.00044098699999999685, 0.00044105599999999523, 0.0004410550000000027, 0.0004410409999999962, 0.00044105499999999576, 0.0004410840000000013, 0.00044107000000000174, 0.0004410699999999948, 0.0004410420000000026, 0.000441013000000004, 0.0004410279999999961, 0.00044104199999999566, 0.0004410410000000031, 0.00044101400000000346, 0.0004410279999999961, 0.0004410139999999965]</msg>
<status status="PASS" starttime="20201029 18:14:41.637" endtime="20201029 18:14:41.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.633" endtime="20201029 18:14:41.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.271" endtime="20201029 18:14:41.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.249" endtime="20201029 18:14:41.641"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.643" endtime="20201029 18:14:41.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.641" endtime="20201029 18:14:41.663"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.671" endtime="20201029 18:14:41.705"></status>
</kw>
<msg timestamp="20201029 18:14:41.705" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.669" endtime="20201029 18:14:41.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.708" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.706" endtime="20201029 18:14:41.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.709" endtime="20201029 18:14:41.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.667" endtime="20201029 18:14:41.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.665" endtime="20201029 18:14:41.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.718" endtime="20201029 18:14:42.003"></status>
</kw>
<msg timestamp="20201029 18:14:42.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.716" endtime="20201029 18:14:42.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017482444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017978389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.007" endtime="20201029 18:14:42.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.015" endtime="20201029 18:14:42.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.713" endtime="20201029 18:14:42.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.712" endtime="20201029 18:14:42.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.022" level="INFO">${PHILIP_RES} = [{'diff': 0.0004959450000000011}, {'diff': 0.0004932640000000002}, {'diff': 0.0004932500000000006}, {'diff': 0.0004933470000000016}, {'diff': 0.0004932500000000006}, {'diff': 0.0004932359999999976}, {...</msg>
<status status="PASS" starttime="20201029 18:14:42.019" endtime="20201029 18:14:42.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.026" level="INFO">${RESULT} = {'diff': [0.0004959450000000011, 0.0004932640000000002, 0.0004932500000000006, 0.0004933470000000016, 0.0004932500000000006, 0.0004932359999999976, 0.0004932359999999976, 0.0004932359999999976, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:14:42.023" endtime="20201029 18:14:42.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.031" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.030" endtime="20201029 18:14:42.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.033" level="INFO">VALUE: [0.0004959450000000011, 0.0004932640000000002, 0.0004932500000000006, 0.0004933470000000016, 0.0004932500000000006, 0.0004932359999999976, 0.0004932359999999976, 0.0004932359999999976, 0.0004932629999999973, 0.0004932920000000028, 0.0004932640000000002, 0.0004932640000000002, 0.0004933049999999994, 0.0004932499999999972, 0.0004932779999999998, 0.0004932500000000006, 0.0004931529999999996, 0.000493221999999998, 0.0004932640000000002, 0.0004932500000000006, 0.0004931950000000018, 0.0004933059999999989, 0.0004932090000000014, 0.0004932359999999976, 0.0004932220000000015, 0.0004931950000000018, 0.0004931949999999949, 0.0004931799999999958, 0.0004932090000000014, 0.0004932360000000011, 0.0004931950000000018, 0.0004932640000000002, 0.0004932090000000014, 0.0004931810000000023, 0.000493207999999995, 0.0004932500000000006, 0.0004932080000000019, 0.0004931660000000032, 0.0004931950000000018, 0.000493207999999995, 0.000493207999999995, 0.0004932090000000014, 0.0004931669999999957, 0.0004932640000000002, 0.0004932220000000015, 0.0004932220000000015, 0.0004932219999999946, 0.0004932640000000002, 0.0004932360000000011, 0.0004931939999999954]</msg>
<status status="PASS" starttime="20201029 18:14:42.032" endtime="20201029 18:14:42.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.027" endtime="20201029 18:14:42.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.663" endtime="20201029 18:14:42.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.641" endtime="20201029 18:14:42.035"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.037" endtime="20201029 18:14:42.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.036" endtime="20201029 18:14:42.057"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.065" endtime="20201029 18:14:42.102"></status>
</kw>
<msg timestamp="20201029 18:14:42.102" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.064" endtime="20201029 18:14:42.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.105" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.103" endtime="20201029 18:14:42.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.106" endtime="20201029 18:14:42.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.061" endtime="20201029 18:14:42.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.059" endtime="20201029 18:14:42.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.116" endtime="20201029 18:14:42.402"></status>
</kw>
<msg timestamp="20201029 18:14:42.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018125111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.114" endtime="20201029 18:14:42.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017574597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018125111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.406" endtime="20201029 18:14:42.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.414" endtime="20201029 18:14:42.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.112" endtime="20201029 18:14:42.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.110" endtime="20201029 18:14:42.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.420" level="INFO">${PHILIP_RES} = [{'diff': 0.0005505139999999985}, {'diff': 0.0005479310000000015}, {'diff': 0.0005478750000000032}, {'diff': 0.0005478610000000002}, {'diff': 0.0005478329999999976}, {'diff': 0.0005478190000000015}, {...</msg>
<status status="PASS" starttime="20201029 18:14:42.417" endtime="20201029 18:14:42.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.424" level="INFO">${RESULT} = {'diff': [0.0005505139999999985, 0.0005479310000000015, 0.0005478750000000032, 0.0005478610000000002, 0.0005478329999999976, 0.0005478190000000015, 0.0005478190000000015, 0.0005478340000000005, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:42.421" endtime="20201029 18:14:42.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.428" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.427" endtime="20201029 18:14:42.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.431" level="INFO">VALUE: [0.0005505139999999985, 0.0005479310000000015, 0.0005478750000000032, 0.0005478610000000002, 0.0005478329999999976, 0.0005478190000000015, 0.0005478190000000015, 0.0005478340000000005, 0.0005478480000000001, 0.0005478619999999997, 0.0005478749999999998, 0.0005478619999999997, 0.0005478060000000014, 0.0005477769999999993, 0.0005478060000000014, 0.0005478190000000015, 0.0005478340000000005, 0.0005478470000000006, 0.0005478610000000002, 0.0005478190000000015, 0.0005478610000000002, 0.0005478749999999998, 0.000547833999999997, 0.0005478750000000032, 0.0005479030000000024, 0.0005478329999999976, 0.000547834000000004, 0.0005478330000000045, 0.000547834000000004, 0.0005478470000000041, 0.0005478470000000041, 0.0005478750000000032, 0.0005479170000000019, 0.0005478469999999971, 0.0005478889999999959, 0.0005478889999999959, 0.0005477779999999988, 0.0005478609999999967, 0.0005478750000000032, 0.0005478750000000032, 0.0005478750000000032, 0.0005478060000000048, 0.0005478610000000037, 0.0005478609999999967, 0.0005478469999999971, 0.0005478609999999967, 0.0005479439999999947, 0.0005479170000000019, 0.0005479720000000007, 0.0005478889999999959]</msg>
<status status="PASS" starttime="20201029 18:14:42.429" endtime="20201029 18:14:42.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.425" endtime="20201029 18:14:42.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.058" endtime="20201029 18:14:42.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.035" endtime="20201029 18:14:42.433"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.436" endtime="20201029 18:14:42.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.434" endtime="20201029 18:14:42.456"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.464" endtime="20201029 18:14:42.503"></status>
</kw>
<msg timestamp="20201029 18:14:42.504" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.462" endtime="20201029 18:14:42.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.506" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.505" endtime="20201029 18:14:42.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.507" endtime="20201029 18:14:42.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.460" endtime="20201029 18:14:42.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.458" endtime="20201029 18:14:42.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.516" endtime="20201029 18:14:42.801"></status>
</kw>
<msg timestamp="20201029 18:14:42.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.515" endtime="20201029 18:14:42.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.805" endtime="20201029 18:14:42.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.813" endtime="20201029 18:14:42.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.512" endtime="20201029 18:14:42.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.511" endtime="20201029 18:14:42.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.819" level="INFO">${PHILIP_RES} = [{'diff': 0.0006077089999999979}, {'diff': 0.0006049999999999979}, {'diff': 0.000605027000000001}, {'diff': 0.0006050280000000005}, {'diff': 0.0006050550000000002}, {'diff': 0.0006050000000000014}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:42.816" endtime="20201029 18:14:42.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.824" level="INFO">${RESULT} = {'diff': [0.0006077089999999979, 0.0006049999999999979, 0.000605027000000001, 0.0006050280000000005, 0.0006050550000000002, 0.0006050000000000014, 0.000605027000000001, 0.0006049439999999996, 0.000604...</msg>
<status status="PASS" starttime="20201029 18:14:42.820" endtime="20201029 18:14:42.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.828" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.827" endtime="20201029 18:14:42.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.830" level="INFO">VALUE: [0.0006077089999999979, 0.0006049999999999979, 0.000605027000000001, 0.0006050280000000005, 0.0006050550000000002, 0.0006050000000000014, 0.000605027000000001, 0.0006049439999999996, 0.0006049860000000018, 0.0006049449999999991, 0.0006050280000000005, 0.0006050269999999976, 0.000605027999999997, 0.0006050000000000014, 0.0006050420000000001, 0.0006050139999999975, 0.0006049720000000022, 0.000605027000000001, 0.0006049579999999992, 0.0006049860000000018, 0.0006049590000000021, 0.0006050700000000062, 0.0006049860000000018, 0.0006050000000000014, 0.0006050280000000005, 0.0006050420000000001, 0.0006049730000000017, 0.0006049859999999949, 0.0006049580000000027, 0.0006050410000000006, 0.0006050000000000014, 0.0006049720000000022, 0.0006050280000000005, 0.0006049720000000022, 0.0006050000000000014, 0.0006050280000000005, 0.0006049719999999953, 0.0006050550000000002, 0.000605027000000001, 0.0006049170000000034, 0.0006050000000000014, 0.0006050269999999941, 0.0006050000000000014, 0.0006049720000000022, 0.0006049860000000018, 0.0006049729999999948, 0.0006050000000000014, 0.0006049860000000018, 0.0006050000000000014, 0.0006050280000000005]</msg>
<status status="PASS" starttime="20201029 18:14:42.829" endtime="20201029 18:14:42.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.824" endtime="20201029 18:14:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.456" endtime="20201029 18:14:42.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.434" endtime="20201029 18:14:42.832"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.835" endtime="20201029 18:14:42.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.833" endtime="20201029 18:14:42.858"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.883" endtime="20201029 18:14:42.929"></status>
</kw>
<msg timestamp="20201029 18:14:42.930" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.878" endtime="20201029 18:14:42.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.935" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.932" endtime="20201029 18:14:42.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.937" endtime="20201029 18:14:42.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.871" endtime="20201029 18:14:42.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.865" endtime="20201029 18:14:42.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.955" endtime="20201029 18:14:43.242"></status>
</kw>
<msg timestamp="20201029 18:14:43.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039587722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.953" endtime="20201029 18:14:43.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039587722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040255028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.246" endtime="20201029 18:14:43.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.254" endtime="20201029 18:14:43.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.947" endtime="20201029 18:14:43.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.944" endtime="20201029 18:14:43.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.261" level="INFO">${PHILIP_RES} = [{'diff': 0.0006673059999999995}, {'diff': 0.0006645829999999964}, {'diff': 0.0006645969999999959}, {'diff': 0.0006646249999999951}, {'diff': 0.0006645979999999954}, {'diff': 0.0006645829999999964}, {...</msg>
<status status="PASS" starttime="20201029 18:14:43.258" endtime="20201029 18:14:43.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.264" level="INFO">${RESULT} = {'diff': [0.0006673059999999995, 0.0006645829999999964, 0.0006645969999999959, 0.0006646249999999951, 0.0006645979999999954, 0.0006645829999999964, 0.0006645969999999959, 0.0006646249999999951, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:43.261" endtime="20201029 18:14:43.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.269" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.268" endtime="20201029 18:14:43.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.271" level="INFO">VALUE: [0.0006673059999999995, 0.0006645829999999964, 0.0006645969999999959, 0.0006646249999999951, 0.0006645979999999954, 0.0006645829999999964, 0.0006645969999999959, 0.0006646249999999951, 0.0006645839999999958, 0.0006645969999999959, 0.0006645279999999976, 0.0006645279999999976, 0.0006646249999999951, 0.0006646390000000016, 0.0006646530000000012, 0.0006646390000000016, 0.0006645829999999964, 0.0006646249999999951, 0.0006646249999999951, 0.000664625000000002, 0.0006646800000000008, 0.0006646660000000013, 0.0006645969999999959, 0.0006646810000000003, 0.0006646810000000003, 0.0006646110000000024, 0.0006646390000000016, 0.0006646669999999938, 0.0006645559999999967, 0.0006645970000000029, 0.0006646389999999947, 0.0006646249999999881, 0.0006646530000000012, 0.0006645689999999899, 0.0006645699999999893, 0.0006645970000000029, 0.000664611999999995, 0.0006645970000000029, 0.0006645840000000097, 0.0006646389999999947, 0.0006646109999999955, 0.0006647369999999986, 0.000664611999999995, 0.000664596999999989, 0.0006645700000000032, 0.0006645690000000037, 0.0006646109999999955, 0.0006645970000000029, 0.000664625000000002, 0.0006646520000000017]</msg>
<status status="PASS" starttime="20201029 18:14:43.270" endtime="20201029 18:14:43.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.265" endtime="20201029 18:14:43.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.860" endtime="20201029 18:14:43.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.833" endtime="20201029 18:14:43.273"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.275" endtime="20201029 18:14:43.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.274" endtime="20201029 18:14:43.295"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.303" endtime="20201029 18:14:43.350"></status>
</kw>
<msg timestamp="20201029 18:14:43.350" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.302" endtime="20201029 18:14:43.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.353" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.351" endtime="20201029 18:14:43.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.354" endtime="20201029 18:14:43.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.299" endtime="20201029 18:14:43.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.297" endtime="20201029 18:14:43.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.366" endtime="20201029 18:14:43.651"></status>
</kw>
<msg timestamp="20201029 18:14:43.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017695694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.364" endtime="20201029 18:14:43.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017695694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018425028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.656" endtime="20201029 18:14:43.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.671" endtime="20201029 18:14:43.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.362" endtime="20201029 18:14:43.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.360" endtime="20201029 18:14:43.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.685" level="INFO">${PHILIP_RES} = [{'diff': 0.0007293339999999982}, {'diff': 0.0007266800000000004}, {'diff': 0.0007266520000000012}, {'diff': 0.0007266250000000016}, {'diff': 0.0007266529999999972}, {'diff': 0.0007266530000000007}, {...</msg>
<status status="PASS" starttime="20201029 18:14:43.678" endtime="20201029 18:14:43.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.693" level="INFO">${RESULT} = {'diff': [0.0007293339999999982, 0.0007266800000000004, 0.0007266520000000012, 0.0007266250000000016, 0.0007266529999999972, 0.0007266530000000007, 0.0007266530000000007, 0.0007266670000000003, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:43.687" endtime="20201029 18:14:43.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.702" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.700" endtime="20201029 18:14:43.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.707" level="INFO">VALUE: [0.0007293339999999982, 0.0007266800000000004, 0.0007266520000000012, 0.0007266250000000016, 0.0007266529999999972, 0.0007266530000000007, 0.0007266530000000007, 0.0007266670000000003, 0.0007266390000000011, 0.0007266519999999978, 0.0007266250000000016, 0.0007266529999999972, 0.0007266809999999999, 0.0007266799999999969, 0.0007267360000000021, 0.0007266809999999999, 0.0007266670000000038, 0.0007266249999999946, 0.000726694, 0.0007266250000000016, 0.0007265829999999959, 0.0007266809999999999, 0.0007266250000000016, 0.0007266389999999942, 0.0007266530000000007, 0.0007266660000000008, 0.000726708999999999, 0.0007266660000000008, 0.0007266390000000011, 0.0007266949999999994, 0.0007266530000000007, 0.0007267359999999987, 0.0007266530000000007, 0.0007266660000000008, 0.0007266949999999994, 0.000726694, 0.0007267360000000056, 0.000726722000000006, 0.0007266949999999994, 0.0007267079999999995, 0.0007267359999999987, 0.0007267640000000047, 0.0007267629999999983, 0.0007266250000000016, 0.000726694, 0.0007266809999999999, 0.0007266670000000003, 0.000726611000000002, 0.000726597999999995, 0.000726611000000002]</msg>
<status status="PASS" starttime="20201029 18:14:43.704" endtime="20201029 18:14:43.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.695" endtime="20201029 18:14:43.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.296" endtime="20201029 18:14:43.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.273" endtime="20201029 18:14:43.713"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.718" endtime="20201029 18:14:43.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.715" endtime="20201029 18:14:43.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.757" endtime="20201029 18:14:43.808"></status>
</kw>
<msg timestamp="20201029 18:14:43.809" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.754" endtime="20201029 18:14:43.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.811" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.810" endtime="20201029 18:14:43.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.812" endtime="20201029 18:14:43.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.748" endtime="20201029 18:14:43.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.744" endtime="20201029 18:14:43.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.821" endtime="20201029 18:14:44.106"></status>
</kw>
<msg timestamp="20201029 18:14:44.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029534292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030328125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.820" endtime="20201029 18:14:44.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029534292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030328125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.110" endtime="20201029 18:14:44.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.118" endtime="20201029 18:14:44.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.817" endtime="20201029 18:14:44.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.815" endtime="20201029 18:14:44.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.125" level="INFO">${PHILIP_RES} = [{'diff': 0.0007938330000000007}, {'diff': 0.0007911250000000002}, {'diff': 0.0007912500000000003}, {'diff': 0.0007912220000000011}, {'diff': 0.0007912080000000016}, {'diff': 0.0007912500000000003}, {...</msg>
<status status="PASS" starttime="20201029 18:14:44.122" endtime="20201029 18:14:44.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.129" level="INFO">${RESULT} = {'diff': [0.0007938330000000007, 0.0007911250000000002, 0.0007912500000000003, 0.0007912220000000011, 0.0007912080000000016, 0.0007912500000000003, 0.0007912779999999994, 0.0007913049999999991, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:44.126" endtime="20201029 18:14:44.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.134" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.133" endtime="20201029 18:14:44.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.136" level="INFO">VALUE: [0.0007938330000000007, 0.0007911250000000002, 0.0007912500000000003, 0.0007912220000000011, 0.0007912080000000016, 0.0007912500000000003, 0.0007912779999999994, 0.0007913049999999991, 0.000791291999999999, 0.0007911669999999954, 0.0007912230000000006, 0.0007911249999999967, 0.0007912639999999999, 0.0007911950000000015, 0.000791194000000002, 0.0007912500000000003, 0.0007912630000000004, 0.000791209000000001, 0.0007912500000000003, 0.0007912220000000011, 0.0007912360000000007, 0.0007912219999999942, 0.0007912500000000003, 0.0007912220000000011, 0.0007912370000000002, 0.0007913199999999981, 0.0007912360000000007, 0.0007912500000000003, 0.0007911669999999954, 0.0007912499999999933, 0.0007911939999999951, 0.0007912639999999999, 0.0007912360000000007, 0.0007912230000000006, 0.000791209000000001, 0.0007912370000000002, 0.0007912370000000002, 0.0007912639999999999, 0.0007913060000000055, 0.0007912359999999868, 0.0007913330000000052, 0.0007913339999999908, 0.0007912639999999999, 0.000791276999999993, 0.0007912639999999999, 0.0007912909999999995, 0.0007912079999999877, 0.0007911939999999951, 0.0007912229999999937, 0.0007911950000000084]</msg>
<status status="PASS" starttime="20201029 18:14:44.135" endtime="20201029 18:14:44.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.130" endtime="20201029 18:14:44.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.741" endtime="20201029 18:14:44.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.713" endtime="20201029 18:14:44.138"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.140" endtime="20201029 18:14:44.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.139" endtime="20201029 18:14:44.160"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.168" endtime="20201029 18:14:44.222"></status>
</kw>
<msg timestamp="20201029 18:14:44.222" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.166" endtime="20201029 18:14:44.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.224" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.223" endtime="20201029 18:14:44.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.225" endtime="20201029 18:14:44.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.164" endtime="20201029 18:14:44.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.162" endtime="20201029 18:14:44.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.234" endtime="20201029 18:14:44.537"></status>
</kw>
<msg timestamp="20201029 18:14:44.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.233" endtime="20201029 18:14:44.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.546" endtime="20201029 18:14:44.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.564" endtime="20201029 18:14:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.230" endtime="20201029 18:14:44.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.229" endtime="20201029 18:14:44.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.573" level="INFO">${PHILIP_RES} = [{'diff': 0.0008609579999999985}, {'diff': 0.000858277999999997}, {'diff': 0.0008582920000000001}, {'diff': 0.0008582920000000001}, {'diff': 0.0008582920000000001}, {'diff': 0.0008583059999999997}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:44.570" endtime="20201029 18:14:44.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.577" level="INFO">${RESULT} = {'diff': [0.0008609579999999985, 0.000858277999999997, 0.0008582920000000001, 0.0008582920000000001, 0.0008582920000000001, 0.0008583059999999997, 0.0008583199999999992, 0.000858277999999997, 0.000858...</msg>
<status status="PASS" starttime="20201029 18:14:44.574" endtime="20201029 18:14:44.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.581" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.580" endtime="20201029 18:14:44.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.584" level="INFO">VALUE: [0.0008609579999999985, 0.000858277999999997, 0.0008582920000000001, 0.0008582920000000001, 0.0008582920000000001, 0.0008583059999999997, 0.0008583199999999992, 0.000858277999999997, 0.000858167, 0.0008583189999999997, 0.0008582910000000006, 0.0008583189999999997, 0.0008582910000000006, 0.0008583189999999997, 0.0008583050000000036, 0.0008582910000000041, 0.0008582909999999971, 0.0008582359999999983, 0.0008581660000000005, 0.0008582639999999975, 0.0008582359999999983, 0.000858277999999997, 0.0008582639999999975, 0.0008583200000000027, 0.000858278000000004, 0.0008582910000000041, 0.0008583060000000031, 0.000858360999999995, 0.0008583049999999967, 0.0008582640000000044, 0.0008583200000000027, 0.0008582500000000048, 0.0008582910000000041, 0.0008582769999999976, 0.0008582499999999979, 0.0008583189999999963, 0.0008583059999999962, 0.0008583330000000028, 0.0008583470000000024, 0.0008583470000000024, 0.0008583199999999958, 0.0008582639999999975, 0.0008583620000000014, 0.0008583060000000031, 0.0008583610000000019, 0.0008582499999999979, 0.0008582639999999975, 0.0008582499999999979, 0.0008582500000000048, 0.0008582770000000045]</msg>
<status status="PASS" starttime="20201029 18:14:44.582" endtime="20201029 18:14:44.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.578" endtime="20201029 18:14:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.161" endtime="20201029 18:14:44.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.138" endtime="20201029 18:14:44.585"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.588" endtime="20201029 18:14:44.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.586" endtime="20201029 18:14:44.608"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.616" endtime="20201029 18:14:44.673"></status>
</kw>
<msg timestamp="20201029 18:14:44.674" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.614" endtime="20201029 18:14:44.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.676" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.675" endtime="20201029 18:14:44.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.677" endtime="20201029 18:14:44.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.612" endtime="20201029 18:14:44.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.610" endtime="20201029 18:14:44.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.687" endtime="20201029 18:14:44.972"></status>
</kw>
<msg timestamp="20201029 18:14:44.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018419583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.685" endtime="20201029 18:14:44.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017488833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018419583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.975" endtime="20201029 18:14:44.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.983" endtime="20201029 18:14:44.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.683" endtime="20201029 18:14:44.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.681" endtime="20201029 18:14:44.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.989" level="INFO">${PHILIP_RES} = [{'diff': 0.000930750000000001}, {'diff': 0.0009279999999999983}, {'diff': 0.0009280420000000004}, {'diff': 0.0009281109999999988}, {'diff': 0.0009281109999999988}, {'diff': 0.0009280969999999993}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:44.986" endtime="20201029 18:14:44.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.993" level="INFO">${RESULT} = {'diff': [0.000930750000000001, 0.0009279999999999983, 0.0009280420000000004, 0.0009281109999999988, 0.0009281109999999988, 0.0009280969999999993, 0.0009280969999999993, 0.0009280690000000001, 0.00092...</msg>
<status status="PASS" starttime="20201029 18:14:44.990" endtime="20201029 18:14:44.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.998" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.997" endtime="20201029 18:14:44.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.001" level="INFO">VALUE: [0.000930750000000001, 0.0009279999999999983, 0.0009280420000000004, 0.0009281109999999988, 0.0009281109999999988, 0.0009280969999999993, 0.0009280969999999993, 0.0009280690000000001, 0.0009280699999999996, 0.0009280970000000027, 0.0009281800000000007, 0.0009280690000000001, 0.000928041000000001, 0.0009280699999999996, 0.0009280410000000044, 0.0009280969999999958, 0.0009280559999999966, 0.0009279999999999983, 0.0009280139999999978, 0.0009280690000000036, 0.0009280279999999974, 0.000928153000000001, 0.0009280970000000027, 0.000928041999999997, 0.0009280829999999962, 0.0009279999999999983, 0.0009279859999999987, 0.0009279719999999991, 0.0009279859999999987, 0.0009280280000000043, 0.0009280689999999966, 0.0009280279999999974, 0.0009280279999999974, 0.0009280139999999978, 0.0009280409999999975, 0.0009280139999999978, 0.0009280830000000032, 0.0009280699999999961, 0.0009280409999999975, 0.0009280280000000043, 0.0009280830000000032, 0.0009280689999999966, 0.0009280549999999971, 0.0009280699999999961, 0.0009280140000000048, 0.0009279860000000056, 0.0009279579999999926, 0.0009280420000000039, 0.0009280410000000044, 0.0009280279999999974]</msg>
<status status="PASS" starttime="20201029 18:14:44.999" endtime="20201029 18:14:45.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.994" endtime="20201029 18:14:45.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.608" endtime="20201029 18:14:45.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.586" endtime="20201029 18:14:45.010"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.012" endtime="20201029 18:14:45.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.011" endtime="20201029 18:14:45.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.040" endtime="20201029 18:14:45.101"></status>
</kw>
<msg timestamp="20201029 18:14:45.102" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.039" endtime="20201029 18:14:45.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.104" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.103" endtime="20201029 18:14:45.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.105" endtime="20201029 18:14:45.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.036" endtime="20201029 18:14:45.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.034" endtime="20201029 18:14:45.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.114" endtime="20201029 18:14:45.416"></status>
</kw>
<msg timestamp="20201029 18:14:45.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.113" endtime="20201029 18:14:45.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017633278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018636083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.420" endtime="20201029 18:14:45.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.428" endtime="20201029 18:14:45.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.110" endtime="20201029 18:14:45.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.109" endtime="20201029 18:14:45.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.434" level="INFO">${PHILIP_RES} = [{'diff': 0.0010028050000000024}, {'diff': 0.0010001390000000006}, {'diff': 0.0010001110000000014}, {'diff': 0.001000125000000001}, {'diff': 0.0010001390000000006}, {'diff': 0.0010001520000000007}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:45.431" endtime="20201029 18:14:45.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.439" level="INFO">${RESULT} = {'diff': [0.0010028050000000024, 0.0010001390000000006, 0.0010001110000000014, 0.001000125000000001, 0.0010001390000000006, 0.0010001520000000007, 0.0010001669999999997, 0.0010001110000000014, 0.00100...</msg>
<status status="PASS" starttime="20201029 18:14:45.435" endtime="20201029 18:14:45.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.443" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.442" endtime="20201029 18:14:45.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.445" level="INFO">VALUE: [0.0010028050000000024, 0.0010001390000000006, 0.0010001110000000014, 0.001000125000000001, 0.0010001390000000006, 0.0010001520000000007, 0.0010001669999999997, 0.0010001110000000014, 0.0010002500000000011, 0.001000125000000001, 0.0010000270000000006, 0.0010001249999999975, 0.0010000410000000001, 0.001000028, 0.0010000000000000009, 0.0010000829999999988, 0.0010000419999999996, 0.0010000000000000009, 0.0010000419999999996, 0.0010001249999999975, 0.0010000829999999988, 0.001000013000000001, 0.001000111000000005, 0.0010001660000000037, 0.0010001670000000032, 0.001000110999999998, 0.001000111000000005, 0.0010000970000000053, 0.0010001800000000033, 0.0010000970000000053, 0.0010000970000000053, 0.0010000549999999997, 0.001000110999999998, 0.0010001530000000036, 0.001000139000000004, 0.001000027999999993, 0.0010000689999999993, 0.0010000410000000001, 0.0010000419999999996, 0.0010000140000000005, 0.0010000689999999923, 0.0010000140000000074, 0.0010000140000000074, 0.0010000270000000006, 0.0010001800000000033, 0.0010001389999999971, 0.0010000549999999997, 0.0010000829999999988, 0.0010000829999999988, 0.0010000829999999988]</msg>
<status status="PASS" starttime="20201029 18:14:45.444" endtime="20201029 18:14:45.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.440" endtime="20201029 18:14:45.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.033" endtime="20201029 18:14:45.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.010" endtime="20201029 18:14:45.447"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.450" endtime="20201029 18:14:45.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.448" endtime="20201029 18:14:45.470"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.477" endtime="20201029 18:14:45.543"></status>
</kw>
<msg timestamp="20201029 18:14:45.543" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.476" endtime="20201029 18:14:45.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.546" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.544" endtime="20201029 18:14:45.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.547" endtime="20201029 18:14:45.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.473" endtime="20201029 18:14:45.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.472" endtime="20201029 18:14:45.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.555" endtime="20201029 18:14:45.842"></status>
</kw>
<msg timestamp="20201029 18:14:45.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:45.554" endtime="20201029 18:14:45.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017441625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:45.846" endtime="20201029 18:14:45.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.854" endtime="20201029 18:14:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.551" endtime="20201029 18:14:45.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.550" endtime="20201029 18:14:45.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.861" level="INFO">${PHILIP_RES} = [{'diff': 0.001077375000000002}, {'diff': 0.0010746389999999988}, {'diff': 0.001074681000000001}, {'diff': 0.0010746939999999976}, {'diff': 0.0010747369999999992}, {'diff': 0.0010746659999999984}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:45.858" endtime="20201029 18:14:45.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.865" level="INFO">${RESULT} = {'diff': [0.001077375000000002, 0.0010746389999999988, 0.001074681000000001, 0.0010746939999999976, 0.0010747369999999992, 0.0010746659999999984, 0.0010747369999999992, 0.001074666999999998, 0.0010747...</msg>
<status status="PASS" starttime="20201029 18:14:45.862" endtime="20201029 18:14:45.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.869" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.868" endtime="20201029 18:14:45.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.871" level="INFO">VALUE: [0.001077375000000002, 0.0010746389999999988, 0.001074681000000001, 0.0010746939999999976, 0.0010747369999999992, 0.0010746659999999984, 0.0010747369999999992, 0.001074666999999998, 0.001074778000000002, 0.0010747359999999997, 0.001074806000000001, 0.0010747229999999962, 0.0010747640000000058, 0.0010747080000000006, 0.0010747909999999986, 0.001074776999999999, 0.0010747910000000055, 0.001074791999999998, 0.0010747229999999997, 0.0010747779999999985, 0.0010747220000000002, 0.0010747220000000002, 0.0010747629999999994, 0.0010747499999999993, 0.0010748189999999977, 0.0010747220000000002, 0.0010746800000000015, 0.001074681000000001, 0.0010747220000000002, 0.0010747359999999997, 0.0010746800000000015, 0.001074666000000002, 0.0010746520000000023, 0.0010746800000000015, 0.001074681000000001, 0.0010747080000000006, 0.0010748189999999977, 0.0010747220000000002, 0.001074694000000001, 0.0010746529999999949, 0.0010747360000000067, 0.0010747089999999931, 0.0010747780000000123, 0.0010747220000000002, 0.0010747079999999937, 0.0010746390000000022, 0.0010747220000000002, 0.0010746950000000005, 0.0010747499999999993, 0.0010747630000000064]</msg>
<status status="PASS" starttime="20201029 18:14:45.870" endtime="20201029 18:14:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.865" endtime="20201029 18:14:45.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.470" endtime="20201029 18:14:45.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.448" endtime="20201029 18:14:45.873"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.876" endtime="20201029 18:14:45.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.874" endtime="20201029 18:14:45.896"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.904" endtime="20201029 18:14:45.973"></status>
</kw>
<msg timestamp="20201029 18:14:45.973" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.902" endtime="20201029 18:14:45.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.976" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.974" endtime="20201029 18:14:45.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.977" endtime="20201029 18:14:45.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.899" endtime="20201029 18:14:45.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.898" endtime="20201029 18:14:45.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.986" endtime="20201029 18:14:46.282"></status>
</kw>
<msg timestamp="20201029 18:14:46.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017581319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.985" endtime="20201029 18:14:46.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017581319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018735528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.286" endtime="20201029 18:14:46.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.294" endtime="20201029 18:14:46.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.982" endtime="20201029 18:14:46.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.981" endtime="20201029 18:14:46.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.300" level="INFO">${PHILIP_RES} = [{'diff': 0.0011542089999999998}, {'diff': 0.0011516389999999994}, {'diff': 0.001151665999999999}, {'diff': 0.0011517079999999978}, {'diff': 0.0011516530000000025}, {'diff': 0.0011517079999999978}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:46.297" endtime="20201029 18:14:46.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.304" level="INFO">${RESULT} = {'diff': [0.0011542089999999998, 0.0011516389999999994, 0.001151665999999999, 0.0011517079999999978, 0.0011516530000000025, 0.0011517079999999978, 0.0011517639999999996, 0.0011516669999999986, 0.00115...</msg>
<status status="PASS" starttime="20201029 18:14:46.301" endtime="20201029 18:14:46.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.309" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.308" endtime="20201029 18:14:46.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.311" level="INFO">VALUE: [0.0011542089999999998, 0.0011516389999999994, 0.001151665999999999, 0.0011517079999999978, 0.0011516530000000025, 0.0011517079999999978, 0.0011517639999999996, 0.0011516669999999986, 0.0011517639999999996, 0.0011517779999999991, 0.0011516950000000012, 0.0011517360000000004, 0.0011516249999999964, 0.0011517220000000009, 0.0011517360000000004, 0.0011517090000000008, 0.0011517220000000009, 0.0011516249999999964, 0.0011516109999999968, 0.0011516249999999964, 0.0011516109999999968, 0.0011517080000000013, 0.0011516950000000012, 0.0011516110000000038, 0.0011516530000000025, 0.0011516110000000038, 0.001151667000000002, 0.0011516530000000025, 0.001151763, 0.0011516800000000021, 0.001151639000000003, 0.0011515830000000046, 0.001151639000000003, 0.0011516940000000017, 0.0011516810000000016, 0.0011516109999999968, 0.0011517360000000004, 0.0011516949999999943, 0.0011517639999999996, 0.0011518200000000117, 0.0011517909999999992, 0.0011517220000000078, 0.0011516939999999948, 0.0011517779999999922, 0.001151778000000006, 0.0011517919999999987, 0.0011518059999999913, 0.0011516800000000021, 0.0011516940000000087, 0.0011517229999999934]</msg>
<status status="PASS" starttime="20201029 18:14:46.310" endtime="20201029 18:14:46.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.305" endtime="20201029 18:14:46.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.896" endtime="20201029 18:14:46.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.874" endtime="20201029 18:14:46.314"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.318" endtime="20201029 18:14:46.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.316" endtime="20201029 18:14:46.338"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.349" endtime="20201029 18:14:46.423"></status>
</kw>
<msg timestamp="20201029 18:14:46.423" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.346" endtime="20201029 18:14:46.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.426" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.424" endtime="20201029 18:14:46.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.427" endtime="20201029 18:14:46.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.343" endtime="20201029 18:14:46.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.340" endtime="20201029 18:14:46.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.436" endtime="20201029 18:14:46.721"></status>
</kw>
<msg timestamp="20201029 18:14:46.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.434" endtime="20201029 18:14:46.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020800042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.724" endtime="20201029 18:14:46.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.732" endtime="20201029 18:14:46.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.432" endtime="20201029 18:14:46.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.430" endtime="20201029 18:14:46.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.738" level="INFO">${PHILIP_RES} = [{'diff': 0.0012340830000000004}, {'diff': 0.0012313749999999998}, {'diff': 0.001231290999999999}, {'diff': 0.0012312499999999997}, {'diff': 0.0012312090000000005}, {'diff': 0.0012312779999999988}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:46.735" endtime="20201029 18:14:46.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.743" level="INFO">${RESULT} = {'diff': [0.0012340830000000004, 0.0012313749999999998, 0.001231290999999999, 0.0012312499999999997, 0.0012312090000000005, 0.0012312779999999988, 0.0012312779999999988, 0.001231290999999999, 0.001231...</msg>
<status status="PASS" starttime="20201029 18:14:46.739" endtime="20201029 18:14:46.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.748" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.746" endtime="20201029 18:14:46.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.750" level="INFO">VALUE: [0.0012340830000000004, 0.0012313749999999998, 0.001231290999999999, 0.0012312499999999997, 0.0012312090000000005, 0.0012312779999999988, 0.0012312779999999988, 0.001231290999999999, 0.0012312910000000024, 0.0012313190000000016, 0.0012312909999999955, 0.0012313330000000011, 0.0012313610000000003, 0.001231431000000005, 0.0012314589999999973, 0.0012313470000000007, 0.0012312909999999955, 0.0012313329999999942, 0.0012313470000000007, 0.0012312780000000023, 0.001231304999999995, 0.0012312640000000027, 0.0012312779999999954, 0.0012312360000000036, 0.0012312359999999967, 0.0012312910000000024, 0.001231193999999998, 0.0012313470000000007, 0.0012313060000000015, 0.0012313749999999998, 0.001231237000000003, 0.001231304999999988, 0.0012314720000000112, 0.0012313619999999997, 0.0012313330000000011, 0.001231320000000008, 0.0012312780000000023, 0.0012312780000000023, 0.0012313340000000006, 0.0012313890000000133, 0.001231415999999999, 0.0012315279999999956, 0.001231431000000005, 0.0012314169999999985, 0.0012314020000000064, 0.0012313469999999938, 0.0012313330000000011, 0.0012313469999999938, 0.0012313750000000068, 0.0012314580000000047]</msg>
<status status="PASS" starttime="20201029 18:14:46.749" endtime="20201029 18:14:46.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.744" endtime="20201029 18:14:46.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.339" endtime="20201029 18:14:46.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.315" endtime="20201029 18:14:46.752"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.754" endtime="20201029 18:14:46.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.753" endtime="20201029 18:14:46.774"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.782" endtime="20201029 18:14:46.860"></status>
</kw>
<msg timestamp="20201029 18:14:46.860" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.781" endtime="20201029 18:14:46.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.863" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.861" endtime="20201029 18:14:46.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.864" endtime="20201029 18:14:46.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.778" endtime="20201029 18:14:46.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.776" endtime="20201029 18:14:46.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.873" endtime="20201029 18:14:47.173"></status>
</kw>
<msg timestamp="20201029 18:14:47.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018886681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.871" endtime="20201029 18:14:47.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017570708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018886681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.177" endtime="20201029 18:14:47.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.185" endtime="20201029 18:14:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.869" endtime="20201029 18:14:47.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.867" endtime="20201029 18:14:47.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.191" level="INFO">${PHILIP_RES} = [{'diff': 0.001315972999999998}, {'diff': 0.0013132920000000006}, {'diff': 0.0013132079999999997}, {'diff': 0.0013132920000000006}, {'diff': 0.001313375000000002}, {'diff': 0.0013132910000000012}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:47.188" endtime="20201029 18:14:47.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.195" level="INFO">${RESULT} = {'diff': [0.001315972999999998, 0.0013132920000000006, 0.0013132079999999997, 0.0013132920000000006, 0.001313375000000002, 0.0013132910000000012, 0.0013133329999999999, 0.0013133610000000025, 0.001313...</msg>
<status status="PASS" starttime="20201029 18:14:47.192" endtime="20201029 18:14:47.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.200" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.199" endtime="20201029 18:14:47.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.202" level="INFO">VALUE: [0.001315972999999998, 0.0013132920000000006, 0.0013132079999999997, 0.0013132920000000006, 0.001313375000000002, 0.0013132910000000012, 0.0013133329999999999, 0.0013133610000000025, 0.001313263999999998, 0.0013133190000000003, 0.0013133329999999999, 0.0013134029999999977, 0.0013133889999999981, 0.001313360999999999, 0.0013133879999999987, 0.0013133749999999986, 0.001313360999999999, 0.0013134160000000047, 0.0013133749999999986, 0.0013134169999999973, 0.0013134449999999964, 0.0013135139999999948, 0.0013134579999999965, 0.0013134449999999964, 0.001313471999999996, 0.0013134440000000039, 0.0013133190000000003, 0.0013134309999999969, 0.0013134579999999965, 0.0013133889999999981, 0.0013134859999999957, 0.0013135280000000013, 0.0013134860000000026, 0.0013134169999999973, 0.001313459000000003, 0.0013135420000000009, 0.0013134159999999978, 0.0013133749999999916, 0.001313443999999997, 0.0013133750000000055, 0.0013134029999999908, 0.0013134169999999973, 0.0013134450000000103, 0.0013133469999999925, 0.0013133199999999928, 0.0013134170000000112, 0.0013134030000000047, 0.0013134169999999973, 0.0013134440000000108, 0.0013133199999999928]</msg>
<status status="PASS" starttime="20201029 18:14:47.201" endtime="20201029 18:14:47.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.196" endtime="20201029 18:14:47.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.775" endtime="20201029 18:14:47.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.752" endtime="20201029 18:14:47.204"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.206" endtime="20201029 18:14:47.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.205" endtime="20201029 18:14:47.226"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.234" endtime="20201029 18:14:47.316"></status>
</kw>
<msg timestamp="20201029 18:14:47.317" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.233" endtime="20201029 18:14:47.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.319" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.318" endtime="20201029 18:14:47.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.320" endtime="20201029 18:14:47.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.230" endtime="20201029 18:14:47.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.228" endtime="20201029 18:14:47.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.332" endtime="20201029 18:14:47.618"></status>
</kw>
<msg timestamp="20201029 18:14:47.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017628972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.331" endtime="20201029 18:14:47.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017628972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.622" endtime="20201029 18:14:47.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.629" endtime="20201029 18:14:47.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.329" endtime="20201029 18:14:47.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.327" endtime="20201029 18:14:47.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.636" level="INFO">${PHILIP_RES} = [{'diff': 0.0014006530000000017}, {'diff': 0.0013979720000000008}, {'diff': 0.0013980830000000014}, {'diff': 0.0013980830000000014}, {'diff': 0.0013981389999999996}, {'diff': 0.0013979860000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:14:47.633" endtime="20201029 18:14:47.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.640" level="INFO">${RESULT} = {'diff': [0.0014006530000000017, 0.0013979720000000008, 0.0013980830000000014, 0.0013980830000000014, 0.0013981389999999996, 0.0013979860000000004, 0.0013979720000000008, 0.0013980840000000008, 0.0013...</msg>
<status status="PASS" starttime="20201029 18:14:47.637" endtime="20201029 18:14:47.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.644" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.643" endtime="20201029 18:14:47.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.646" level="INFO">VALUE: [0.0014006530000000017, 0.0013979720000000008, 0.0013980830000000014, 0.0013980830000000014, 0.0013981389999999996, 0.0013979860000000004, 0.0013979720000000008, 0.0013980840000000008, 0.001397930999999998, 0.0013980280000000025, 0.001397985999999997, 0.0013980560000000017, 0.0013979580000000047, 0.0013979449999999977, 0.0013980279999999956, 0.0013979860000000038, 0.0013980419999999952, 0.0013979720000000043, 0.0013979580000000047, 0.0013978889999999994, 0.0013979729999999968, 0.001397985999999997, 0.0013979299999999986, 0.0013979860000000038, 0.001398013999999996, 0.001398014000000003, 0.001398096999999994, 0.0013980700000000013, 0.0013980980000000004, 0.0013981110000000005, 0.0013980420000000021, 0.0013980700000000013, 0.0013979170000000124, 0.0013979870000000033, 0.0013979590000000042, 0.0013980690000000018, 0.0013979860000000038, 0.0013979719999999973, 0.0013979580000000047, 0.0013978890000000133, 0.00139802700000001, 0.0013979439999999982, 0.0013979439999999982, 0.0013979719999999973, 0.0013979590000000042, 0.0013979449999999977, 0.0013979309999999912, 0.0013978469999999937, 0.0013979169999999985, 0.0013978750000000068]</msg>
<status status="PASS" starttime="20201029 18:14:47.645" endtime="20201029 18:14:47.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.640" endtime="20201029 18:14:47.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.227" endtime="20201029 18:14:47.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.204" endtime="20201029 18:14:47.649"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.651" endtime="20201029 18:14:47.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.650" endtime="20201029 18:14:47.671"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.679" endtime="20201029 18:14:47.767"></status>
</kw>
<msg timestamp="20201029 18:14:47.768" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.678" endtime="20201029 18:14:47.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.773" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.770" endtime="20201029 18:14:47.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.775" endtime="20201029 18:14:47.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.675" endtime="20201029 18:14:47.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.673" endtime="20201029 18:14:47.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.794" endtime="20201029 18:14:48.098"></status>
</kw>
<msg timestamp="20201029 18:14:48.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:47.791" endtime="20201029 18:14:48.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0189915, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:48.102" endtime="20201029 18:14:48.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.110" endtime="20201029 18:14:48.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.785" endtime="20201029 18:14:48.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.782" endtime="20201029 18:14:48.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.116" level="INFO">${PHILIP_RES} = [{'diff': 0.0014876250000000028}, {'diff': 0.0014850000000000002}, {'diff': 0.0014849860000000006}, {'diff': 0.0014850140000000032}, {'diff': 0.0014850139999999998}, {'diff': 0.0014850830000000016}, {...</msg>
<status status="PASS" starttime="20201029 18:14:48.113" endtime="20201029 18:14:48.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.121" level="INFO">${RESULT} = {'diff': [0.0014876250000000028, 0.0014850000000000002, 0.0014849860000000006, 0.0014850140000000032, 0.0014850139999999998, 0.0014850830000000016, 0.0014850970000000012, 0.0014851949999999982, 0.0014...</msg>
<status status="PASS" starttime="20201029 18:14:48.117" endtime="20201029 18:14:48.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.125" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.124" endtime="20201029 18:14:48.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.128" level="INFO">VALUE: [0.0014876250000000028, 0.0014850000000000002, 0.0014849860000000006, 0.0014850140000000032, 0.0014850139999999998, 0.0014850830000000016, 0.0014850970000000012, 0.0014851949999999982, 0.001485152999999996, 0.0014851109999999973, 0.001485041999999999, 0.001485041999999999, 0.0014849730000000005, 0.0014851109999999973, 0.0014851520000000035, 0.0014851250000000038, 0.0014851249999999969, 0.001485054999999999, 0.001485137999999997, 0.0014850559999999985, 0.0014851669999999956, 0.0014851109999999973, 0.001485055000000006, 0.0014850829999999982, 0.0014850970000000047, 0.0014850969999999977, 0.0014852219999999944, 0.0014850559999999985, 0.0014850970000000047, 0.001484987000000007, 0.0014850559999999985, 0.0014851109999999973, 0.0014850839999999976, 0.0014849450000000014, 0.0014850829999999982, 0.0014850689999999916, 0.0014851109999999973, 0.0014851120000000106, 0.0014852080000000017, 0.0014851800000000026, 0.0014851109999999973, 0.0014850839999999976, 0.0014850689999999916, 0.0014850409999999925, 0.0014850279999999993, 0.0014850269999999999, 0.0014850000000000002, 0.001485137999999997, 0.0014850689999999916, 0.001485054999999999]</msg>
<status status="PASS" starttime="20201029 18:14:48.126" endtime="20201029 18:14:48.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.122" endtime="20201029 18:14:48.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.672" endtime="20201029 18:14:48.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.649" endtime="20201029 18:14:48.130"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.132" endtime="20201029 18:14:48.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.130" endtime="20201029 18:14:48.152"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.160" endtime="20201029 18:14:48.251"></status>
</kw>
<msg timestamp="20201029 18:14:48.252" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.158" endtime="20201029 18:14:48.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.254" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.253" endtime="20201029 18:14:48.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.255" endtime="20201029 18:14:48.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.156" endtime="20201029 18:14:48.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.154" endtime="20201029 18:14:48.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.264" endtime="20201029 18:14:48.552"></status>
</kw>
<msg timestamp="20201029 18:14:48.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019013611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.263" endtime="20201029 18:14:48.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017436444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019013611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.556" endtime="20201029 18:14:48.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.564" endtime="20201029 18:14:48.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.260" endtime="20201029 18:14:48.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.258" endtime="20201029 18:14:48.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.570" level="INFO">${PHILIP_RES} = [{'diff': 0.0015771670000000008}, {'diff': 0.0015745560000000013}, {'diff': 0.0015744720000000004}, {'diff': 0.0015745549999999983}, {'diff': 0.001574513999999999}, {'diff': 0.001574583000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:48.567" endtime="20201029 18:14:48.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.574" level="INFO">${RESULT} = {'diff': [0.0015771670000000008, 0.0015745560000000013, 0.0015744720000000004, 0.0015745549999999983, 0.001574513999999999, 0.001574583000000001, 0.001574583000000001, 0.0015745279999999987, 0.0015745...</msg>
<status status="PASS" starttime="20201029 18:14:48.571" endtime="20201029 18:14:48.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.578" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.577" endtime="20201029 18:14:48.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.581" level="INFO">VALUE: [0.0015771670000000008, 0.0015745560000000013, 0.0015744720000000004, 0.0015745549999999983, 0.001574513999999999, 0.001574583000000001, 0.001574583000000001, 0.0015745279999999987, 0.001574596999999997, 0.0015745419999999982, 0.0015744580000000008, 0.001574403000000002, 0.0015744450000000007, 0.001574416000000002, 0.001574583999999997, 0.0015744999999999995, 0.0015745699999999974, 0.0015745549999999983, 0.0015744869999999994, 0.001574596999999997, 0.0015747499999999998, 0.0015747360000000002, 0.0015746670000000018, 0.001574486, 0.0015745279999999987, 0.001574513999999999, 0.0015745419999999982, 0.001574513999999999, 0.0015746249999999962, 0.0015745280000000056, 0.0015745550000000053, 0.001574596999999997, 0.0015746249999999962, 0.0015745980000000104, 0.0015744999999999926, 0.0015746390000000027, 0.0015747079999999941, 0.0015744719999999934, 0.0015745700000000112, 0.0015745690000000118, 0.0015745550000000053, 0.0015746389999999888, 0.0015746670000000018, 0.0015745829999999905, 0.001574596999999997, 0.0015746660000000023, 0.0015746659999999885, 0.0015745279999999917, 0.001574513999999999, 0.0015745270000000061]</msg>
<status status="PASS" starttime="20201029 18:14:48.580" endtime="20201029 18:14:48.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.575" endtime="20201029 18:14:48.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.152" endtime="20201029 18:14:48.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.130" endtime="20201029 18:14:48.583"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.585" endtime="20201029 18:14:48.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.584" endtime="20201029 18:14:48.605"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.613" endtime="20201029 18:14:48.712"></status>
</kw>
<msg timestamp="20201029 18:14:48.713" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.611" endtime="20201029 18:14:48.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.720" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.716" endtime="20201029 18:14:48.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.724" endtime="20201029 18:14:48.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.609" endtime="20201029 18:14:48.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.607" endtime="20201029 18:14:48.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.745" endtime="20201029 18:14:49.043"></status>
</kw>
<msg timestamp="20201029 18:14:49.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.741" endtime="20201029 18:14:49.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.047" endtime="20201029 18:14:49.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.055" endtime="20201029 18:14:49.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.736" endtime="20201029 18:14:49.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.732" endtime="20201029 18:14:49.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.062" level="INFO">${PHILIP_RES} = [{'diff': 0.0016691940000000023}, {'diff': 0.0016665280000000005}, {'diff': 0.0016664309999999995}, {'diff': 0.0016663609999999981}, {'diff': 0.001666319999999999}, {'diff': 0.001666347000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:49.059" endtime="20201029 18:14:49.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.067" level="INFO">${RESULT} = {'diff': [0.0016691940000000023, 0.0016665280000000005, 0.0016664309999999995, 0.0016663609999999981, 0.001666319999999999, 0.001666347000000002, 0.00166643, 0.0016665700000000026, 0.00166663899999999...</msg>
<status status="PASS" starttime="20201029 18:14:49.063" endtime="20201029 18:14:49.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.071" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.070" endtime="20201029 18:14:49.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.073" level="INFO">VALUE: [0.0016691940000000023, 0.0016665280000000005, 0.0016664309999999995, 0.0016663609999999981, 0.001666319999999999, 0.001666347000000002, 0.00166643, 0.0016665700000000026, 0.0016666389999999975, 0.0016665829999999993, 0.001666542, 0.001666624999999998, 0.0016665140000000009, 0.001666444000000003, 0.0016665000000000013, 0.0016665550000000001, 0.0016665000000000013, 0.0016665280000000005, 0.001666624999999998, 0.0016665839999999987, 0.0016665559999999996, 0.0016665550000000001, 0.001666542, 0.001666527000000001, 0.0016665839999999987, 0.0016665699999999922, 0.0016665689999999928, 0.001666637999999998, 0.0016665559999999996, 0.0016666109999999984, 0.0016666659999999972, 0.001666625000000005, 0.0016666659999999972, 0.0016667779999999938, 0.0016666949999999958, 0.0016666519999999907, 0.001666736000000002, 0.0016665969999999919, 0.0016666389999999975, 0.0016666800000000037, 0.001666624999999991, 0.0016666389999999975, 0.0016666519999999907, 0.0016664860000000087, 0.0016665140000000078, 0.0016664720000000022, 0.001666542000000007, 0.0016665970000000058, 0.0016666109999999984, 0.0016665689999999928]</msg>
<status status="PASS" starttime="20201029 18:14:49.072" endtime="20201029 18:14:49.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.068" endtime="20201029 18:14:49.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.606" endtime="20201029 18:14:49.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.583" endtime="20201029 18:14:49.076"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.079" endtime="20201029 18:14:49.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.077" endtime="20201029 18:14:49.099"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.106" endtime="20201029 18:14:49.208"></status>
</kw>
<msg timestamp="20201029 18:14:49.208" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.105" endtime="20201029 18:14:49.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.211" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.209" endtime="20201029 18:14:49.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.212" endtime="20201029 18:14:49.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.102" endtime="20201029 18:14:49.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.101" endtime="20201029 18:14:49.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.221" endtime="20201029 18:14:49.508"></status>
</kw>
<msg timestamp="20201029 18:14:49.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.219" endtime="20201029 18:14:49.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017514847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.512" endtime="20201029 18:14:49.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.520" endtime="20201029 18:14:49.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.217" endtime="20201029 18:14:49.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.215" endtime="20201029 18:14:49.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.526" level="INFO">${PHILIP_RES} = [{'diff': 0.0017636949999999992}, {'diff': 0.0017610140000000017}, {'diff': 0.0017610690000000005}, {'diff': 0.0017610000000000021}, {'diff': 0.001760958}, {'diff': 0.0017610280000000013}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 18:14:49.523" endtime="20201029 18:14:49.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.531" level="INFO">${RESULT} = {'diff': [0.0017636949999999992, 0.0017610140000000017, 0.0017610690000000005, 0.0017610000000000021, 0.001760958, 0.0017610280000000013, 0.0017609310000000003, 0.001760985999999999, 0.001761054999999...</msg>
<status status="PASS" starttime="20201029 18:14:49.527" endtime="20201029 18:14:49.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.535" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.534" endtime="20201029 18:14:49.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.538" level="INFO">VALUE: [0.0017636949999999992, 0.0017610140000000017, 0.0017610690000000005, 0.0017610000000000021, 0.001760958, 0.0017610280000000013, 0.0017609310000000003, 0.001760985999999999, 0.0017610549999999975, 0.0017609160000000013, 0.0017609310000000003, 0.0017609030000000012, 0.0017608609999999955, 0.001760792000000004, 0.001760985999999999, 0.001760972999999999, 0.0017609999999999987, 0.0017610700000000035, 0.0017609719999999995, 0.0017610270000000053, 0.0017609440000000004, 0.0017608890000000016, 0.0017609439999999935, 0.0017608889999999947, 0.0017609170000000007, 0.0017610969999999893, 0.0017610419999999904, 0.0017609440000000004, 0.0017610279999999978, 0.0017610979999999887, 0.001761166999999994, 0.001761055999999997, 0.001761055999999997, 0.0017610419999999904, 0.0017610410000000049, 0.0017609999999999987, 0.0017610420000000043, 0.0017609870000000055, 0.0017610969999999893, 0.001760986000000006, 0.001760972999999999, 0.0017610279999999978, 0.0017609160000000013, 0.0017609170000000007, 0.001760958000000007, 0.0017609440000000004, 0.0017608890000000016, 0.0017608889999999877, 0.001760958000000007, 0.0017608329999999894]</msg>
<status status="PASS" starttime="20201029 18:14:49.536" endtime="20201029 18:14:49.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.532" endtime="20201029 18:14:49.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.099" endtime="20201029 18:14:49.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.076" endtime="20201029 18:14:49.540"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.542" endtime="20201029 18:14:49.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.541" endtime="20201029 18:14:49.564"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.581" endtime="20201029 18:14:49.689"></status>
</kw>
<msg timestamp="20201029 18:14:49.690" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.578" endtime="20201029 18:14:49.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.695" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.693" endtime="20201029 18:14:49.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.698" endtime="20201029 18:14:49.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.572" endtime="20201029 18:14:49.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.568" endtime="20201029 18:14:49.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.717" endtime="20201029 18:14:50.014"></status>
</kw>
<msg timestamp="20201029 18:14:50.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.713" endtime="20201029 18:14:50.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029642861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.018" endtime="20201029 18:14:50.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.025" endtime="20201029 18:14:50.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.708" endtime="20201029 18:14:50.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.704" endtime="20201029 18:14:50.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.032" level="INFO">${PHILIP_RES} = [{'diff': 0.0018604310000000027}, {'diff': 0.0018577639999999979}, {'diff': 0.0018579440000000003}, {'diff': 0.001857820000000003}, {'diff': 0.0018577779999999974}, {'diff': 0.0018577079999999996}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:50.029" endtime="20201029 18:14:50.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.036" level="INFO">${RESULT} = {'diff': [0.0018604310000000027, 0.0018577639999999979, 0.0018579440000000003, 0.001857820000000003, 0.0018577779999999974, 0.0018577079999999996, 0.0018577370000000051, 0.0018578329999999962, 0.00185...</msg>
<status status="PASS" starttime="20201029 18:14:50.033" endtime="20201029 18:14:50.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.040" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.039" endtime="20201029 18:14:50.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.042" level="INFO">VALUE: [0.0018604310000000027, 0.0018577639999999979, 0.0018579440000000003, 0.001857820000000003, 0.0018577779999999974, 0.0018577079999999996, 0.0018577370000000051, 0.0018578329999999962, 0.0018578890000000015, 0.0018578470000000027, 0.001857776999999998, 0.0018578620000000018, 0.0018577079999999996, 0.0018577780000000044, 0.0018578339999999957, 0.0018578190000000036, 0.0018578479999999953, 0.0018579440000000003, 0.0018577920000000109, 0.0018578330000000032, 0.0018578190000000105, 0.001857791999999997, 0.001857874999999995, 0.0018577500000000052, 0.0018577360000000126, 0.0018577500000000052, 0.0018577639999999979, 0.0018577359999999987, 0.0018578060000000035, 0.0018577359999999987, 0.0018577909999999975, 0.001857708999999999, 0.001857722000000006, 0.0018577639999999979, 0.0018578189999999967, 0.001857874999999995, 0.0018578890000000015, 0.0018578189999999967, 0.0018579719999999994, 0.0018578890000000015, 0.0018578890000000015, 0.0018579170000000006, 0.0018579719999999994, 0.0018578610000000023, 0.0018579309999999932, 0.0018578890000000015, 0.0018578199999999961, 0.0018579300000000076, 0.0018578750000000088, 0.0018579719999999855]</msg>
<status status="PASS" starttime="20201029 18:14:50.041" endtime="20201029 18:14:50.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.037" endtime="20201029 18:14:50.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.565" endtime="20201029 18:14:50.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.540" endtime="20201029 18:14:50.049"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.052" endtime="20201029 18:14:50.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.050" endtime="20201029 18:14:50.072"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.081" endtime="20201029 18:14:50.193"></status>
</kw>
<msg timestamp="20201029 18:14:50.193" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.079" endtime="20201029 18:14:50.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.196" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.194" endtime="20201029 18:14:50.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.197" endtime="20201029 18:14:50.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.076" endtime="20201029 18:14:50.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.074" endtime="20201029 18:14:50.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.207" endtime="20201029 18:14:50.501"></status>
</kw>
<msg timestamp="20201029 18:14:50.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.205" endtime="20201029 18:14:50.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020687625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.509" endtime="20201029 18:14:50.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.526" endtime="20201029 18:14:50.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.203" endtime="20201029 18:14:50.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.201" endtime="20201029 18:14:50.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0019599310000000016}, {'diff': 0.0019573329999999986}, {'diff': 0.0019572919999999994}, {'diff': 0.0019572500000000007}, {'diff': 0.001957318999999999}, {'diff': 0.001957292000000003}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:50.533" endtime="20201029 18:14:50.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.548" level="INFO">${RESULT} = {'diff': [0.0019599310000000016, 0.0019573329999999986, 0.0019572919999999994, 0.0019572500000000007, 0.001957318999999999, 0.001957292000000003, 0.0019572919999999994, 0.0019571810000000023, 0.001957...</msg>
<status status="PASS" starttime="20201029 18:14:50.542" endtime="20201029 18:14:50.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.557" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.555" endtime="20201029 18:14:50.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.562" level="INFO">VALUE: [0.0019599310000000016, 0.0019573329999999986, 0.0019572919999999994, 0.0019572500000000007, 0.001957318999999999, 0.001957292000000003, 0.0019572919999999994, 0.0019571810000000023, 0.0019572640000000002, 0.001957417000000003, 0.0019572919999999994, 0.0019574029999999965, 0.001957291, 0.0019573609999999977, 0.001957236000000001, 0.0019574030000000034, 0.0019573750000000043, 0.0019574160000000035, 0.0019573750000000043, 0.0019573749999999973, 0.001957471999999995, 0.001957346999999998, 0.001957417000000003, 0.001957445000000002, 0.0019574579999999953, 0.001957500000000001, 0.001957597999999991, 0.0019574310000000095, 0.0019574579999999953, 0.0019574029999999965, 0.001957500000000001, 0.0019575420000000066, 0.0019574439999999887, 0.0019574579999999953, 0.001957417000000003, 0.001957458000000009, 0.00195738899999999, 0.0019574160000000035, 0.001957500000000001, 0.001957346999999998, 0.001957471999999988, 0.001957277999999993, 0.0019574859999999944, 0.001957540999999993, 0.001957540999999993, 0.001957540999999993, 0.001957306000000006, 0.001957402000000011, 0.001957389000000004, 0.0019572919999999994]</msg>
<status status="PASS" starttime="20201029 18:14:50.559" endtime="20201029 18:14:50.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.550" endtime="20201029 18:14:50.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.073" endtime="20201029 18:14:50.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.050" endtime="20201029 18:14:50.568"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.573" endtime="20201029 18:14:50.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.570" endtime="20201029 18:14:50.593"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.601" endtime="20201029 18:14:50.718"></status>
</kw>
<msg timestamp="20201029 18:14:50.719" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.600" endtime="20201029 18:14:50.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.721" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.720" endtime="20201029 18:14:50.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.722" endtime="20201029 18:14:50.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.597" endtime="20201029 18:14:50.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.595" endtime="20201029 18:14:50.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.731" endtime="20201029 18:14:51.020"></status>
</kw>
<msg timestamp="20201029 18:14:51.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.730" endtime="20201029 18:14:51.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019563764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.024" endtime="20201029 18:14:51.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.031" endtime="20201029 18:14:51.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.727" endtime="20201029 18:14:51.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.725" endtime="20201029 18:14:51.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0020618890000000008}, {'diff': 0.002059166999999997}, {'diff': 0.0020592770000000017}, {'diff': 0.002059138999999998}, {'diff': 0.0020592360000000025}, {'diff': 0.002059222000000003}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:51.035" endtime="20201029 18:14:51.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.042" level="INFO">${RESULT} = {'diff': [0.0020618890000000008, 0.002059166999999997, 0.0020592770000000017, 0.002059138999999998, 0.0020592360000000025, 0.002059222000000003, 0.002059319000000004, 0.0020592219999999994, 0.00205916...</msg>
<status status="PASS" starttime="20201029 18:14:51.039" endtime="20201029 18:14:51.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.047" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.046" endtime="20201029 18:14:51.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.049" level="INFO">VALUE: [0.0020618890000000008, 0.002059166999999997, 0.0020592770000000017, 0.002059138999999998, 0.0020592360000000025, 0.002059222000000003, 0.002059319000000004, 0.0020592219999999994, 0.0020591670000000006, 0.002059222999999999, 0.0020591670000000006, 0.002059054999999997, 0.0020590690000000036, 0.002059208, 0.0020591940000000003, 0.0020591940000000003, 0.002059208, 0.002059181, 0.0020592499999999986, 0.0020592919999999973, 0.002059263999999998, 0.002059319000000004, 0.0020593049999999974, 0.0020592219999999994, 0.002059207999999993, 0.0020593049999999974, 0.0020592779999999977, 0.0020593200000000034, 0.0020592779999999977, 0.0020593609999999957, 0.0020592219999999994, 0.002059124999999995, 0.002059235999999992, 0.002059083999999989, 0.0020591949999999998, 0.0020592499999999986, 0.0020591670000000006, 0.0020590690000000106, 0.0020590689999999967, 0.0020592219999999994, 0.0020592219999999994, 0.0020592090000000063, 0.002059153000000008, 0.002059096999999996, 0.0020591949999999998, 0.0020590970000000097, 0.0020591519999999947, 0.002059264000000005, 0.002059223000000013, 0.002059264000000005]</msg>
<status status="PASS" starttime="20201029 18:14:51.048" endtime="20201029 18:14:51.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.043" endtime="20201029 18:14:51.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.594" endtime="20201029 18:14:51.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.568" endtime="20201029 18:14:51.051"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.053" endtime="20201029 18:14:51.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.052" endtime="20201029 18:14:51.073"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.081" endtime="20201029 18:14:51.204"></status>
</kw>
<msg timestamp="20201029 18:14:51.205" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.080" endtime="20201029 18:14:51.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.207" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.206" endtime="20201029 18:14:51.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.208" endtime="20201029 18:14:51.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.077" endtime="20201029 18:14:51.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.075" endtime="20201029 18:14:51.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.217" endtime="20201029 18:14:51.524"></status>
</kw>
<msg timestamp="20201029 18:14:51.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017846542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.215" endtime="20201029 18:14:51.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017846542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.528" endtime="20201029 18:14:51.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.535" endtime="20201029 18:14:51.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.213" endtime="20201029 18:14:51.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.211" endtime="20201029 18:14:51.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.543" level="INFO">${PHILIP_RES} = [{'diff': 0.002166541000000001}, {'diff': 0.0021638059999999973}, {'diff': 0.002163944000000001}, {'diff': 0.0021638330000000004}, {'diff': 0.0021638050000000013}, {'diff': 0.0021637639999999986}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:51.538" endtime="20201029 18:14:51.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.548" level="INFO">${RESULT} = {'diff': [0.002166541000000001, 0.0021638059999999973, 0.002163944000000001, 0.0021638330000000004, 0.0021638050000000013, 0.0021637639999999986, 0.0021638750000000026, 0.002164000000000006, 0.0021639...</msg>
<status status="PASS" starttime="20201029 18:14:51.544" endtime="20201029 18:14:51.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.555" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.553" endtime="20201029 18:14:51.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.558" level="INFO">VALUE: [0.002166541000000001, 0.0021638059999999973, 0.002163944000000001, 0.0021638330000000004, 0.0021638050000000013, 0.0021637639999999986, 0.0021638750000000026, 0.002164000000000006, 0.002163944000000001, 0.0021639170000000013, 0.0021638339999999964, 0.002163819999999997, 0.0021637920000000047, 0.0021637909999999982, 0.002163860999999996, 0.0021637089999999998, 0.002163777999999998, 0.0021637359999999994, 0.002163680000000001, 0.0021635269999999984, 0.002163638999999995, 0.002163638999999995, 0.002163652000000002, 0.0021636659999999946, 0.0021637359999999994, 0.0021637359999999994, 0.002163819999999997, 0.0021637769999999917, 0.002163778000000005, 0.0021637089999999998, 0.0021637919999999977, 0.002163777999999991, 0.0021638880000000027, 0.0021639729999999996, 0.0021639580000000075, 0.002163833000000004, 0.002163972, 0.002163959000000007, 0.0021638050000000048, 0.0021638749999999957, 0.002163959000000007, 0.002163721999999993, 0.0021637919999999977, 0.0021638749999999957, 0.0021639030000000087, 0.0021638059999999903, 0.002163778000000005, 0.0021638200000000107, 0.002163693999999994, 0.002163778000000005]</msg>
<status status="PASS" starttime="20201029 18:14:51.556" endtime="20201029 18:14:51.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.549" endtime="20201029 18:14:51.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.074" endtime="20201029 18:14:51.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.051" endtime="20201029 18:14:51.561"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.565" endtime="20201029 18:14:51.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.563" endtime="20201029 18:14:51.586"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.593" endtime="20201029 18:14:51.722"></status>
</kw>
<msg timestamp="20201029 18:14:51.722" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.592" endtime="20201029 18:14:51.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.725" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.723" endtime="20201029 18:14:51.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.726" endtime="20201029 18:14:51.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.590" endtime="20201029 18:14:51.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.588" endtime="20201029 18:14:51.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.738" endtime="20201029 18:14:52.027"></status>
</kw>
<msg timestamp="20201029 18:14:52.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017668306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.736" endtime="20201029 18:14:52.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017668306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.031" endtime="20201029 18:14:52.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.039" endtime="20201029 18:14:52.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.734" endtime="20201029 18:14:52.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.732" endtime="20201029 18:14:52.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.046" level="INFO">${PHILIP_RES} = [{'diff': 0.0022732219999999984}, {'diff': 0.002270486999999998}, {'diff': 0.002270651999999998}, {'diff': 0.0022706109999999988}, {'diff': 0.0022708190000000003}, {'diff': 0.0022709440000000004}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:52.043" endtime="20201029 18:14:52.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.049" level="INFO">${RESULT} = {'diff': [0.0022732219999999984, 0.002270486999999998, 0.002270651999999998, 0.0022706109999999988, 0.0022708190000000003, 0.0022709440000000004, 0.002270833, 0.002270806, 0.002270847999999999, 0.0022...</msg>
<status status="PASS" starttime="20201029 18:14:52.047" endtime="20201029 18:14:52.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.054" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.053" endtime="20201029 18:14:52.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.056" level="INFO">VALUE: [0.0022732219999999984, 0.002270486999999998, 0.002270651999999998, 0.0022706109999999988, 0.0022708190000000003, 0.0022709440000000004, 0.002270833, 0.002270806, 0.002270847999999999, 0.0022709029999999977, 0.002270860999999999, 0.0022709170000000042, 0.002270958999999996, 0.002271027000000002, 0.0022710279999999944, 0.0022709580000000035, 0.0022707079999999963, 0.0022706809999999966, 0.0022707360000000024, 0.00227070800000001, 0.0022707920000000076, 0.002270750000000002, 0.0022707639999999946, 0.002270889000000012, 0.0022708749999999917, 0.002270791000000008, 0.002270902999999991, 0.0022708749999999917, 0.0022709030000000047, 0.002270860999999999, 0.0022707920000000076, 0.002270847999999992, 0.002270833, 0.0022708189999999934, 0.002270778000000001, 0.002270806, 0.002270722000000003, 0.002270860999999999, 0.002270750000000002, 0.0022709300000000043, 0.002270902999999991, 0.0022709030000000047, 0.002270833, 0.002270778000000015, 0.0022707909999999942, 0.002270804999999987, 0.002270778000000001, 0.002270778000000001, 0.002270722000000003, 0.0022707919999999937]</msg>
<status status="PASS" starttime="20201029 18:14:52.055" endtime="20201029 18:14:52.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.050" endtime="20201029 18:14:52.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.586" endtime="20201029 18:14:52.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.562" endtime="20201029 18:14:52.059"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.061" endtime="20201029 18:14:52.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.059" endtime="20201029 18:14:52.081"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.090" endtime="20201029 18:14:52.227"></status>
</kw>
<msg timestamp="20201029 18:14:52.228" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.087" endtime="20201029 18:14:52.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.233" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.230" endtime="20201029 18:14:52.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.235" endtime="20201029 18:14:52.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.085" endtime="20201029 18:14:52.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.083" endtime="20201029 18:14:52.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.255" endtime="20201029 18:14:52.552"></status>
</kw>
<msg timestamp="20201029 18:14:52.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.252" endtime="20201029 18:14:52.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.556" endtime="20201029 18:14:52.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.563" endtime="20201029 18:14:52.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.246" endtime="20201029 18:14:52.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.243" endtime="20201029 18:14:52.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.569" level="INFO">${PHILIP_RES} = [{'diff': 0.0023827640000000025}, {'diff': 0.002380041000000003}, {'diff': 0.002379944000000002}, {'diff': 0.0023801659999999995}, {'diff': 0.002380291999999999}, {'diff': 0.0023802779999999996}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:52.566" endtime="20201029 18:14:52.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.574" level="INFO">${RESULT} = {'diff': [0.0023827640000000025, 0.002380041000000003, 0.002379944000000002, 0.0023801659999999995, 0.002380291999999999, 0.0023802779999999996, 0.0023803059999999987, 0.002380069999999998, 0.00238002...</msg>
<status status="PASS" starttime="20201029 18:14:52.570" endtime="20201029 18:14:52.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.578" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.577" endtime="20201029 18:14:52.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.581" level="INFO">VALUE: [0.0023827640000000025, 0.002380041000000003, 0.002379944000000002, 0.0023801659999999995, 0.002380291999999999, 0.0023802779999999996, 0.0023803059999999987, 0.002380069999999998, 0.0023800279999999993, 0.002379944000000002, 0.002380194000000002, 0.002380236000000001, 0.0023801800000000026, 0.002380236000000001, 0.0023800410000000063, 0.0023802080000000017, 0.0023802089999999942, 0.0023800969999999977, 0.0023805000000000076, 0.0023802220000000013, 0.002380236000000008, 0.0023803059999999987, 0.0023803059999999987, 0.002380320000000005, 0.0023802500000000004, 0.0023803049999999992, 0.0023801669999999886, 0.002380180999999995, 0.0023802089999999942, 0.002380263999999993, 0.0023802230000000008, 0.002380124999999997, 0.0023802370000000073, 0.002380292000000006, 0.002380070000000012, 0.0023801390000000033, 0.0023801109999999903, 0.002380181000000009, 0.0023800560000000054, 0.0023800560000000054, 0.0023802230000000008, 0.002380222000000015, 0.002380194000000002, 0.0023801950000000016, 0.00238023599999998, 0.0023802219999999874, 0.0023802780000000134, 0.0023801799999999818, 0.002380194000000002, 0.002380264000000021]</msg>
<status status="PASS" starttime="20201029 18:14:52.579" endtime="20201029 18:14:52.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.575" endtime="20201029 18:14:52.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.081" endtime="20201029 18:14:52.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.059" endtime="20201029 18:14:52.583"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.585" endtime="20201029 18:14:52.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.583" endtime="20201029 18:14:52.605"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.613" endtime="20201029 18:14:52.752"></status>
</kw>
<msg timestamp="20201029 18:14:52.753" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.611" endtime="20201029 18:14:52.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.755" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.754" endtime="20201029 18:14:52.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.756" endtime="20201029 18:14:52.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.609" endtime="20201029 18:14:52.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.607" endtime="20201029 18:14:52.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.765" endtime="20201029 18:14:53.070"></status>
</kw>
<msg timestamp="20201029 18:14:53.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0173575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:52.764" endtime="20201029 18:14:53.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0173575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852222, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:53.079" endtime="20201029 18:14:53.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.095" endtime="20201029 18:14:53.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.761" endtime="20201029 18:14:53.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.759" endtime="20201029 18:14:53.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.109" level="INFO">${PHILIP_RES} = [{'diff': 0.002494721999999998}, {'diff': 0.002492069999999999}, {'diff': 0.0024920140000000007}, {'diff': 0.0024921389999999974}, {'diff': 0.002491903}, {'diff': 0.0024920280000000003}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:53.102" endtime="20201029 18:14:53.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.113" level="INFO">${RESULT} = {'diff': [0.002494721999999998, 0.002492069999999999, 0.0024920140000000007, 0.0024921389999999974, 0.002491903, 0.0024920280000000003, 0.0024921389999999974, 0.0024919729999999946, 0.0024920839999999...</msg>
<status status="PASS" starttime="20201029 18:14:53.110" endtime="20201029 18:14:53.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.117" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.116" endtime="20201029 18:14:53.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.119" level="INFO">VALUE: [0.002494721999999998, 0.002492069999999999, 0.0024920140000000007, 0.0024921389999999974, 0.002491903, 0.0024920280000000003, 0.0024921389999999974, 0.0024919729999999946, 0.0024920839999999986, 0.0024921669999999965, 0.002492124999999998, 0.0024920969999999987, 0.002492055, 0.002491943999999996, 0.002492124999999998, 0.002492082999999999, 0.0024920279999999934, 0.0024920969999999987, 0.0024921389999999904, 0.002492111000000005, 0.002492277000000001, 0.0024920969999999987, 0.002492069999999999, 0.0024920279999999934, 0.002491943999999996, 0.002492055000000007, 0.0024919310000000028, 0.002491943999999996, 0.0024919999999999942, 0.0024919029999999898, 0.002491971999999995, 0.002492152999999997, 0.002492097999999998, 0.0024920969999999987, 0.0024920140000000007, 0.002491972000000009, 0.0024920969999999987, 0.0024923609999999985, 0.002492403000000004, 0.0024923609999999985, 0.0024923059999999997, 0.0024923890000000115, 0.0024923610000000262, 0.002492263999999994, 0.00249218100000001, 0.0024922079999999958, 0.0024922500000000014, 0.002492416000000025, 0.002492292000000007, 0.002492152999999997]</msg>
<status status="PASS" starttime="20201029 18:14:53.118" endtime="20201029 18:14:53.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.113" endtime="20201029 18:14:53.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.605" endtime="20201029 18:14:53.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.583" endtime="20201029 18:14:53.121"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.123" endtime="20201029 18:14:53.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.122" endtime="20201029 18:14:53.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.151" endtime="20201029 18:14:53.297"></status>
</kw>
<msg timestamp="20201029 18:14:53.298" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.150" endtime="20201029 18:14:53.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.300" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.299" endtime="20201029 18:14:53.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.301" endtime="20201029 18:14:53.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.147" endtime="20201029 18:14:53.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.145" endtime="20201029 18:14:53.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.311" endtime="20201029 18:14:53.600"></status>
</kw>
<msg timestamp="20201029 18:14:53.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.309" endtime="20201029 18:14:53.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017592208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.604" endtime="20201029 18:14:53.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.612" endtime="20201029 18:14:53.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.307" endtime="20201029 18:14:53.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.305" endtime="20201029 18:14:53.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.618" level="INFO">${PHILIP_RES} = [{'diff': 0.0026090839999999976}, {'diff': 0.0026063480000000014}, {'diff': 0.002606222000000002}, {'diff': 0.0026060549999999995}, {'diff': 0.002606195000000002}, {'diff': 0.002606153}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:53.615" endtime="20201029 18:14:53.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.622" level="INFO">${RESULT} = {'diff': [0.0026090839999999976, 0.0026063480000000014, 0.002606222000000002, 0.0026060549999999995, 0.002606195000000002, 0.002606153, 0.002606083000000002, 0.0026062219999999983, 0.00260644399999999...</msg>
<status status="PASS" starttime="20201029 18:14:53.619" endtime="20201029 18:14:53.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.626" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.625" endtime="20201029 18:14:53.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.628" level="INFO">VALUE: [0.0026090839999999976, 0.0026063480000000014, 0.002606222000000002, 0.0026060549999999995, 0.002606195000000002, 0.002606153, 0.002606083000000002, 0.0026062219999999983, 0.0026064439999999994, 0.0026063610000000015, 0.002606193999999999, 0.0026062500000000044, 0.0026062369999999974, 0.002606098000000001, 0.002606125000000001, 0.0026061799999999996, 0.0026060279999999963, 0.0026060970000000017, 0.002606347000000009, 0.0026062089999999982, 0.0026060560000000094, 0.0026061389999999934, 0.002605999999999997, 0.0026057220000000048, 0.0026059860000000046, 0.0026058200000000087, 0.002605943999999999, 0.0026059579999999916, 0.002606083000000009, 0.0026057359999999974, 0.002605889, 0.002605638999999993, 0.0026057089999999977, 0.0026055700000000015, 0.0026057919999999957, 0.002605819000000009, 0.0026058189999999953, 0.0026059169999999993, 0.0026060829999999813, 0.002606070000000016, 0.0026059300000000063, 0.0026059029999999928, 0.002605806000000016, 0.0026058470000000222, 0.0026059160000000137, 0.002605889, 0.002605999999999997, 0.002606070000000016, 0.002606124999999987, 0.002606124999999987]</msg>
<status status="PASS" starttime="20201029 18:14:53.627" endtime="20201029 18:14:53.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.623" endtime="20201029 18:14:53.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.144" endtime="20201029 18:14:53.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.121" endtime="20201029 18:14:53.631"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.633" endtime="20201029 18:14:53.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.632" endtime="20201029 18:14:53.653"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.661" endtime="20201029 18:14:53.813"></status>
</kw>
<msg timestamp="20201029 18:14:53.814" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.660" endtime="20201029 18:14:53.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.819" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.816" endtime="20201029 18:14:53.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.822" endtime="20201029 18:14:53.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.657" endtime="20201029 18:14:53.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.655" endtime="20201029 18:14:53.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.841" endtime="20201029 18:14:54.138"></status>
</kw>
<msg timestamp="20201029 18:14:54.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017432806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.837" endtime="20201029 18:14:54.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017432806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.142" endtime="20201029 18:14:54.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.150" endtime="20201029 18:14:54.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.832" endtime="20201029 18:14:54.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.828" endtime="20201029 18:14:54.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0027255410000000015}, {'diff': 0.0027228059999999978}, {'diff': 0.0027227920000000017}, {'diff': 0.002722986}, {'diff': 0.002722763999999999}, {'diff': 0.0027228470000000005}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:54.154" endtime="20201029 18:14:54.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.162" level="INFO">${RESULT} = {'diff': [0.0027255410000000015, 0.0027228059999999978, 0.0027227920000000017, 0.002722986, 0.002722763999999999, 0.0027228470000000005, 0.0027229169999999983, 0.0027227769999999957, 0.002722833000000...</msg>
<status status="PASS" starttime="20201029 18:14:54.158" endtime="20201029 18:14:54.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.166" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.165" endtime="20201029 18:14:54.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.168" level="INFO">VALUE: [0.0027255410000000015, 0.0027228059999999978, 0.0027227920000000017, 0.002722986, 0.002722763999999999, 0.0027228470000000005, 0.0027229169999999983, 0.0027227769999999957, 0.002722833000000001, 0.002723125, 0.0027229729999999966, 0.002723165999999999, 0.0027233330000000014, 0.0027233050000000023, 0.002723318999999995, 0.002723374999999993, 0.0027234719999999907, 0.0027234439999999915, 0.002723375, 0.0027234170000000057, 0.0027232219999999974, 0.0027233610000000075, 0.0027232500000000104, 0.002723264000000003, 0.0027232500000000104, 0.0027231389999999994, 0.0027231800000000056, 0.0027233890000000066, 0.00272323599999999, 0.0027231949999999977, 0.002723305999999995, 0.002723292000000002, 0.002723292000000002, 0.002723124999999993, 0.0027231669999999986, 0.002723222999999997, 0.0027232220000000112, 0.002723416999999978, 0.0027234450000000188, 0.0027234159999999785, 0.002723346999999987, 0.0027233329999999945, 0.0027233329999999945, 0.0027232080000000047, 0.0027231939999999843, 0.0027232639999999753, 0.00272323599999999, 0.0027232499999999826, 0.002723194999999984, 0.0027233890000000205]</msg>
<status status="PASS" starttime="20201029 18:14:54.167" endtime="20201029 18:14:54.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.163" endtime="20201029 18:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.654" endtime="20201029 18:14:54.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.631" endtime="20201029 18:14:54.170"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.173" endtime="20201029 18:14:54.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.171" endtime="20201029 18:14:54.193"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.200" endtime="20201029 18:14:54.358"></status>
</kw>
<msg timestamp="20201029 18:14:54.359" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.199" endtime="20201029 18:14:54.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.361" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.360" endtime="20201029 18:14:54.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.362" endtime="20201029 18:14:54.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.196" endtime="20201029 18:14:54.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.194" endtime="20201029 18:14:54.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.371" endtime="20201029 18:14:54.674"></status>
</kw>
<msg timestamp="20201029 18:14:54.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.370" endtime="20201029 18:14:54.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.682" endtime="20201029 18:14:54.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.699" endtime="20201029 18:14:54.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.367" endtime="20201029 18:14:54.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.365" endtime="20201029 18:14:54.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.712" level="INFO">${PHILIP_RES} = [{'diff': 0.0028453049999999994}, {'diff': 0.002842846999999999}, {'diff': 0.002842819}, {'diff': 0.0028426660000000006}, {'diff': 0.0028423890000000007}, {'diff': 0.002842639000000001}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:54.706" endtime="20201029 18:14:54.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.721" level="INFO">${RESULT} = {'diff': [0.0028453049999999994, 0.002842846999999999, 0.002842819, 0.0028426660000000006, 0.0028423890000000007, 0.002842639000000001, 0.002842556000000003, 0.0028424719999999987, 0.00284263900000000...</msg>
<status status="PASS" starttime="20201029 18:14:54.714" endtime="20201029 18:14:54.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.728" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.727" endtime="20201029 18:14:54.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.730" level="INFO">VALUE: [0.0028453049999999994, 0.002842846999999999, 0.002842819, 0.0028426660000000006, 0.0028423890000000007, 0.002842639000000001, 0.002842556000000003, 0.0028424719999999987, 0.002842639000000001, 0.0028425700000000026, 0.0028425829999999958, 0.002842569000000003, 0.0028426250000000014, 0.002842556000000003, 0.002842584000000002, 0.002842776999999991, 0.0028429999999999983, 0.002842985999999992, 0.002842778000000004, 0.002842667000000007, 0.002842750000000005, 0.002842638999999994, 0.0028425970000000023, 0.002842778000000004, 0.0028425970000000023, 0.0028427359999999985, 0.0028426530000000005, 0.0028427079999999993, 0.002842762999999998, 0.00284268, 0.002842708999999999, 0.0028427639999999976, 0.002842778000000004, 0.002842750000000005, 0.0028426530000000005, 0.0028425700000000026, 0.002842569000000017, 0.00284263899999998, 0.002842514000000018, 0.002842555999999996, 0.002842721999999992, 0.0028426659999999937, 0.002842457999999992, 0.0028423049999999894, 0.0028424309999999786, 0.002842639000000008, 0.0028424720000000125, 0.0028424720000000125, 0.002842499999999998, 0.002842473000000012]</msg>
<status status="PASS" starttime="20201029 18:14:54.729" endtime="20201029 18:14:54.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.722" endtime="20201029 18:14:54.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.193" endtime="20201029 18:14:54.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.171" endtime="20201029 18:14:54.732"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.734" endtime="20201029 18:14:54.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.733" endtime="20201029 18:14:54.754"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.762" endtime="20201029 18:14:54.927"></status>
</kw>
<msg timestamp="20201029 18:14:54.927" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.761" endtime="20201029 18:14:54.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.930" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.928" endtime="20201029 18:14:54.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.931" endtime="20201029 18:14:54.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.758" endtime="20201029 18:14:54.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.756" endtime="20201029 18:14:54.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.941" endtime="20201029 18:14:55.231"></status>
</kw>
<msg timestamp="20201029 18:14:55.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017444125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.939" endtime="20201029 18:14:55.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017444125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.235" endtime="20201029 18:14:55.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.243" endtime="20201029 18:14:55.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.936" endtime="20201029 18:14:55.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.935" endtime="20201029 18:14:55.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.250" level="INFO">${PHILIP_RES} = [{'diff': 0.002967055999999999}, {'diff': 0.002964526999999998}, {'diff': 0.0029645699999999997}, {'diff': 0.0029645550000000007}, {'diff': 0.0029646520000000016}, {'diff': 0.0029645550000000007}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:55.246" endtime="20201029 18:14:55.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.253" level="INFO">${RESULT} = {'diff': [0.002967055999999999, 0.002964526999999998, 0.0029645699999999997, 0.0029645550000000007, 0.0029646520000000016, 0.0029645550000000007, 0.002964499999999995, 0.002964429999999997, 0.00296433...</msg>
<status status="PASS" starttime="20201029 18:14:55.251" endtime="20201029 18:14:55.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.258" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.257" endtime="20201029 18:14:55.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.260" level="INFO">VALUE: [0.002967055999999999, 0.002964526999999998, 0.0029645699999999997, 0.0029645550000000007, 0.0029646520000000016, 0.0029645550000000007, 0.002964499999999995, 0.002964429999999997, 0.0029643329999999996, 0.002964429999999997, 0.0029644590000000026, 0.002964290999999994, 0.002964583, 0.0029644440000000036, 0.0029641519999999977, 0.002964152999999997, 0.00296418100000001, 0.002964236000000009, 0.0029642639999999942, 0.0029642639999999942, 0.0029641669999999898, 0.002964153000000011, 0.0029643609999999987, 0.0029643050000000004, 0.0029644310000000035, 0.002964416999999997, 0.0029644030000000043, 0.002964582999999993, 0.002964388999999998, 0.002964318999999993, 0.0029642919999999934, 0.0029644719999999958, 0.0029644860000000023, 0.002964597999999999, 0.002964333999999985, 0.002964500000000009, 0.002964639000000019, 0.002964750000000016, 0.0029648470000000204, 0.002964680999999997, 0.00296469399999999, 0.0029644859999999884, 0.00296458400000002, 0.0029646669999999764, 0.0029646249999999985, 0.0029645140000000014, 0.0029646660000000047, 0.002964819999999979, 0.0029647079999999826, 0.002964708999999982]</msg>
<status status="PASS" starttime="20201029 18:14:55.259" endtime="20201029 18:14:55.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.254" endtime="20201029 18:14:55.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.755" endtime="20201029 18:14:55.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.732" endtime="20201029 18:14:55.266"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.269" endtime="20201029 18:14:55.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.267" endtime="20201029 18:14:55.289"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.296" endtime="20201029 18:14:55.468"></status>
</kw>
<msg timestamp="20201029 18:14:55.469" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.295" endtime="20201029 18:14:55.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.474" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.472" endtime="20201029 18:14:55.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.476" endtime="20201029 18:14:55.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.292" endtime="20201029 18:14:55.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.291" endtime="20201029 18:14:55.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.495" endtime="20201029 18:14:55.791"></status>
</kw>
<msg timestamp="20201029 18:14:55.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01739875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:55.492" endtime="20201029 18:14:55.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01739875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:55.795" endtime="20201029 18:14:55.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.802" endtime="20201029 18:14:55.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.487" endtime="20201029 18:14:55.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.483" endtime="20201029 18:14:55.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.809" level="INFO">${PHILIP_RES} = [{'diff': 0.003091930999999999}, {'diff': 0.0030892359999999987}, {'diff': 0.003089333999999999}, {'diff': 0.0030892500000000017}, {'diff': 0.003089235999999995}, {'diff': 0.0030894310000000036}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:55.806" endtime="20201029 18:14:55.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.813" level="INFO">${RESULT} = {'diff': [0.003091930999999999, 0.0030892359999999987, 0.003089333999999999, 0.0030892500000000017, 0.003089235999999995, 0.0030894310000000036, 0.003089693999999997, 0.003089430000000004, 0.003089138...</msg>
<status status="PASS" starttime="20201029 18:14:55.810" endtime="20201029 18:14:55.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.818" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.816" endtime="20201029 18:14:55.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.820" level="INFO">VALUE: [0.003091930999999999, 0.0030892359999999987, 0.003089333999999999, 0.0030892500000000017, 0.003089235999999995, 0.0030894310000000036, 0.003089693999999997, 0.003089430000000004, 0.0030891389999999977, 0.0030894440000000037, 0.0030892920000000004, 0.003089179999999997, 0.0030892220000000026, 0.0030893329999999927, 0.003089151999999998, 0.003089278000000001, 0.003089388999999998, 0.003089069, 0.003089179999999997, 0.003089306, 0.003089236000000009, 0.0030892369999999947, 0.003089207999999996, 0.003089153000000011, 0.0030891660000000043, 0.003089096999999999, 0.003089278000000001, 0.0030892639999999943, 0.0030891670000000038, 0.003089235999999995, 0.0030893619999999983, 0.0030891389999999908, 0.0030891810000000103, 0.0030892089999999817, 0.0030891389999999908, 0.0030891940000000173, 0.0030891670000000038, 0.003089153000000011, 0.003089235999999995, 0.0030891660000000043, 0.0030892220000000026, 0.0030890830000000202, 0.003089278000000001, 0.003089417000000011, 0.003089360999999985, 0.0030893199999999787, 0.0030891379999999913, 0.0030892220000000026, 0.003089235999999995, 0.0030891389999999908]</msg>
<status status="PASS" starttime="20201029 18:14:55.819" endtime="20201029 18:14:55.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.814" endtime="20201029 18:14:55.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.289" endtime="20201029 18:14:55.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.267" endtime="20201029 18:14:55.822"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.824" endtime="20201029 18:14:55.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.823" endtime="20201029 18:14:55.844"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.852" endtime="20201029 18:14:56.029"></status>
</kw>
<msg timestamp="20201029 18:14:56.030" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.850" endtime="20201029 18:14:56.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.032" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.031" endtime="20201029 18:14:56.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.033" endtime="20201029 18:14:56.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.848" endtime="20201029 18:14:56.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.846" endtime="20201029 18:14:56.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.043" endtime="20201029 18:14:56.349"></status>
</kw>
<msg timestamp="20201029 18:14:56.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.042" endtime="20201029 18:14:56.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017404986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020623597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.353" endtime="20201029 18:14:56.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.361" endtime="20201029 18:14:56.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.038" endtime="20201029 18:14:56.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.036" endtime="20201029 18:14:56.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.367" level="INFO">${PHILIP_RES} = [{'diff': 0.0032186109999999997}, {'diff': 0.003216054999999999}, {'diff': 0.003215957999999998}, {'diff': 0.0032157220000000007}, {'diff': 0.003215805000000002}, {'diff': 0.0032156389999999993}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:56.364" endtime="20201029 18:14:56.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.371" level="INFO">${RESULT} = {'diff': [0.0032186109999999997, 0.003216054999999999, 0.003215957999999998, 0.0032157220000000007, 0.003215805000000002, 0.0032156389999999993, 0.0032157230000000037, 0.003215929999999999, 0.00321584...</msg>
<status status="PASS" starttime="20201029 18:14:56.368" endtime="20201029 18:14:56.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.375" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.374" endtime="20201029 18:14:56.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.377" level="INFO">VALUE: [0.0032186109999999997, 0.003216054999999999, 0.003215957999999998, 0.0032157220000000007, 0.003215805000000002, 0.0032156389999999993, 0.0032157230000000037, 0.003215929999999999, 0.003215847000000001, 0.003215957999999998, 0.0032158889999999996, 0.0032159169999999987, 0.003215875, 0.0032159450000000048, 0.0032158610000000004, 0.0032160279999999958, 0.003215735999999997, 0.003215680999999998, 0.0032157500000000033, 0.003215694000000005, 0.0032158189999999948, 0.003215763999999996, 0.003215903000000006, 0.0032158889999999996, 0.0032158470000000078, 0.0032157219999999903, 0.0032157079999999977, 0.0032157360000000107, 0.00321576400000001, 0.003215763999999996, 0.003215763999999996, 0.0032157779999999886, 0.003215931000000005, 0.003215929999999978, 0.0032158330000000013, 0.003215777000000003, 0.003215735999999997, 0.0032158049999999883, 0.0032158610000000143, 0.0032158889999999996, 0.0032158330000000013, 0.003215874999999979, 0.0032159870000000035, 0.003215874999999979, 0.0032159719999999836, 0.003215986000000004, 0.0032158059999999877, 0.003215846999999994, 0.0032158330000000013, 0.0032158889999999996]</msg>
<status status="PASS" starttime="20201029 18:14:56.376" endtime="20201029 18:14:56.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.372" endtime="20201029 18:14:56.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.845" endtime="20201029 18:14:56.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.822" endtime="20201029 18:14:56.379"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.382" endtime="20201029 18:14:56.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.380" endtime="20201029 18:14:56.402"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.409" endtime="20201029 18:14:56.594"></status>
</kw>
<msg timestamp="20201029 18:14:56.594" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.408" endtime="20201029 18:14:56.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.597" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.595" endtime="20201029 18:14:56.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.598" endtime="20201029 18:14:56.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.405" endtime="20201029 18:14:56.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.404" endtime="20201029 18:14:56.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.610" endtime="20201029 18:14:56.900"></status>
</kw>
<msg timestamp="20201029 18:14:56.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017483667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.608" endtime="20201029 18:14:56.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017483667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.904" endtime="20201029 18:14:56.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.912" endtime="20201029 18:14:56.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.606" endtime="20201029 18:14:56.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.604" endtime="20201029 18:14:56.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.918" level="INFO">${PHILIP_RES} = [{'diff': 0.0033476519999999996}, {'diff': 0.003345153}, {'diff': 0.0033450970000000017}, {'diff': 0.0033452500000000045}, {'diff': 0.003345222000000002}, {'diff': 0.003345166999999996}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:56.915" endtime="20201029 18:14:56.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.922" level="INFO">${RESULT} = {'diff': [0.0033476519999999996, 0.003345153, 0.0033450970000000017, 0.0033452500000000045, 0.003345222000000002, 0.003345166999999996, 0.0033451529999999965, 0.0033451940000000027, 0.0033451389999999...</msg>
<status status="PASS" starttime="20201029 18:14:56.919" endtime="20201029 18:14:56.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.926" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.925" endtime="20201029 18:14:56.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.928" level="INFO">VALUE: [0.0033476519999999996, 0.003345153, 0.0033450970000000017, 0.0033452500000000045, 0.003345222000000002, 0.003345166999999996, 0.0033451529999999965, 0.0033451940000000027, 0.003345138999999997, 0.0033452080000000023, 0.003345167000000003, 0.0033451939999999958, 0.0033452640000000006, 0.003345097999999991, 0.0033451939999999958, 0.0033451810000000026, 0.0033452910000000002, 0.003345361000000005, 0.0033454299999999965, 0.0033455280000000004, 0.0033454450000000024, 0.0033452769999999937, 0.0033454170000000033, 0.003345389000000004, 0.0033454579999999956, 0.003345250000000008, 0.0033453749999999977, 0.003345472000000002, 0.0033454169999999894, 0.003345277999999993, 0.0033453889999999903, 0.003345361000000019, 0.0033450140000000073, 0.0033450969999999913, 0.003345222000000009, 0.0033451939999999958, 0.003345138999999997, 0.003345237000000001, 0.0033452919999999997, 0.003345360999999991, 0.003345319999999985, 0.0033451810000000026, 0.0033452079999999884, 0.003345138999999997, 0.0033451810000000026, 0.003345040999999993, 0.0033449160000000033, 0.0033449590000000085, 0.0033452079999999884, 0.003344874999999997]</msg>
<status status="PASS" starttime="20201029 18:14:56.927" endtime="20201029 18:14:56.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.923" endtime="20201029 18:14:56.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.402" endtime="20201029 18:14:56.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.380" endtime="20201029 18:14:56.931"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.933" endtime="20201029 18:14:56.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.932" endtime="20201029 18:14:56.953"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.961" endtime="20201029 18:14:57.154"></status>
</kw>
<msg timestamp="20201029 18:14:57.155" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.960" endtime="20201029 18:14:57.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.160" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.157" endtime="20201029 18:14:57.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.162" endtime="20201029 18:14:57.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.957" endtime="20201029 18:14:57.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.955" endtime="20201029 18:14:57.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.181" endtime="20201029 18:14:57.481"></status>
</kw>
<msg timestamp="20201029 18:14:57.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020985583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.178" endtime="20201029 18:14:57.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020985583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.484" endtime="20201029 18:14:57.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.492" endtime="20201029 18:14:57.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.172" endtime="20201029 18:14:57.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.169" endtime="20201029 18:14:57.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.498" level="INFO">${PHILIP_RES} = [{'diff': 0.0034796389999999996}, {'diff': 0.0034771390000000006}, {'diff': 0.0034771110000000015}, {'diff': 0.003477000000000001}, {'diff': 0.003476917000000003}, {'diff': 0.003476972000000002}, {'di...</msg>
<status status="PASS" starttime="20201029 18:14:57.495" endtime="20201029 18:14:57.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.503" level="INFO">${RESULT} = {'diff': [0.0034796389999999996, 0.0034771390000000006, 0.0034771110000000015, 0.003477000000000001, 0.003476917000000003, 0.003476972000000002, 0.0034770689999999993, 0.0034770419999999996, 0.0034770...</msg>
<status status="PASS" starttime="20201029 18:14:57.499" endtime="20201029 18:14:57.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.507" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.506" endtime="20201029 18:14:57.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.510" level="INFO">VALUE: [0.0034796389999999996, 0.0034771390000000006, 0.0034771110000000015, 0.003477000000000001, 0.003476917000000003, 0.003476972000000002, 0.0034770689999999993, 0.0034770419999999996, 0.003477082999999999, 0.003476818999999999, 0.003476971999999995, 0.003477082999999999, 0.003477152000000004, 0.0034772909999999935, 0.0034769310000000025, 0.0034769310000000025, 0.0034770140000000005, 0.0034769030000000034, 0.003476888999999997, 0.003477028000000007, 0.0034771529999999967, 0.003477056000000006, 0.003476888999999997, 0.0034771660000000038, 0.003477083000000006, 0.003477193999999989, 0.003477139000000004, 0.003476971999999995, 0.003476958999999988, 0.003476971999999995, 0.0034772499999999873, 0.003477152999999983, 0.003476929999999989, 0.0034770969999999846, 0.0034768480000000046, 0.0034767500000000007, 0.0034768469999999774, 0.0034772499999999873, 0.0034771949999999885, 0.0034770420000000135, 0.003477222000000002, 0.0034772359999999947, 0.0034771940000000168, 0.0034772079999999816, 0.0034771810000000236, 0.0034772230000000015, 0.0034773889999999974, 0.003477332999999999, 0.003477193999999989, 0.003477305000000014]</msg>
<status status="PASS" starttime="20201029 18:14:57.508" endtime="20201029 18:14:57.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.504" endtime="20201029 18:14:57.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.954" endtime="20201029 18:14:57.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.931" endtime="20201029 18:14:57.512"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:57.514" endtime="20201029 18:14:57.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.512" endtime="20201029 18:14:57.534"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.542" endtime="20201029 18:14:57.740"></status>
</kw>
<msg timestamp="20201029 18:14:57.740" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.540" endtime="20201029 18:14:57.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.743" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:57.741" endtime="20201029 18:14:57.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.744" endtime="20201029 18:14:57.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.538" endtime="20201029 18:14:57.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.536" endtime="20201029 18:14:57.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.753" endtime="20201029 18:14:58.062"></status>
</kw>
<msg timestamp="20201029 18:14:58.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017451042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.751" endtime="20201029 18:14:58.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017451042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021065278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.070" endtime="20201029 18:14:58.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.078" endtime="20201029 18:14:58.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.749" endtime="20201029 18:14:58.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.747" endtime="20201029 18:14:58.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.084" level="INFO">${PHILIP_RES} = [{'diff': 0.003614236}, {'diff': 0.0036115550000000024}, {'diff': 0.0036115550000000024}, {'diff': 0.0036116250000000003}, {'diff': 0.0036117219999999978}, {'diff': 0.003611777999999996}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:58.081" endtime="20201029 18:14:58.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.088" level="INFO">${RESULT} = {'diff': [0.003614236, 0.0036115550000000024, 0.0036115550000000024, 0.0036116250000000003, 0.0036117219999999978, 0.003611777999999996, 0.003611597000000001, 0.003611485999999997, 0.00361149999999999...</msg>
<status status="PASS" starttime="20201029 18:14:58.085" endtime="20201029 18:14:58.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.092" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.091" endtime="20201029 18:14:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.094" level="INFO">VALUE: [0.003614236, 0.0036115550000000024, 0.0036115550000000024, 0.0036116250000000003, 0.0036117219999999978, 0.003611777999999996, 0.003611597000000001, 0.003611485999999997, 0.0036114999999999967, 0.0036115139999999962, 0.0036114589999999974, 0.0036114159999999992, 0.003611181000000005, 0.0036114440000000053, 0.0036113330000000082, 0.0036112080000000046, 0.0036113059999999947, 0.0036113059999999947, 0.003611263999999989, 0.003611180999999991, 0.0036113059999999947, 0.0036113059999999947, 0.0036111389999999993, 0.0036113059999999947, 0.0036115280000000027, 0.0036115000000000036, 0.003611263999999989, 0.0036114719999999906, 0.0036114439999999914, 0.003611485999999997, 0.0036112080000000046, 0.003611152999999978, 0.003611124999999993, 0.0036111119999999997, 0.0036111389999999854, 0.003611209000000004, 0.0036112080000000046, 0.003611320000000001, 0.0036113060000000086, 0.0036112080000000046, 0.003611292000000016, 0.00361123599999999, 0.0036112500000000103, 0.003611597000000022, 0.003611263999999975, 0.00361151400000001, 0.003611153000000006, 0.003611264000000003, 0.0036113890000000204, 0.00361123599999999]</msg>
<status status="PASS" starttime="20201029 18:14:58.093" endtime="20201029 18:14:58.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.089" endtime="20201029 18:14:58.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.534" endtime="20201029 18:14:58.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.512" endtime="20201029 18:14:58.096"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.099" endtime="20201029 18:14:58.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.097" endtime="20201029 18:14:58.119"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.126" endtime="20201029 18:14:58.332"></status>
</kw>
<msg timestamp="20201029 18:14:58.332" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.125" endtime="20201029 18:14:58.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.335" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.333" endtime="20201029 18:14:58.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.337" endtime="20201029 18:14:58.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.122" endtime="20201029 18:14:58.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.121" endtime="20201029 18:14:58.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.347" endtime="20201029 18:14:58.639"></status>
</kw>
<msg timestamp="20201029 18:14:58.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017598597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.346" endtime="20201029 18:14:58.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017598597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:58.643" endtime="20201029 18:14:58.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.650" endtime="20201029 18:14:58.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.343" endtime="20201029 18:14:58.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.342" endtime="20201029 18:14:58.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:58.656" level="INFO">${PHILIP_RES} = [{'diff': 0.0037510969999999984}, {'diff': 0.0037482639999999977}, {'diff': 0.0037484029999999974}, {'diff': 0.0037485559999999966}, {'diff': 0.003748528000000001}, {'diff': 0.0037485839999999993}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:58.653" endtime="20201029 18:14:58.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:58.660" level="INFO">${RESULT} = {'diff': [0.0037510969999999984, 0.0037482639999999977, 0.0037484029999999974, 0.0037485559999999966, 0.003748528000000001, 0.0037485839999999993, 0.0037486810000000037, 0.003748333999999999, 0.003748...</msg>
<status status="PASS" starttime="20201029 18:14:58.657" endtime="20201029 18:14:58.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.665" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:58.664" endtime="20201029 18:14:58.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.667" level="INFO">VALUE: [0.0037510969999999984, 0.0037482639999999977, 0.0037484029999999974, 0.0037485559999999966, 0.003748528000000001, 0.0037485839999999993, 0.0037486810000000037, 0.003748333999999999, 0.0037482370000000015, 0.003748610999999999, 0.003748346999999999, 0.0037483329999999995, 0.003748556, 0.0037484859999999953, 0.003748236000000002, 0.0037485139999999945, 0.003748291000000001, 0.0037482920000000003, 0.0037484309999999965, 0.0037482920000000003, 0.0037482499999999946, 0.0037482499999999946, 0.003748388999999991, 0.003748445000000003, 0.0037485700000000066, 0.0037485139999999945, 0.0037484029999999835, 0.0037482090000000023, 0.003748124999999991, 0.0037484030000000113, 0.0037481390000000114, 0.0037482370000000154, 0.003748292000000014, 0.003748290999999987, 0.0037484310000000243, 0.003748401999999984, 0.0037484029999999835, 0.0037483890000000186, 0.003748264000000001, 0.003748124999999991, 0.003748347000000013, 0.003748540999999994, 0.003748417000000004, 0.003748471999999975, 0.0037483890000000186, 0.003748417000000004, 0.0037484029999999835, 0.003748347000000013, 0.003748264000000001, 0.003748360999999978]</msg>
<status status="PASS" starttime="20201029 18:14:58.666" endtime="20201029 18:14:58.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.661" endtime="20201029 18:14:58.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.119" endtime="20201029 18:14:58.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.096" endtime="20201029 18:14:58.670"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:58.672" endtime="20201029 18:14:58.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.671" endtime="20201029 18:14:58.692"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.700" endtime="20201029 18:14:58.914"></status>
</kw>
<msg timestamp="20201029 18:14:58.915" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.698" endtime="20201029 18:14:58.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:58.920" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:58.917" endtime="20201029 18:14:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.922" endtime="20201029 18:14:58.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.696" endtime="20201029 18:14:58.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.694" endtime="20201029 18:14:58.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:58.941" endtime="20201029 18:14:59.240"></status>
</kw>
<msg timestamp="20201029 18:14:59.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02137425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:58.938" endtime="20201029 18:14:59.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02137425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:59.244" endtime="20201029 18:14:59.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.252" endtime="20201029 18:14:59.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.932" endtime="20201029 18:14:59.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.929" endtime="20201029 18:14:59.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.258" level="INFO">${PHILIP_RES} = [{'diff': 0.003889653}, {'diff': 0.003887111000000002}, {'diff': 0.003886999999999998}, {'diff': 0.003886958999999999}, {'diff': 0.003887207999999996}, {'diff': 0.0038873749999999985}, {'diff': 0.0038...</msg>
<status status="PASS" starttime="20201029 18:14:59.255" endtime="20201029 18:14:59.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.263" level="INFO">${RESULT} = {'diff': [0.003889653, 0.003887111000000002, 0.003886999999999998, 0.003886958999999999, 0.003887207999999996, 0.0038873749999999985, 0.0038873750000000054, 0.003887208000000003, 0.0038872640000000014...</msg>
<status status="PASS" starttime="20201029 18:14:59.259" endtime="20201029 18:14:59.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.267" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.266" endtime="20201029 18:14:59.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.269" level="INFO">VALUE: [0.003889653, 0.003887111000000002, 0.003886999999999998, 0.003886958999999999, 0.003887207999999996, 0.0038873749999999985, 0.0038873750000000054, 0.003887208000000003, 0.0038872640000000014, 0.003887180000000004, 0.0038872639999999944, 0.0038871249999999913, 0.0038870000000000016, 0.0038870280000000007, 0.003886957999999996, 0.0038870829999999995, 0.003887208000000003, 0.003887319, 0.003887347000000013, 0.0038871249999999913, 0.003887096999999992, 0.0038870419999999933, 0.003887180000000004, 0.0038873749999999985, 0.0038872079999999892, 0.003887069000000007, 0.0038870550000000004, 0.0038871109999999987, 0.0038868329999999784, 0.0038870419999999795, 0.003887306000000007, 0.0038873469999999855, 0.003887417000000004, 0.0038874440000000177, 0.0038874299999999973, 0.0038875140000000086, 0.0038873059999999793, 0.0038870000000000016, 0.0038872079999999753, 0.0038872640000000014, 0.0038872769999999945, 0.003887332999999993, 0.003887166999999997, 0.00388719500000001, 0.003887361000000006, 0.003887430000000025, 0.0038873330000000206, 0.003887389000000019, 0.003887417000000004, 0.0038874019999999843]</msg>
<status status="PASS" starttime="20201029 18:14:59.268" endtime="20201029 18:14:59.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.263" endtime="20201029 18:14:59.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.692" endtime="20201029 18:14:59.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:58.670" endtime="20201029 18:14:59.271"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.273" endtime="20201029 18:14:59.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.272" endtime="20201029 18:14:59.294"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.301" endtime="20201029 18:14:59.521"></status>
</kw>
<msg timestamp="20201029 18:14:59.522" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.300" endtime="20201029 18:14:59.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.524" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.523" endtime="20201029 18:14:59.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.525" endtime="20201029 18:14:59.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.297" endtime="20201029 18:14:59.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.295" endtime="20201029 18:14:59.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.534" endtime="20201029 18:14:59.845"></status>
</kw>
<msg timestamp="20201029 18:14:59.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.532" endtime="20201029 18:14:59.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:59.849" endtime="20201029 18:14:59.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.856" endtime="20201029 18:14:59.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.530" endtime="20201029 18:14:59.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.528" endtime="20201029 18:14:59.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:59.863" level="INFO">${PHILIP_RES} = [{'diff': 0.004031693999999999}, {'diff': 0.004029000000000001}, {'diff': 0.004028889000000001}, {'diff': 0.004028887999999998}, {'diff': 0.004028777999999997}, {'diff': 0.004028722000000005}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:14:59.860" endtime="20201029 18:14:59.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:59.867" level="INFO">${RESULT} = {'diff': [0.004031693999999999, 0.004029000000000001, 0.004028889000000001, 0.004028887999999998, 0.004028777999999997, 0.004028722000000005, 0.0040288330000000025, 0.004029040999999997, 0.00402898600...</msg>
<status status="PASS" starttime="20201029 18:14:59.864" endtime="20201029 18:14:59.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.871" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:59.870" endtime="20201029 18:14:59.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.873" level="INFO">VALUE: [0.004031693999999999, 0.004029000000000001, 0.004028889000000001, 0.004028887999999998, 0.004028777999999997, 0.004028722000000005, 0.0040288330000000025, 0.004029040999999997, 0.004028986000000005, 0.004028903, 0.004028916999999993, 0.004028889000000008, 0.004028805999999996, 0.004028778000000011, 0.0040288329999999956, 0.004028653000000007, 0.004028749999999998, 0.004028764000000004, 0.004028583000000002, 0.0040286390000000005, 0.0040287219999999985, 0.0040288330000000094, 0.004028862000000008, 0.004028764000000004, 0.004028820000000002, 0.00402880500000001, 0.004028889000000008, 0.004029013999999997, 0.004028875000000015, 0.004028792000000003, 0.004029069000000024, 0.004029083000000017, 0.004028985999999984, 0.004028832999999982, 0.004028735999999977, 0.00402870800000002, 0.004028805000000024, 0.0040291249999999945, 0.004028986999999984, 0.004028986999999984, 0.004028971999999992, 0.004029083999999988, 0.004029056000000003, 0.004028749999999998, 0.00402876399999999, 0.004028792000000003, 0.004029056000000003, 0.004028916999999993, 0.004028945000000006, 0.004028957999999999]</msg>
<status status="PASS" starttime="20201029 18:14:59.872" endtime="20201029 18:14:59.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.867" endtime="20201029 18:14:59.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.294" endtime="20201029 18:14:59.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.271" endtime="20201029 18:14:59.875"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.877" endtime="20201029 18:14:59.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.876" endtime="20201029 18:14:59.898"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.905" endtime="20201029 18:15:00.133"></status>
</kw>
<msg timestamp="20201029 18:15:00.133" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.904" endtime="20201029 18:15:00.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.136" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:00.134" endtime="20201029 18:15:00.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.137" endtime="20201029 18:15:00.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.901" endtime="20201029 18:15:00.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.900" endtime="20201029 18:15:00.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.146" endtime="20201029 18:15:00.438"></status>
</kw>
<msg timestamp="20201029 18:15:00.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.145" endtime="20201029 18:15:00.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:00.442" endtime="20201029 18:15:00.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:00.449" endtime="20201029 18:15:00.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.142" endtime="20201029 18:15:00.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.141" endtime="20201029 18:15:00.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:00.455" level="INFO">${PHILIP_RES} = [{'diff': 0.004175709}, {'diff': 0.004173165999999999}, {'diff': 0.004173209000000001}, {'diff': 0.004173195000000001}, {'diff': 0.004173125}, {'diff': 0.004173042000000002}, {'diff': 0.00417315199999...</msg>
<status status="PASS" starttime="20201029 18:15:00.452" endtime="20201029 18:15:00.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:00.459" level="INFO">${RESULT} = {'diff': [0.004175709, 0.004173165999999999, 0.004173209000000001, 0.004173195000000001, 0.004173125, 0.004173042000000002, 0.004173151999999999, 0.004173138999999999, 0.004173097000000001, 0.00417290...</msg>
<status status="PASS" starttime="20201029 18:15:00.456" endtime="20201029 18:15:00.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.463" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:00.463" endtime="20201029 18:15:00.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.466" level="INFO">VALUE: [0.004175709, 0.004173165999999999, 0.004173209000000001, 0.004173195000000001, 0.004173125, 0.004173042000000002, 0.004173151999999999, 0.004173138999999999, 0.004173097000000001, 0.004172901999999999, 0.004173013999999996, 0.004172972000000011, 0.004172652999999998, 0.004172902000000006, 0.004172901999999992, 0.004172944999999997, 0.004172943999999998, 0.004173207999999998, 0.004173125, 0.004173014000000003, 0.004172915999999999, 0.00417295899999999, 0.004172915999999999, 0.004172861, 0.004172944999999997, 0.004173222000000004, 0.004173056000000008, 0.004172889000000013, 0.004172778000000016, 0.004172861, 0.004172931000000019, 0.004172915999999999, 0.00417272199999999, 0.004172931000000019, 0.004172903000000006, 0.004173125, 0.004173207999999984, 0.004173166000000006, 0.004173096999999987, 0.004173152000000013, 0.004173028000000023, 0.00417298599999999, 0.004173014000000003, 0.00417298599999999, 0.004173070000000001, 0.0041727639999999955, 0.004173027999999995, 0.00417300000000001, 0.004173056000000008, 0.0041730690000000015]</msg>
<status status="PASS" starttime="20201029 18:15:00.465" endtime="20201029 18:15:00.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.460" endtime="20201029 18:15:00.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.898" endtime="20201029 18:15:00.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.875" endtime="20201029 18:15:00.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.982" endtime="20201029 18:15:00.472"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:35.695" endtime="20201029 18:15:00.473" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:13.573" endtime="20201029 18:15:00.482"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:00.606" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:00.614" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:01.749" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:00.604" endtime="20201029 18:15:01.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.752" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:01.751" endtime="20201029 18:15:01.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.603" endtime="20201029 18:15:01.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.755" endtime="20201029 18:15:01.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.754" endtime="20201029 18:15:01.946"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.958" endtime="20201029 18:15:01.971"></status>
</kw>
<msg timestamp="20201029 18:15:01.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.957" endtime="20201029 18:15:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.972" endtime="20201029 18:15:01.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.975" endtime="20201029 18:15:01.977"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.954" endtime="20201029 18:15:01.978"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.952" endtime="20201029 18:15:01.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.951" endtime="20201029 18:15:01.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.984" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.983" endtime="20201029 18:15:01.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.980" endtime="20201029 18:15:01.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.950" endtime="20201029 18:15:01.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.950" endtime="20201029 18:15:01.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.985" endtime="20201029 18:15:01.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.948" endtime="20201029 18:15:01.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.988" endtime="20201029 18:15:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.947" endtime="20201029 18:15:01.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:00.602" endtime="20201029 18:15:01.990"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.996" endtime="20201029 18:15:02.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.995" endtime="20201029 18:15:02.018"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.046" endtime="20201029 18:15:02.064"></status>
</kw>
<msg timestamp="20201029 18:15:02.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.042" endtime="20201029 18:15:02.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.070" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.068" endtime="20201029 18:15:02.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.077" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:02.073" endtime="20201029 18:15:02.077"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:02.037" endtime="20201029 18:15:02.079"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:02.032" endtime="20201029 18:15:02.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.030" endtime="20201029 18:15:02.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:02.088" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:02.086" endtime="20201029 18:15:02.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.082" endtime="20201029 18:15:02.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.028" endtime="20201029 18:15:02.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.026" endtime="20201029 18:15:02.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.092" endtime="20201029 18:15:02.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.024" endtime="20201029 18:15:02.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.020" endtime="20201029 18:15:02.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.993" endtime="20201029 18:15:02.097"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.119" endtime="20201029 18:15:02.133"></status>
</kw>
<msg timestamp="20201029 18:15:02.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.116" endtime="20201029 18:15:02.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.134" endtime="20201029 18:15:02.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.137" endtime="20201029 18:15:02.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.108" endtime="20201029 18:15:02.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.104" endtime="20201029 18:15:02.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.146" endtime="20201029 18:15:02.445"></status>
</kw>
<msg timestamp="20201029 18:15:02.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115148583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.144" endtime="20201029 18:15:02.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.115129319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.115148583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.450" endtime="20201029 18:15:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.459" endtime="20201029 18:15:02.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.142" endtime="20201029 18:15:02.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.140" endtime="20201029 18:15:02.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.465" level="INFO">${RESULT} = [{'diff': 1.9264000000004944e-05}, {'diff': 1.8445000000005818e-05}, {'diff': 1.8443999999992466e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8417000000006678e-...</msg>
<status status="PASS" starttime="20201029 18:15:02.462" endtime="20201029 18:15:02.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.469" level="INFO">${ACCURACY} = {'diff': [1.9264000000004944e-05, 1.8445000000005818e-05, 1.8443999999992466e-05, 1.8429999999999835e-05, 1.8485999999998115e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.8415999999993327e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:02.466" endtime="20201029 18:15:02.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.474" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.473" endtime="20201029 18:15:02.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.477" level="INFO">VALUE: [1.9264000000004944e-05, 1.8445000000005818e-05, 1.8443999999992466e-05, 1.8429999999999835e-05, 1.8485999999998115e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.8415999999993327e-05, 1.8389000000007538e-05, 1.843099999999931e-05, 1.8444000000006344e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8417000000006678e-05, 1.840300000000017e-05, 1.84169999999928e-05, 1.8444000000006344e-05, 1.844499999999194e-05, 1.8444000000006344e-05, 1.8389000000007538e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.8416000000007204e-05, 1.8445000000005818e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8416000000007204e-05, 1.840300000000017e-05, 1.8416000000007204e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8485999999998115e-05, 1.8431000000013187e-05, 1.845899999999845e-05, 1.843099999999931e-05, 1.8415999999993327e-05, 1.840300000000017e-05, 1.8402000000000696e-05, 1.8417000000006678e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.84169999999928e-05]</msg>
<status status="PASS" starttime="20201029 18:15:02.475" endtime="20201029 18:15:02.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.470" endtime="20201029 18:15:02.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.481" endtime="20201029 18:15:02.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.480" endtime="20201029 18:15:02.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.479" endtime="20201029 18:15:02.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.100" endtime="20201029 18:15:02.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.099" endtime="20201029 18:15:02.502"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.510" endtime="20201029 18:15:02.524"></status>
</kw>
<msg timestamp="20201029 18:15:02.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.509" endtime="20201029 18:15:02.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.526" endtime="20201029 18:15:02.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.528" endtime="20201029 18:15:02.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.506" endtime="20201029 18:15:02.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.504" endtime="20201029 18:15:02.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.537" endtime="20201029 18:15:02.823"></status>
</kw>
<msg timestamp="20201029 18:15:02.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.535" endtime="20201029 18:15:02.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021158917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.827" endtime="20201029 18:15:02.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.835" endtime="20201029 18:15:02.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.533" endtime="20201029 18:15:02.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.531" endtime="20201029 18:15:02.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.842" level="INFO">${RESULT} = [{'diff': 1.9250000000001904e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.840300000000017e-05}, {'diff': 1.840300000000017e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8429999999999835e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:02.839" endtime="20201029 18:15:02.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.847" level="INFO">${ACCURACY} = {'diff': [1.9250000000001904e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.84...</msg>
<status status="PASS" starttime="20201029 18:15:02.843" endtime="20201029 18:15:02.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.852" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.851" endtime="20201029 18:15:02.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.854" level="INFO">VALUE: [1.9250000000001904e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.834699999999842e-05, 1.83890000000006e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.8458000000002445e-05, 1.8444000000002875e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.8486000000001584e-05, 1.840300000000017e-05, 1.8401999999997226e-05, 1.8458000000002445e-05, 1.8416000000000265e-05, 1.834699999999842e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.8430000000003305e-05, 1.8485999999998115e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.8387999999997656e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843100000000278e-05, 1.8416000000000265e-05]</msg>
<status status="PASS" starttime="20201029 18:15:02.853" endtime="20201029 18:15:02.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.848" endtime="20201029 18:15:02.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.858" endtime="20201029 18:15:02.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.857" endtime="20201029 18:15:02.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.856" endtime="20201029 18:15:02.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.503" endtime="20201029 18:15:02.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.502" endtime="20201029 18:15:02.879"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.888" endtime="20201029 18:15:02.901"></status>
</kw>
<msg timestamp="20201029 18:15:02.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.886" endtime="20201029 18:15:02.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.903" endtime="20201029 18:15:02.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.905" endtime="20201029 18:15:02.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.883" endtime="20201029 18:15:02.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.881" endtime="20201029 18:15:02.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.914" endtime="20201029 18:15:03.201"></status>
</kw>
<msg timestamp="20201029 18:15:03.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.913" endtime="20201029 18:15:03.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021166097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021185319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.205" endtime="20201029 18:15:03.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.214" endtime="20201029 18:15:03.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.910" endtime="20201029 18:15:03.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.909" endtime="20201029 18:15:03.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.220" level="INFO">${RESULT} = [{'diff': 1.9222000000002765e-05}, {'diff': 1.841699999999974e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.845899999999845e-05}, {'diff': 1.8458000000002445e-05}, {'diff': 1.8443999999999405e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:03.217" endtime="20201029 18:15:03.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.224" level="INFO">${ACCURACY} = {'diff': [1.9222000000002765e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.845899999999845e-05, 1.8458000000002445e-05, 1.8443999999999405e-05, 1.836099999999799e-05, 1.841700000000321e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:15:03.221" endtime="20201029 18:15:03.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.229" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.228" endtime="20201029 18:15:03.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.231" level="INFO">VALUE: [1.9222000000002765e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.845899999999845e-05, 1.8458000000002445e-05, 1.8443999999999405e-05, 1.836099999999799e-05, 1.841700000000321e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8402000000000696e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8444000000002875e-05, 1.8486000000001584e-05, 1.836099999999799e-05, 1.844500000000235e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.83890000000006e-05, 1.8499999999997685e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.840300000000017e-05, 1.843100000000278e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.837500000000103e-05, 1.8472000000002015e-05, 1.837499999999756e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.838899999999713e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.836100000000146e-05]</msg>
<status status="PASS" starttime="20201029 18:15:03.230" endtime="20201029 18:15:03.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.225" endtime="20201029 18:15:03.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.235" endtime="20201029 18:15:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.234" endtime="20201029 18:15:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.233" endtime="20201029 18:15:03.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.880" endtime="20201029 18:15:03.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.879" endtime="20201029 18:15:03.256"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.265" endtime="20201029 18:15:03.279"></status>
</kw>
<msg timestamp="20201029 18:15:03.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.263" endtime="20201029 18:15:03.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.281" endtime="20201029 18:15:03.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.283" endtime="20201029 18:15:03.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.261" endtime="20201029 18:15:03.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.259" endtime="20201029 18:15:03.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.293" endtime="20201029 18:15:03.578"></status>
</kw>
<msg timestamp="20201029 18:15:03.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.291" endtime="20201029 18:15:03.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.582" endtime="20201029 18:15:03.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.591" endtime="20201029 18:15:03.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.288" endtime="20201029 18:15:03.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.287" endtime="20201029 18:15:03.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.597" level="INFO">${RESULT} = [{'diff': 1.9221999999999295e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8416000000000265e-05}, {'diff': 1.841699999999974e-05}, {'diff': 1.837500000000103e-05}, {'diff': 1.841699999999974e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:03.594" endtime="20201029 18:15:03.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.601" level="INFO">${ACCURACY} = {'diff': [1.9221999999999295e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:15:03.598" endtime="20201029 18:15:03.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.606" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.605" endtime="20201029 18:15:03.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.608" level="INFO">VALUE: [1.9221999999999295e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8471999999998545e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.838899999999713e-05, 1.837499999999756e-05, 1.844499999999888e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.841700000000321e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8458000000002445e-05, 1.837500000000103e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.8458000000002445e-05, 1.843099999999931e-05, 1.841699999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:15:03.607" endtime="20201029 18:15:03.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.602" endtime="20201029 18:15:03.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.613" endtime="20201029 18:15:03.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.612" endtime="20201029 18:15:03.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.611" endtime="20201029 18:15:03.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.257" endtime="20201029 18:15:03.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.256" endtime="20201029 18:15:03.634"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.643" endtime="20201029 18:15:03.657"></status>
</kw>
<msg timestamp="20201029 18:15:03.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.641" endtime="20201029 18:15:03.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.658" endtime="20201029 18:15:03.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.661" endtime="20201029 18:15:03.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.639" endtime="20201029 18:15:03.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.636" endtime="20201029 18:15:03.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.670" endtime="20201029 18:15:03.955"></status>
</kw>
<msg timestamp="20201029 18:15:03.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.668" endtime="20201029 18:15:03.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.960" endtime="20201029 18:15:03.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.968" endtime="20201029 18:15:03.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.666" endtime="20201029 18:15:03.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.664" endtime="20201029 18:15:03.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.974" level="INFO">${RESULT} = [{'diff': 1.9249999999998435e-05}, {'diff': 1.840300000000017e-05}, {'diff': 1.843100000000278e-05}, {'diff': 1.841699999999974e-05}, {'diff': 1.8457999999998975e-05}, {'diff': 1.845900000000192e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:03.971" endtime="20201029 18:15:03.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.979" level="INFO">${ACCURACY} = {'diff': [1.9249999999998435e-05, 1.840300000000017e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.845900000000192e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:15:03.975" endtime="20201029 18:15:03.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.984" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.983" endtime="20201029 18:15:03.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.986" level="INFO">VALUE: [1.9249999999998435e-05, 1.840300000000017e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.845900000000192e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.844500000000235e-05, 1.8444000000002875e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.843100000000278e-05, 1.843099999999931e-05, 1.843100000000278e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.834699999999842e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.841699999999974e-05, 1.847299999999802e-05]</msg>
<status status="PASS" starttime="20201029 18:15:03.985" endtime="20201029 18:15:03.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.980" endtime="20201029 18:15:03.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.990" endtime="20201029 18:15:04.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.989" endtime="20201029 18:15:04.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.988" endtime="20201029 18:15:04.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.635" endtime="20201029 18:15:04.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.634" endtime="20201029 18:15:04.011"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.020" endtime="20201029 18:15:04.034"></status>
</kw>
<msg timestamp="20201029 18:15:04.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.019" endtime="20201029 18:15:04.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.035" endtime="20201029 18:15:04.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.038" endtime="20201029 18:15:04.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.016" endtime="20201029 18:15:04.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.014" endtime="20201029 18:15:04.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.049" endtime="20201029 18:15:04.356"></status>
</kw>
<msg timestamp="20201029 18:15:04.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.046" endtime="20201029 18:15:04.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.360" endtime="20201029 18:15:04.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.368" endtime="20201029 18:15:04.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.044" endtime="20201029 18:15:04.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.042" endtime="20201029 18:15:04.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.375" level="INFO">${RESULT} = [{'diff': 2.4278000000002575e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.344500000000041e-05...</msg>
<status status="PASS" starttime="20201029 18:15:04.372" endtime="20201029 18:15:04.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:04.379" level="INFO">${ACCURACY} = {'diff': [2.4278000000002575e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:04.376" endtime="20201029 18:15:04.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.383" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:04.382" endtime="20201029 18:15:04.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.386" level="INFO">VALUE: [2.4278000000002575e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3471999999996607e-05, 2.345899999999998e-05, 2.3416000000001796e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.34030000000017e-05, 2.347299999999955e-05, 2.345899999999998e-05, 1.844499999999888e-05, 2.3472000000000076e-05, 1.8486000000001584e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.3514000000002255e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.3513999999998786e-05, 2.343099999999737e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.347300000000302e-05, 1.843099999999931e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 1.841699999999974e-05, 2.347299999999955e-05, 2.347299999999955e-05, 2.3500000000002685e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 1.836099999999799e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:15:04.384" endtime="20201029 18:15:04.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.380" endtime="20201029 18:15:04.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.390" endtime="20201029 18:15:04.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.389" endtime="20201029 18:15:04.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.387" endtime="20201029 18:15:04.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.012" endtime="20201029 18:15:04.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.011" endtime="20201029 18:15:04.411"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.420" endtime="20201029 18:15:04.434"></status>
</kw>
<msg timestamp="20201029 18:15:04.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.418" endtime="20201029 18:15:04.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.436" endtime="20201029 18:15:04.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.439" endtime="20201029 18:15:04.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.416" endtime="20201029 18:15:04.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.414" endtime="20201029 18:15:04.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.453" endtime="20201029 18:15:04.749"></status>
</kw>
<msg timestamp="20201029 18:15:04.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.450" endtime="20201029 18:15:04.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.756" endtime="20201029 18:15:04.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.766" endtime="20201029 18:15:04.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.446" endtime="20201029 18:15:04.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.444" endtime="20201029 18:15:04.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.775" level="INFO">${RESULT} = [{'diff': 2.4290999999999202e-05}, {'diff': 2.34030000000017e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.345899999999998e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3457999999997037e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:04.771" endtime="20201029 18:15:04.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:04.779" level="INFO">${ACCURACY} = {'diff': [2.4290999999999202e-05, 2.34030000000017e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.3457999999997037e-05, 2.3472000000000076e-05, 2.3526999999998882e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:04.776" endtime="20201029 18:15:04.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.783" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:04.782" endtime="20201029 18:15:04.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.786" level="INFO">VALUE: [2.4290999999999202e-05, 2.34030000000017e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.3457999999997037e-05, 2.3472000000000076e-05, 2.3526999999998882e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.344500000000041e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.34169999999978e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3514000000002255e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3429999999997897e-05, 2.3514000000002255e-05, 2.343100000000084e-05, 2.345899999999998e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.347299999999955e-05]</msg>
<status status="PASS" starttime="20201029 18:15:04.784" endtime="20201029 18:15:04.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.780" endtime="20201029 18:15:04.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.791" endtime="20201029 18:15:04.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.790" endtime="20201029 18:15:04.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.789" endtime="20201029 18:15:04.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.412" endtime="20201029 18:15:04.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.411" endtime="20201029 18:15:04.812"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.820" endtime="20201029 18:15:04.834"></status>
</kw>
<msg timestamp="20201029 18:15:04.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.819" endtime="20201029 18:15:04.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.836" endtime="20201029 18:15:04.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.838" endtime="20201029 18:15:04.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.816" endtime="20201029 18:15:04.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.814" endtime="20201029 18:15:04.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.847" endtime="20201029 18:15:05.133"></status>
</kw>
<msg timestamp="20201029 18:15:05.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021179917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.846" endtime="20201029 18:15:05.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021179917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.137" endtime="20201029 18:15:05.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.145" endtime="20201029 18:15:05.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.843" endtime="20201029 18:15:05.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.841" endtime="20201029 18:15:05.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.152" level="INFO">${RESULT} = [{'diff': 2.4319999999997816e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.348699999999912e-05...</msg>
<status status="PASS" starttime="20201029 18:15:05.149" endtime="20201029 18:15:05.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.157" level="INFO">${ACCURACY} = {'diff': [2.4319999999997816e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.344500000000041e-05, 2.348699999999912e-05, 2.3457999999997037e-05, 2.347300000000302e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:05.153" endtime="20201029 18:15:05.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.161" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.160" endtime="20201029 18:15:05.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.164" level="INFO">VALUE: [2.4319999999997816e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.344500000000041e-05, 2.348699999999912e-05, 2.3457999999997037e-05, 2.347300000000302e-05, 2.3514000000002255e-05, 2.347299999999955e-05, 2.347299999999955e-05, 2.3471999999996607e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.348700000000259e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3471999999996607e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.338900000000213e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:15:05.163" endtime="20201029 18:15:05.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.158" endtime="20201029 18:15:05.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.169" endtime="20201029 18:15:05.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.167" endtime="20201029 18:15:05.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.166" endtime="20201029 18:15:05.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.813" endtime="20201029 18:15:05.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.812" endtime="20201029 18:15:05.190"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.198" endtime="20201029 18:15:05.212"></status>
</kw>
<msg timestamp="20201029 18:15:05.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.197" endtime="20201029 18:15:05.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.214" endtime="20201029 18:15:05.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.216" endtime="20201029 18:15:05.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.194" endtime="20201029 18:15:05.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.192" endtime="20201029 18:15:05.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.225" endtime="20201029 18:15:05.516"></status>
</kw>
<msg timestamp="20201029 18:15:05.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.224" endtime="20201029 18:15:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021490306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021514556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.521" endtime="20201029 18:15:05.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.529" endtime="20201029 18:15:05.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.221" endtime="20201029 18:15:05.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.220" endtime="20201029 18:15:05.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.536" level="INFO">${RESULT} = [{'diff': 2.4249999999999966e-05}, {'diff': 2.340299999999823e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3485999999999646e-0...</msg>
<status status="PASS" starttime="20201029 18:15:05.533" endtime="20201029 18:15:05.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.540" level="INFO">${ACCURACY} = {'diff': [2.4249999999999966e-05, 2.340299999999823e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:05.537" endtime="20201029 18:15:05.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.545" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.544" endtime="20201029 18:15:05.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.547" level="INFO">VALUE: [2.4249999999999966e-05, 2.340299999999823e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3541999999997926e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.343100000000084e-05, 2.344500000000041e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3555999999997496e-05, 2.3486000000003115e-05, 2.3528000000001825e-05, 2.3527999999998356e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.347299999999955e-05, 2.3499999999999216e-05, 2.347300000000302e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.345899999999998e-05, 2.3540999999998452e-05, 2.347299999999955e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3513999999998786e-05, 2.344500000000041e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.347299999999955e-05, 2.338899999999866e-05]</msg>
<status status="PASS" starttime="20201029 18:15:05.546" endtime="20201029 18:15:05.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.541" endtime="20201029 18:15:05.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.563" endtime="20201029 18:15:05.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.562" endtime="20201029 18:15:05.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.561" endtime="20201029 18:15:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.191" endtime="20201029 18:15:05.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.190" endtime="20201029 18:15:05.584"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.593" endtime="20201029 18:15:05.608"></status>
</kw>
<msg timestamp="20201029 18:15:05.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.591" endtime="20201029 18:15:05.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.609" endtime="20201029 18:15:05.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.612" endtime="20201029 18:15:05.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.589" endtime="20201029 18:15:05.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.587" endtime="20201029 18:15:05.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.620" endtime="20201029 18:15:05.907"></status>
</kw>
<msg timestamp="20201029 18:15:05.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.619" endtime="20201029 18:15:05.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.911" endtime="20201029 18:15:05.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.920" endtime="20201029 18:15:05.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.616" endtime="20201029 18:15:05.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.615" endtime="20201029 18:15:05.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.926" level="INFO">${RESULT} = [{'diff': 2.4277999999999106e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3485999999999646e-...</msg>
<status status="PASS" starttime="20201029 18:15:05.923" endtime="20201029 18:15:05.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.930" level="INFO">${ACCURACY} = {'diff': [2.4277999999999106e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3485999999999646e-05...</msg>
<status status="PASS" starttime="20201029 18:15:05.927" endtime="20201029 18:15:05.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.935" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.934" endtime="20201029 18:15:05.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.937" level="INFO">VALUE: [2.4277999999999106e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.34030000000017e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.348699999999912e-05, 2.3513999999998786e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.348700000000259e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3486000000003115e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.3513999999998786e-05, 2.345899999999998e-05, 2.3486000000003115e-05, 2.344500000000041e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.3485999999999646e-05, 2.3444000000000936e-05, 2.344500000000041e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3513999999998786e-05, 2.3472000000000076e-05, 2.3513999999998786e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 18:15:05.936" endtime="20201029 18:15:05.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.931" endtime="20201029 18:15:05.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.943" endtime="20201029 18:15:05.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.941" endtime="20201029 18:15:05.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.940" endtime="20201029 18:15:05.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.585" endtime="20201029 18:15:05.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.584" endtime="20201029 18:15:05.964"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.972" endtime="20201029 18:15:05.987"></status>
</kw>
<msg timestamp="20201029 18:15:05.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.971" endtime="20201029 18:15:05.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.988" endtime="20201029 18:15:05.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.991" endtime="20201029 18:15:05.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.968" endtime="20201029 18:15:05.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.966" endtime="20201029 18:15:05.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.000" endtime="20201029 18:15:06.286"></status>
</kw>
<msg timestamp="20201029 18:15:06.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.998" endtime="20201029 18:15:06.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.290" endtime="20201029 18:15:06.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.299" endtime="20201029 18:15:06.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.995" endtime="20201029 18:15:06.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.994" endtime="20201029 18:15:06.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.305" level="INFO">${RESULT} = [{'diff': 2.4278000000002575e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8513000000000843e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8569000000002592e-05}, {'diff': 2.8514000000000317e-...</msg>
<status status="PASS" starttime="20201029 18:15:06.302" endtime="20201029 18:15:06.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.310" level="INFO">${ACCURACY} = {'diff': [2.4278000000002575e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8514000000000317e-05, 2.8569000000002592e-05, 2.8514000000000317e-05, 2.8485999999997708e-05, 2.8514000000000317e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.306" endtime="20201029 18:15:06.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.315" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.314" endtime="20201029 18:15:06.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.317" level="INFO">VALUE: [2.4278000000002575e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8514000000000317e-05, 2.8569000000002592e-05, 2.8514000000000317e-05, 2.8485999999997708e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.843100000000237e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8485999999997708e-05, 2.8512999999997374e-05, 2.8513000000000843e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.848700000000065e-05, 2.8527999999999887e-05, 2.8457999999998568e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8457999999998568e-05, 2.8500000000000747e-05, 2.347299999999955e-05, 2.845899999999804e-05, 2.8541999999999457e-05, 2.3458000000000506e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8569999999998597e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8526999999996944e-05, 2.845900000000151e-05, 2.8513000000000843e-05, 2.8555999999999027e-05, 2.8500000000000747e-05, 2.8429999999999428e-05, 2.8514000000000317e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.316" endtime="20201029 18:15:06.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.311" endtime="20201029 18:15:06.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.322" endtime="20201029 18:15:06.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.321" endtime="20201029 18:15:06.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.320" endtime="20201029 18:15:06.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.964" endtime="20201029 18:15:06.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.964" endtime="20201029 18:15:06.343"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.352" endtime="20201029 18:15:06.367"></status>
</kw>
<msg timestamp="20201029 18:15:06.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.350" endtime="20201029 18:15:06.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.368" endtime="20201029 18:15:06.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.371" endtime="20201029 18:15:06.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.347" endtime="20201029 18:15:06.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.345" endtime="20201029 18:15:06.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.380" endtime="20201029 18:15:06.666"></status>
</kw>
<msg timestamp="20201029 18:15:06.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.378" endtime="20201029 18:15:06.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022076806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.671" endtime="20201029 18:15:06.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.679" endtime="20201029 18:15:06.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.375" endtime="20201029 18:15:06.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.374" endtime="20201029 18:15:06.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.685" level="INFO">${RESULT} = [{'diff': 2.9318999999999873e-05}, {'diff': 2.8443999999998998e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8555999999999027e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8500000000000747e-...</msg>
<status status="PASS" starttime="20201029 18:15:06.682" endtime="20201029 18:15:06.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.690" level="INFO">${ACCURACY} = {'diff': [2.9318999999999873e-05, 2.8443999999998998e-05, 2.8514000000000317e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8499999999997278e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.686" endtime="20201029 18:15:06.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.694" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.693" endtime="20201029 18:15:06.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.696" level="INFO">VALUE: [2.9318999999999873e-05, 2.8443999999998998e-05, 2.8514000000000317e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.848700000000065e-05, 2.8499999999997278e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8513999999996847e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.8527000000000413e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8500000000000747e-05, 2.8570000000002066e-05, 2.8485999999997708e-05, 2.845899999999804e-05, 2.8499999999997278e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8486000000001177e-05, 2.8499999999997278e-05, 2.8499999999997278e-05, 2.8512999999997374e-05, 2.8514000000000317e-05, 2.845900000000151e-05, 2.8499999999997278e-05, 2.845899999999804e-05, 2.848699999999718e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8472000000001607e-05, 2.8554999999999553e-05, 2.8582999999998693e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.695" endtime="20201029 18:15:06.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.690" endtime="20201029 18:15:06.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.702" endtime="20201029 18:15:06.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.700" endtime="20201029 18:15:06.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.699" endtime="20201029 18:15:06.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.344" endtime="20201029 18:15:06.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.343" endtime="20201029 18:15:06.722"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.731" endtime="20201029 18:15:06.746"></status>
</kw>
<msg timestamp="20201029 18:15:06.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.730" endtime="20201029 18:15:06.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.748" endtime="20201029 18:15:06.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.751" endtime="20201029 18:15:06.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.727" endtime="20201029 18:15:06.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.725" endtime="20201029 18:15:06.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.760" endtime="20201029 18:15:07.045"></status>
</kw>
<msg timestamp="20201029 18:15:07.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.758" endtime="20201029 18:15:07.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.049" endtime="20201029 18:15:07.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.058" endtime="20201029 18:15:07.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.755" endtime="20201029 18:15:07.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.754" endtime="20201029 18:15:07.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.064" level="INFO">${RESULT} = [{'diff': 2.9334000000002386e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8512999999997374e-05}, {'diff': 2.8443999999998998e-05}, {'diff': 2.844500000000194e-05}, {'diff': 2.8500000000000747e-0...</msg>
<status status="PASS" starttime="20201029 18:15:07.061" endtime="20201029 18:15:07.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.068" level="INFO">${ACCURACY} = {'diff': [2.9334000000002386e-05, 2.8514000000000317e-05, 2.8512999999997374e-05, 2.8443999999998998e-05, 2.844500000000194e-05, 2.8500000000000747e-05, 2.8486000000001177e-05, 2.8527999999999887e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:07.065" endtime="20201029 18:15:07.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.073" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.072" endtime="20201029 18:15:07.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.075" level="INFO">VALUE: [2.9334000000002386e-05, 2.8514000000000317e-05, 2.8512999999997374e-05, 2.8443999999998998e-05, 2.844500000000194e-05, 2.8500000000000747e-05, 2.8486000000001177e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8512999999997374e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8499999999997278e-05, 2.8512999999997374e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8486000000001177e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8527000000000413e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8542000000002926e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8472000000001607e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.848700000000065e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.074" endtime="20201029 18:15:07.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.069" endtime="20201029 18:15:07.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.081" endtime="20201029 18:15:07.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.079" endtime="20201029 18:15:07.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.078" endtime="20201029 18:15:07.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.723" endtime="20201029 18:15:07.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.723" endtime="20201029 18:15:07.102"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.110" endtime="20201029 18:15:07.125"></status>
</kw>
<msg timestamp="20201029 18:15:07.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.109" endtime="20201029 18:15:07.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.126" endtime="20201029 18:15:07.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.129" endtime="20201029 18:15:07.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.106" endtime="20201029 18:15:07.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.104" endtime="20201029 18:15:07.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.138" endtime="20201029 18:15:07.425"></status>
</kw>
<msg timestamp="20201029 18:15:07.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.136" endtime="20201029 18:15:07.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.430" endtime="20201029 18:15:07.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.438" endtime="20201029 18:15:07.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.134" endtime="20201029 18:15:07.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.132" endtime="20201029 18:15:07.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.444" level="INFO">${RESULT} = [{'diff': 2.9334000000002386e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8513000000000843e-05}, {'diff': 2.8471999999998138e-05}, {'diff': 2.8527000000000413e-...</msg>
<status status="PASS" starttime="20201029 18:15:07.441" endtime="20201029 18:15:07.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.449" level="INFO">${ACCURACY} = {'diff': [2.9334000000002386e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8513000000000843e-05, 2.8471999999998138e-05, 2.8527000000000413e-05, 2.8500000000000747e-05, 2.8555999999999027e-05...</msg>
<status status="PASS" starttime="20201029 18:15:07.445" endtime="20201029 18:15:07.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.454" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.453" endtime="20201029 18:15:07.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.456" level="INFO">VALUE: [2.9334000000002386e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8513000000000843e-05, 2.8471999999998138e-05, 2.8527000000000413e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8541999999999457e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.845900000000151e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8513000000000843e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8472000000001607e-05, 2.8486000000001177e-05, 2.844500000000194e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8485999999997708e-05, 2.8527000000000413e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8429999999999428e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8541999999999457e-05, 2.8514000000000317e-05, 2.8472000000001607e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.455" endtime="20201029 18:15:07.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.450" endtime="20201029 18:15:07.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.461" endtime="20201029 18:15:07.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.460" endtime="20201029 18:15:07.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.459" endtime="20201029 18:15:07.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.103" endtime="20201029 18:15:07.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.102" endtime="20201029 18:15:07.482"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.491" endtime="20201029 18:15:07.505"></status>
</kw>
<msg timestamp="20201029 18:15:07.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.489" endtime="20201029 18:15:07.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.507" endtime="20201029 18:15:07.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.509" endtime="20201029 18:15:07.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.487" endtime="20201029 18:15:07.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.485" endtime="20201029 18:15:07.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.518" endtime="20201029 18:15:07.805"></status>
</kw>
<msg timestamp="20201029 18:15:07.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.517" endtime="20201029 18:15:07.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.809" endtime="20201029 18:15:07.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.818" endtime="20201029 18:15:07.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.514" endtime="20201029 18:15:07.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.512" endtime="20201029 18:15:07.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.824" level="INFO">${RESULT} = [{'diff': 2.9319999999999347e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.843100000000237e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8514000000000317e-0...</msg>
<status status="PASS" starttime="20201029 18:15:07.821" endtime="20201029 18:15:07.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.828" level="INFO">${ACCURACY} = {'diff': [2.9319999999999347e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.843100000000237e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8499999999997278e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:07.825" endtime="20201029 18:15:07.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.834" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.832" endtime="20201029 18:15:07.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.840" level="INFO">VALUE: [2.9319999999999347e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.843100000000237e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8512999999997374e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.847299999999761e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8513000000000843e-05, 2.8485999999997708e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8527000000000413e-05, 2.8513000000000843e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8541999999999457e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8542000000002926e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.8570000000002066e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8541999999999457e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8499999999997278e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.837" endtime="20201029 18:15:07.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.829" endtime="20201029 18:15:07.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.849" endtime="20201029 18:15:07.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.847" endtime="20201029 18:15:07.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.844" endtime="20201029 18:15:07.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.483" endtime="20201029 18:15:07.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.483" endtime="20201029 18:15:07.871"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.879" endtime="20201029 18:15:07.895"></status>
</kw>
<msg timestamp="20201029 18:15:07.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.878" endtime="20201029 18:15:07.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.896" endtime="20201029 18:15:07.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.899" endtime="20201029 18:15:07.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.875" endtime="20201029 18:15:07.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.873" endtime="20201029 18:15:07.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.908" endtime="20201029 18:15:08.193"></status>
</kw>
<msg timestamp="20201029 18:15:08.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.907" endtime="20201029 18:15:08.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022655569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.198" endtime="20201029 18:15:08.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.206" endtime="20201029 18:15:08.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.904" endtime="20201029 18:15:08.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.902" endtime="20201029 18:15:08.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.213" level="INFO">${RESULT} = [{'diff': 3.434800000000002e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.3568999999997184e-05}, {'diff': 3.355599999999709e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.355600000000056e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:08.210" endtime="20201029 18:15:08.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.217" level="INFO">${ACCURACY} = {'diff': [3.434800000000002e-05, 3.3555000000001084e-05, 3.3568999999997184e-05, 3.355599999999709e-05, 3.354200000000099e-05, 3.355600000000056e-05, 2.8540999999999983e-05, 3.3526999999998475e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:08.214" endtime="20201029 18:15:08.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.221" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.220" endtime="20201029 18:15:08.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.224" level="INFO">VALUE: [3.434800000000002e-05, 3.3555000000001084e-05, 3.3568999999997184e-05, 3.355599999999709e-05, 3.354200000000099e-05, 3.355600000000056e-05, 2.8540999999999983e-05, 3.3526999999998475e-05, 3.354199999999752e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 2.844499999999847e-05, 2.8500000000000747e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.355599999999709e-05, 3.3555000000001084e-05, 2.8514000000000317e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.351399999999838e-05, 3.3569000000000654e-05, 2.8540999999999983e-05, 2.8527000000000413e-05, 3.354200000000099e-05, 2.8512999999997374e-05, 3.359799999999927e-05, 2.8570000000002066e-05, 3.3568999999997184e-05, 3.357000000000013e-05, 3.351400000000185e-05, 3.349999999999881e-05, 3.349999999999881e-05, 3.3568999999997184e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.352800000000142e-05, 3.355599999999709e-05, 3.355600000000056e-05, 2.8500000000000747e-05, 3.3540999999998045e-05, 3.3555000000001084e-05, 3.354200000000099e-05, 3.3596999999999794e-05, 3.3540999999998045e-05, 3.3555000000001084e-05, 3.355600000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.222" endtime="20201029 18:15:08.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.218" endtime="20201029 18:15:08.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.229" endtime="20201029 18:15:08.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.228" endtime="20201029 18:15:08.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.227" endtime="20201029 18:15:08.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.872" endtime="20201029 18:15:08.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.871" endtime="20201029 18:15:08.250"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.259" endtime="20201029 18:15:08.274"></status>
</kw>
<msg timestamp="20201029 18:15:08.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.257" endtime="20201029 18:15:08.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.275" endtime="20201029 18:15:08.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.278" endtime="20201029 18:15:08.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.255" endtime="20201029 18:15:08.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.253" endtime="20201029 18:15:08.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.286" endtime="20201029 18:15:08.572"></status>
</kw>
<msg timestamp="20201029 18:15:08.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.285" endtime="20201029 18:15:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.576" endtime="20201029 18:15:08.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.585" endtime="20201029 18:15:08.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.282" endtime="20201029 18:15:08.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.281" endtime="20201029 18:15:08.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.592" level="INFO">${RESULT} = [{'diff': 3.438900000000272e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.355600000000056e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:08.588" endtime="20201029 18:15:08.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.596" level="INFO">${ACCURACY} = {'diff': [3.438900000000272e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.3610999999999364e-05, 3.35...</msg>
<status status="PASS" starttime="20201029 18:15:08.593" endtime="20201029 18:15:08.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.601" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.600" endtime="20201029 18:15:08.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.604" level="INFO">VALUE: [3.438900000000272e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.3610999999999364e-05, 3.354200000000099e-05, 3.354199999999752e-05, 3.351400000000185e-05, 3.354200000000099e-05, 3.3610999999999364e-05, 3.354200000000099e-05, 3.3526999999998475e-05, 3.3541000000001514e-05, 3.357000000000013e-05, 3.3554999999997615e-05, 3.3610999999999364e-05, 3.3569000000000654e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.3541000000001514e-05, 3.351400000000185e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.3554999999997615e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.3540999999998045e-05, 3.351400000000185e-05, 3.349999999999881e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.348599999999924e-05, 3.3554999999997615e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354199999999752e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.602" endtime="20201029 18:15:08.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.597" endtime="20201029 18:15:08.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.609" endtime="20201029 18:15:08.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.607" endtime="20201029 18:15:08.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.606" endtime="20201029 18:15:08.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.251" endtime="20201029 18:15:08.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.251" endtime="20201029 18:15:08.629"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.638" endtime="20201029 18:15:08.653"></status>
</kw>
<msg timestamp="20201029 18:15:08.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.636" endtime="20201029 18:15:08.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.654" endtime="20201029 18:15:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.657" endtime="20201029 18:15:08.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.634" endtime="20201029 18:15:08.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.632" endtime="20201029 18:15:08.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.665" endtime="20201029 18:15:08.956"></status>
</kw>
<msg timestamp="20201029 18:15:08.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.664" endtime="20201029 18:15:08.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.963" endtime="20201029 18:15:08.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.974" endtime="20201029 18:15:08.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.661" endtime="20201029 18:15:08.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.660" endtime="20201029 18:15:08.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.981" level="INFO">${RESULT} = [{'diff': 3.4347000000000544e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3568999999997184e-05}, {'diff': 3.3541000000001514e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3540999999998045e-05...</msg>
<status status="PASS" starttime="20201029 18:15:08.978" endtime="20201029 18:15:08.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.985" level="INFO">${ACCURACY} = {'diff': [3.4347000000000544e-05, 3.354200000000099e-05, 3.3568999999997184e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:08.982" endtime="20201029 18:15:08.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.989" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.988" endtime="20201029 18:15:08.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.992" level="INFO">VALUE: [3.4347000000000544e-05, 3.354200000000099e-05, 3.3568999999997184e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3568999999997184e-05, 3.352800000000142e-05, 3.3569000000000654e-05, 3.3554999999997615e-05, 3.354200000000099e-05, 3.3554999999997615e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 3.3540999999998045e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.354199999999752e-05, 3.347199999999967e-05, 3.352799999999795e-05, 3.3568999999997184e-05, 3.355599999999709e-05, 3.3596999999999794e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.3569000000000654e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.3555000000001084e-05, 3.3583000000000224e-05, 3.359800000000274e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3541000000001514e-05, 3.354199999999752e-05, 3.354200000000099e-05, 3.350000000000228e-05, 3.352800000000142e-05, 3.354200000000099e-05, 3.3568999999997184e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.3554999999997615e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.990" endtime="20201029 18:15:08.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.986" endtime="20201029 18:15:08.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.997" endtime="20201029 18:15:09.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.995" endtime="20201029 18:15:09.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.994" endtime="20201029 18:15:09.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.630" endtime="20201029 18:15:09.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.630" endtime="20201029 18:15:09.018"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.026" endtime="20201029 18:15:09.042"></status>
</kw>
<msg timestamp="20201029 18:15:09.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.025" endtime="20201029 18:15:09.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.043" endtime="20201029 18:15:09.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.046" endtime="20201029 18:15:09.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.022" endtime="20201029 18:15:09.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.020" endtime="20201029 18:15:09.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.055" endtime="20201029 18:15:09.341"></status>
</kw>
<msg timestamp="20201029 18:15:09.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.053" endtime="20201029 18:15:09.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.345" endtime="20201029 18:15:09.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.353" endtime="20201029 18:15:09.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.050" endtime="20201029 18:15:09.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.049" endtime="20201029 18:15:09.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.360" level="INFO">${RESULT} = [{'diff': 3.432000000000088e-05}, {'diff': 3.3554999999997615e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.352799999999795e-05}, {'diff': 3.354199999999752e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:09.357" endtime="20201029 18:15:09.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.364" level="INFO">${ACCURACY} = {'diff': [3.432000000000088e-05, 3.3554999999997615e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.352799999999795e-05, 3.354199999999752e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.35...</msg>
<status status="PASS" starttime="20201029 18:15:09.361" endtime="20201029 18:15:09.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.369" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.368" endtime="20201029 18:15:09.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.371" level="INFO">VALUE: [3.432000000000088e-05, 3.3554999999997615e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.352799999999795e-05, 3.354199999999752e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.35839999999997e-05, 3.351400000000185e-05, 3.351399999999838e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 3.3541000000001514e-05, 3.3512999999998905e-05, 3.347199999999967e-05, 3.357000000000013e-05, 3.352799999999795e-05, 3.3596999999999794e-05, 3.3540999999998045e-05, 3.3554999999997615e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.354199999999752e-05, 3.3569000000000654e-05, 3.351399999999838e-05, 3.354200000000099e-05, 3.349999999999881e-05, 3.355599999999709e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.3540999999998045e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.351400000000185e-05, 3.355600000000056e-05, 3.354199999999752e-05, 3.3554999999997615e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.370" endtime="20201029 18:15:09.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.365" endtime="20201029 18:15:09.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.377" endtime="20201029 18:15:09.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.375" endtime="20201029 18:15:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.374" endtime="20201029 18:15:09.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.018" endtime="20201029 18:15:09.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.018" endtime="20201029 18:15:09.398"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.408" endtime="20201029 18:15:09.422"></status>
</kw>
<msg timestamp="20201029 18:15:09.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.406" endtime="20201029 18:15:09.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.424" endtime="20201029 18:15:09.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.426" endtime="20201029 18:15:09.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.403" endtime="20201029 18:15:09.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.400" endtime="20201029 18:15:09.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.435" endtime="20201029 18:15:09.721"></status>
</kw>
<msg timestamp="20201029 18:15:09.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.434" endtime="20201029 18:15:09.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023136194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023170556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.725" endtime="20201029 18:15:09.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.734" endtime="20201029 18:15:09.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.431" endtime="20201029 18:15:09.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.430" endtime="20201029 18:15:09.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.740" level="INFO">${RESULT} = [{'diff': 3.436199999999959e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.352799999999795e-05}, {'diff': 3.354199999999752e-05}, {'diff': 3.3527000000001944e-05}, {'diff': 3.355599999999709e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:09.737" endtime="20201029 18:15:09.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.745" level="INFO">${ACCURACY} = {'diff': [3.436199999999959e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.354199999999752e-05, 3.3527000000001944e-05, 3.355599999999709e-05, 3.3569000000000654e-05, 3.355599999999709e-05, 3.35...</msg>
<status status="PASS" starttime="20201029 18:15:09.741" endtime="20201029 18:15:09.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.750" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.749" endtime="20201029 18:15:09.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.752" level="INFO">VALUE: [3.436199999999959e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.354199999999752e-05, 3.3527000000001944e-05, 3.355599999999709e-05, 3.3569000000000654e-05, 3.355599999999709e-05, 3.350000000000228e-05, 3.3555000000001084e-05, 3.359800000000274e-05, 3.350000000000228e-05, 3.35839999999997e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.3555000000001084e-05, 3.352800000000142e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3583000000000224e-05, 3.349999999999881e-05, 3.3583000000000224e-05, 3.354200000000099e-05, 3.3568999999997184e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3596999999999794e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3.350000000000228e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.352799999999795e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.352800000000142e-05, 3.3554999999997615e-05, 3.357000000000013e-05, 3.357000000000013e-05, 3.3540999999998045e-05, 3.354199999999752e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.751" endtime="20201029 18:15:09.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.746" endtime="20201029 18:15:09.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.757" endtime="20201029 18:15:09.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.756" endtime="20201029 18:15:09.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.754" endtime="20201029 18:15:09.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.399" endtime="20201029 18:15:09.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.398" endtime="20201029 18:15:09.778"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.786" endtime="20201029 18:15:09.801"></status>
</kw>
<msg timestamp="20201029 18:15:09.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.785" endtime="20201029 18:15:09.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.803" endtime="20201029 18:15:09.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.806" endtime="20201029 18:15:09.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.782" endtime="20201029 18:15:09.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.780" endtime="20201029 18:15:09.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.814" endtime="20201029 18:15:10.102"></status>
</kw>
<msg timestamp="20201029 18:15:10.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021451653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.813" endtime="20201029 18:15:10.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021451653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.106" endtime="20201029 18:15:10.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.114" endtime="20201029 18:15:10.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.810" endtime="20201029 18:15:10.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.809" endtime="20201029 18:15:10.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.121" level="INFO">${RESULT} = [{'diff': 3.4361000000000114e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.8582999999998285e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.349999999999881e-05}, {'diff': 3.8597000000001325e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:10.118" endtime="20201029 18:15:10.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.125" level="INFO">${ACCURACY} = {'diff': [3.4361000000000114e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.85980000000008e-05, 3.349999999999881e-05, 3.8597000000001325e-05, 3.355599999999709e-05, 3.355599999999709e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:10.122" endtime="20201029 18:15:10.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.130" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.129" endtime="20201029 18:15:10.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.132" level="INFO">VALUE: [3.4361000000000114e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.85980000000008e-05, 3.349999999999881e-05, 3.8597000000001325e-05, 3.355599999999709e-05, 3.355599999999709e-05, 3.8625000000000465e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.8610999999997425e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.3596999999999794e-05, 3.8610999999997425e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.858400000000123e-05, 3.8583000000001755e-05, 3.857000000000166e-05, 3.35839999999997e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.861200000000037e-05, 3.8596999999997855e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, 3.354200000000099e-05, 3.858399999999776e-05, 3.355600000000056e-05, 3.855600000000209e-05, 3.355600000000056e-05, 3.8582999999998285e-05, 3.8611000000000895e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.3568999999997184e-05, 3.8596999999997855e-05, 3.854199999999905e-05, 3.8625000000000465e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.858399999999776e-05, 3.355600000000056e-05, 3.8652999999999604e-05, 3.8582999999998285e-05, 3.856999999999819e-05, 3.8583000000001755e-05, 3.8597000000001325e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.131" endtime="20201029 18:15:10.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.126" endtime="20201029 18:15:10.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.137" endtime="20201029 18:15:10.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.135" endtime="20201029 18:15:10.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.134" endtime="20201029 18:15:10.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.779" endtime="20201029 18:15:10.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.778" endtime="20201029 18:15:10.158"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.166" endtime="20201029 18:15:10.182"></status>
</kw>
<msg timestamp="20201029 18:15:10.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.165" endtime="20201029 18:15:10.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.183" endtime="20201029 18:15:10.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.186" endtime="20201029 18:15:10.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.162" endtime="20201029 18:15:10.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.160" endtime="20201029 18:15:10.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.195" endtime="20201029 18:15:10.489"></status>
</kw>
<msg timestamp="20201029 18:15:10.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.193" endtime="20201029 18:15:10.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.493" endtime="20201029 18:15:10.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.501" endtime="20201029 18:15:10.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.191" endtime="20201029 18:15:10.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.189" endtime="20201029 18:15:10.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.508" level="INFO">${RESULT} = [{'diff': 3.9403000000000354e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.858400000000123e-05}, {'diff': 3.8568999999998715e-05}, {'diff': 3.8583000000001755e-0...</msg>
<status status="PASS" starttime="20201029 18:15:10.505" endtime="20201029 18:15:10.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.512" level="INFO">${ACCURACY} = {'diff': [3.9403000000000354e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.858400000000123e-05, 3.8568999999998715e-05, 3.8583000000001755e-05, 3.8639000000000034e-05, 3.8610999999997425e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:10.509" endtime="20201029 18:15:10.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.517" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.516" endtime="20201029 18:15:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.519" level="INFO">VALUE: [3.9403000000000354e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.858400000000123e-05, 3.8568999999998715e-05, 3.8583000000001755e-05, 3.8639000000000034e-05, 3.8610999999997425e-05, 3.8596999999997855e-05, 3.8555000000002615e-05, 3.861200000000037e-05, 3.858400000000123e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.858399999999776e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.8610999999997425e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.8611000000000895e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.8583000000001755e-05, 3.8568999999998715e-05, 3.85980000000008e-05, 3.8610999999997425e-05, 3.8596999999997855e-05, 3.8540999999999576e-05, 3.8597000000001325e-05, 3.8653000000003074e-05, 3.8583000000001755e-05, 3.8639000000000034e-05, 3.8639000000000034e-05, 3.8666999999999174e-05, 3.857000000000166e-05, 3.8582999999998285e-05, 3.8666999999999174e-05, 3.8625000000000465e-05, 3.854199999999905e-05, 3.8582999999998285e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8610999999997425e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.856999999999819e-05, 3.8583000000001755e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.518" endtime="20201029 18:15:10.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.513" endtime="20201029 18:15:10.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.525" endtime="20201029 18:15:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.524" endtime="20201029 18:15:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.522" endtime="20201029 18:15:10.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.159" endtime="20201029 18:15:10.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.158" endtime="20201029 18:15:10.546"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.555" endtime="20201029 18:15:10.570"></status>
</kw>
<msg timestamp="20201029 18:15:10.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.553" endtime="20201029 18:15:10.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.571" endtime="20201029 18:15:10.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.574" endtime="20201029 18:15:10.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.550" endtime="20201029 18:15:10.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.548" endtime="20201029 18:15:10.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.582" endtime="20201029 18:15:10.867"></status>
</kw>
<msg timestamp="20201029 18:15:10.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.581" endtime="20201029 18:15:10.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.872" endtime="20201029 18:15:10.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.880" endtime="20201029 18:15:10.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.578" endtime="20201029 18:15:10.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.577" endtime="20201029 18:15:10.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.886" level="INFO">${RESULT} = [{'diff': 3.9403000000000354e-05}, {'diff': 3.8596999999997855e-05}, {'diff': 3.8596999999997855e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.8596999999997855e-05}, {'diff': 3.8597000000001325e-05...</msg>
<status status="PASS" starttime="20201029 18:15:10.883" endtime="20201029 18:15:10.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.891" level="INFO">${ACCURACY} = {'diff': [3.9403000000000354e-05, 3.8596999999997855e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:10.887" endtime="20201029 18:15:10.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.896" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.895" endtime="20201029 18:15:10.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.898" level="INFO">VALUE: [3.9403000000000354e-05, 3.8596999999997855e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8568999999998715e-05, 3.8639000000000034e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, 3.8597000000001325e-05, 3.8541000000003045e-05, 3.8597000000001325e-05, 3.856999999999819e-05, 3.8611000000000895e-05, 3.8610999999997425e-05, 3.8611000000000895e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.8653000000003074e-05, 3.8596999999997855e-05, 3.861200000000037e-05, 3.8610999999997425e-05, 3.8625000000000465e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.8596999999997855e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8625000000000465e-05, 3.859799999999733e-05, 3.8583000000001755e-05, 3.8625000000000465e-05, 3.8611000000000895e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.8652999999999604e-05, 3.85980000000008e-05, 3.85980000000008e-05, 3.8639000000000034e-05, 3.8610999999997425e-05, 3.8611000000000895e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.897" endtime="20201029 18:15:10.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.892" endtime="20201029 18:15:10.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.910" endtime="20201029 18:15:10.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.909" endtime="20201029 18:15:10.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.908" endtime="20201029 18:15:10.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.547" endtime="20201029 18:15:10.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.546" endtime="20201029 18:15:10.931"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.940" endtime="20201029 18:15:10.955"></status>
</kw>
<msg timestamp="20201029 18:15:10.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.938" endtime="20201029 18:15:10.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.956" endtime="20201029 18:15:10.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.959" endtime="20201029 18:15:10.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.935" endtime="20201029 18:15:10.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.933" endtime="20201029 18:15:10.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.968" endtime="20201029 18:15:11.255"></status>
</kw>
<msg timestamp="20201029 18:15:11.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.966" endtime="20201029 18:15:11.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021456236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.260" endtime="20201029 18:15:11.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.268" endtime="20201029 18:15:11.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.964" endtime="20201029 18:15:11.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.962" endtime="20201029 18:15:11.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.274" level="INFO">${RESULT} = [{'diff': 3.9416999999999924e-05}, {'diff': 3.858400000000123e-05}, {'diff': 3.8610999999997425e-05}, {'diff': 3.858400000000123e-05}, {'diff': 3.858400000000123e-05}, {'diff': 3.858400000000123e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:11.271" endtime="20201029 18:15:11.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:11.279" level="INFO">${ACCURACY} = {'diff': [3.9416999999999924e-05, 3.858400000000123e-05, 3.8610999999997425e-05, 3.858400000000123e-05, 3.858400000000123e-05, 3.858400000000123e-05, 3.854199999999905e-05, 3.8540999999999576e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:11.275" endtime="20201029 18:15:11.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.283" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.282" endtime="20201029 18:15:11.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.285" level="INFO">VALUE: [3.9416999999999924e-05, 3.858400000000123e-05, 3.8610999999997425e-05, 3.858400000000123e-05, 3.858400000000123e-05, 3.858400000000123e-05, 3.854199999999905e-05, 3.8540999999999576e-05, 3.8568999999998715e-05, 3.861200000000037e-05, 3.8582999999998285e-05, 3.8596999999997855e-05, 3.8639000000000034e-05, 3.8568999999998715e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.8652999999999604e-05, 3.8639000000000034e-05, 3.8597000000001325e-05, 3.85980000000008e-05, 3.8597000000001325e-05, 3.8569000000002185e-05, 3.8597000000001325e-05, 3.854200000000252e-05, 3.85980000000008e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, 3.8596999999997855e-05, 3.8611000000000895e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.855599999999862e-05, 3.8582999999998285e-05, 3.8583000000001755e-05, 3.856999999999819e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.8596999999997855e-05, 3.858399999999776e-05, 3.857000000000166e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8639000000000034e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.284" endtime="20201029 18:15:11.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.279" endtime="20201029 18:15:11.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.290" endtime="20201029 18:15:11.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.289" endtime="20201029 18:15:11.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.288" endtime="20201029 18:15:11.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.932" endtime="20201029 18:15:11.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.931" endtime="20201029 18:15:11.311"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.320" endtime="20201029 18:15:11.336"></status>
</kw>
<msg timestamp="20201029 18:15:11.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.318" endtime="20201029 18:15:11.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.337" endtime="20201029 18:15:11.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.340" endtime="20201029 18:15:11.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.316" endtime="20201029 18:15:11.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.314" endtime="20201029 18:15:11.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.349" endtime="20201029 18:15:11.634"></status>
</kw>
<msg timestamp="20201029 18:15:11.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.347" endtime="20201029 18:15:11.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022395986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.638" endtime="20201029 18:15:11.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.647" endtime="20201029 18:15:11.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.345" endtime="20201029 18:15:11.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.343" endtime="20201029 18:15:11.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.653" level="INFO">${RESULT} = [{'diff': 3.9389000000000784e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.8610999999997425e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.8568999999998715e-05}, {'diff': 3.8597000000001325e-05...</msg>
<status status="PASS" starttime="20201029 18:15:11.650" endtime="20201029 18:15:11.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:11.657" level="INFO">${ACCURACY} = {'diff': [3.9389000000000784e-05, 3.8625000000000465e-05, 3.8610999999997425e-05, 3.85980000000008e-05, 3.8568999999998715e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.8611000000000895e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:11.654" endtime="20201029 18:15:11.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.662" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.661" endtime="20201029 18:15:11.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.664" level="INFO">VALUE: [3.9389000000000784e-05, 3.8625000000000465e-05, 3.8610999999997425e-05, 3.85980000000008e-05, 3.8568999999998715e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.8611000000000895e-05, 3.8597000000001325e-05, 3.8652999999999604e-05, 3.8611000000000895e-05, 3.8596999999997855e-05, 3.856999999999819e-05, 3.8625000000000465e-05, 3.8597000000001325e-05, 3.8540999999999576e-05, 3.8597000000001325e-05, 3.8610999999997425e-05, 3.8597000000001325e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.854200000000252e-05, 3.8582999999998285e-05, 3.8527000000000006e-05, 3.8583000000001755e-05, 3.8667000000002644e-05, 3.8610999999997425e-05, 3.8639000000000034e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8568999999998715e-05, 3.8611000000000895e-05, 3.859799999999733e-05, 3.8596999999997855e-05, 3.8596999999997855e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8666999999999174e-05, 3.8639000000000034e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.861200000000037e-05, 3.859799999999733e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.8610999999997425e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.663" endtime="20201029 18:15:11.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.658" endtime="20201029 18:15:11.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.670" endtime="20201029 18:15:11.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.669" endtime="20201029 18:15:11.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.667" endtime="20201029 18:15:11.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.312" endtime="20201029 18:15:11.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.311" endtime="20201029 18:15:11.691"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.699" endtime="20201029 18:15:11.714"></status>
</kw>
<msg timestamp="20201029 18:15:11.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.698" endtime="20201029 18:15:11.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.716" endtime="20201029 18:15:11.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.718" endtime="20201029 18:15:11.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.695" endtime="20201029 18:15:11.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.693" endtime="20201029 18:15:11.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.727" endtime="20201029 18:15:12.017"></status>
</kw>
<msg timestamp="20201029 18:15:12.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.726" endtime="20201029 18:15:12.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021412764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021452167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.021" endtime="20201029 18:15:12.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.030" endtime="20201029 18:15:12.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.723" endtime="20201029 18:15:12.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.721" endtime="20201029 18:15:12.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.036" level="INFO">${RESULT} = [{'diff': 3.9403000000000354e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 3.8554999999999146e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 3.8610999999997425e-...</msg>
<status status="PASS" starttime="20201029 18:15:12.033" endtime="20201029 18:15:12.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.041" level="INFO">${ACCURACY} = {'diff': [3.9403000000000354e-05, 4.3624999999998526e-05, 3.8554999999999146e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 3.8610999999997425e-05, 4.3638999999998096e-05, 4.3639000000001565e-05...</msg>
<status status="PASS" starttime="20201029 18:15:12.037" endtime="20201029 18:15:12.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.046" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.045" endtime="20201029 18:15:12.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.048" level="INFO">VALUE: [3.9403000000000354e-05, 4.3624999999998526e-05, 3.8554999999999146e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 3.8610999999997425e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 3.8568999999998715e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.365199999999819e-05, 4.3653000000001135e-05, 3.8596999999997855e-05, 4.366600000000123e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 3.858399999999776e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3596999999999386e-05, 3.857000000000166e-05, 3.859799999999733e-05, 3.857000000000166e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3610999999998956e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.8582999999998285e-05, 4.3638999999998096e-05, 4.3582999999999816e-05, 3.857000000000166e-05, 3.858399999999776e-05, 4.3652999999997666e-05, 3.85980000000008e-05, 3.8597000000001325e-05, 4.372199999999951e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 3.8596999999997855e-05, 4.3639000000001565e-05, 3.8610999999997425e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.047" endtime="20201029 18:15:12.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.042" endtime="20201029 18:15:12.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.053" endtime="20201029 18:15:12.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.051" endtime="20201029 18:15:12.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.050" endtime="20201029 18:15:12.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.692" endtime="20201029 18:15:12.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.691" endtime="20201029 18:15:12.074"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.082" endtime="20201029 18:15:12.097"></status>
</kw>
<msg timestamp="20201029 18:15:12.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.081" endtime="20201029 18:15:12.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.099" endtime="20201029 18:15:12.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.101" endtime="20201029 18:15:12.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.078" endtime="20201029 18:15:12.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.076" endtime="20201029 18:15:12.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.111" endtime="20201029 18:15:12.399"></status>
</kw>
<msg timestamp="20201029 18:15:12.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.109" endtime="20201029 18:15:12.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.403" endtime="20201029 18:15:12.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.412" endtime="20201029 18:15:12.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.106" endtime="20201029 18:15:12.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.105" endtime="20201029 18:15:12.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.418" level="INFO">${RESULT} = [{'diff': 4.445800000000069e-05}, {'diff': 4.365200000000166e-05}, {'diff': 4.3625000000001996e-05}, {'diff': 4.3652999999997666e-05}, {'diff': 4.3653000000001135e-05}, {'diff': 4.3639000000001565e-05...</msg>
<status status="PASS" starttime="20201029 18:15:12.415" endtime="20201029 18:15:12.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.422" level="INFO">${ACCURACY} = {'diff': [4.445800000000069e-05, 4.365200000000166e-05, 4.3625000000001996e-05, 4.3652999999997666e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3583000000003286e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:12.419" endtime="20201029 18:15:12.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.427" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.426" endtime="20201029 18:15:12.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.429" level="INFO">VALUE: [4.445800000000069e-05, 4.365200000000166e-05, 4.3625000000001996e-05, 4.3652999999997666e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3583000000003286e-05, 4.3638999999998096e-05, 4.3653000000001135e-05, 4.3625000000001996e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.358399999999929e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.3610999999998956e-05, 4.3625000000001996e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.366600000000123e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.3610999999998956e-05, 4.366600000000123e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.3667000000000705e-05, 4.3624999999998526e-05, 4.372199999999951e-05, 4.3624999999998526e-05, 4.3611000000002426e-05, 4.3569000000000246e-05, 4.358399999999929e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3638999999998096e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.428" endtime="20201029 18:15:12.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.423" endtime="20201029 18:15:12.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.434" endtime="20201029 18:15:12.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.433" endtime="20201029 18:15:12.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.432" endtime="20201029 18:15:12.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.075" endtime="20201029 18:15:12.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.074" endtime="20201029 18:15:12.455"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.464" endtime="20201029 18:15:12.480"></status>
</kw>
<msg timestamp="20201029 18:15:12.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.462" endtime="20201029 18:15:12.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.481" endtime="20201029 18:15:12.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.484" endtime="20201029 18:15:12.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.460" endtime="20201029 18:15:12.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.458" endtime="20201029 18:15:12.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.493" endtime="20201029 18:15:12.779"></status>
</kw>
<msg timestamp="20201029 18:15:12.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.491" endtime="20201029 18:15:12.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.783" endtime="20201029 18:15:12.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.791" endtime="20201029 18:15:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.489" endtime="20201029 18:15:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.487" endtime="20201029 18:15:12.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.798" level="INFO">${RESULT} = [{'diff': 4.4472999999999735e-05}, {'diff': 4.3625000000001996e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.3723000000002454e-...</msg>
<status status="PASS" starttime="20201029 18:15:12.795" endtime="20201029 18:15:12.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.802" level="INFO">${ACCURACY} = {'diff': [4.4472999999999735e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3723000000002454e-05, 4.356999999999972e-05, 4.3639000000001565e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:12.799" endtime="20201029 18:15:12.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.806" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.805" endtime="20201029 18:15:12.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.809" level="INFO">VALUE: [4.4472999999999735e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3723000000002454e-05, 4.356999999999972e-05, 4.3639000000001565e-05, 4.363800000000209e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3681000000000275e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.356999999999972e-05, 4.3639000000001565e-05, 4.3610999999998956e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.3709000000002884e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.370799999999994e-05, 4.363799999999862e-05, 4.3653000000001135e-05, 4.3624999999998526e-05, 4.363799999999862e-05, 4.3694999999999845e-05, 4.3639000000001565e-05, 4.365200000000166e-05, 4.3667000000000705e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.355600000000015e-05, 4.3652999999997666e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.363799999999862e-05, 4.3638999999998096e-05, 4.3596999999999386e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.365200000000166e-05, 4.3653000000001135e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.807" endtime="20201029 18:15:12.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.803" endtime="20201029 18:15:12.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.815" endtime="20201029 18:15:12.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.813" endtime="20201029 18:15:12.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.812" endtime="20201029 18:15:12.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.456" endtime="20201029 18:15:12.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.455" endtime="20201029 18:15:12.836"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.844" endtime="20201029 18:15:12.859"></status>
</kw>
<msg timestamp="20201029 18:15:12.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.843" endtime="20201029 18:15:12.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.861" endtime="20201029 18:15:12.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.863" endtime="20201029 18:15:12.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.840" endtime="20201029 18:15:12.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.838" endtime="20201029 18:15:12.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.872" endtime="20201029 18:15:13.159"></status>
</kw>
<msg timestamp="20201029 18:15:13.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.871" endtime="20201029 18:15:13.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021468069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.163" endtime="20201029 18:15:13.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.171" endtime="20201029 18:15:13.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.868" endtime="20201029 18:15:13.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.866" endtime="20201029 18:15:13.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.178" level="INFO">${RESULT} = [{'diff': 4.4459000000000165e-05}, {'diff': 4.3667000000000705e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3653000000001135e-...</msg>
<status status="PASS" starttime="20201029 18:15:13.175" endtime="20201029 18:15:13.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.183" level="INFO">${ACCURACY} = {'diff': [4.4459000000000165e-05, 4.3667000000000705e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3653000000001135e-05, 4.3611000000002426e-05, 4.3638999999998096e-05...</msg>
<status status="PASS" starttime="20201029 18:15:13.179" endtime="20201029 18:15:13.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.187" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.186" endtime="20201029 18:15:13.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.190" level="INFO">VALUE: [4.4459000000000165e-05, 4.3667000000000705e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3653000000001135e-05, 4.3611000000002426e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.363799999999862e-05, 4.369400000000037e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3653000000001135e-05, 4.365199999999819e-05, 4.370799999999994e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3681000000000275e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.363800000000209e-05, 4.3639000000001565e-05, 4.3610999999998956e-05, 4.36800000000008e-05, 4.3625000000001996e-05, 4.3652999999997666e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.356999999999972e-05, 4.365200000000166e-05, 4.3596999999999386e-05, 4.359799999999886e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.188" endtime="20201029 18:15:13.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.184" endtime="20201029 18:15:13.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.195" endtime="20201029 18:15:13.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.193" endtime="20201029 18:15:13.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.192" endtime="20201029 18:15:13.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.836" endtime="20201029 18:15:13.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.836" endtime="20201029 18:15:13.215"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.224" endtime="20201029 18:15:13.239"></status>
</kw>
<msg timestamp="20201029 18:15:13.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.222" endtime="20201029 18:15:13.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.241" endtime="20201029 18:15:13.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.243" endtime="20201029 18:15:13.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.220" endtime="20201029 18:15:13.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.218" endtime="20201029 18:15:13.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.252" endtime="20201029 18:15:13.540"></status>
</kw>
<msg timestamp="20201029 18:15:13.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.251" endtime="20201029 18:15:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021424403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.545" endtime="20201029 18:15:13.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.553" endtime="20201029 18:15:13.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.248" endtime="20201029 18:15:13.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.246" endtime="20201029 18:15:13.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.560" level="INFO">${RESULT} = [{'diff': 4.447199999999679e-05}, {'diff': 4.3653000000001135e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.3653000000001135e-05}, {'diff': 4.3611000000002426e-05}, {'diff': 4.3638999999998096e-0...</msg>
<status status="PASS" starttime="20201029 18:15:13.556" endtime="20201029 18:15:13.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.564" level="INFO">${ACCURACY} = {'diff': [4.447199999999679e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3611000000002426e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 4.3667000000000705e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:13.561" endtime="20201029 18:15:13.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.569" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.567" endtime="20201029 18:15:13.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.571" level="INFO">VALUE: [4.447199999999679e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3611000000002426e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 4.3667000000000705e-05, 4.3653000000001135e-05, 4.3596999999999386e-05, 4.366600000000123e-05, 4.3653000000001135e-05, 4.3653000000001135e-05, 4.3667000000000705e-05, 4.363799999999862e-05, 4.365200000000166e-05, 4.3610999999998956e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.3653000000001135e-05, 4.3638999999998096e-05, 4.3596999999999386e-05, 4.3625000000001996e-05, 4.3639000000001565e-05, 4.3582999999999816e-05, 4.3653000000001135e-05, 4.363799999999862e-05, 4.3653000000001135e-05, 4.3653000000001135e-05, 4.3639000000001565e-05, 4.366600000000123e-05, 4.3653000000001135e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.369400000000037e-05, 4.3624999999998526e-05, 4.3667000000000705e-05, 4.36120000000019e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3653000000001135e-05, 4.3653000000001135e-05, 4.3666999999997236e-05, 4.3667000000000705e-05, 4.3638999999998096e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.570" endtime="20201029 18:15:13.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.565" endtime="20201029 18:15:13.572"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.576" endtime="20201029 18:15:13.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.574" endtime="20201029 18:15:13.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.573" endtime="20201029 18:15:13.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.216" endtime="20201029 18:15:13.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.216" endtime="20201029 18:15:13.597"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.605" endtime="20201029 18:15:13.622"></status>
</kw>
<msg timestamp="20201029 18:15:13.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.604" endtime="20201029 18:15:13.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.623" endtime="20201029 18:15:13.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.625" endtime="20201029 18:15:13.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.601" endtime="20201029 18:15:13.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.599" endtime="20201029 18:15:13.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.634" endtime="20201029 18:15:13.921"></status>
</kw>
<msg timestamp="20201029 18:15:13.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.633" endtime="20201029 18:15:13.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.925" endtime="20201029 18:15:13.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.934" endtime="20201029 18:15:13.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.630" endtime="20201029 18:15:13.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.629" endtime="20201029 18:15:13.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.940" level="INFO">${RESULT} = [{'diff': 4.4431000000001025e-05}, {'diff': 4.8707999999998e-05}, {'diff': 4.872200000000104e-05}, {'diff': 4.869399999999843e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.86529999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:13.937" endtime="20201029 18:15:13.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.944" level="INFO">${ACCURACY} = {'diff': [4.4431000000001025e-05, 4.8707999999998e-05, 4.872200000000104e-05, 4.869399999999843e-05, 4.3638999999998096e-05, 4.86529999999992e-05, 4.866699999999877e-05, 4.3638999999998096e-05, 4.3625...</msg>
<status status="PASS" starttime="20201029 18:15:13.941" endtime="20201029 18:15:13.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.949" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.948" endtime="20201029 18:15:13.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.951" level="INFO">VALUE: [4.4431000000001025e-05, 4.8707999999998e-05, 4.872200000000104e-05, 4.869399999999843e-05, 4.3638999999998096e-05, 4.86529999999992e-05, 4.866699999999877e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.366599999999776e-05, 4.8681000000001806e-05, 4.8695000000001376e-05, 4.3639000000001565e-05, 4.36800000000008e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.869499999999791e-05, 4.3653000000001135e-05, 4.86940000000019e-05, 4.867999999999886e-05, 4.8695000000001376e-05, 4.3639000000001565e-05, 4.8653000000002666e-05, 4.870800000000147e-05, 4.3667000000000705e-05, 4.3624999999998526e-05, 4.86940000000019e-05, 4.867999999999886e-05, 4.8695000000001376e-05, 4.86529999999992e-05, 4.8695000000001376e-05, 4.8695000000001376e-05, 4.3653000000001135e-05, 4.868099999999834e-05, 4.3652999999997666e-05, 4.3694999999999845e-05, 4.867999999999886e-05, 4.869499999999791e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.867999999999886e-05, 4.3652999999997666e-05, 4.863800000000015e-05, 4.8681000000001806e-05, 4.3667000000000705e-05, 4.867999999999886e-05, 4.3582999999999816e-05, 4.3625000000001996e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.950" endtime="20201029 18:15:13.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.945" endtime="20201029 18:15:13.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.957" endtime="20201029 18:15:13.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.956" endtime="20201029 18:15:13.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.954" endtime="20201029 18:15:13.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.598" endtime="20201029 18:15:13.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.597" endtime="20201029 18:15:13.978"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.986" endtime="20201029 18:15:14.002"></status>
</kw>
<msg timestamp="20201029 18:15:14.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.985" endtime="20201029 18:15:14.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.004" endtime="20201029 18:15:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.006" endtime="20201029 18:15:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.982" endtime="20201029 18:15:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.980" endtime="20201029 18:15:14.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.015" endtime="20201029 18:15:14.301"></status>
</kw>
<msg timestamp="20201029 18:15:14.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.014" endtime="20201029 18:15:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.305" endtime="20201029 18:15:14.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.313" endtime="20201029 18:15:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.011" endtime="20201029 18:15:14.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.009" endtime="20201029 18:15:14.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.320" level="INFO">${RESULT} = [{'diff': 4.9486999999997366e-05}, {'diff': 4.869399999999843e-05}, {'diff': 4.8695000000001376e-05}, {'diff': 4.867999999999886e-05}, {'diff': 4.8667000000002236e-05}, {'diff': 4.875000000000018e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:14.317" endtime="20201029 18:15:14.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.325" level="INFO">${ACCURACY} = {'diff': [4.9486999999997366e-05, 4.869399999999843e-05, 4.8695000000001376e-05, 4.867999999999886e-05, 4.8667000000002236e-05, 4.875000000000018e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.8...</msg>
<status status="PASS" starttime="20201029 18:15:14.321" endtime="20201029 18:15:14.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.329" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.328" endtime="20201029 18:15:14.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.332" level="INFO">VALUE: [4.9486999999997366e-05, 4.869399999999843e-05, 4.8695000000001376e-05, 4.867999999999886e-05, 4.8667000000002236e-05, 4.875000000000018e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.866599999999929e-05, 4.862500000000006e-05, 4.861100000000049e-05, 4.868099999999834e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.866600000000276e-05, 4.868099999999834e-05, 4.868000000000233e-05, 4.868099999999834e-05, 4.868000000000233e-05, 4.869399999999843e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.8695000000001376e-05, 4.868099999999834e-05, 4.863800000000015e-05, 4.8695000000001376e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.8667000000002236e-05, 4.870800000000147e-05, 4.863899999999963e-05, 4.869399999999843e-05, 4.869399999999843e-05, 4.869399999999843e-05, 4.868099999999834e-05, 4.8709000000000946e-05, 4.862500000000006e-05, 4.868000000000233e-05, 4.868000000000233e-05, 4.868099999999834e-05, 4.866599999999929e-05, 4.8695000000001376e-05, 4.869499999999791e-05, 4.867999999999886e-05, 4.865199999999972e-05, 4.866699999999877e-05, 4.872200000000104e-05, 4.862500000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.331" endtime="20201029 18:15:14.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.326" endtime="20201029 18:15:14.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.337" endtime="20201029 18:15:14.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.335" endtime="20201029 18:15:14.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.334" endtime="20201029 18:15:14.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.979" endtime="20201029 18:15:14.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.978" endtime="20201029 18:15:14.358"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.366" endtime="20201029 18:15:14.382"></status>
</kw>
<msg timestamp="20201029 18:15:14.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.365" endtime="20201029 18:15:14.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.383" endtime="20201029 18:15:14.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.386" endtime="20201029 18:15:14.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.362" endtime="20201029 18:15:14.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.360" endtime="20201029 18:15:14.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.395" endtime="20201029 18:15:14.681"></status>
</kw>
<msg timestamp="20201029 18:15:14.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.393" endtime="20201029 18:15:14.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021671861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.685" endtime="20201029 18:15:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.694" endtime="20201029 18:15:14.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.391" endtime="20201029 18:15:14.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.389" endtime="20201029 18:15:14.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.700" level="INFO">${RESULT} = [{'diff': 4.948599999999789e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.869399999999843e-05}, {'diff': 4.8722999999997046e-05}, {'diff': 4.867999999999886e-05}, {'diff': 4.863899999999963e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:14.697" endtime="20201029 18:15:14.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.705" level="INFO">${ACCURACY} = {'diff': [4.948599999999789e-05, 4.8681000000001806e-05, 4.869399999999843e-05, 4.8722999999997046e-05, 4.867999999999886e-05, 4.863899999999963e-05, 4.867999999999886e-05, 4.8707999999998e-05, 4.8680...</msg>
<status status="PASS" starttime="20201029 18:15:14.701" endtime="20201029 18:15:14.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.709" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.708" endtime="20201029 18:15:14.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.712" level="INFO">VALUE: [4.948599999999789e-05, 4.8681000000001806e-05, 4.869399999999843e-05, 4.8722999999997046e-05, 4.867999999999886e-05, 4.863899999999963e-05, 4.867999999999886e-05, 4.8707999999998e-05, 4.868099999999834e-05, 4.869499999999791e-05, 4.8695000000001376e-05, 4.863899999999963e-05, 4.866599999999929e-05, 4.868000000000233e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.866699999999877e-05, 4.8737000000000086e-05, 4.868000000000233e-05, 4.868099999999834e-05, 4.869499999999791e-05, 4.86529999999992e-05, 4.870800000000147e-05, 4.8707999999998e-05, 4.8681000000001806e-05, 4.86940000000019e-05, 4.8681000000001806e-05, 4.8723000000000516e-05, 4.867999999999886e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.867999999999886e-05, 4.867999999999886e-05, 4.863899999999963e-05, 4.876399999999975e-05, 4.866699999999877e-05, 4.86940000000019e-05, 4.8695000000001376e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.8695000000001376e-05, 4.866699999999877e-05, 4.862500000000006e-05, 4.866699999999877e-05, 4.86529999999992e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.8695000000001376e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.710" endtime="20201029 18:15:14.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.705" endtime="20201029 18:15:14.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.717" endtime="20201029 18:15:14.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.715" endtime="20201029 18:15:14.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.714" endtime="20201029 18:15:14.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.359" endtime="20201029 18:15:14.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.358" endtime="20201029 18:15:14.738"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.746" endtime="20201029 18:15:14.762"></status>
</kw>
<msg timestamp="20201029 18:15:14.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.744" endtime="20201029 18:15:14.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.764" endtime="20201029 18:15:14.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.767" endtime="20201029 18:15:14.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.742" endtime="20201029 18:15:14.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.740" endtime="20201029 18:15:14.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.776" endtime="20201029 18:15:15.061"></status>
</kw>
<msg timestamp="20201029 18:15:15.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.774" endtime="20201029 18:15:15.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.065" endtime="20201029 18:15:15.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.073" endtime="20201029 18:15:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.772" endtime="20201029 18:15:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.770" endtime="20201029 18:15:15.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.080" level="INFO">${RESULT} = [{'diff': 4.945799999999875e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.868099999999834e-05}, {'diff': 4.866600000000276e-05}, {'diff': 4.8667000000002236e-05}, {'diff': 4.865199999999972e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.077" endtime="20201029 18:15:15.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.084" level="INFO">${ACCURACY} = {'diff': [4.945799999999875e-05, 4.86529999999992e-05, 4.868099999999834e-05, 4.866600000000276e-05, 4.8667000000002236e-05, 4.865199999999972e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.8736...</msg>
<status status="PASS" starttime="20201029 18:15:15.081" endtime="20201029 18:15:15.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.088" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.087" endtime="20201029 18:15:15.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.091" level="INFO">VALUE: [4.945799999999875e-05, 4.86529999999992e-05, 4.868099999999834e-05, 4.866600000000276e-05, 4.8667000000002236e-05, 4.865199999999972e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.873600000000061e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.861100000000049e-05, 4.8681000000001806e-05, 4.866699999999877e-05, 4.869399999999843e-05, 4.868099999999834e-05, 4.862500000000006e-05, 4.86940000000019e-05, 4.868000000000233e-05, 4.866699999999877e-05, 4.870800000000147e-05, 4.866599999999929e-05, 4.869399999999843e-05, 4.868099999999834e-05, 4.8667000000002236e-05, 4.86529999999992e-05, 4.870800000000147e-05, 4.866699999999877e-05, 4.8709000000000946e-05, 4.869399999999843e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.8681000000001806e-05, 4.867999999999886e-05, 4.865199999999972e-05, 4.868099999999834e-05, 4.86940000000019e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.8737000000000086e-05, 4.8681000000001806e-05, 4.867999999999886e-05, 4.867999999999886e-05, 4.875000000000018e-05, 4.8709000000000946e-05, 4.863899999999963e-05, 4.867999999999886e-05, 4.8681000000001806e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.090" endtime="20201029 18:15:15.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.085" endtime="20201029 18:15:15.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.097" endtime="20201029 18:15:15.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.095" endtime="20201029 18:15:15.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.094" endtime="20201029 18:15:15.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.738" endtime="20201029 18:15:15.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.738" endtime="20201029 18:15:15.118"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.126" endtime="20201029 18:15:15.142"></status>
</kw>
<msg timestamp="20201029 18:15:15.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.124" endtime="20201029 18:15:15.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.143" endtime="20201029 18:15:15.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.146" endtime="20201029 18:15:15.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.122" endtime="20201029 18:15:15.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.120" endtime="20201029 18:15:15.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.155" endtime="20201029 18:15:15.441"></status>
</kw>
<msg timestamp="20201029 18:15:15.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:15:15.153" endtime="20201029 18:15:15.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0215735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 18:15:15.445" endtime="20201029 18:15:15.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.453" endtime="20201029 18:15:15.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.151" endtime="20201029 18:15:15.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.149" endtime="20201029 18:15:15.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.460" level="INFO">${RESULT} = [{'diff': 4.950000000000093e-05}, {'diff': 4.869499999999791e-05}, {'diff': 4.866599999999929e-05}, {'diff': 4.868099999999834e-05}, {'diff': 4.868099999999834e-05}, {'diff': 4.869399999999843e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.457" endtime="20201029 18:15:15.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.465" level="INFO">${ACCURACY} = {'diff': [4.950000000000093e-05, 4.869499999999791e-05, 4.866599999999929e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.869399999999843e-05, 4.872200000000104e-05, 4.867999999999886e-05, 4.8625...</msg>
<status status="PASS" starttime="20201029 18:15:15.461" endtime="20201029 18:15:15.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.470" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.468" endtime="20201029 18:15:15.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.472" level="INFO">VALUE: [4.950000000000093e-05, 4.869499999999791e-05, 4.866599999999929e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.869399999999843e-05, 4.872200000000104e-05, 4.867999999999886e-05, 4.862500000000006e-05, 4.868000000000233e-05, 4.866699999999877e-05, 4.8709000000000946e-05, 4.867999999999886e-05, 4.872200000000104e-05, 4.8681000000001806e-05, 4.869399999999843e-05, 4.8707999999998e-05, 4.866600000000276e-05, 4.8723000000000516e-05, 4.868000000000233e-05, 4.869499999999791e-05, 4.866699999999877e-05, 4.869499999999791e-05, 4.869399999999843e-05, 4.8667000000002236e-05, 4.866699999999877e-05, 4.865199999999972e-05, 4.867999999999886e-05, 4.8681000000001806e-05, 4.867999999999886e-05, 4.868000000000233e-05, 4.868099999999834e-05, 4.8708999999997477e-05, 4.86940000000019e-05, 4.867999999999886e-05, 4.863800000000015e-05, 4.8681000000001806e-05, 4.868099999999834e-05, 4.8707999999998e-05, 4.86529999999992e-05, 4.863899999999963e-05, 4.865199999999972e-05, 4.861100000000049e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.8723000000000516e-05, 4.8639000000003096e-05, 4.863899999999963e-05, 4.86940000000019e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.471" endtime="20201029 18:15:15.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.466" endtime="20201029 18:15:15.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.477" endtime="20201029 18:15:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.475" endtime="20201029 18:15:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.474" endtime="20201029 18:15:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.118" endtime="20201029 18:15:15.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.118" endtime="20201029 18:15:15.498"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.506" endtime="20201029 18:15:15.522"></status>
</kw>
<msg timestamp="20201029 18:15:15.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.505" endtime="20201029 18:15:15.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.524" endtime="20201029 18:15:15.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.526" endtime="20201029 18:15:15.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.502" endtime="20201029 18:15:15.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.500" endtime="20201029 18:15:15.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.535" endtime="20201029 18:15:15.824"></status>
</kw>
<msg timestamp="20201029 18:15:15.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.533" endtime="20201029 18:15:15.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.829" endtime="20201029 18:15:15.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.837" endtime="20201029 18:15:15.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.531" endtime="20201029 18:15:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.529" endtime="20201029 18:15:15.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.843" level="INFO">${RESULT} = [{'diff': 4.9486999999997366e-05}, {'diff': 4.866599999999929e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.372200000000257e-05}, {'diff': 4.866599999999929e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:15.840" endtime="20201029 18:15:15.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.847" level="INFO">${ACCURACY} = {'diff': [4.9486999999997366e-05, 4.866599999999929e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 4.866599999999929e-05, 4.875000000000018e-05, 5.3721999999999104e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:15.844" endtime="20201029 18:15:15.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.852" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.851" endtime="20201029 18:15:15.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.854" level="INFO">VALUE: [4.9486999999997366e-05, 4.866599999999929e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 4.866599999999929e-05, 4.875000000000018e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.379200000000042e-05, 5.372299999999858e-05, 4.869499999999791e-05, 4.867999999999886e-05, 4.866599999999929e-05, 4.867999999999886e-05, 4.872200000000104e-05, 5.368099999999987e-05, 4.869399999999843e-05, 5.3763999999997814e-05, 5.369499999999944e-05, 4.868000000000233e-05, 5.376400000000128e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 4.870800000000147e-05, 4.8695000000001376e-05, 4.8695000000001376e-05, 4.868099999999834e-05, 4.867999999999886e-05, 5.3707999999999534e-05, 4.869499999999791e-05, 4.866599999999929e-05, 4.867999999999886e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 4.866699999999877e-05, 4.867999999999886e-05, 4.868099999999834e-05, 5.373600000000214e-05, 4.876399999999975e-05, 4.867999999999886e-05, 4.867999999999886e-05, 4.863899999999963e-05, 4.867999999999886e-05, 5.380599999999999e-05, 5.3721999999999104e-05, 4.867999999999886e-05, 5.370899999999901e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.853" endtime="20201029 18:15:15.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.848" endtime="20201029 18:15:15.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.859" endtime="20201029 18:15:15.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.858" endtime="20201029 18:15:15.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.857" endtime="20201029 18:15:15.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.499" endtime="20201029 18:15:15.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.498" endtime="20201029 18:15:15.880"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.889" endtime="20201029 18:15:15.905"></status>
</kw>
<msg timestamp="20201029 18:15:15.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.887" endtime="20201029 18:15:15.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.907" endtime="20201029 18:15:15.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.909" endtime="20201029 18:15:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.884" endtime="20201029 18:15:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.882" endtime="20201029 18:15:15.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.918" endtime="20201029 18:15:16.205"></status>
</kw>
<msg timestamp="20201029 18:15:16.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.917" endtime="20201029 18:15:16.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022609611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.209" endtime="20201029 18:15:16.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.217" endtime="20201029 18:15:16.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.914" endtime="20201029 18:15:16.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.913" endtime="20201029 18:15:16.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.224" level="INFO">${RESULT} = [{'diff': 5.454200000000117e-05}, {'diff': 5.373600000000214e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3693999999999964e-05...</msg>
<status status="PASS" starttime="20201029 18:15:16.221" endtime="20201029 18:15:16.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.228" level="INFO">${ACCURACY} = {'diff': [5.454200000000117e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3693999999999964e-05, 5.3749999999998244e-05, 5.3666000000000824e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:16.225" endtime="20201029 18:15:16.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.232" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.231" endtime="20201029 18:15:16.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.235" level="INFO">VALUE: [5.454200000000117e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3693999999999964e-05, 5.3749999999998244e-05, 5.3666000000000824e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 5.380599999999999e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.369499999999944e-05, 5.3693999999999964e-05, 5.368099999999987e-05, 5.372300000000205e-05, 5.372200000000257e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.365299999999726e-05, 5.375000000000171e-05, 5.3693999999999964e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 5.3693999999999964e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.3721999999999104e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.372299999999858e-05, 5.3652000000001254e-05, 5.3749999999998244e-05, 5.372200000000257e-05, 5.3735999999998674e-05, 5.377800000000085e-05, 5.3721999999999104e-05, 5.3721999999999104e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.234" endtime="20201029 18:15:16.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.229" endtime="20201029 18:15:16.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.244" endtime="20201029 18:15:16.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.243" endtime="20201029 18:15:16.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.242" endtime="20201029 18:15:16.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.881" endtime="20201029 18:15:16.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.880" endtime="20201029 18:15:16.265"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.274" endtime="20201029 18:15:16.290"></status>
</kw>
<msg timestamp="20201029 18:15:16.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.272" endtime="20201029 18:15:16.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.291" endtime="20201029 18:15:16.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.294" endtime="20201029 18:15:16.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.270" endtime="20201029 18:15:16.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.268" endtime="20201029 18:15:16.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.302" endtime="20201029 18:15:16.590"></status>
</kw>
<msg timestamp="20201029 18:15:16.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.301" endtime="20201029 18:15:16.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.595" endtime="20201029 18:15:16.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.603" endtime="20201029 18:15:16.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.298" endtime="20201029 18:15:16.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.297" endtime="20201029 18:15:16.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.610" level="INFO">${RESULT} = [{'diff': 5.4513999999998564e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.370900000000248e-05}, {'diff': 5.372299999999858e-05}, {'diff': 5.379200000000042e-05}, {'diff': 5.3693999999999964e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:16.606" endtime="20201029 18:15:16.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.615" level="INFO">${ACCURACY} = {'diff': [5.4513999999998564e-05, 5.3707999999999534e-05, 5.370900000000248e-05, 5.372299999999858e-05, 5.379200000000042e-05, 5.3693999999999964e-05, 5.379200000000042e-05, 5.373600000000214e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:15:16.611" endtime="20201029 18:15:16.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.619" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.618" endtime="20201029 18:15:16.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.622" level="INFO">VALUE: [5.4513999999998564e-05, 5.3707999999999534e-05, 5.370900000000248e-05, 5.372299999999858e-05, 5.379200000000042e-05, 5.3693999999999964e-05, 5.379200000000042e-05, 5.373600000000214e-05, 5.372299999999858e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.379200000000042e-05, 5.379200000000042e-05, 5.372300000000205e-05, 5.373600000000214e-05, 5.3680000000000394e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.376400000000128e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.372299999999858e-05, 5.3693999999999964e-05, 5.373699999999815e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.372200000000257e-05, 5.3777999999997383e-05, 5.372300000000205e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.373699999999815e-05, 5.372300000000205e-05, 5.373700000000162e-05, 5.3749999999998244e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3777999999997383e-05, 5.370899999999901e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.620" endtime="20201029 18:15:16.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.616" endtime="20201029 18:15:16.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.627" endtime="20201029 18:15:16.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.625" endtime="20201029 18:15:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.624" endtime="20201029 18:15:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.266" endtime="20201029 18:15:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.266" endtime="20201029 18:15:16.648"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.656" endtime="20201029 18:15:16.672"></status>
</kw>
<msg timestamp="20201029 18:15:16.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.654" endtime="20201029 18:15:16.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.673" endtime="20201029 18:15:16.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.676" endtime="20201029 18:15:16.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.652" endtime="20201029 18:15:16.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.650" endtime="20201029 18:15:16.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.685" endtime="20201029 18:15:16.972"></status>
</kw>
<msg timestamp="20201029 18:15:16.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.683" endtime="20201029 18:15:16.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021486597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021541139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.976" endtime="20201029 18:15:16.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.984" endtime="20201029 18:15:16.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.681" endtime="20201029 18:15:16.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.679" endtime="20201029 18:15:16.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.991" level="INFO">${RESULT} = [{'diff': 5.454200000000117e-05}, {'diff': 5.372200000000257e-05}, {'diff': 5.372299999999858e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.372200000000257e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:16.988" endtime="20201029 18:15:16.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.995" level="INFO">${ACCURACY} = {'diff': [5.454200000000117e-05, 5.372200000000257e-05, 5.372299999999858e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 18:15:16.992" endtime="20201029 18:15:16.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.999" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.998" endtime="20201029 18:15:17.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.002" level="INFO">VALUE: [5.454200000000117e-05, 5.372200000000257e-05, 5.372299999999858e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.373699999999815e-05, 5.3721999999999104e-05, 5.372300000000205e-05, 5.3735999999998674e-05, 5.370899999999901e-05, 5.3721999999999104e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.372200000000257e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.380599999999999e-05, 5.3708000000003e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.380599999999999e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3652000000001254e-05, 5.370899999999901e-05, 5.375000000000171e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.375000000000171e-05, 5.3721999999999104e-05, 5.373600000000214e-05, 5.3693999999999964e-05, 5.373600000000214e-05, 5.372299999999858e-05, 5.3721999999999104e-05, 5.3763999999997814e-05, 5.3721999999999104e-05, 5.379200000000042e-05, 5.3707999999999534e-05, 5.376299999999834e-05, 5.370900000000248e-05, 5.372300000000205e-05, 5.3735999999998674e-05, 5.3666000000000824e-05, 5.3721999999999104e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.000" endtime="20201029 18:15:17.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.996" endtime="20201029 18:15:17.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.007" endtime="20201029 18:15:17.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.005" endtime="20201029 18:15:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.004" endtime="20201029 18:15:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.648" endtime="20201029 18:15:17.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.648" endtime="20201029 18:15:17.028"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.036" endtime="20201029 18:15:17.055"></status>
</kw>
<msg timestamp="20201029 18:15:17.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.035" endtime="20201029 18:15:17.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.057" endtime="20201029 18:15:17.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.059" endtime="20201029 18:15:17.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.032" endtime="20201029 18:15:17.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.030" endtime="20201029 18:15:17.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.068" endtime="20201029 18:15:17.354"></status>
</kw>
<msg timestamp="20201029 18:15:17.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.066" endtime="20201029 18:15:17.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.359" endtime="20201029 18:15:17.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.367" endtime="20201029 18:15:17.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.064" endtime="20201029 18:15:17.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.062" endtime="20201029 18:15:17.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.374" level="INFO">${RESULT} = [{'diff': 7.054199999999983e-05}, {'diff': 7.00970000000016e-05}, {'diff': 7.00840000000015e-05}, {'diff': 6.969500000000156e-05}, {'diff': 6.990299999999963e-05}, {'diff': 6.972200000000123e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:17.370" endtime="20201029 18:15:17.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.378" level="INFO">${ACCURACY} = {'diff': [7.054199999999983e-05, 7.00970000000016e-05, 7.00840000000015e-05, 6.969500000000156e-05, 6.990299999999963e-05, 6.972200000000123e-05, 7.038900000000056e-05, 7.026400000000044e-05, 7.004199...</msg>
<status status="PASS" starttime="20201029 18:15:17.374" endtime="20201029 18:15:17.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.382" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.381" endtime="20201029 18:15:17.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.384" level="INFO">VALUE: [7.054199999999983e-05, 7.00970000000016e-05, 7.00840000000015e-05, 6.969500000000156e-05, 6.990299999999963e-05, 6.972200000000123e-05, 7.038900000000056e-05, 7.026400000000044e-05, 7.004199999999933e-05, 7.025000000000087e-05, 6.990299999999963e-05, 6.95420000000023e-05, 7.009800000000108e-05, 7.004099999999985e-05, 6.954099999999935e-05, 6.990299999999963e-05, 7.008299999999856e-05, 7.026400000000044e-05, 7.015299999999988e-05, 6.995800000000191e-05, 7.009699999999813e-05, 6.969500000000156e-05, 6.97360000000008e-05, 7.047199999999851e-05, 7.011100000000117e-05, 7.002799999999976e-05, 7.040199999999719e-05, 6.990199999999669e-05, 6.959800000000058e-05, 7.011100000000117e-05, 7.02230000000012e-05, 7.015299999999988e-05, 6.963899999999981e-05, 7.045800000000241e-05, 6.963899999999981e-05, 7.040300000000013e-05, 7.033299999999881e-05, 6.965299999999938e-05, 6.959699999999763e-05, 6.983299999999831e-05, 6.961200000000015e-05, 7.002800000000323e-05, 6.977800000000298e-05, 6.97360000000008e-05, 6.945800000000141e-05, 6.987500000000049e-05, 6.983300000000178e-05, 7.048599999999808e-05, 7.006899999999899e-05, 6.983299999999831e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.383" endtime="20201029 18:15:17.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.379" endtime="20201029 18:15:17.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.390" endtime="20201029 18:15:17.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.389" endtime="20201029 18:15:17.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.388" endtime="20201029 18:15:17.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.029" endtime="20201029 18:15:17.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.028" endtime="20201029 18:15:17.411"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.420" endtime="20201029 18:15:17.438"></status>
</kw>
<msg timestamp="20201029 18:15:17.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.418" endtime="20201029 18:15:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.439" endtime="20201029 18:15:17.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.442" endtime="20201029 18:15:17.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.415" endtime="20201029 18:15:17.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.413" endtime="20201029 18:15:17.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.451" endtime="20201029 18:15:17.735"></status>
</kw>
<msg timestamp="20201029 18:15:17.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.449" endtime="20201029 18:15:17.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.740" endtime="20201029 18:15:17.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.748" endtime="20201029 18:15:17.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.447" endtime="20201029 18:15:17.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.445" endtime="20201029 18:15:17.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.754" level="INFO">${RESULT} = [{'diff': 7.127800000000101e-05}, {'diff': 7.104199999999686e-05}, {'diff': 7.102800000000076e-05}, {'diff': 7.084700000000235e-05}, {'diff': 7.070799999999919e-05}, {'diff': 7.127800000000101e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:17.751" endtime="20201029 18:15:17.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.759" level="INFO">${ACCURACY} = {'diff': [7.127800000000101e-05, 7.104199999999686e-05, 7.102800000000076e-05, 7.084700000000235e-05, 7.070799999999919e-05, 7.127800000000101e-05, 7.062499999999777e-05, 7.097299999999848e-05, 7.1471...</msg>
<status status="PASS" starttime="20201029 18:15:17.755" endtime="20201029 18:15:17.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.764" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.763" endtime="20201029 18:15:17.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.766" level="INFO">VALUE: [7.127800000000101e-05, 7.104199999999686e-05, 7.102800000000076e-05, 7.084700000000235e-05, 7.070799999999919e-05, 7.127800000000101e-05, 7.062499999999777e-05, 7.097299999999848e-05, 7.147199999999951e-05, 7.104200000000033e-05, 7.077800000000051e-05, 7.095799999999944e-05, 7.12360000000023e-05, 7.147300000000245e-05, 7.083399999999879e-05, 7.062499999999777e-05, 7.070799999999919e-05, 7.134700000000285e-05, 7.084699999999888e-05, 7.112499999999827e-05, 7.10970000000026e-05, 7.058299999999906e-05, 7.116700000000045e-05, 7.136099999999895e-05, 7.083399999999879e-05, 7.102800000000076e-05, 7.054199999999983e-05, 7.12499999999984e-05, 7.109699999999913e-05, 7.087500000000149e-05, 7.138899999999809e-05, 7.152800000000126e-05, 7.12360000000023e-05, 7.059800000000158e-05, 7.137500000000199e-05, 7.145899999999941e-05, 7.05689999999995e-05, 7.058299999999906e-05, 7.141599999999776e-05, 7.077700000000103e-05, 7.102800000000076e-05, 7.147199999999951e-05, 7.145799999999994e-05, 7.115300000000088e-05, 7.115299999999741e-05, 7.054199999999983e-05, 7.081999999999922e-05, 7.054199999999983e-05, 7.136100000000242e-05, 7.084699999999888e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.765" endtime="20201029 18:15:17.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.760" endtime="20201029 18:15:17.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.771" endtime="20201029 18:15:17.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.770" endtime="20201029 18:15:17.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.769" endtime="20201029 18:15:17.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.412" endtime="20201029 18:15:17.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.411" endtime="20201029 18:15:17.792"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.801" endtime="20201029 18:15:17.819"></status>
</kw>
<msg timestamp="20201029 18:15:17.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.799" endtime="20201029 18:15:17.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.820" endtime="20201029 18:15:17.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.823" endtime="20201029 18:15:17.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.796" endtime="20201029 18:15:17.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.794" endtime="20201029 18:15:17.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.832" endtime="20201029 18:15:18.119"></status>
</kw>
<msg timestamp="20201029 18:15:18.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021475583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.830" endtime="20201029 18:15:18.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021475583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021548458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.123" endtime="20201029 18:15:18.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.131" endtime="20201029 18:15:18.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.828" endtime="20201029 18:15:18.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.826" endtime="20201029 18:15:18.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.138" level="INFO">${RESULT} = [{'diff': 7.287500000000002e-05}, {'diff': 7.209799999999961e-05}, {'diff': 7.179200000000108e-05}, {'diff': 7.179099999999813e-05}, {'diff': 7.238899999999909e-05}, {'diff': 7.184799999999936e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:18.135" endtime="20201029 18:15:18.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.142" level="INFO">${ACCURACY} = {'diff': [7.287500000000002e-05, 7.209799999999961e-05, 7.179200000000108e-05, 7.179099999999813e-05, 7.238899999999909e-05, 7.184799999999936e-05, 7.230600000000115e-05, 7.176400000000194e-05, 7.2042...</msg>
<status status="PASS" starttime="20201029 18:15:18.139" endtime="20201029 18:15:18.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.146" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.145" endtime="20201029 18:15:18.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.149" level="INFO">VALUE: [7.287500000000002e-05, 7.209799999999961e-05, 7.179200000000108e-05, 7.179099999999813e-05, 7.238899999999909e-05, 7.184799999999936e-05, 7.230600000000115e-05, 7.176400000000194e-05, 7.204200000000133e-05, 7.169399999999715e-05, 7.159699999999963e-05, 7.241599999999876e-05, 7.188899999999859e-05, 7.152799999999779e-05, 7.159799999999911e-05, 7.244400000000137e-05, 7.234699999999691e-05, 7.220800000000069e-05, 7.158300000000006e-05, 7.154199999999736e-05, 7.190300000000163e-05, 7.220800000000069e-05, 7.184699999999988e-05, 7.220900000000016e-05, 7.232000000000072e-05, 7.240300000000213e-05, 7.152800000000126e-05, 7.208300000000056e-05, 7.181900000000074e-05, 7.219500000000059e-05, 7.170800000000019e-05, 7.163899999999834e-05, 7.234700000000038e-05, 7.195899999999991e-05, 7.158300000000006e-05, 7.201399999999872e-05, 7.209700000000013e-05, 7.188900000000206e-05, 7.247299999999998e-05, 7.182000000000022e-05, 7.163800000000234e-05, 7.191600000000173e-05, 7.163900000000181e-05, 7.233400000000029e-05, 7.209700000000013e-05, 7.217999999999808e-05, 7.182000000000022e-05, 7.176400000000194e-05, 7.227799999999854e-05, 7.204199999999786e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.148" endtime="20201029 18:15:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.143" endtime="20201029 18:15:18.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.154" endtime="20201029 18:15:18.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.152" endtime="20201029 18:15:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.151" endtime="20201029 18:15:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.793" endtime="20201029 18:15:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.792" endtime="20201029 18:15:18.175"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.183" endtime="20201029 18:15:18.202"></status>
</kw>
<msg timestamp="20201029 18:15:18.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.182" endtime="20201029 18:15:18.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.204" endtime="20201029 18:15:18.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.206" endtime="20201029 18:15:18.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.179" endtime="20201029 18:15:18.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.177" endtime="20201029 18:15:18.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.215" endtime="20201029 18:15:18.500"></status>
</kw>
<msg timestamp="20201029 18:15:18.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.214" endtime="20201029 18:15:18.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.505" endtime="20201029 18:15:18.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.513" endtime="20201029 18:15:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.211" endtime="20201029 18:15:18.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.209" endtime="20201029 18:15:18.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.520" level="INFO">${RESULT} = [{'diff': 7.334699999999791e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.337500000000052e-05}, {'diff': 7.27499999999999e-05}, {'diff': 7.26110000000002e-05}, {'diff': 7.301399999999972e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:18.516" endtime="20201029 18:15:18.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.524" level="INFO">${ACCURACY} = {'diff': [7.334699999999791e-05, 7.300000000000015e-05, 7.337500000000052e-05, 7.27499999999999e-05, 7.26110000000002e-05, 7.301399999999972e-05, 7.284800000000036e-05, 7.316700000000245e-05, 7.304199...</msg>
<status status="PASS" starttime="20201029 18:15:18.521" endtime="20201029 18:15:18.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.529" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.528" endtime="20201029 18:15:18.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.532" level="INFO">VALUE: [7.334699999999791e-05, 7.300000000000015e-05, 7.337500000000052e-05, 7.27499999999999e-05, 7.26110000000002e-05, 7.301399999999972e-05, 7.284800000000036e-05, 7.316700000000245e-05, 7.304199999999886e-05, 7.252799999999879e-05, 7.313899999999984e-05, 7.333400000000129e-05, 7.344499999999837e-05, 7.305499999999895e-05, 7.288899999999959e-05, 7.254200000000183e-05, 7.320799999999822e-05, 7.337500000000052e-05, 7.287500000000002e-05, 7.286100000000045e-05, 7.336099999999748e-05, 7.329099999999963e-05, 7.340200000000019e-05, 7.302699999999981e-05, 7.263900000000281e-05, 7.252799999999879e-05, 7.273600000000033e-05, 7.33049999999992e-05, 7.291699999999873e-05, 7.333300000000181e-05, 7.263899999999934e-05, 7.302799999999929e-05, 7.287500000000002e-05, 7.313900000000331e-05, 7.272199999999729e-05, 7.251399999999922e-05, 7.327799999999954e-05, 7.329199999999911e-05, 7.315299999999941e-05, 7.322199999999779e-05, 7.300000000000015e-05, 7.351400000000022e-05, 7.309700000000113e-05, 7.326399999999997e-05, 7.270900000000066e-05, 7.341699999999923e-05, 7.320900000000116e-05, 7.347199999999804e-05, 7.327700000000006e-05, 7.333300000000181e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.530" endtime="20201029 18:15:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.525" endtime="20201029 18:15:18.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.538" endtime="20201029 18:15:18.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.536" endtime="20201029 18:15:18.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.535" endtime="20201029 18:15:18.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.176" endtime="20201029 18:15:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.175" endtime="20201029 18:15:18.559"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.567" endtime="20201029 18:15:18.586"></status>
</kw>
<msg timestamp="20201029 18:15:18.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.566" endtime="20201029 18:15:18.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.587" endtime="20201029 18:15:18.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.590" endtime="20201029 18:15:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.563" endtime="20201029 18:15:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.561" endtime="20201029 18:15:18.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.599" endtime="20201029 18:15:18.886"></status>
</kw>
<msg timestamp="20201029 18:15:18.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.597" endtime="20201029 18:15:18.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.890" endtime="20201029 18:15:18.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.898" endtime="20201029 18:15:18.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.595" endtime="20201029 18:15:18.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.593" endtime="20201029 18:15:18.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.904" level="INFO">${RESULT} = [{'diff': 7.459799999999864e-05}, {'diff': 7.390200000000069e-05}, {'diff': 7.402800000000029e-05}, {'diff': 7.365299999999991e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.433399999999882e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:18.901" endtime="20201029 18:15:18.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.910" level="INFO">${ACCURACY} = {'diff': [7.459799999999864e-05, 7.390200000000069e-05, 7.402800000000029e-05, 7.365299999999991e-05, 7.381899999999927e-05, 7.433399999999882e-05, 7.412500000000127e-05, 7.438899999999762e-05, 7.4318...</msg>
<status status="PASS" starttime="20201029 18:15:18.905" endtime="20201029 18:15:18.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.914" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.913" endtime="20201029 18:15:18.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.916" level="INFO">VALUE: [7.459799999999864e-05, 7.390200000000069e-05, 7.402800000000029e-05, 7.365299999999991e-05, 7.381899999999927e-05, 7.433399999999882e-05, 7.412500000000127e-05, 7.438899999999762e-05, 7.431899999999977e-05, 7.409699999999866e-05, 7.419400000000312e-05, 7.395800000000244e-05, 7.412500000000127e-05, 7.447199999999904e-05, 7.416699999999998e-05, 7.40829999999991e-05, 7.40829999999991e-05, 7.438799999999815e-05, 7.391600000000026e-05, 7.395799999999897e-05, 7.394499999999887e-05, 7.388900000000059e-05, 7.427800000000054e-05, 7.373600000000133e-05, 7.400000000000115e-05, 7.395799999999897e-05, 7.359700000000163e-05, 7.434699999999891e-05, 7.437500000000152e-05, 7.44439999999999e-05, 7.369499999999862e-05, 7.406899999999952e-05, 7.40829999999991e-05, 7.419399999999965e-05, 7.415300000000041e-05, 7.358300000000206e-05, 7.426400000000097e-05, 7.431899999999977e-05, 7.418000000000008e-05, 7.37500000000009e-05, 7.44439999999999e-05, 7.370800000000219e-05, 7.422199999999879e-05, 7.447200000000251e-05, 7.362500000000077e-05, 7.397200000000201e-05, 7.402700000000081e-05, 7.413900000000084e-05, 7.419399999999965e-05, 7.429200000000011e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.915" endtime="20201029 18:15:18.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.911" endtime="20201029 18:15:18.918"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.921" endtime="20201029 18:15:18.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.920" endtime="20201029 18:15:18.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.919" endtime="20201029 18:15:18.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.560" endtime="20201029 18:15:18.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.559" endtime="20201029 18:15:18.942"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.951" endtime="20201029 18:15:18.969"></status>
</kw>
<msg timestamp="20201029 18:15:18.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.949" endtime="20201029 18:15:18.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.971" endtime="20201029 18:15:18.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.973" endtime="20201029 18:15:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.947" endtime="20201029 18:15:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.945" endtime="20201029 18:15:18.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.982" endtime="20201029 18:15:19.271"></status>
</kw>
<msg timestamp="20201029 18:15:19.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.981" endtime="20201029 18:15:19.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.275" endtime="20201029 18:15:19.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.283" endtime="20201029 18:15:19.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.978" endtime="20201029 18:15:19.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.976" endtime="20201029 18:15:19.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.290" level="INFO">${RESULT} = [{'diff': 7.519400000000065e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.500000000000215e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.508399999999957e-05}, {'diff': 7.53890000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:19.287" endtime="20201029 18:15:19.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.294" level="INFO">${ACCURACY} = {'diff': [7.519400000000065e-05, 7.474999999999843e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.508399999999957e-05, 7.53890000000021e-05, 7.459699999999916e-05, 7.497199999999954e-05, 7.46530...</msg>
<status status="PASS" starttime="20201029 18:15:19.291" endtime="20201029 18:15:19.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.298" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.297" endtime="20201029 18:15:19.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.301" level="INFO">VALUE: [7.519400000000065e-05, 7.474999999999843e-05, 7.500000000000215e-05, 7.501399999999825e-05, 7.508399999999957e-05, 7.53890000000021e-05, 7.459699999999916e-05, 7.497199999999954e-05, 7.465300000000091e-05, 7.470799999999972e-05, 7.527800000000154e-05, 7.538899999999862e-05, 7.534699999999991e-05, 7.523599999999936e-05, 7.470899999999919e-05, 7.537499999999905e-05, 7.484699999999941e-05, 7.502799999999782e-05, 7.497200000000301e-05, 7.545800000000047e-05, 7.468100000000005e-05, 7.495899999999944e-05, 7.533299999999687e-05, 7.481900000000027e-05, 7.491600000000126e-05, 7.469500000000309e-05, 7.513800000000237e-05, 7.494499999999987e-05, 7.463899999999787e-05, 7.51379999999989e-05, 7.50830000000001e-05, 7.547200000000004e-05, 7.451400000000122e-05, 7.518000000000108e-05, 7.536099999999948e-05, 7.540199999999872e-05, 7.509699999999966e-05, 7.48050000000007e-05, 7.472199999999929e-05, 7.4763999999998e-05, 7.470799999999972e-05, 7.458399999999907e-05, 7.4763999999998e-05, 7.524999999999893e-05, 7.506900000000052e-05, 7.477800000000104e-05, 7.537499999999905e-05, 7.490200000000169e-05, 7.538899999999862e-05, 7.53050000000012e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.300" endtime="20201029 18:15:19.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.295" endtime="20201029 18:15:19.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.306" endtime="20201029 18:15:19.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.304" endtime="20201029 18:15:19.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.303" endtime="20201029 18:15:19.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.943" endtime="20201029 18:15:19.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.943" endtime="20201029 18:15:19.326"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.335" endtime="20201029 18:15:19.354"></status>
</kw>
<msg timestamp="20201029 18:15:19.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.334" endtime="20201029 18:15:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.356" endtime="20201029 18:15:19.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.358" endtime="20201029 18:15:19.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.331" endtime="20201029 18:15:19.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.329" endtime="20201029 18:15:19.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.367" endtime="20201029 18:15:19.652"></status>
</kw>
<msg timestamp="20201029 18:15:19.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.366" endtime="20201029 18:15:19.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.656" endtime="20201029 18:15:19.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.665" endtime="20201029 18:15:19.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.363" endtime="20201029 18:15:19.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.361" endtime="20201029 18:15:19.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.671" level="INFO">${RESULT} = [{'diff': 7.613899999999937e-05}, {'diff': 7.594500000000087e-05}, {'diff': 7.551399999999875e-05}, {'diff': 7.563899999999887e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.592999999999836e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:19.668" endtime="20201029 18:15:19.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.675" level="INFO">${ACCURACY} = {'diff': [7.613899999999937e-05, 7.594500000000087e-05, 7.551399999999875e-05, 7.563899999999887e-05, 7.61249999999998e-05, 7.592999999999836e-05, 7.563899999999887e-05, 7.604099999999892e-05, 7.60419...</msg>
<status status="PASS" starttime="20201029 18:15:19.672" endtime="20201029 18:15:19.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.680" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.679" endtime="20201029 18:15:19.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.682" level="INFO">VALUE: [7.613899999999937e-05, 7.594500000000087e-05, 7.551399999999875e-05, 7.563899999999887e-05, 7.61249999999998e-05, 7.592999999999836e-05, 7.563899999999887e-05, 7.604099999999892e-05, 7.604199999999839e-05, 7.561199999999921e-05, 7.586099999999998e-05, 7.634700000000091e-05, 7.552800000000179e-05, 7.622200000000079e-05, 7.64029999999992e-05, 7.64029999999992e-05, 7.620800000000122e-05, 7.588899999999912e-05, 7.56249999999993e-05, 7.597200000000054e-05, 7.569500000000062e-05, 7.634700000000091e-05, 7.620900000000069e-05, 7.637500000000005e-05, 7.620799999999775e-05, 7.601299999999978e-05, 7.602799999999882e-05, 7.56110000000032e-05, 7.591699999999826e-05, 7.552699999999885e-05, 7.638899999999962e-05, 7.630499999999873e-05, 7.633299999999787e-05, 7.554099999999841e-05, 7.559700000000016e-05, 7.570800000000072e-05, 7.581999999999728e-05, 7.624999999999993e-05, 7.60830000000011e-05, 7.615299999999894e-05, 7.590300000000216e-05, 7.611100000000023e-05, 7.619400000000165e-05, 7.59029999999987e-05, 7.551299999999928e-05, 7.608400000000057e-05, 7.606899999999805e-05, 7.636099999999701e-05, 7.5763999999999e-05, 7.619499999999765e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.681" endtime="20201029 18:15:19.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.676" endtime="20201029 18:15:19.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.688" endtime="20201029 18:15:19.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.686" endtime="20201029 18:15:19.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.685" endtime="20201029 18:15:19.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.327" endtime="20201029 18:15:19.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.327" endtime="20201029 18:15:19.708"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.717" endtime="20201029 18:15:19.735"></status>
</kw>
<msg timestamp="20201029 18:15:19.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.715" endtime="20201029 18:15:19.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.737" endtime="20201029 18:15:19.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.739" endtime="20201029 18:15:19.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.713" endtime="20201029 18:15:19.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.711" endtime="20201029 18:15:19.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.749" endtime="20201029 18:15:20.054"></status>
</kw>
<msg timestamp="20201029 18:15:20.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.746" endtime="20201029 18:15:20.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.058" endtime="20201029 18:15:20.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.066" endtime="20201029 18:15:20.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.744" endtime="20201029 18:15:20.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.742" endtime="20201029 18:15:20.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.073" level="INFO">${RESULT} = [{'diff': 7.7457999999999e-05}, {'diff': 7.691599999999979e-05}, {'diff': 7.727800000000007e-05}, {'diff': 7.705499999999949e-05}, {'diff': 7.669400000000215e-05}, {'diff': 7.720899999999822e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:20.069" endtime="20201029 18:15:20.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.078" level="INFO">${ACCURACY} = {'diff': [7.7457999999999e-05, 7.691599999999979e-05, 7.727800000000007e-05, 7.705499999999949e-05, 7.669400000000215e-05, 7.720899999999822e-05, 7.658299999999812e-05, 7.713900000000037e-05, 7.704099...</msg>
<status status="PASS" starttime="20201029 18:15:20.074" endtime="20201029 18:15:20.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.082" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.081" endtime="20201029 18:15:20.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.084" level="INFO">VALUE: [7.7457999999999e-05, 7.691599999999979e-05, 7.727800000000007e-05, 7.705499999999949e-05, 7.669400000000215e-05, 7.720899999999822e-05, 7.658299999999812e-05, 7.713900000000037e-05, 7.704099999999992e-05, 7.683400000000132e-05, 7.665299999999944e-05, 7.66250000000003e-05, 7.71250000000008e-05, 7.74449999999989e-05, 7.723700000000083e-05, 7.65969999999977e-05, 7.733300000000234e-05, 7.744399999999943e-05, 7.719399999999918e-05, 7.65969999999977e-05, 7.747199999999857e-05, 7.669499999999815e-05, 7.705499999999949e-05, 7.713900000000037e-05, 7.708299999999862e-05, 7.748600000000161e-05, 7.683299999999837e-05, 7.70830000000021e-05, 7.681900000000227e-05, 7.677799999999957e-05, 7.69029999999997e-05, 7.748600000000161e-05, 7.738900000000062e-05, 7.651399999999975e-05, 7.733299999999887e-05, 7.738900000000062e-05, 7.663899999999987e-05, 7.651399999999975e-05, 7.723600000000136e-05, 7.748600000000161e-05, 7.734700000000191e-05, 7.708400000000157e-05, 7.738900000000062e-05, 7.722199999999832e-05, 7.7457999999999e-05, 7.6764e-05, 7.674999999999696e-05, 7.745800000000247e-05, 7.70830000000021e-05, 7.669399999999868e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.083" endtime="20201029 18:15:20.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.078" endtime="20201029 18:15:20.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.089" endtime="20201029 18:15:20.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.088" endtime="20201029 18:15:20.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.087" endtime="20201029 18:15:20.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.709" endtime="20201029 18:15:20.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.709" endtime="20201029 18:15:20.110"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.118" endtime="20201029 18:15:20.137"></status>
</kw>
<msg timestamp="20201029 18:15:20.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.117" endtime="20201029 18:15:20.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.138" endtime="20201029 18:15:20.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.141" endtime="20201029 18:15:20.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.114" endtime="20201029 18:15:20.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.112" endtime="20201029 18:15:20.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.151" endtime="20201029 18:15:20.440"></status>
</kw>
<msg timestamp="20201029 18:15:20.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.149" endtime="20201029 18:15:20.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021395722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.444" endtime="20201029 18:15:20.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.453" endtime="20201029 18:15:20.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.146" endtime="20201029 18:15:20.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.144" endtime="20201029 18:15:20.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.459" level="INFO">${RESULT} = [{'diff': 7.811100000000223e-05}, {'diff': 7.801400000000125e-05}, {'diff': 7.843000000000086e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.773600000000186e-05}, {'diff': 7.819499999999965e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:20.456" endtime="20201029 18:15:20.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.463" level="INFO">${ACCURACY} = {'diff': [7.811100000000223e-05, 7.801400000000125e-05, 7.843000000000086e-05, 7.788900000000112e-05, 7.773600000000186e-05, 7.819499999999965e-05, 7.802799999999735e-05, 7.756999999999903e-05, 7.7639...</msg>
<status status="PASS" starttime="20201029 18:15:20.460" endtime="20201029 18:15:20.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.468" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.467" endtime="20201029 18:15:20.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.470" level="INFO">VALUE: [7.811100000000223e-05, 7.801400000000125e-05, 7.843000000000086e-05, 7.788900000000112e-05, 7.773600000000186e-05, 7.819499999999965e-05, 7.802799999999735e-05, 7.756999999999903e-05, 7.763900000000087e-05, 7.834699999999944e-05, 7.779100000000067e-05, 7.756899999999955e-05, 7.775000000000143e-05, 7.794399999999993e-05, 7.8151999999998e-05, 7.781999999999928e-05, 7.811099999999876e-05, 7.837499999999858e-05, 7.844400000000043e-05, 7.829200000000064e-05, 7.834799999999892e-05, 7.801300000000178e-05, 7.750000000000118e-05, 7.79449999999994e-05, 7.783299999999937e-05, 7.770799999999925e-05, 7.826300000000203e-05, 7.786100000000198e-05, 7.791700000000026e-05, 7.812499999999833e-05, 7.750000000000118e-05, 7.781999999999928e-05, 7.79579999999995e-05, 7.772199999999882e-05, 7.806900000000006e-05, 7.813900000000137e-05, 7.748600000000161e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.822199999999932e-05, 7.819400000000018e-05, 7.786099999999851e-05, 7.838900000000162e-05, 7.76250000000013e-05, 7.819499999999965e-05, 7.827800000000107e-05, 7.805599999999996e-05, 7.82909999999977e-05, 7.770800000000272e-05, 7.845899999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.469" endtime="20201029 18:15:20.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.464" endtime="20201029 18:15:20.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.475" endtime="20201029 18:15:20.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.473" endtime="20201029 18:15:20.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.472" endtime="20201029 18:15:20.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.111" endtime="20201029 18:15:20.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.110" endtime="20201029 18:15:20.496"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.504" endtime="20201029 18:15:20.523"></status>
</kw>
<msg timestamp="20201029 18:15:20.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.503" endtime="20201029 18:15:20.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.525" endtime="20201029 18:15:20.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.527" endtime="20201029 18:15:20.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.500" endtime="20201029 18:15:20.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.498" endtime="20201029 18:15:20.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.536" endtime="20201029 18:15:20.824"></status>
</kw>
<msg timestamp="20201029 18:15:20.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.535" endtime="20201029 18:15:20.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.828" endtime="20201029 18:15:20.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.837" endtime="20201029 18:15:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.532" endtime="20201029 18:15:20.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.531" endtime="20201029 18:15:20.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.844" level="INFO">${RESULT} = [{'diff': 7.965299999999897e-05}, {'diff': 7.940299999999872e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.904200000000139e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.911099999999976e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:20.841" endtime="20201029 18:15:20.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.849" level="INFO">${ACCURACY} = {'diff': [7.965299999999897e-05, 7.940299999999872e-05, 7.923599999999989e-05, 7.904200000000139e-05, 7.899999999999921e-05, 7.911099999999976e-05, 7.880500000000124e-05, 7.898599999999964e-05, 7.9070...</msg>
<status status="PASS" starttime="20201029 18:15:20.845" endtime="20201029 18:15:20.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.854" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.853" endtime="20201029 18:15:20.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.857" level="INFO">VALUE: [7.965299999999897e-05, 7.940299999999872e-05, 7.923599999999989e-05, 7.904200000000139e-05, 7.899999999999921e-05, 7.911099999999976e-05, 7.880500000000124e-05, 7.898599999999964e-05, 7.907000000000053e-05, 7.892999999999789e-05, 7.881899999999734e-05, 7.862499999999883e-05, 7.907000000000053e-05, 7.848599999999914e-05, 7.924999999999946e-05, 7.869500000000015e-05, 7.894399999999746e-05, 7.898599999999964e-05, 7.904200000000139e-05, 7.85839999999996e-05, 7.866700000000101e-05, 7.874999999999896e-05, 7.869500000000015e-05, 7.863799999999893e-05, 7.920799999999728e-05, 7.93190000000013e-05, 7.899999999999921e-05, 7.854099999999795e-05, 7.94450000000009e-05, 7.852800000000132e-05, 7.894399999999746e-05, 7.870800000000025e-05, 7.9151999999999e-05, 7.873600000000286e-05, 7.869400000000068e-05, 7.911099999999976e-05, 7.866700000000101e-05, 7.933300000000088e-05, 7.91250000000028e-05, 7.857000000000003e-05, 7.932000000000078e-05, 7.918100000000108e-05, 7.944399999999796e-05, 7.924999999999946e-05, 7.911200000000271e-05, 7.923599999999989e-05, 7.886200000000246e-05, 7.918100000000108e-05, 7.89450000000004e-05, 7.857000000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.856" endtime="20201029 18:15:20.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.850" endtime="20201029 18:15:20.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.863" endtime="20201029 18:15:20.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.861" endtime="20201029 18:15:20.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.860" endtime="20201029 18:15:20.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.496" endtime="20201029 18:15:20.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.496" endtime="20201029 18:15:20.884"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.892" endtime="20201029 18:15:20.911"></status>
</kw>
<msg timestamp="20201029 18:15:20.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.891" endtime="20201029 18:15:20.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.912" endtime="20201029 18:15:20.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.914" endtime="20201029 18:15:20.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.888" endtime="20201029 18:15:20.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.886" endtime="20201029 18:15:20.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.923" endtime="20201029 18:15:21.210"></status>
</kw>
<msg timestamp="20201029 18:15:21.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021388, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:20.922" endtime="20201029 18:15:21.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021388, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468625, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:21.214" endtime="20201029 18:15:21.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.222" endtime="20201029 18:15:21.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.919" endtime="20201029 18:15:21.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.918" endtime="20201029 18:15:21.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.228" level="INFO">${RESULT} = [{'diff': 8.062500000000083e-05}, {'diff': 8.005600000000196e-05}, {'diff': 8.043099999999886e-05}, {'diff': 7.986100000000051e-05}, {'diff': 8.030499999999927e-05}, {'diff': 7.973600000000039e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:21.225" endtime="20201029 18:15:21.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.233" level="INFO">${ACCURACY} = {'diff': [8.062500000000083e-05, 8.005600000000196e-05, 8.043099999999886e-05, 7.986100000000051e-05, 8.030499999999927e-05, 7.973600000000039e-05, 7.945799999999753e-05, 7.955600000000146e-05, 8.0332...</msg>
<status status="PASS" starttime="20201029 18:15:21.229" endtime="20201029 18:15:21.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.238" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.237" endtime="20201029 18:15:21.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.240" level="INFO">VALUE: [8.062500000000083e-05, 8.005600000000196e-05, 8.043099999999886e-05, 7.986100000000051e-05, 8.030499999999927e-05, 7.973600000000039e-05, 7.945799999999753e-05, 7.955600000000146e-05, 8.03329999999984e-05, 7.952699999999938e-05, 8.030600000000221e-05, 7.980599999999824e-05, 8.026300000000056e-05, 8.020800000000175e-05, 7.980499999999877e-05, 7.966700000000201e-05, 8.034699999999798e-05, 7.98190000000018e-05, 8.00970000000012e-05, 8.038900000000015e-05, 8.044400000000243e-05, 8.000000000000021e-05, 8.018099999999861e-05, 7.969500000000115e-05, 8.012500000000033e-05, 7.969399999999821e-05, 7.952800000000232e-05, 7.96519999999995e-05, 7.957000000000103e-05, 7.949999999999971e-05, 7.974999999999996e-05, 7.963900000000287e-05, 7.998599999999717e-05, 8.01389999999999e-05, 8.018099999999861e-05, 7.97779999999991e-05, 8.01389999999999e-05, 7.998600000000064e-05, 8.000000000000021e-05, 7.95970000000007e-05, 8.038900000000015e-05, 8.011100000000076e-05, 8.019500000000165e-05, 7.976399999999953e-05, 8.005499999999902e-05, 8.02779999999996e-05, 7.969399999999821e-05, 8.043099999999886e-05, 8.019500000000165e-05, 8.015299999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.239" endtime="20201029 18:15:21.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.234" endtime="20201029 18:15:21.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.250" endtime="20201029 18:15:21.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.248" endtime="20201029 18:15:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.247" endtime="20201029 18:15:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.885" endtime="20201029 18:15:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.884" endtime="20201029 18:15:21.270"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.279" endtime="20201029 18:15:21.297"></status>
</kw>
<msg timestamp="20201029 18:15:21.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.277" endtime="20201029 18:15:21.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.299" endtime="20201029 18:15:21.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.301" endtime="20201029 18:15:21.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.275" endtime="20201029 18:15:21.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.273" endtime="20201029 18:15:21.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.310" endtime="20201029 18:15:21.605"></status>
</kw>
<msg timestamp="20201029 18:15:21.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.308" endtime="20201029 18:15:21.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021352514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.610" endtime="20201029 18:15:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.618" endtime="20201029 18:15:21.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.306" endtime="20201029 18:15:21.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.304" endtime="20201029 18:15:21.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.624" level="INFO">${RESULT} = [{'diff': 8.130599999999974e-05}, {'diff': 8.118000000000014e-05}, {'diff': 8.054199999999942e-05}, {'diff': 8.062500000000083e-05}, {'diff': 8.130500000000027e-05}, {'diff': 8.052700000000038e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:21.621" endtime="20201029 18:15:21.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.629" level="INFO">${ACCURACY} = {'diff': [8.130599999999974e-05, 8.118000000000014e-05, 8.054199999999942e-05, 8.062500000000083e-05, 8.130500000000027e-05, 8.052700000000038e-05, 8.122199999999885e-05, 8.125000000000146e-05, 8.1264...</msg>
<status status="PASS" starttime="20201029 18:15:21.625" endtime="20201029 18:15:21.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.633" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.632" endtime="20201029 18:15:21.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.636" level="INFO">VALUE: [8.130599999999974e-05, 8.118000000000014e-05, 8.054199999999942e-05, 8.062500000000083e-05, 8.130500000000027e-05, 8.052700000000038e-05, 8.122199999999885e-05, 8.125000000000146e-05, 8.126400000000103e-05, 8.058399999999813e-05, 8.049999999999724e-05, 8.086099999999805e-05, 8.091600000000032e-05, 8.136099999999855e-05, 8.06390000000004e-05, 8.090300000000022e-05, 8.084700000000195e-05, 8.130500000000027e-05, 8.056899999999909e-05, 8.055499999999952e-05, 8.054199999999942e-05, 8.079199999999967e-05, 8.093099999999936e-05, 8.104199999999992e-05, 8.105500000000002e-05, 8.068099999999911e-05, 8.06109999999978e-05, 8.075000000000096e-05, 8.12230000000018e-05, 8.101400000000078e-05, 8.14719999999991e-05, 8.097200000000207e-05, 8.061100000000126e-05, 8.052700000000038e-05, 8.069500000000215e-05, 8.143000000000039e-05, 8.101400000000078e-05, 8.062500000000083e-05, 8.111200000000124e-05, 8.131999999999931e-05, 8.075000000000096e-05, 8.143099999999986e-05, 8.093099999999936e-05, 8.124999999999799e-05, 8.10970000000022e-05, 8.137500000000158e-05, 8.066699999999954e-05, 8.137500000000158e-05, 8.075000000000096e-05, 8.13329999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.634" endtime="20201029 18:15:21.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.630" endtime="20201029 18:15:21.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.641" endtime="20201029 18:15:21.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.639" endtime="20201029 18:15:21.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.638" endtime="20201029 18:15:21.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.271" endtime="20201029 18:15:21.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.271" endtime="20201029 18:15:21.661"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.670" endtime="20201029 18:15:21.690"></status>
</kw>
<msg timestamp="20201029 18:15:21.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.669" endtime="20201029 18:15:21.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.691" endtime="20201029 18:15:21.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.694" endtime="20201029 18:15:21.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.666" endtime="20201029 18:15:21.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.664" endtime="20201029 18:15:21.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.703" endtime="20201029 18:15:21.989"></status>
</kw>
<msg timestamp="20201029 18:15:21.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.701" endtime="20201029 18:15:21.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022571764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.994" endtime="20201029 18:15:22.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.002" endtime="20201029 18:15:22.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.699" endtime="20201029 18:15:22.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.697" endtime="20201029 18:15:22.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.011" level="INFO">${RESULT} = [{'diff': 8.248599999999967e-05}, {'diff': 8.180600000000024e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.161100000000227e-05}, {'diff': 8.231900000000084e-05}, {'diff': 8.22919999999977e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:22.005" endtime="20201029 18:15:22.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.018" level="INFO">${ACCURACY} = {'diff': [8.248599999999967e-05, 8.180600000000024e-05, 8.199999999999874e-05, 8.161100000000227e-05, 8.231900000000084e-05, 8.22919999999977e-05, 8.193000000000089e-05, 8.175000000000196e-05, 8.21950...</msg>
<status status="PASS" starttime="20201029 18:15:22.013" endtime="20201029 18:15:22.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.028" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.025" endtime="20201029 18:15:22.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.033" level="INFO">VALUE: [8.248599999999967e-05, 8.180600000000024e-05, 8.199999999999874e-05, 8.161100000000227e-05, 8.231900000000084e-05, 8.22919999999977e-05, 8.193000000000089e-05, 8.175000000000196e-05, 8.219500000000018e-05, 8.152800000000085e-05, 8.21109999999993e-05, 8.199999999999874e-05, 8.199999999999874e-05, 8.166700000000054e-05, 8.179099999999773e-05, 8.186100000000252e-05, 8.225000000000246e-05, 8.230600000000074e-05, 8.222199999999985e-05, 8.213899999999844e-05, 8.174999999999849e-05, 8.168000000000064e-05, 8.241600000000182e-05, 8.16109999999988e-05, 8.172200000000282e-05, 8.168100000000011e-05, 8.156900000000009e-05, 8.162499999999837e-05, 8.207000000000006e-05, 8.244500000000043e-05, 8.212500000000234e-05, 8.198599999999917e-05, 8.176399999999806e-05, 8.205500000000102e-05, 8.222199999999985e-05, 8.148599999999867e-05, 8.180500000000077e-05, 8.168000000000064e-05, 8.173599999999892e-05, 8.205500000000102e-05, 8.216600000000157e-05, 8.223700000000236e-05, 8.150000000000171e-05, 8.18049999999973e-05, 8.240300000000172e-05, 8.198599999999917e-05, 8.173599999999892e-05, 8.198599999999917e-05, 8.177799999999763e-05, 8.188900000000165e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.030" endtime="20201029 18:15:22.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.021" endtime="20201029 18:15:22.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.042" endtime="20201029 18:15:22.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.040" endtime="20201029 18:15:22.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.039" endtime="20201029 18:15:22.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.662" endtime="20201029 18:15:22.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.662" endtime="20201029 18:15:22.063"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.071" endtime="20201029 18:15:22.090"></status>
</kw>
<msg timestamp="20201029 18:15:22.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.070" endtime="20201029 18:15:22.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.091" endtime="20201029 18:15:22.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.094" endtime="20201029 18:15:22.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.067" endtime="20201029 18:15:22.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.065" endtime="20201029 18:15:22.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.103" endtime="20201029 18:15:22.388"></status>
</kw>
<msg timestamp="20201029 18:15:22.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.101" endtime="20201029 18:15:22.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.392" endtime="20201029 18:15:22.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.400" endtime="20201029 18:15:22.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.099" endtime="20201029 18:15:22.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.097" endtime="20201029 18:15:22.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.407" level="INFO">${RESULT} = [{'diff': 8.358399999999766e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.266700000000154e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.27919999999982e-05}, {'diff': 8.308400000000063e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:22.404" endtime="20201029 18:15:22.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.412" level="INFO">${ACCURACY} = {'diff': [8.358399999999766e-05, 8.337500000000012e-05, 8.266700000000154e-05, 8.286100000000005e-05, 8.27919999999982e-05, 8.308400000000063e-05, 8.291699999999833e-05, 8.252799999999838e-05, 8.34309...</msg>
<status status="PASS" starttime="20201029 18:15:22.408" endtime="20201029 18:15:22.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.416" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.415" endtime="20201029 18:15:22.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.419" level="INFO">VALUE: [8.358399999999766e-05, 8.337500000000012e-05, 8.266700000000154e-05, 8.286100000000005e-05, 8.27919999999982e-05, 8.308400000000063e-05, 8.291699999999833e-05, 8.252799999999838e-05, 8.34309999999984e-05, 8.320800000000128e-05, 8.318099999999815e-05, 8.33330000000014e-05, 8.259700000000023e-05, 8.248700000000261e-05, 8.265300000000197e-05, 8.340299999999926e-05, 8.324999999999999e-05, 8.291699999999833e-05, 8.341599999999935e-05, 8.32919999999987e-05, 8.327799999999913e-05, 8.302799999999888e-05, 8.277799999999863e-05, 8.3152999999999e-05, 8.322300000000032e-05, 8.305600000000149e-05, 8.323600000000042e-05, 8.316699999999858e-05, 8.322200000000085e-05, 8.3152999999999e-05, 8.302800000000235e-05, 8.288899999999919e-05, 8.323600000000042e-05, 8.24720000000001e-05, 8.316700000000204e-05, 8.248599999999967e-05, 8.340299999999926e-05, 8.338899999999969e-05, 8.269400000000121e-05, 8.304200000000192e-05, 8.259700000000023e-05, 8.315300000000247e-05, 8.287499999999962e-05, 8.269400000000121e-05, 8.254200000000142e-05, 8.340199999999978e-05, 8.259699999999676e-05, 8.316699999999858e-05, 8.309700000000073e-05, 8.340299999999926e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.418" endtime="20201029 18:15:22.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.413" endtime="20201029 18:15:22.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.424" endtime="20201029 18:15:22.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.422" endtime="20201029 18:15:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.421" endtime="20201029 18:15:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.064" endtime="20201029 18:15:22.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.063" endtime="20201029 18:15:22.445"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.453" endtime="20201029 18:15:22.472"></status>
</kw>
<msg timestamp="20201029 18:15:22.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.452" endtime="20201029 18:15:22.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.474" endtime="20201029 18:15:22.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.476" endtime="20201029 18:15:22.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.449" endtime="20201029 18:15:22.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.447" endtime="20201029 18:15:22.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.485" endtime="20201029 18:15:22.775"></status>
</kw>
<msg timestamp="20201029 18:15:22.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.484" endtime="20201029 18:15:22.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.779" endtime="20201029 18:15:22.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.787" endtime="20201029 18:15:22.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.481" endtime="20201029 18:15:22.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.480" endtime="20201029 18:15:22.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.794" level="INFO">${RESULT} = [{'diff': 8.432000000000231e-05}, {'diff': 8.431899999999937e-05}, {'diff': 8.376300000000059e-05}, {'diff': 8.354099999999948e-05}, {'diff': 8.44309999999994e-05}, {'diff': 8.402799999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:22.791" endtime="20201029 18:15:22.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.798" level="INFO">${ACCURACY} = {'diff': [8.432000000000231e-05, 8.431899999999937e-05, 8.376300000000059e-05, 8.354099999999948e-05, 8.44309999999994e-05, 8.402799999999988e-05, 8.369400000000221e-05, 8.402799999999988e-05, 8.40130...</msg>
<status status="PASS" starttime="20201029 18:15:22.795" endtime="20201029 18:15:22.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.802" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.801" endtime="20201029 18:15:22.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.805" level="INFO">VALUE: [8.432000000000231e-05, 8.431899999999937e-05, 8.376300000000059e-05, 8.354099999999948e-05, 8.44309999999994e-05, 8.402799999999988e-05, 8.369400000000221e-05, 8.402799999999988e-05, 8.401300000000084e-05, 8.438900000000069e-05, 8.419399999999924e-05, 8.419399999999924e-05, 8.419499999999872e-05, 8.370799999999831e-05, 8.433400000000188e-05, 8.352800000000285e-05, 8.420900000000175e-05, 8.402700000000041e-05, 8.39170000000028e-05, 8.438900000000069e-05, 8.377799999999963e-05, 8.412500000000087e-05, 8.363899999999994e-05, 8.390299999999976e-05, 8.427800000000013e-05, 8.416699999999958e-05, 8.40980000000012e-05, 8.391599999999985e-05, 8.436100000000155e-05, 8.401400000000031e-05, 8.394399999999899e-05, 8.344399999999849e-05, 8.395899999999804e-05, 8.426399999999709e-05, 8.413900000000044e-05, 8.39309999999989e-05, 8.363899999999994e-05, 8.427800000000013e-05, 8.363899999999994e-05, 8.370799999999831e-05, 8.36659999999996e-05, 8.420800000000228e-05, 8.358300000000166e-05, 8.415200000000053e-05, 8.375000000000049e-05, 8.420800000000228e-05, 8.37919999999992e-05, 8.345800000000153e-05, 8.343100000000186e-05, 8.363899999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.804" endtime="20201029 18:15:22.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.799" endtime="20201029 18:15:22.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.810" endtime="20201029 18:15:22.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.808" endtime="20201029 18:15:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.807" endtime="20201029 18:15:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.446" endtime="20201029 18:15:22.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.445" endtime="20201029 18:15:22.831"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.839" endtime="20201029 18:15:22.859"></status>
</kw>
<msg timestamp="20201029 18:15:22.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.838" endtime="20201029 18:15:22.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.860" endtime="20201029 18:15:22.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.863" endtime="20201029 18:15:22.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.835" endtime="20201029 18:15:22.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.833" endtime="20201029 18:15:22.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.872" endtime="20201029 18:15:23.158"></status>
</kw>
<msg timestamp="20201029 18:15:23.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.870" endtime="20201029 18:15:23.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022493847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.163" endtime="20201029 18:15:23.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.171" endtime="20201029 18:15:23.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.868" endtime="20201029 18:15:23.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.866" endtime="20201029 18:15:23.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.177" level="INFO">${RESULT} = [{'diff': 8.536099999999908e-05}, {'diff': 8.452800000000038e-05}, {'diff': 8.484800000000195e-05}, {'diff': 8.468099999999965e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.46110000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:23.174" endtime="20201029 18:15:23.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.182" level="INFO">${ACCURACY} = {'diff': [8.536099999999908e-05, 8.452800000000038e-05, 8.484800000000195e-05, 8.468099999999965e-05, 8.53469999999995e-05, 8.46110000000018e-05, 8.490300000000076e-05, 8.448600000000167e-05, 8.540199...</msg>
<status status="PASS" starttime="20201029 18:15:23.178" endtime="20201029 18:15:23.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.186" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.185" endtime="20201029 18:15:23.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.189" level="INFO">VALUE: [8.536099999999908e-05, 8.452800000000038e-05, 8.484800000000195e-05, 8.468099999999965e-05, 8.53469999999995e-05, 8.46110000000018e-05, 8.490300000000076e-05, 8.448600000000167e-05, 8.540199999999831e-05, 8.534700000000298e-05, 8.46660000000006e-05, 8.466700000000008e-05, 8.540299999999779e-05, 8.541599999999788e-05, 8.454199999999995e-05, 8.541700000000083e-05, 8.522199999999938e-05, 8.527700000000166e-05, 8.495799999999956e-05, 8.495899999999904e-05, 8.540300000000126e-05, 8.463899999999747e-05, 8.533299999999994e-05, 8.474999999999802e-05, 8.484700000000248e-05, 8.526300000000209e-05, 8.46660000000006e-05, 8.519499999999972e-05, 8.49859999999987e-05, 8.47920000000002e-05, 8.522199999999938e-05, 8.465200000000103e-05, 8.509699999999926e-05, 8.501399999999784e-05, 8.522199999999938e-05, 8.515199999999806e-05, 8.458299999999919e-05, 8.526399999999809e-05, 8.469399999999974e-05, 8.540200000000178e-05, 8.4846999999999e-05, 8.459799999999823e-05, 8.5153000000001e-05, 8.4846999999999e-05, 8.522199999999938e-05, 8.515299999999754e-05, 8.51799999999972e-05, 8.451400000000081e-05, 8.501400000000131e-05, 8.502800000000088e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.187" endtime="20201029 18:15:23.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.183" endtime="20201029 18:15:23.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.194" endtime="20201029 18:15:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.193" endtime="20201029 18:15:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.192" endtime="20201029 18:15:23.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.832" endtime="20201029 18:15:23.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.831" endtime="20201029 18:15:23.215"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.224" endtime="20201029 18:15:23.242"></status>
</kw>
<msg timestamp="20201029 18:15:23.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.222" endtime="20201029 18:15:23.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.244" endtime="20201029 18:15:23.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.247" endtime="20201029 18:15:23.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.220" endtime="20201029 18:15:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.218" endtime="20201029 18:15:23.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.255" endtime="20201029 18:15:23.542"></status>
</kw>
<msg timestamp="20201029 18:15:23.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.254" endtime="20201029 18:15:23.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.546" endtime="20201029 18:15:23.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.554" endtime="20201029 18:15:23.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.251" endtime="20201029 18:15:23.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.250" endtime="20201029 18:15:23.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.561" level="INFO">${RESULT} = [{'diff': 8.647200000000063e-05}, {'diff': 8.559799999999923e-05}, {'diff': 8.640199999999931e-05}, {'diff': 8.595800000000056e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.580600000000077e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:23.558" endtime="20201029 18:15:23.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.566" level="INFO">${ACCURACY} = {'diff': [8.647200000000063e-05, 8.559799999999923e-05, 8.640199999999931e-05, 8.595800000000056e-05, 8.611099999999983e-05, 8.580600000000077e-05, 8.569500000000022e-05, 8.594399999999752e-05, 8.6430...</msg>
<status status="PASS" starttime="20201029 18:15:23.562" endtime="20201029 18:15:23.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.570" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.569" endtime="20201029 18:15:23.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.573" level="INFO">VALUE: [8.647200000000063e-05, 8.559799999999923e-05, 8.640199999999931e-05, 8.595800000000056e-05, 8.611099999999983e-05, 8.580600000000077e-05, 8.569500000000022e-05, 8.594399999999752e-05, 8.643000000000192e-05, 8.600000000000274e-05, 8.615299999999854e-05, 8.602799999999841e-05, 8.573600000000292e-05, 8.615299999999854e-05, 8.577800000000163e-05, 8.563899999999847e-05, 8.627799999999866e-05, 8.5847e-05, 8.602799999999841e-05, 8.608300000000069e-05, 8.57920000000012e-05, 8.576399999999859e-05, 8.626399999999909e-05, 8.552799999999791e-05, 8.595900000000004e-05, 8.638899999999922e-05, 8.634799999999998e-05, 8.5847e-05, 8.579199999999773e-05, 8.588900000000219e-05, 8.640300000000226e-05, 8.570899999999979e-05, 8.565199999999856e-05, 8.57920000000012e-05, 8.602799999999841e-05, 8.626299999999962e-05, 8.595799999999709e-05, 8.633400000000041e-05, 8.576400000000206e-05, 8.572199999999988e-05, 8.595800000000056e-05, 8.608400000000016e-05, 8.638900000000269e-05, 8.641599999999888e-05, 8.604200000000145e-05, 8.64730000000001e-05, 8.602800000000188e-05, 8.629099999999876e-05, 8.556900000000062e-05, 8.633400000000041e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.571" endtime="20201029 18:15:23.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.567" endtime="20201029 18:15:23.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.577" endtime="20201029 18:15:23.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.576" endtime="20201029 18:15:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.575" endtime="20201029 18:15:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.216" endtime="20201029 18:15:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.215" endtime="20201029 18:15:23.599"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.608" endtime="20201029 18:15:23.627"></status>
</kw>
<msg timestamp="20201029 18:15:23.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.606" endtime="20201029 18:15:23.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.629" endtime="20201029 18:15:23.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.631" endtime="20201029 18:15:23.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.603" endtime="20201029 18:15:23.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.601" endtime="20201029 18:15:23.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.640" endtime="20201029 18:15:23.927"></status>
</kw>
<msg timestamp="20201029 18:15:23.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.639" endtime="20201029 18:15:23.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022930347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.931" endtime="20201029 18:15:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.939" endtime="20201029 18:15:23.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.636" endtime="20201029 18:15:23.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.634" endtime="20201029 18:15:23.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.946" level="INFO">${RESULT} = [{'diff': 8.766600000000013e-05}, {'diff': 8.645799999999759e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.740200000000031e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.702799999999941e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:23.943" endtime="20201029 18:15:23.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.950" level="INFO">${ACCURACY} = {'diff': [8.766600000000013e-05, 8.645799999999759e-05, 8.645800000000106e-05, 8.740200000000031e-05, 8.645800000000106e-05, 8.702799999999941e-05, 8.697200000000113e-05, 8.663899999999947e-05, 8.6958...</msg>
<status status="PASS" starttime="20201029 18:15:23.947" endtime="20201029 18:15:23.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.955" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.954" endtime="20201029 18:15:23.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.957" level="INFO">VALUE: [8.766600000000013e-05, 8.645799999999759e-05, 8.645800000000106e-05, 8.740200000000031e-05, 8.645800000000106e-05, 8.702799999999941e-05, 8.697200000000113e-05, 8.663899999999947e-05, 8.695800000000156e-05, 8.675000000000002e-05, 8.672199999999741e-05, 8.655500000000205e-05, 8.708299999999822e-05, 8.679199999999873e-05, 8.64860000000002e-05, 8.702799999999941e-05, 8.677799999999916e-05, 8.688899999999972e-05, 8.702799999999941e-05, 8.677799999999916e-05, 8.668099999999818e-05, 8.722199999999791e-05, 8.683400000000091e-05, 8.69310000000019e-05, 8.669399999999827e-05, 8.658400000000066e-05, 8.658300000000119e-05, 8.722199999999791e-05, 8.702799999999941e-05, 8.701399999999984e-05, 8.69730000000006e-05, 8.645800000000106e-05, 8.738900000000022e-05, 8.727799999999966e-05, 8.644400000000149e-05, 8.740299999999979e-05, 8.659700000000076e-05, 8.737500000000065e-05, 8.677800000000263e-05, 8.727700000000019e-05, 8.691599999999938e-05, 8.640299999999879e-05, 8.709699999999779e-05, 8.708300000000169e-05, 8.645800000000106e-05, 8.727799999999966e-05, 8.740299999999979e-05, 8.715200000000006e-05, 8.740299999999979e-05, 8.694500000000147e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.956" endtime="20201029 18:15:23.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.951" endtime="20201029 18:15:23.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.962" endtime="20201029 18:15:23.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.960" endtime="20201029 18:15:23.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.959" endtime="20201029 18:15:23.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.600" endtime="20201029 18:15:23.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.599" endtime="20201029 18:15:23.983"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.991" endtime="20201029 18:15:24.011"></status>
</kw>
<msg timestamp="20201029 18:15:24.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.990" endtime="20201029 18:15:24.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.013" endtime="20201029 18:15:24.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.015" endtime="20201029 18:15:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.987" endtime="20201029 18:15:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.985" endtime="20201029 18:15:24.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.024" endtime="20201029 18:15:24.310"></status>
</kw>
<msg timestamp="20201029 18:15:24.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:24.023" endtime="20201029 18:15:24.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02251975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:24.314" endtime="20201029 18:15:24.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.323" endtime="20201029 18:15:24.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.020" endtime="20201029 18:15:24.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.018" endtime="20201029 18:15:24.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.329" level="INFO">${RESULT} = [{'diff': 8.809700000000226e-05}, {'diff': 8.781900000000287e-05}, {'diff': 8.772200000000188e-05}, {'diff': 8.788800000000124e-05}, {'diff': 8.826399999999762e-05}, {'diff': 8.747299999999764e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.326" endtime="20201029 18:15:24.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.334" level="INFO">${ACCURACY} = {'diff': [8.809700000000226e-05, 8.781900000000287e-05, 8.772200000000188e-05, 8.788800000000124e-05, 8.826399999999762e-05, 8.747299999999764e-05, 8.772199999999841e-05, 8.777800000000016e-05, 8.8278...</msg>
<status status="PASS" starttime="20201029 18:15:24.330" endtime="20201029 18:15:24.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.338" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.337" endtime="20201029 18:15:24.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.340" level="INFO">VALUE: [8.809700000000226e-05, 8.781900000000287e-05, 8.772200000000188e-05, 8.788800000000124e-05, 8.826399999999762e-05, 8.747299999999764e-05, 8.772199999999841e-05, 8.777800000000016e-05, 8.827800000000066e-05, 8.756899999999915e-05, 8.78189999999994e-05, 8.822299999999839e-05, 8.83189999999999e-05, 8.838900000000122e-05, 8.783300000000244e-05, 8.834699999999904e-05, 8.777800000000016e-05, 8.822199999999891e-05, 8.834799999999851e-05, 8.820799999999934e-05, 8.759800000000123e-05, 8.83189999999999e-05, 8.759700000000176e-05, 8.819400000000324e-05, 8.808300000000269e-05, 8.820899999999882e-05, 8.783299999999897e-05, 8.809699999999879e-05, 8.791600000000038e-05, 8.826400000000109e-05, 8.777800000000016e-05, 8.770799999999884e-05, 8.802700000000094e-05, 8.777800000000016e-05, 8.813800000000149e-05, 8.813900000000097e-05, 8.837499999999818e-05, 8.822200000000238e-05, 8.80129999999979e-05, 8.747200000000163e-05, 8.776400000000059e-05, 8.745900000000154e-05, 8.770799999999884e-05, 8.820900000000229e-05, 8.833299999999947e-05, 8.802800000000041e-05, 8.758399999999819e-05, 8.802800000000041e-05, 8.772200000000188e-05, 8.772200000000188e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.339" endtime="20201029 18:15:24.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.334" endtime="20201029 18:15:24.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.346" endtime="20201029 18:15:24.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.345" endtime="20201029 18:15:24.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.344" endtime="20201029 18:15:24.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.984" endtime="20201029 18:15:24.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.983" endtime="20201029 18:15:24.367"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.376" endtime="20201029 18:15:24.395"></status>
</kw>
<msg timestamp="20201029 18:15:24.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.374" endtime="20201029 18:15:24.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.396" endtime="20201029 18:15:24.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.399" endtime="20201029 18:15:24.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.372" endtime="20201029 18:15:24.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.370" endtime="20201029 18:15:24.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.408" endtime="20201029 18:15:24.693"></status>
</kw>
<msg timestamp="20201029 18:15:24.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.406" endtime="20201029 18:15:24.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.697" endtime="20201029 18:15:24.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.706" endtime="20201029 18:15:24.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.403" endtime="20201029 18:15:24.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.402" endtime="20201029 18:15:24.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.712" level="INFO">${RESULT} = [{'diff': 8.915299999999807e-05}, {'diff': 8.941699999999789e-05}, {'diff': 8.940299999999832e-05}, {'diff': 8.884699999999954e-05}, {'diff': 8.845799999999959e-05}, {'diff': 8.909699999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.709" endtime="20201029 18:15:24.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.717" level="INFO">${ACCURACY} = {'diff': [8.915299999999807e-05, 8.941699999999789e-05, 8.940299999999832e-05, 8.884699999999954e-05, 8.845799999999959e-05, 8.909699999999979e-05, 8.920800000000034e-05, 8.908300000000022e-05, 8.9320...</msg>
<status status="PASS" starttime="20201029 18:15:24.713" endtime="20201029 18:15:24.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.722" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.721" endtime="20201029 18:15:24.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.724" level="INFO">VALUE: [8.915299999999807e-05, 8.941699999999789e-05, 8.940299999999832e-05, 8.884699999999954e-05, 8.845799999999959e-05, 8.909699999999979e-05, 8.920800000000034e-05, 8.908300000000022e-05, 8.932000000000037e-05, 8.927699999999872e-05, 8.926400000000209e-05, 8.847199999999916e-05, 8.884699999999954e-05, 8.897199999999966e-05, 8.877800000000116e-05, 8.900000000000227e-05, 8.879200000000073e-05, 8.905600000000055e-05, 8.902799999999794e-05, 8.854200000000048e-05, 8.902699999999847e-05, 8.911099999999936e-05, 8.869499999999975e-05, 8.876400000000159e-05, 8.88190000000004e-05, 8.907000000000012e-05, 8.888899999999825e-05, 8.902800000000141e-05, 8.890299999999782e-05, 8.913900000000197e-05, 8.943100000000093e-05, 8.870799999999984e-05, 8.870799999999984e-05, 8.888899999999825e-05, 8.86519999999981e-05, 8.845799999999959e-05, 8.918100000000068e-05, 8.933399999999994e-05, 8.856900000000015e-05, 8.938899999999875e-05, 8.866599999999766e-05, 8.920800000000034e-05, 8.9332999999997e-05, 8.870799999999984e-05, 8.913800000000249e-05, 8.91670000000011e-05, 8.932000000000037e-05, 8.84999999999983e-05, 8.919500000000025e-05, 8.905500000000108e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.723" endtime="20201029 18:15:24.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.718" endtime="20201029 18:15:24.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.729" endtime="20201029 18:15:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.728" endtime="20201029 18:15:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.726" endtime="20201029 18:15:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.368" endtime="20201029 18:15:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.367" endtime="20201029 18:15:24.750"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.759" endtime="20201029 18:15:24.777"></status>
</kw>
<msg timestamp="20201029 18:15:24.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.757" endtime="20201029 18:15:24.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.779" endtime="20201029 18:15:24.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.781" endtime="20201029 18:15:24.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.754" endtime="20201029 18:15:24.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.752" endtime="20201029 18:15:24.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.791" endtime="20201029 18:15:25.078"></status>
</kw>
<msg timestamp="20201029 18:15:25.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021587528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.789" endtime="20201029 18:15:25.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021587528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.082" endtime="20201029 18:15:25.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.091" endtime="20201029 18:15:25.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.786" endtime="20201029 18:15:25.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.785" endtime="20201029 18:15:25.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.097" level="INFO">${RESULT} = [{'diff': 9.033400000000094e-05}, {'diff': 8.951399999999887e-05}, {'diff': 8.983300000000097e-05}, {'diff': 9.041599999999941e-05}, {'diff': 8.976399999999912e-05}, {'diff': 8.987499999999968e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:25.094" endtime="20201029 18:15:25.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.102" level="INFO">${ACCURACY} = {'diff': [9.033400000000094e-05, 8.951399999999887e-05, 8.983300000000097e-05, 9.041599999999941e-05, 8.976399999999912e-05, 8.987499999999968e-05, 8.988899999999925e-05, 8.941700000000136e-05, 9.0388...</msg>
<status status="PASS" starttime="20201029 18:15:25.098" endtime="20201029 18:15:25.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.106" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.105" endtime="20201029 18:15:25.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.108" level="INFO">VALUE: [9.033400000000094e-05, 8.951399999999887e-05, 8.983300000000097e-05, 9.041599999999941e-05, 8.976399999999912e-05, 8.987499999999968e-05, 8.988899999999925e-05, 8.941700000000136e-05, 9.038899999999975e-05, 9.012499999999993e-05, 9.002799999999894e-05, 9.040299999999932e-05, 9.027800000000266e-05, 9.033400000000094e-05, 9.03190000000019e-05, 8.99999999999998e-05, 8.952800000000191e-05, 8.976399999999912e-05, 9.027800000000266e-05, 8.972200000000041e-05, 9.015299999999907e-05, 9.019400000000177e-05, 8.990299999999882e-05, 8.956999999999715e-05, 8.944400000000102e-05, 8.983399999999697e-05, 8.954200000000148e-05, 9.020799999999787e-05, 8.947299999999964e-05, 9.001400000000284e-05, 8.958300000000072e-05, 8.951399999999887e-05, 8.956899999999768e-05, 9.001400000000284e-05, 9.002799999999894e-05, 8.976399999999912e-05, 8.984800000000001e-05, 8.998600000000023e-05, 8.995900000000057e-05, 9.034700000000104e-05, 8.995800000000109e-05, 8.977800000000216e-05, 8.958399999999672e-05, 9.001399999999937e-05, 8.96939999999978e-05, 8.952800000000191e-05, 8.94999999999993e-05, 8.983400000000044e-05, 8.987499999999968e-05, 9.012499999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.107" endtime="20201029 18:15:25.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.102" endtime="20201029 18:15:25.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.113" endtime="20201029 18:15:25.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.112" endtime="20201029 18:15:25.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.111" endtime="20201029 18:15:25.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.751" endtime="20201029 18:15:25.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.750" endtime="20201029 18:15:25.134"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.143" endtime="20201029 18:15:25.163"></status>
</kw>
<msg timestamp="20201029 18:15:25.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.141" endtime="20201029 18:15:25.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.164" endtime="20201029 18:15:25.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.167" endtime="20201029 18:15:25.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.139" endtime="20201029 18:15:25.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.137" endtime="20201029 18:15:25.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.176" endtime="20201029 18:15:25.462"></status>
</kw>
<msg timestamp="20201029 18:15:25.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.174" endtime="20201029 18:15:25.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022549319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022641125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.466" endtime="20201029 18:15:25.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.475" endtime="20201029 18:15:25.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.172" endtime="20201029 18:15:25.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.170" endtime="20201029 18:15:25.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.481" level="INFO">${RESULT} = [{'diff': 9.180599999999983e-05}, {'diff': 9.062500000000043e-05}, {'diff': 9.087500000000068e-05}, {'diff': 9.11390000000005e-05}, {'diff': 9.094399999999905e-05}, {'diff': 9.075000000000055e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:25.478" endtime="20201029 18:15:25.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.485" level="INFO">${ACCURACY} = {'diff': [9.180599999999983e-05, 9.062500000000043e-05, 9.087500000000068e-05, 9.11390000000005e-05, 9.094399999999905e-05, 9.075000000000055e-05, 9.084800000000101e-05, 9.1332999999999e-05, 9.0625000...</msg>
<status status="PASS" starttime="20201029 18:15:25.482" endtime="20201029 18:15:25.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.490" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.489" endtime="20201029 18:15:25.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.492" level="INFO">VALUE: [9.180599999999983e-05, 9.062500000000043e-05, 9.087500000000068e-05, 9.11390000000005e-05, 9.094399999999905e-05, 9.075000000000055e-05, 9.084800000000101e-05, 9.1332999999999e-05, 9.062500000000043e-05, 9.094399999999905e-05, 9.073600000000098e-05, 9.073600000000098e-05, 9.052800000000291e-05, 9.09589999999981e-05, 9.0639e-05, 9.123600000000148e-05, 9.05000000000003e-05, 9.062499999999696e-05, 9.058300000000172e-05, 9.090299999999982e-05, 9.134699999999857e-05, 9.088900000000025e-05, 9.042999999999898e-05, 9.073600000000098e-05, 9.0945000000002e-05, 9.093099999999896e-05, 9.055499999999911e-05, 9.061099999999739e-05, 9.041699999999889e-05, 9.062500000000043e-05, 9.065299999999957e-05, 9.045799999999812e-05, 9.088900000000025e-05, 9.124999999999758e-05, 9.069499999999828e-05, 9.102799999999994e-05, 9.076400000000012e-05, 9.05000000000003e-05, 9.088900000000025e-05, 9.116600000000016e-05, 9.081899999999893e-05, 9.05000000000003e-05, 9.083400000000144e-05, 9.052799999999944e-05, 9.081899999999893e-05, 9.102700000000047e-05, 9.06939999999988e-05, 9.069500000000175e-05, 9.10000000000008e-05, 9.058400000000119e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.491" endtime="20201029 18:15:25.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.486" endtime="20201029 18:15:25.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.498" endtime="20201029 18:15:25.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.496" endtime="20201029 18:15:25.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.495" endtime="20201029 18:15:25.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.135" endtime="20201029 18:15:25.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.134" endtime="20201029 18:15:25.519"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.527" endtime="20201029 18:15:25.547"></status>
</kw>
<msg timestamp="20201029 18:15:25.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.526" endtime="20201029 18:15:25.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.548" endtime="20201029 18:15:25.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.551" endtime="20201029 18:15:25.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.523" endtime="20201029 18:15:25.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.521" endtime="20201029 18:15:25.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.560" endtime="20201029 18:15:25.845"></status>
</kw>
<msg timestamp="20201029 18:15:25.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.558" endtime="20201029 18:15:25.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.850" endtime="20201029 18:15:25.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.858" endtime="20201029 18:15:25.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.555" endtime="20201029 18:15:25.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.554" endtime="20201029 18:15:25.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.864" level="INFO">${RESULT} = [{'diff': 9.199999999999833e-05}, {'diff': 9.201299999999843e-05}, {'diff': 9.195799999999962e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.195799999999962e-05}, {'diff': 9.190299999999735e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:25.861" endtime="20201029 18:15:25.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.869" level="INFO">${ACCURACY} = {'diff': [9.199999999999833e-05, 9.201299999999843e-05, 9.195799999999962e-05, 9.176400000000112e-05, 9.195799999999962e-05, 9.190299999999735e-05, 9.156999999999915e-05, 9.151299999999793e-05, 9.1778...</msg>
<status status="PASS" starttime="20201029 18:15:25.865" endtime="20201029 18:15:25.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.874" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.873" endtime="20201029 18:15:25.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.876" level="INFO">VALUE: [9.199999999999833e-05, 9.201299999999843e-05, 9.195799999999962e-05, 9.176400000000112e-05, 9.195799999999962e-05, 9.190299999999735e-05, 9.156999999999915e-05, 9.151299999999793e-05, 9.177800000000069e-05, 9.201400000000137e-05, 9.23199999999999e-05, 9.213899999999803e-05, 9.159800000000176e-05, 9.15000000000013e-05, 9.194400000000005e-05, 9.220799999999987e-05, 9.219499999999978e-05, 9.156900000000315e-05, 9.206999999999965e-05, 9.211100000000236e-05, 9.226399999999815e-05, 9.208299999999975e-05, 9.193099999999996e-05, 9.161100000000186e-05, 9.162500000000143e-05, 9.158399999999872e-05, 9.212500000000193e-05, 9.144499999999903e-05, 9.15139999999974e-05, 9.1639000000001e-05, 9.140299999999685e-05, 9.159799999999829e-05, 9.149999999999783e-05, 9.166600000000066e-05, 9.20000000000018e-05, 9.159699999999882e-05, 9.20000000000018e-05, 9.206900000000018e-05, 9.23199999999999e-05, 9.194499999999953e-05, 9.193000000000048e-05, 9.162500000000143e-05, 9.187499999999821e-05, 9.219499999999978e-05, 9.193099999999996e-05, 9.173600000000198e-05, 9.174999999999808e-05, 9.175000000000155e-05, 9.14719999999987e-05, 9.15000000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.875" endtime="20201029 18:15:25.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.870" endtime="20201029 18:15:25.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.884" endtime="20201029 18:15:25.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.880" endtime="20201029 18:15:25.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.878" endtime="20201029 18:15:25.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.520" endtime="20201029 18:15:25.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.519" endtime="20201029 18:15:25.908"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.920" endtime="20201029 18:15:25.940"></status>
</kw>
<msg timestamp="20201029 18:15:25.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.919" endtime="20201029 18:15:25.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.941" endtime="20201029 18:15:25.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.944" endtime="20201029 18:15:25.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.915" endtime="20201029 18:15:25.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.910" endtime="20201029 18:15:25.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.953" endtime="20201029 18:15:26.241"></status>
</kw>
<msg timestamp="20201029 18:15:26.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028058667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028152222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.951" endtime="20201029 18:15:26.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028058667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028152222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.246" endtime="20201029 18:15:26.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.254" endtime="20201029 18:15:26.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.948" endtime="20201029 18:15:26.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.947" endtime="20201029 18:15:26.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.260" level="INFO">${RESULT} = [{'diff': 9.355500000000211e-05}, {'diff': 9.257000000000015e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.245799999999665e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.257" endtime="20201029 18:15:26.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.264" level="INFO">${ACCURACY} = {'diff': [9.355500000000211e-05, 9.257000000000015e-05, 9.295800000000062e-05, 9.295800000000062e-05, 9.275000000000255e-05, 9.245799999999665e-05, 9.340300000000232e-05, 9.338899999999928e-05, 9.2930...</msg>
<status status="PASS" starttime="20201029 18:15:26.261" endtime="20201029 18:15:26.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.269" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.268" endtime="20201029 18:15:26.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.271" level="INFO">VALUE: [9.355500000000211e-05, 9.257000000000015e-05, 9.295800000000062e-05, 9.295800000000062e-05, 9.275000000000255e-05, 9.245799999999665e-05, 9.340300000000232e-05, 9.338899999999928e-05, 9.293099999999749e-05, 9.326300000000315e-05, 9.256900000000068e-05, 9.322200000000044e-05, 9.261099999999939e-05, 9.336199999999961e-05, 9.280500000000136e-05, 9.324999999999958e-05, 9.245800000000012e-05, 9.293099999999749e-05, 9.277800000000169e-05, 9.287499999999921e-05, 9.313899999999903e-05, 9.312499999999599e-05, 9.301399999999543e-05, 9.324999999999611e-05, 9.334700000000057e-05, 9.33879999999998e-05, 9.305599999999414e-05, 9.257000000000015e-05, 9.28879999999993e-05, 9.280500000000136e-05, 9.262499999999896e-05, 9.304100000000204e-05, 9.337499999999971e-05, 9.324999999999611e-05, 9.263899999999853e-05, 9.338899999999928e-05, 9.268099999999724e-05, 9.263900000000547e-05, 9.28200000000004e-05, 9.304200000000151e-05, 9.269500000000375e-05, 9.287499999999921e-05, 9.325000000000305e-05, 9.243100000000393e-05, 9.318099999999774e-05, 9.309799999999979e-05, 9.273600000000298e-05, 9.28200000000004e-05, 9.270800000000384e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.270" endtime="20201029 18:15:26.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.265" endtime="20201029 18:15:26.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.281" endtime="20201029 18:15:26.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.279" endtime="20201029 18:15:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.278" endtime="20201029 18:15:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.909" endtime="20201029 18:15:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.908" endtime="20201029 18:15:26.301"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.310" endtime="20201029 18:15:26.330"></status>
</kw>
<msg timestamp="20201029 18:15:26.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.308" endtime="20201029 18:15:26.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.332" endtime="20201029 18:15:26.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.334" endtime="20201029 18:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.306" endtime="20201029 18:15:26.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.304" endtime="20201029 18:15:26.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.343" endtime="20201029 18:15:26.629"></status>
</kw>
<msg timestamp="20201029 18:15:26.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.342" endtime="20201029 18:15:26.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.633" endtime="20201029 18:15:26.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.641" endtime="20201029 18:15:26.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.339" endtime="20201029 18:15:26.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.337" endtime="20201029 18:15:26.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.648" level="INFO">${RESULT} = [{'diff': 9.475000000000108e-05}, {'diff': 9.418099999999874e-05}, {'diff': 9.388899999999978e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.358400000000072e-05}, {'diff': 9.394400000000205e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:26.645" endtime="20201029 18:15:26.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.653" level="INFO">${ACCURACY} = {'diff': [9.475000000000108e-05, 9.418099999999874e-05, 9.388899999999978e-05, 9.377800000000269e-05, 9.358400000000072e-05, 9.394400000000205e-05, 9.412500000000046e-05, 9.400000000000033e-05, 9.3570...</msg>
<status status="PASS" starttime="20201029 18:15:26.650" endtime="20201029 18:15:26.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.657" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.656" endtime="20201029 18:15:26.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.660" level="INFO">VALUE: [9.475000000000108e-05, 9.418099999999874e-05, 9.388899999999978e-05, 9.377800000000269e-05, 9.358400000000072e-05, 9.394400000000205e-05, 9.412500000000046e-05, 9.400000000000033e-05, 9.357000000000115e-05, 9.427799999999972e-05, 9.437499999999724e-05, 9.394500000000153e-05, 9.419399999999883e-05, 9.373599999999704e-05, 9.376399999999965e-05, 9.395799999999815e-05, 9.368000000000223e-05, 9.394399999999858e-05, 9.344499999999756e-05, 9.412500000000046e-05, 9.376399999999965e-05, 9.413900000000003e-05, 9.40139999999999e-05, 9.416699999999917e-05, 9.400000000000033e-05, 9.436100000000114e-05, 9.354100000000254e-05, 9.417999999999926e-05, 9.436100000000114e-05, 9.373599999999704e-05, 9.400000000000033e-05, 9.372200000000094e-05, 9.381899999999846e-05, 9.393100000000196e-05, 9.376399999999965e-05, 9.405499999999914e-05, 9.362499999999996e-05, 9.436100000000114e-05, 9.362499999999996e-05, 9.430499999999939e-05, 9.394400000000205e-05, 9.345899999999713e-05, 9.376399999999965e-05, 9.430599999999886e-05, 9.377799999999922e-05, 9.417999999999926e-05, 9.426400000000015e-05, 9.425000000000058e-05, 9.38330000000015e-05, 9.402799999999947e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.659" endtime="20201029 18:15:26.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.654" endtime="20201029 18:15:26.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.666" endtime="20201029 18:15:26.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.664" endtime="20201029 18:15:26.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.663" endtime="20201029 18:15:26.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.302" endtime="20201029 18:15:26.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.302" endtime="20201029 18:15:26.686"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.695" endtime="20201029 18:15:26.714"></status>
</kw>
<msg timestamp="20201029 18:15:26.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.693" endtime="20201029 18:15:26.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.716" endtime="20201029 18:15:26.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.718" endtime="20201029 18:15:26.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.691" endtime="20201029 18:15:26.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.689" endtime="20201029 18:15:26.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.727" endtime="20201029 18:15:27.013"></status>
</kw>
<msg timestamp="20201029 18:15:27.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.726" endtime="20201029 18:15:27.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.017" endtime="20201029 18:15:27.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.026" endtime="20201029 18:15:27.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.723" endtime="20201029 18:15:27.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.721" endtime="20201029 18:15:27.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.032" level="INFO">${RESULT} = [{'diff': 9.491600000000044e-05}, {'diff': 9.519399999999983e-05}, {'diff': 9.51660000000007e-05}, {'diff': 9.522199999999897e-05}, {'diff': 9.479199999999979e-05}, {'diff': 9.504200000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:27.029" endtime="20201029 18:15:27.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.037" level="INFO">${ACCURACY} = {'diff': [9.491600000000044e-05, 9.519399999999983e-05, 9.51660000000007e-05, 9.522199999999897e-05, 9.479199999999979e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.518000000000026e-05, 9.51109...</msg>
<status status="PASS" starttime="20201029 18:15:27.033" endtime="20201029 18:15:27.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.042" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.041" endtime="20201029 18:15:27.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.044" level="INFO">VALUE: [9.491600000000044e-05, 9.519399999999983e-05, 9.51660000000007e-05, 9.522199999999897e-05, 9.479199999999979e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.518000000000026e-05, 9.511099999999842e-05, 9.513800000000155e-05, 9.463900000000053e-05, 9.50140000000009e-05, 9.504100000000057e-05, 9.483400000000197e-05, 9.462500000000096e-05, 9.472200000000194e-05, 9.506899999999971e-05, 9.525000000000158e-05, 9.487500000000121e-05, 9.483299999999903e-05, 9.505500000000014e-05, 9.519499999999931e-05, 9.456899999999921e-05, 9.441699999999942e-05, 9.538899999999781e-05, 9.480499999999989e-05, 9.462499999999749e-05, 9.488900000000078e-05, 9.462500000000096e-05, 9.53200000000029e-05, 9.530500000000039e-05, 9.526400000000115e-05, 9.494500000000253e-05, 9.538799999999834e-05, 9.486100000000164e-05, 9.481999999999893e-05, 9.455599999999911e-05, 9.519499999999931e-05, 9.473700000000099e-05, 9.531899999999996e-05, 9.469499999999881e-05, 9.493000000000001e-05, 9.45140000000004e-05, 9.476400000000065e-05, 9.518000000000026e-05, 9.536100000000214e-05, 9.476400000000065e-05, 9.469499999999881e-05, 9.493099999999949e-05, 9.524999999999811e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.043" endtime="20201029 18:15:27.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.038" endtime="20201029 18:15:27.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.049" endtime="20201029 18:15:27.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.048" endtime="20201029 18:15:27.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.047" endtime="20201029 18:15:27.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.687" endtime="20201029 18:15:27.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.687" endtime="20201029 18:15:27.070"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.079" endtime="20201029 18:15:27.098"></status>
</kw>
<msg timestamp="20201029 18:15:27.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.077" endtime="20201029 18:15:27.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.099" endtime="20201029 18:15:27.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.102" endtime="20201029 18:15:27.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.074" endtime="20201029 18:15:27.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.072" endtime="20201029 18:15:27.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.111" endtime="20201029 18:15:27.397"></status>
</kw>
<msg timestamp="20201029 18:15:27.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.109" endtime="20201029 18:15:27.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021416208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021512778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.401" endtime="20201029 18:15:27.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.409" endtime="20201029 18:15:27.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.107" endtime="20201029 18:15:27.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.105" endtime="20201029 18:15:27.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.416" level="INFO">${RESULT} = [{'diff': 9.657000000000068e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.631900000000096e-05}, {'diff': 9.580600000000036e-05}, {'diff': 9.600000000000233e-05}, {'diff': 9.590300000000135e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:27.412" endtime="20201029 18:15:27.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.420" level="INFO">${ACCURACY} = {'diff': [9.657000000000068e-05, 9.58469999999996e-05, 9.631900000000096e-05, 9.580600000000036e-05, 9.600000000000233e-05, 9.590300000000135e-05, 9.573599999999904e-05, 9.573599999999904e-05, 9.62359...</msg>
<status status="PASS" starttime="20201029 18:15:27.417" endtime="20201029 18:15:27.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.424" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.423" endtime="20201029 18:15:27.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.427" level="INFO">VALUE: [9.657000000000068e-05, 9.58469999999996e-05, 9.631900000000096e-05, 9.580600000000036e-05, 9.600000000000233e-05, 9.590300000000135e-05, 9.573599999999904e-05, 9.573599999999904e-05, 9.623599999999954e-05, 9.631899999999749e-05, 9.563899999999806e-05, 9.594500000000006e-05, 9.613900000000203e-05, 9.574999999999861e-05, 9.615299999999813e-05, 9.62080000000004e-05, 9.579099999999785e-05, 9.601399999999843e-05, 9.618100000000074e-05, 9.637499999999924e-05, 9.550000000000183e-05, 9.607000000000018e-05, 9.544400000000008e-05, 9.633300000000053e-05, 9.641700000000142e-05, 9.544400000000008e-05, 9.643000000000151e-05, 9.566599999999773e-05, 9.580500000000089e-05, 9.563899999999806e-05, 9.611099999999942e-05, 9.626399999999868e-05, 9.57079999999999e-05, 9.574999999999861e-05, 9.562500000000196e-05, 9.606900000000071e-05, 9.587499999999874e-05, 9.549999999999836e-05, 9.561100000000239e-05, 9.605500000000114e-05, 9.637499999999924e-05, 9.63059999999974e-05, 9.623600000000301e-05, 9.593000000000101e-05, 9.543099999999999e-05, 9.549999999999836e-05, 9.590300000000135e-05, 9.60140000000019e-05, 9.554200000000054e-05, 9.573599999999904e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.425" endtime="20201029 18:15:27.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.421" endtime="20201029 18:15:27.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.432" endtime="20201029 18:15:27.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.430" endtime="20201029 18:15:27.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.429" endtime="20201029 18:15:27.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.071" endtime="20201029 18:15:27.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.070" endtime="20201029 18:15:27.452"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.461" endtime="20201029 18:15:27.481"></status>
</kw>
<msg timestamp="20201029 18:15:27.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.459" endtime="20201029 18:15:27.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.483" endtime="20201029 18:15:27.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.485" endtime="20201029 18:15:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.457" endtime="20201029 18:15:27.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.455" endtime="20201029 18:15:27.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.494" endtime="20201029 18:15:27.780"></status>
</kw>
<msg timestamp="20201029 18:15:27.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.493" endtime="20201029 18:15:27.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.784" endtime="20201029 18:15:27.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.793" endtime="20201029 18:15:27.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.490" endtime="20201029 18:15:27.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.488" endtime="20201029 18:15:27.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.799" level="INFO">${RESULT} = [{'diff': 9.763800000000059e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.682000000000093e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.718100000000174e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.796" endtime="20201029 18:15:27.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.803" level="INFO">${ACCURACY} = {'diff': [9.763800000000059e-05, 9.737500000000024e-05, 9.699999999999986e-05, 9.682000000000093e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.670900000000038e-05, 9.677800000000222e-05, 9.7152...</msg>
<status status="PASS" starttime="20201029 18:15:27.800" endtime="20201029 18:15:27.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.808" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.807" endtime="20201029 18:15:27.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.810" level="INFO">VALUE: [9.763800000000059e-05, 9.737500000000024e-05, 9.699999999999986e-05, 9.682000000000093e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.670900000000038e-05, 9.677800000000222e-05, 9.715299999999913e-05, 9.712499999999999e-05, 9.67920000000018e-05, 9.712499999999999e-05, 9.68059999999979e-05, 9.686100000000017e-05, 9.674999999999961e-05, 9.662499999999949e-05, 9.736100000000067e-05, 9.644500000000056e-05, 9.732000000000143e-05, 9.666599999999873e-05, 9.686100000000017e-05, 9.712499999999999e-05, 9.726399999999968e-05, 9.661099999999992e-05, 9.643099999999752e-05, 9.687499999999974e-05, 9.679100000000232e-05, 9.71660000000027e-05, 9.736100000000067e-05, 9.704200000000204e-05, 9.697199999999725e-05, 9.709699999999738e-05, 9.654100000000207e-05, 9.71669999999987e-05, 9.718099999999827e-05, 9.681900000000146e-05, 9.740299999999938e-05, 9.64859999999998e-05, 9.687499999999974e-05, 9.712499999999999e-05, 9.662500000000296e-05, 9.729099999999935e-05, 9.699999999999986e-05, 9.644500000000056e-05, 9.72920000000023e-05, 9.693100000000149e-05, 9.680600000000136e-05, 9.736100000000067e-05, 9.673600000000004e-05, 9.661099999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.809" endtime="20201029 18:15:27.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.804" endtime="20201029 18:15:27.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.816" endtime="20201029 18:15:27.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.815" endtime="20201029 18:15:27.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.813" endtime="20201029 18:15:27.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.453" endtime="20201029 18:15:27.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.453" endtime="20201029 18:15:27.837"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.846" endtime="20201029 18:15:27.865"></status>
</kw>
<msg timestamp="20201029 18:15:27.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.844" endtime="20201029 18:15:27.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.866" endtime="20201029 18:15:27.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.869" endtime="20201029 18:15:27.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.841" endtime="20201029 18:15:27.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.839" endtime="20201029 18:15:27.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.878" endtime="20201029 18:15:28.164"></status>
</kw>
<msg timestamp="20201029 18:15:28.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.876" endtime="20201029 18:15:28.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.168" endtime="20201029 18:15:28.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.176" endtime="20201029 18:15:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.874" endtime="20201029 18:15:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.872" endtime="20201029 18:15:28.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.183" level="INFO">${RESULT} = [{'diff': 9.825000000000111e-05}, {'diff': 9.758400000000125e-05}, {'diff': 9.813900000000056e-05}, {'diff': 9.777700000000028e-05}, {'diff': 9.800000000000086e-05}, {'diff': 9.809700000000185e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.180" endtime="20201029 18:15:28.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.188" level="INFO">${ACCURACY} = {'diff': [9.825000000000111e-05, 9.758400000000125e-05, 9.813900000000056e-05, 9.777700000000028e-05, 9.800000000000086e-05, 9.809700000000185e-05, 9.758300000000178e-05, 9.76799999999993e-05, 9.76949...</msg>
<status status="PASS" starttime="20201029 18:15:28.184" endtime="20201029 18:15:28.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.192" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.191" endtime="20201029 18:15:28.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.195" level="INFO">VALUE: [9.825000000000111e-05, 9.758400000000125e-05, 9.813900000000056e-05, 9.777700000000028e-05, 9.800000000000086e-05, 9.809700000000185e-05, 9.758300000000178e-05, 9.76799999999993e-05, 9.769499999999834e-05, 9.801400000000043e-05, 9.786100000000117e-05, 9.818099999999927e-05, 9.81669999999997e-05, 9.79730000000012e-05, 9.781999999999846e-05, 9.812500000000099e-05, 9.750000000000036e-05, 9.805499999999967e-05, 9.762500000000049e-05, 9.784699999999813e-05, 9.822299999999798e-05, 9.823599999999807e-05, 9.829100000000035e-05, 9.744499999999809e-05, 9.808299999999881e-05, 9.748599999999732e-05, 9.79860000000013e-05, 9.743099999999852e-05, 9.822299999999798e-05, 9.809800000000132e-05, 9.792999999999955e-05, 9.74860000000008e-05, 9.756999999999821e-05, 9.765200000000016e-05, 9.837500000000124e-05, 9.825000000000111e-05, 9.756999999999821e-05, 9.818100000000274e-05, 9.811100000000142e-05, 9.792999999999955e-05, 9.781899999999899e-05, 9.798599999999782e-05, 9.776400000000018e-05, 9.768100000000224e-05, 9.822300000000145e-05, 9.790299999999988e-05, 9.823600000000154e-05, 9.805599999999914e-05, 9.805599999999914e-05, 9.759700000000135e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.193" endtime="20201029 18:15:28.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.189" endtime="20201029 18:15:28.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.200" endtime="20201029 18:15:28.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.198" endtime="20201029 18:15:28.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.197" endtime="20201029 18:15:28.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.838" endtime="20201029 18:15:28.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.837" endtime="20201029 18:15:28.220"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.229" endtime="20201029 18:15:28.249"></status>
</kw>
<msg timestamp="20201029 18:15:28.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.228" endtime="20201029 18:15:28.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.250" endtime="20201029 18:15:28.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.253" endtime="20201029 18:15:28.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.225" endtime="20201029 18:15:28.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.223" endtime="20201029 18:15:28.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.262" endtime="20201029 18:15:28.550"></status>
</kw>
<msg timestamp="20201029 18:15:28.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:28.260" endtime="20201029 18:15:28.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02147725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021576736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:28.554" endtime="20201029 18:15:28.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.562" endtime="20201029 18:15:28.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.258" endtime="20201029 18:15:28.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.256" endtime="20201029 18:15:28.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.570" level="INFO">${RESULT} = [{'diff': 9.948599999999932e-05}, {'diff': 9.936100000000267e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.877799999999728e-05}, {'diff': 9.873600000000204e-05}, {'diff': 9.888900000000131e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:28.565" endtime="20201029 18:15:28.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.579" level="INFO">${ACCURACY} = {'diff': [9.948599999999932e-05, 9.936100000000267e-05, 9.859699999999888e-05, 9.877799999999728e-05, 9.873600000000204e-05, 9.888900000000131e-05, 9.911099999999895e-05, 9.9028000000001e-05, 9.925000...</msg>
<status status="PASS" starttime="20201029 18:15:28.572" endtime="20201029 18:15:28.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.588" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.586" endtime="20201029 18:15:28.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.594" level="INFO">VALUE: [9.948599999999932e-05, 9.936100000000267e-05, 9.859699999999888e-05, 9.877799999999728e-05, 9.873600000000204e-05, 9.888900000000131e-05, 9.911099999999895e-05, 9.9028000000001e-05, 9.925000000000211e-05, 9.905600000000014e-05, 9.862499999999802e-05, 9.891600000000098e-05, 9.887500000000174e-05, 9.855500000000017e-05, 9.908299999999981e-05, 9.856999999999921e-05, 9.86670000000002e-05, 9.913899999999809e-05, 9.884699999999913e-05, 9.891700000000045e-05, 9.886100000000217e-05, 9.905600000000014e-05, 9.929200000000082e-05, 9.879200000000032e-05, 9.92219999999995e-05, 9.858400000000225e-05, 9.923600000000254e-05, 9.923599999999907e-05, 9.915199999999819e-05, 9.86670000000002e-05, 9.920799999999994e-05, 9.888900000000131e-05, 9.923600000000254e-05, 9.865300000000063e-05, 9.84860000000018e-05, 9.862500000000149e-05, 9.844499999999909e-05, 9.908299999999981e-05, 9.933300000000006e-05, 9.87080000000029e-05, 9.925000000000211e-05, 9.90410000000011e-05, 9.91670000000007e-05, 9.872200000000247e-05, 9.895799999999969e-05, 9.927800000000125e-05, 9.861200000000139e-05, 9.929199999999735e-05, 9.897199999999926e-05, 9.890300000000088e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.591" endtime="20201029 18:15:28.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.581" endtime="20201029 18:15:28.596"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.604" endtime="20201029 18:15:28.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.601" endtime="20201029 18:15:28.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.598" endtime="20201029 18:15:28.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.221" endtime="20201029 18:15:28.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.221" endtime="20201029 18:15:28.628"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.646" endtime="20201029 18:15:28.670"></status>
</kw>
<msg timestamp="20201029 18:15:28.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.643" endtime="20201029 18:15:28.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.671" endtime="20201029 18:15:28.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.674" endtime="20201029 18:15:28.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.638" endtime="20201029 18:15:28.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.633" endtime="20201029 18:15:28.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.684" endtime="20201029 18:15:28.970"></status>
</kw>
<msg timestamp="20201029 18:15:28.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037010569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037110708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.682" endtime="20201029 18:15:28.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037010569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037110708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.974" endtime="20201029 18:15:28.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.982" endtime="20201029 18:15:28.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.679" endtime="20201029 18:15:28.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.677" endtime="20201029 18:15:28.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.989" level="INFO">${RESULT} = [{'diff': 0.00010013899999999909}, {'diff': 0.00010015299999999866}, {'diff': 9.954099999999466e-05}, {'diff': 9.966700000000467e-05}, {'diff': 9.997200000000372e-05}, {'diff': 9.966699999999773e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:28.985" endtime="20201029 18:15:28.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.993" level="INFO">${ACCURACY} = {'diff': [0.00010013899999999909, 0.00010015299999999866, 9.954099999999466e-05, 9.966700000000467e-05, 9.997200000000372e-05, 9.966699999999773e-05, 9.995899999999669e-05, 9.965200000000562e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:28.990" endtime="20201029 18:15:28.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.997" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.996" endtime="20201029 18:15:28.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.999" level="INFO">VALUE: [0.00010013899999999909, 0.00010015299999999866, 9.954099999999466e-05, 9.966700000000467e-05, 9.997200000000372e-05, 9.966699999999773e-05, 9.995899999999669e-05, 9.965200000000562e-05, 0.0001000139999999955, 0.00010015299999999866, 0.00010020799999999747, 0.00010033300000000106, 9.94730000000027e-05, 9.991699999999798e-05, 0.00010016699999999823, 9.98609999999997e-05, 9.983300000000056e-05, 9.970899999999644e-05, 9.959699999999988e-05, 0.00010016700000000517, 9.997200000000372e-05, 0.00010013799999999962, 0.00010016599999999876, 9.940300000000485e-05, 0.00010012499999999952, 9.96939999999974e-05, 9.947200000000322e-05, 0.00010033300000000106, 0.00010034700000000063, 9.994400000000458e-05, 9.968000000000476e-05, 0.00010017999999999833, 9.95280000000015e-05, 9.983300000000056e-05, 0.00010029100000000235, 0.00010004199999999464, 0.0001001809999999978, 9.945799999999672e-05, 0.00010020799999999747, 9.98609999999997e-05, 0.00010026399999999575, 9.997299999999626e-05, 9.954200000000107e-05, 9.94860000000028e-05, 9.938900000000528e-05, 0.000100028000000002, 9.990299999999841e-05, 9.984700000000013e-05, 0.00010034700000000063, 9.954200000000107e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.998" endtime="20201029 18:15:29.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.994" endtime="20201029 18:15:29.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.005" endtime="20201029 18:15:29.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.004" endtime="20201029 18:15:29.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.003" endtime="20201029 18:15:29.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.630" endtime="20201029 18:15:29.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.629" endtime="20201029 18:15:29.026"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.034" endtime="20201029 18:15:29.054"></status>
</kw>
<msg timestamp="20201029 18:15:29.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.033" endtime="20201029 18:15:29.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.055" endtime="20201029 18:15:29.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.058" endtime="20201029 18:15:29.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.030" endtime="20201029 18:15:29.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.028" endtime="20201029 18:15:29.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.066" endtime="20201029 18:15:29.352"></status>
</kw>
<msg timestamp="20201029 18:15:29.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021218708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021319736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.065" endtime="20201029 18:15:29.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021218708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021319736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.356" endtime="20201029 18:15:29.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.364" endtime="20201029 18:15:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.063" endtime="20201029 18:15:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.061" endtime="20201029 18:15:29.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.370" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.0001012359999999976}, {'diff': 0.00010044500000000109}, {'diff': 0.0001013749999999973}, {'diff': 0.00010069500000000134}, {'diff': 0.00010061100000000045...</msg>
<status status="PASS" starttime="20201029 18:15:29.367" endtime="20201029 18:15:29.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.375" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.0001012359999999976, 0.00010044500000000109, 0.0001013749999999973, 0.00010069500000000134, 0.00010061100000000045, 0.00010076399999999971, 0.00010041699999999848, ...</msg>
<status status="PASS" starttime="20201029 18:15:29.371" endtime="20201029 18:15:29.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.382" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.380" endtime="20201029 18:15:29.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.387" level="INFO">VALUE: [0.00010102799999999953, 0.0001012359999999976, 0.00010044500000000109, 0.0001013749999999973, 0.00010069500000000134, 0.00010061100000000045, 0.00010076399999999971, 0.00010041699999999848, 0.00010116599999999976, 0.00010095900000000116, 0.00010044500000000109, 0.00010115299999999966, 0.0001012359999999976, 0.00010075000000000014, 0.00010091699999999898, 0.00010052799999999903, 0.00010104099999999963, 0.00010054200000000207, 0.00010122199999999804, 0.00010065299999999916, 0.00010059700000000088, 0.0001010000000000004, 0.00010047200000000076, 0.00010047200000000076, 0.00010077799999999928, 0.0001009870000000003, 0.00010081899999999852, 0.00010098599999999736, 0.00010058299999999784, 0.00010097300000000073, 0.0001006670000000022, 0.00010086099999999723, 0.00010080500000000242, 0.00010062500000000002, 0.0001012220000000015, 0.00010130599999999892, 0.00010080499999999895, 0.000100819999999998, 0.00010093099999999855, 0.00010069400000000187, 0.00010066699999999873, 0.00010120799999999847, 0.00010105599999999867, 0.00010066599999999926, 0.00010108299999999834, 0.00010101399999999996, 0.00010109700000000138, 0.00010092999999999908, 0.00010048600000000033, 0.00010075000000000014]</msg>
<status status="PASS" starttime="20201029 18:15:29.384" endtime="20201029 18:15:29.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.376" endtime="20201029 18:15:29.390"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.397" endtime="20201029 18:15:29.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.394" endtime="20201029 18:15:29.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.392" endtime="20201029 18:15:29.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.027" endtime="20201029 18:15:29.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.026" endtime="20201029 18:15:29.422"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.439" endtime="20201029 18:15:29.464"></status>
</kw>
<msg timestamp="20201029 18:15:29.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.436" endtime="20201029 18:15:29.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.467" endtime="20201029 18:15:29.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.472" endtime="20201029 18:15:29.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.431" endtime="20201029 18:15:29.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.427" endtime="20201029 18:15:29.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.484" endtime="20201029 18:15:29.773"></status>
</kw>
<msg timestamp="20201029 18:15:29.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034917417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035019736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.483" endtime="20201029 18:15:29.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034917417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035019736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.777" endtime="20201029 18:15:29.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.785" endtime="20201029 18:15:29.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.480" endtime="20201029 18:15:29.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.478" endtime="20201029 18:15:29.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.791" level="INFO">${RESULT} = [{'diff': 0.00010231900000000349}, {'diff': 0.00010183300000000256}, {'diff': 0.0001020139999999975}, {'diff': 0.00010204200000000357}, {'diff': 0.00010208300000000281}, {'diff': 0.0001022219999999990...</msg>
<status status="PASS" starttime="20201029 18:15:29.788" endtime="20201029 18:15:29.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.795" level="INFO">${ACCURACY} = {'diff': [0.00010231900000000349, 0.00010183300000000256, 0.0001020139999999975, 0.00010204200000000357, 0.00010208300000000281, 0.00010222199999999904, 0.00010138900000000034, 0.00010159700000000188,...</msg>
<status status="PASS" starttime="20201029 18:15:29.792" endtime="20201029 18:15:29.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.799" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.798" endtime="20201029 18:15:29.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.801" level="INFO">VALUE: [0.00010231900000000349, 0.00010183300000000256, 0.0001020139999999975, 0.00010204200000000357, 0.00010208300000000281, 0.00010222199999999904, 0.00010138900000000034, 0.00010159700000000188, 0.00010226400000000468, 0.00010209700000000238, 0.00010184700000000213, 0.0001021809999999998, 0.00010204199999999664, 0.0001021939999999999, 0.00010158300000000231, 0.00010159700000000188, 0.00010144499999999862, 0.00010229200000000382, 0.00010147199999999829, 0.00010145800000000565, 0.00010156999999999528, 0.0001019160000000005, 0.00010144399999999915, 0.00010224999999999818, 0.00010190200000000094, 0.0001017359999999981, 0.00010234700000000263, 0.00010179199999999639, 0.00010152699999999709, 0.00010142999999999958, 0.00010152700000000403, 0.00010169499999999887, 0.00010166699999999973, 0.00010188800000000137, 0.00010140299999999991, 0.0001020139999999975, 0.00010226399999999775, 0.00010193000000000008, 0.00010202799999999707, 0.00010158300000000231, 0.00010147199999999829, 0.00010222200000000597, 0.00010208300000000281, 0.000102028000000004, 0.00010179100000000385, 0.00010208400000000228, 0.00010138900000000034, 0.00010199999999999793, 0.00010213899999999415, 0.00010190300000000041]</msg>
<status status="PASS" starttime="20201029 18:15:29.800" endtime="20201029 18:15:29.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.796" endtime="20201029 18:15:29.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.806" endtime="20201029 18:15:29.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.805" endtime="20201029 18:15:29.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.804" endtime="20201029 18:15:29.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.424" endtime="20201029 18:15:29.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.423" endtime="20201029 18:15:29.827"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.835" endtime="20201029 18:15:29.856"></status>
</kw>
<msg timestamp="20201029 18:15:29.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.834" endtime="20201029 18:15:29.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.858" endtime="20201029 18:15:29.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.860" endtime="20201029 18:15:29.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.832" endtime="20201029 18:15:29.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.830" endtime="20201029 18:15:29.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.869" endtime="20201029 18:15:30.153"></status>
</kw>
<msg timestamp="20201029 18:15:30.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.867" endtime="20201029 18:15:30.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.157" endtime="20201029 18:15:30.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.165" endtime="20201029 18:15:30.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.865" endtime="20201029 18:15:30.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.863" endtime="20201029 18:15:30.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.171" level="INFO">${RESULT} = [{'diff': 0.00010284699999999966}, {'diff': 0.0001033749999999993}, {'diff': 0.00010316700000000123}, {'diff': 0.000102513999999998}, {'diff': 0.0001027359999999991}, {'diff': 0.00010312499999999905},...</msg>
<status status="PASS" starttime="20201029 18:15:30.168" endtime="20201029 18:15:30.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.175" level="INFO">${ACCURACY} = {'diff': [0.00010284699999999966, 0.0001033749999999993, 0.00010316700000000123, 0.000102513999999998, 0.0001027359999999991, 0.00010312499999999905, 0.00010313899999999862, 0.00010288900000000184, 0....</msg>
<status status="PASS" starttime="20201029 18:15:30.172" endtime="20201029 18:15:30.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.179" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.178" endtime="20201029 18:15:30.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.182" level="INFO">VALUE: [0.00010284699999999966, 0.0001033749999999993, 0.00010316700000000123, 0.000102513999999998, 0.0001027359999999991, 0.00010312499999999905, 0.00010313899999999862, 0.00010288900000000184, 0.00010291700000000098, 0.00010288899999999837, 0.00010252800000000103, 0.00010255600000000017, 0.0001030420000000011, 0.00010270799999999997, 0.0001030139999999985, 0.00010245799999999972, 0.00010313899999999862, 0.00010313900000000209, 0.00010301299999999902, 0.00010247200000000276, 0.00010324999999999918, 0.00010308399999999981, 0.000103207999999997, 0.00010336099999999973, 0.00010259699999999941, 0.00010322200000000004, 0.00010290300000000141, 0.00010282, 0.00010240299999999744, 0.00010258299999999984, 0.00010293100000000055, 0.00010301400000000197, 0.00010291700000000098, 0.00010288900000000184, 0.0001033200000000005, 0.00010284799999999913, 0.00010324999999999918, 0.00010288899999999837, 0.00010308300000000034, 0.00010244499999999962, 0.00010259700000000288, 0.0001028749999999988, 0.00010302799999999807, 0.00010315300000000166, 0.00010265300000000116, 0.00010283300000000009, 0.00010240300000000091, 0.00010259799999999888, 0.00010265199999999822, 0.00010305600000000067]</msg>
<status status="PASS" starttime="20201029 18:15:30.180" endtime="20201029 18:15:30.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.176" endtime="20201029 18:15:30.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.187" endtime="20201029 18:15:30.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.186" endtime="20201029 18:15:30.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.185" endtime="20201029 18:15:30.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.828" endtime="20201029 18:15:30.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.828" endtime="20201029 18:15:30.208"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.216" endtime="20201029 18:15:30.236"></status>
</kw>
<msg timestamp="20201029 18:15:30.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.215" endtime="20201029 18:15:30.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.238" endtime="20201029 18:15:30.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.240" endtime="20201029 18:15:30.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.212" endtime="20201029 18:15:30.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.210" endtime="20201029 18:15:30.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.249" endtime="20201029 18:15:30.535"></status>
</kw>
<msg timestamp="20201029 18:15:30.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.247" endtime="20201029 18:15:30.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021234056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.540" endtime="20201029 18:15:30.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.549" endtime="20201029 18:15:30.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.245" endtime="20201029 18:15:30.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.243" endtime="20201029 18:15:30.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.564" level="INFO">${RESULT} = [{'diff': 0.0001047499999999972}, {'diff': 0.00010340300000000191}, {'diff': 0.00010409700000000091}, {'diff': 0.00010390300000000241}, {'diff': 0.00010365299999999869}, {'diff': 0.0001034729999999997...</msg>
<status status="PASS" starttime="20201029 18:15:30.558" endtime="20201029 18:15:30.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.570" level="INFO">${ACCURACY} = {'diff': [0.0001047499999999972, 0.00010340300000000191, 0.00010409700000000091, 0.00010390300000000241, 0.00010365299999999869, 0.00010347299999999976, 0.00010419399999999843, 0.00010416599999999929,...</msg>
<status status="PASS" starttime="20201029 18:15:30.566" endtime="20201029 18:15:30.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.575" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.574" endtime="20201029 18:15:30.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.577" level="INFO">VALUE: [0.0001047499999999972, 0.00010340300000000191, 0.00010409700000000091, 0.00010390300000000241, 0.00010365299999999869, 0.00010347299999999976, 0.00010419399999999843, 0.00010416599999999929, 0.00010377800000000229, 0.00010433400000000106, 0.00010408400000000081, 0.00010379200000000185, 0.00010383299999999762, 0.00010408400000000081, 0.00010370900000000044, 0.0001040550000000022, 0.00010434700000000116, 0.00010370900000000044, 0.00010390299999999894, 0.00010427799999999932, 0.00010429199999999889, 0.00010412500000000005, 0.00010351400000000247, 0.00010427799999999932, 0.00010402799999999907, 0.00010431900000000202, 0.0001037360000000001, 0.00010345900000000019, 0.00010372200000000054, 0.00010349999999999943, 0.00010345900000000019, 0.00010408300000000134, 0.00010383300000000109, 0.00010402799999999907, 0.00010408300000000134, 0.00010397300000000026, 0.00010404199999999864, 0.0001043200000000015, 0.00010354199999999814, 0.00010383400000000056, 0.00010415299999999919, 0.00010359799999999988, 0.00010420800000000147, 0.00010384700000000066, 0.00010358400000000031, 0.00010406999999999778, 0.0001040550000000022, 0.0001040139999999995, 0.00010362499999999955, 0.00010380500000000195]</msg>
<status status="PASS" starttime="20201029 18:15:30.576" endtime="20201029 18:15:30.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.571" endtime="20201029 18:15:30.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.582" endtime="20201029 18:15:30.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.580" endtime="20201029 18:15:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.579" endtime="20201029 18:15:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.209" endtime="20201029 18:15:30.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.208" endtime="20201029 18:15:30.603"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.611" endtime="20201029 18:15:30.631"></status>
</kw>
<msg timestamp="20201029 18:15:30.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.610" endtime="20201029 18:15:30.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.633" endtime="20201029 18:15:30.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.635" endtime="20201029 18:15:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.607" endtime="20201029 18:15:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.605" endtime="20201029 18:15:30.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.644" endtime="20201029 18:15:30.933"></status>
</kw>
<msg timestamp="20201029 18:15:30.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:30.642" endtime="20201029 18:15:30.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:30.937" endtime="20201029 18:15:30.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.945" endtime="20201029 18:15:30.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.640" endtime="20201029 18:15:30.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.638" endtime="20201029 18:15:30.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.951" level="INFO">${RESULT} = [{'diff': 0.00010491699999999951}, {'diff': 0.00010447199999999782}, {'diff': 0.00010530600000000293}, {'diff': 0.00010530499999999998}, {'diff': 0.00010515300000000019}, {'diff': 0.000104485999999997...</msg>
<status status="PASS" starttime="20201029 18:15:30.948" endtime="20201029 18:15:30.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.955" level="INFO">${ACCURACY} = {'diff': [0.00010491699999999951, 0.00010447199999999782, 0.00010530600000000293, 0.00010530499999999998, 0.00010515300000000019, 0.00010448599999999739, 0.00010443099999999858, 0.00010538900000000087...</msg>
<status status="PASS" starttime="20201029 18:15:30.952" endtime="20201029 18:15:30.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.960" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.959" endtime="20201029 18:15:30.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.962" level="INFO">VALUE: [0.00010491699999999951, 0.00010447199999999782, 0.00010530600000000293, 0.00010530499999999998, 0.00010515300000000019, 0.00010448599999999739, 0.00010443099999999858, 0.00010538900000000087, 0.00010461100000000098, 0.00010472299999999754, 0.00010520900000000194, 0.00010459800000000088, 0.00010495900000000169, 0.00010468000000000283, 0.00010516600000000029, 0.00010479099999999991, 0.00010534800000000163, 0.00010513900000000062, 0.00010534699999999869, 0.00010527800000000032, 0.00010505499999999973, 0.00010515300000000019, 0.00010440299999999944, 0.00010483299999999862, 0.00010502800000000007, 0.000104514, 0.00010469500000000187, 0.000104514, 0.00010484700000000166, 0.00010509699999999844, 0.00010443100000000205, 0.00010484700000000166, 0.00010504199999999964, 0.00010479199999999939, 0.00010459699999999794, 0.00010512499999999758, 0.00010516699999999976, 0.00010477799999999982, 0.00010462500000000055, 0.00010447200000000129, 0.00010447200000000129, 0.00010506900000000277, 0.00010465299999999969, 0.00010516699999999976, 0.00010483299999999862, 0.00010511199999999749, 0.00010523599999999814, 0.00010502800000000007, 0.00010476399999999678, 0.00010457000000000174]</msg>
<status status="PASS" starttime="20201029 18:15:30.961" endtime="20201029 18:15:30.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.956" endtime="20201029 18:15:30.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.967" endtime="20201029 18:15:30.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.965" endtime="20201029 18:15:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.964" endtime="20201029 18:15:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.603" endtime="20201029 18:15:30.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.603" endtime="20201029 18:15:30.988"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.996" endtime="20201029 18:15:31.017"></status>
</kw>
<msg timestamp="20201029 18:15:31.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.994" endtime="20201029 18:15:31.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.018" endtime="20201029 18:15:31.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.021" endtime="20201029 18:15:31.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.992" endtime="20201029 18:15:31.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.990" endtime="20201029 18:15:31.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.030" endtime="20201029 18:15:31.315"></status>
</kw>
<msg timestamp="20201029 18:15:31.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.028" endtime="20201029 18:15:31.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022229417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022335917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.319" endtime="20201029 18:15:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.327" endtime="20201029 18:15:31.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.025" endtime="20201029 18:15:31.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.024" endtime="20201029 18:15:31.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.334" level="INFO">${RESULT} = [{'diff': 0.00010649999999999896}, {'diff': 0.00010579199999999692}, {'diff': 0.00010577699999999787}, {'diff': 0.00010583299999999962}, {'diff': 0.0001058750000000018}, {'diff': 0.0001061390000000016...</msg>
<status status="PASS" starttime="20201029 18:15:31.331" endtime="20201029 18:15:31.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.338" level="INFO">${ACCURACY} = {'diff': [0.00010649999999999896, 0.00010579199999999692, 0.00010577699999999787, 0.00010583299999999962, 0.0001058750000000018, 0.00010613900000000162, 0.0001063889999999984, 0.00010576399999999778, ...</msg>
<status status="PASS" starttime="20201029 18:15:31.335" endtime="20201029 18:15:31.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.342" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.341" endtime="20201029 18:15:31.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.344" level="INFO">VALUE: [0.00010649999999999896, 0.00010579199999999692, 0.00010577699999999787, 0.00010583299999999962, 0.0001058750000000018, 0.00010613900000000162, 0.0001063889999999984, 0.00010576399999999778, 0.00010586100000000223, 0.00010563899999999765, 0.00010556999999999928, 0.00010622299999999904, 0.00010604200000000064, 0.00010577800000000082, 0.00010562499999999808, 0.00010544399999999968, 0.00010552700000000109, 0.00010613899999999815, 0.00010627799999999785, 0.00010612499999999858, 0.00010581900000000005, 0.0001057079999999995, 0.00010598599999999889, 0.00010622199999999957, 0.00010545799999999925, 0.00010579100000000091, 0.0001062499999999987, 0.00010612499999999858, 0.00010583299999999962, 0.00010593100000000008, 0.00010591700000000051, 0.00010602800000000107, 0.00010584699999999919, 0.00010593100000000008, 0.0001062499999999987, 0.00010569399999999993, 0.00010576400000000125, 0.0001057499999999982, 0.00010555600000000318, 0.00010541700000000001, 0.00010552800000000057, 0.00010600000000000193, 0.00010570800000000297, 0.00010613899999999815, 0.00010569500000000287, 0.0001057079999999995, 0.00010581900000000005, 0.00010616700000000076, 0.00010620899999999947, 0.0001058889999999979]</msg>
<status status="PASS" starttime="20201029 18:15:31.343" endtime="20201029 18:15:31.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.339" endtime="20201029 18:15:31.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.356" endtime="20201029 18:15:31.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.354" endtime="20201029 18:15:31.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.353" endtime="20201029 18:15:31.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.988" endtime="20201029 18:15:31.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.988" endtime="20201029 18:15:31.376"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.385" endtime="20201029 18:15:31.405"></status>
</kw>
<msg timestamp="20201029 18:15:31.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.383" endtime="20201029 18:15:31.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.406" endtime="20201029 18:15:31.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.409" endtime="20201029 18:15:31.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.381" endtime="20201029 18:15:31.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.379" endtime="20201029 18:15:31.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.418" endtime="20201029 18:15:31.703"></status>
</kw>
<msg timestamp="20201029 18:15:31.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021220139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.416" endtime="20201029 18:15:31.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021220139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021326972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.707" endtime="20201029 18:15:31.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.715" endtime="20201029 18:15:31.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.414" endtime="20201029 18:15:31.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.412" endtime="20201029 18:15:31.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.722" level="INFO">${RESULT} = [{'diff': 0.00010683300000000062}, {'diff': 0.00010713899999999915}, {'diff': 0.00010726399999999928}, {'diff': 0.00010727800000000232}, {'diff': 0.0001067499999999992}, {'diff': 0.0001073060000000014...</msg>
<status status="PASS" starttime="20201029 18:15:31.719" endtime="20201029 18:15:31.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.727" level="INFO">${ACCURACY} = {'diff': [0.00010683300000000062, 0.00010713899999999915, 0.00010726399999999928, 0.00010727800000000232, 0.0001067499999999992, 0.00010730600000000146, 0.00010640300000000144, 0.00010716699999999829,...</msg>
<status status="PASS" starttime="20201029 18:15:31.723" endtime="20201029 18:15:31.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.732" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.731" endtime="20201029 18:15:31.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.734" level="INFO">VALUE: [0.00010683300000000062, 0.00010713899999999915, 0.00010726399999999928, 0.00010727800000000232, 0.0001067499999999992, 0.00010730600000000146, 0.00010640300000000144, 0.00010716699999999829, 0.00010644400000000068, 0.00010663899999999865, 0.00010729099999999894, 0.00010713900000000262, 0.000107208000000001, 0.0001070690000000013, 0.00010702699999999912, 0.00010727700000000284, 0.0001067499999999992, 0.00010647299999999929, 0.00010701299999999955, 0.00010731899999999808, 0.0001071950000000009, 0.00010734800000000017, 0.00010647199999999982, 0.00010645899999999972, 0.00010727799999999885, 0.0001067080000000005, 0.00010676399999999878, 0.00010645899999999972, 0.00010713899999999915, 0.00010665200000000222, 0.00010676400000000225, 0.00010681900000000105, 0.0001072499999999997, 0.00010698599999999989, 0.00010732000000000103, 0.00010712499999999958, 0.00010644500000000015, 0.00010699999999999946, 0.0001065690000000008, 0.00010693000000000161, 0.0001066950000000004, 0.00010733300000000112, 0.0001066950000000004, 0.00010707000000000078, 0.00010699999999999946, 0.00010687499999999933, 0.00010641599999999807, 0.00010704200000000164, 0.00010665299999999822, 0.00010633300000000012]</msg>
<status status="PASS" starttime="20201029 18:15:31.733" endtime="20201029 18:15:31.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.728" endtime="20201029 18:15:31.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.739" endtime="20201029 18:15:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.738" endtime="20201029 18:15:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.736" endtime="20201029 18:15:31.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.377" endtime="20201029 18:15:31.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.377" endtime="20201029 18:15:31.760"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.768" endtime="20201029 18:15:31.788"></status>
</kw>
<msg timestamp="20201029 18:15:31.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.767" endtime="20201029 18:15:31.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.790" endtime="20201029 18:15:31.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.792" endtime="20201029 18:15:31.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.764" endtime="20201029 18:15:31.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.762" endtime="20201029 18:15:31.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.801" endtime="20201029 18:15:32.088"></status>
</kw>
<msg timestamp="20201029 18:15:32.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.800" endtime="20201029 18:15:32.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.092" endtime="20201029 18:15:32.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.100" endtime="20201029 18:15:32.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.797" endtime="20201029 18:15:32.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.795" endtime="20201029 18:15:32.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.106" level="INFO">${RESULT} = [{'diff': 0.00010787500000000033}, {'diff': 0.00010763899999999965}, {'diff': 0.00010823600000000114}, {'diff': 0.00010787500000000033}, {'diff': 0.0001075560000000017}, {'diff': 0.0001081390000000001...</msg>
<status status="PASS" starttime="20201029 18:15:32.103" endtime="20201029 18:15:32.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.110" level="INFO">${ACCURACY} = {'diff': [0.00010787500000000033, 0.00010763899999999965, 0.00010823600000000114, 0.00010787500000000033, 0.0001075560000000017, 0.00010813900000000015, 0.0001082500000000007, 0.0001083890000000004, 0...</msg>
<status status="PASS" starttime="20201029 18:15:32.107" endtime="20201029 18:15:32.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.115" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.114" endtime="20201029 18:15:32.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.117" level="INFO">VALUE: [0.00010787500000000033, 0.00010763899999999965, 0.00010823600000000114, 0.00010787500000000033, 0.0001075560000000017, 0.00010813900000000015, 0.0001082500000000007, 0.0001083890000000004, 0.00010765199999999975, 0.00010805499999999926, 0.00010786200000000024, 0.0001077500000000002, 0.00010834700000000169, 0.00010745900000000072, 0.00010757000000000128, 0.00010833300000000212, 0.0001073889999999994, 0.0001073889999999994, 0.00010817999999999939, 0.00010782000000000153, 0.00010776399999999978, 0.00010811100000000101, 0.00010805500000000273, 0.00010801400000000003, 0.00010807000000000178, 0.00010751399999999953, 0.00010783300000000162, 0.00010820900000000147, 0.00010749999999999996, 0.00010794400000000218, 0.00010830599999999899, 0.00010751399999999953, 0.0001082500000000007, 0.00010761100000000051, 0.00010733300000000112, 0.00010747200000000082, 0.00010818100000000233, 0.00010801400000000003, 0.00010736099999999679, 0.00010736100000000026, 0.00010773600000000064, 0.00010749999999999996, 0.00010781899999999858, 0.00010798600000000089, 0.00010801400000000003, 0.0001075279999999991, 0.00010830499999999951, 0.00010805499999999926, 0.00010754199999999867, 0.00010801400000000003]</msg>
<status status="PASS" starttime="20201029 18:15:32.116" endtime="20201029 18:15:32.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.111" endtime="20201029 18:15:32.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.122" endtime="20201029 18:15:32.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.120" endtime="20201029 18:15:32.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.119" endtime="20201029 18:15:32.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.761" endtime="20201029 18:15:32.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.760" endtime="20201029 18:15:32.142"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.151" endtime="20201029 18:15:32.172"></status>
</kw>
<msg timestamp="20201029 18:15:32.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.150" endtime="20201029 18:15:32.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.173" endtime="20201029 18:15:32.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.176" endtime="20201029 18:15:32.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.147" endtime="20201029 18:15:32.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.145" endtime="20201029 18:15:32.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.184" endtime="20201029 18:15:32.470"></status>
</kw>
<msg timestamp="20201029 18:15:32.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.183" endtime="20201029 18:15:32.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022404278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.474" endtime="20201029 18:15:32.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.482" endtime="20201029 18:15:32.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.181" endtime="20201029 18:15:32.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.179" endtime="20201029 18:15:32.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.489" level="INFO">${RESULT} = [{'diff': 0.00010962499999999861}, {'diff': 0.00010884699999999872}, {'diff': 0.00010845799999999878}, {'diff': 0.00010899999999999799}, {'diff': 0.00010913900000000115}, {'diff': 0.000109055000000000...</msg>
<status status="PASS" starttime="20201029 18:15:32.486" endtime="20201029 18:15:32.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.493" level="INFO">${ACCURACY} = {'diff': [0.00010962499999999861, 0.00010884699999999872, 0.00010845799999999878, 0.00010899999999999799, 0.00010913900000000115, 0.00010905500000000026, 0.00010841600000000007, 0.00010879199999999992...</msg>
<status status="PASS" starttime="20201029 18:15:32.490" endtime="20201029 18:15:32.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.497" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.496" endtime="20201029 18:15:32.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.499" level="INFO">VALUE: [0.00010962499999999861, 0.00010884699999999872, 0.00010845799999999878, 0.00010899999999999799, 0.00010913900000000115, 0.00010905500000000026, 0.00010841600000000007, 0.00010879199999999992, 0.00010844499999999868, 0.00010850000000000096, 0.0001085829999999989, 0.00010927800000000085, 0.00010863900000000065, 0.0001087219999999986, 0.00010897300000000179, 0.00010887499999999786, 0.00010887500000000133, 0.00010916700000000029, 0.00010912500000000158, 0.00010926399999999781, 0.00010851400000000053, 0.00010869400000000293, 0.0001087080000000025, 0.00010881999999999906, 0.00010848600000000139, 0.00010912500000000158, 0.00010861100000000151, 0.0001083890000000004, 0.00010859799999999795, 0.00010876400000000078, 0.00010850000000000096, 0.0001092219999999991, 0.00010891700000000004, 0.0001088890000000009, 0.00010912499999999811, 0.00010849999999999749, 0.0001090280000000006, 0.00010912500000000158, 0.00010850000000000096, 0.00010888800000000143, 0.00010877800000000035, 0.00010905599999999974, 0.0001085829999999989, 0.00010854199999999967, 0.00010887499999999786, 0.00010859699999999847, 0.00010841699999999954, 0.00010931900000000008, 0.00010920799999999953, 0.00010920799999999953]</msg>
<status status="PASS" starttime="20201029 18:15:32.498" endtime="20201029 18:15:32.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.493" endtime="20201029 18:15:32.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.505" endtime="20201029 18:15:32.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.503" endtime="20201029 18:15:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.502" endtime="20201029 18:15:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.143" endtime="20201029 18:15:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.143" endtime="20201029 18:15:32.526"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.534" endtime="20201029 18:15:32.554"></status>
</kw>
<msg timestamp="20201029 18:15:32.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.533" endtime="20201029 18:15:32.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.556" endtime="20201029 18:15:32.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.558" endtime="20201029 18:15:32.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.530" endtime="20201029 18:15:32.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.528" endtime="20201029 18:15:32.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.567" endtime="20201029 18:15:32.853"></status>
</kw>
<msg timestamp="20201029 18:15:32.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.565" endtime="20201029 18:15:32.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.857" endtime="20201029 18:15:32.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.865" endtime="20201029 18:15:32.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.563" endtime="20201029 18:15:32.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.561" endtime="20201029 18:15:32.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.872" level="INFO">${RESULT} = [{'diff': 0.00011016599999999835}, {'diff': 0.00011000000000000246}, {'diff': 0.00010983399999999963}, {'diff': 0.00010994500000000018}, {'diff': 0.00010976400000000178}, {'diff': 0.000110056000000000...</msg>
<status status="PASS" starttime="20201029 18:15:32.868" endtime="20201029 18:15:32.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.876" level="INFO">${ACCURACY} = {'diff': [0.00011016599999999835, 0.00011000000000000246, 0.00010983399999999963, 0.00010994500000000018, 0.00010976400000000178, 0.00011005600000000074, 0.00011026400000000228, 0.00010936099999999879...</msg>
<status status="PASS" starttime="20201029 18:15:32.873" endtime="20201029 18:15:32.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.881" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.880" endtime="20201029 18:15:32.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.883" level="INFO">VALUE: [0.00011016599999999835, 0.00011000000000000246, 0.00010983399999999963, 0.00010994500000000018, 0.00010976400000000178, 0.00011005600000000074, 0.00011026400000000228, 0.00010936099999999879, 0.00010963900000000165, 0.00010955500000000076, 0.00010969400000000046, 0.00011026399999999881, 0.00011032000000000056, 0.00010951399999999806, 0.00011024999999999924, 0.00011004200000000117, 0.00010954100000000119, 0.00011018100000000086, 0.00011000000000000246, 0.00011020799999999706, 0.00011031899999999761, 0.00010937500000000183, 0.00010961099999999904, 0.00011023599999999967, 0.00011012499999999911, 0.00010993100000000061, 0.0001100700000000003, 0.0001100700000000003, 0.00010968100000000036, 0.00011018100000000086, 0.00010968099999999689, 0.00011033400000000013, 0.00010968100000000036, 0.00010963900000000165, 0.00010938899999999793, 0.00011024999999999924, 0.00010979199999999745, 0.00011011199999999902, 0.00010995800000000028, 0.00010968000000000089, 0.00011023699999999914, 0.00010987499999999886, 0.00010962500000000208, 0.00011013899999999868, 0.00010950000000000196, 0.00011013899999999868, 0.00010982000000000006, 0.00010950000000000196, 0.00010976400000000178, 0.00010969499999999993]</msg>
<status status="PASS" starttime="20201029 18:15:32.882" endtime="20201029 18:15:32.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.877" endtime="20201029 18:15:32.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.888" endtime="20201029 18:15:32.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.886" endtime="20201029 18:15:32.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.885" endtime="20201029 18:15:32.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.526" endtime="20201029 18:15:32.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.526" endtime="20201029 18:15:32.909"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.917" endtime="20201029 18:15:32.937"></status>
</kw>
<msg timestamp="20201029 18:15:32.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.916" endtime="20201029 18:15:32.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.939" endtime="20201029 18:15:32.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.941" endtime="20201029 18:15:32.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.913" endtime="20201029 18:15:32.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.911" endtime="20201029 18:15:32.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.950" endtime="20201029 18:15:33.240"></status>
</kw>
<msg timestamp="20201029 18:15:33.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.949" endtime="20201029 18:15:33.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021276889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.244" endtime="20201029 18:15:33.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.252" endtime="20201029 18:15:33.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.946" endtime="20201029 18:15:33.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.944" endtime="20201029 18:15:33.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.258" level="INFO">${RESULT} = [{'diff': 0.00011148600000000092}, {'diff': 0.000111209000000001}, {'diff': 0.00011094400000000171}, {'diff': 0.00011120799999999806}, {'diff': 0.00011061100000000004}, {'diff': 0.00011051399999999906...</msg>
<status status="PASS" starttime="20201029 18:15:33.255" endtime="20201029 18:15:33.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.262" level="INFO">${ACCURACY} = {'diff': [0.00011148600000000092, 0.000111209000000001, 0.00011094400000000171, 0.00011120799999999806, 0.00011061100000000004, 0.00011051399999999906, 0.00011111100000000054, 0.00011074999999999974, ...</msg>
<status status="PASS" starttime="20201029 18:15:33.259" endtime="20201029 18:15:33.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.266" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.265" endtime="20201029 18:15:33.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.269" level="INFO">VALUE: [0.00011148600000000092, 0.000111209000000001, 0.00011094400000000171, 0.00011120799999999806, 0.00011061100000000004, 0.00011051399999999906, 0.00011111100000000054, 0.00011074999999999974, 0.00011116699999999882, 0.00011076399999999931, 0.00011082000000000106, 0.00011093000000000214, 0.00011123700000000014, 0.00011087499999999986, 0.00011062499999999961, 0.00011061100000000004, 0.00011119499999999796, 0.00011066700000000179, 0.00011036099999999979, 0.00011055600000000124, 0.00011075000000000321, 0.00011108400000000088, 0.00011069400000000146, 0.00011054200000000167, 0.00011101399999999956, 0.00011061100000000004, 0.00011067999999999842, 0.00011118000000000239, 0.00011069400000000146, 0.00011093100000000161, 0.00011118100000000186, 0.00011097200000000085, 0.00011093100000000161, 0.00011105599999999827, 0.00011133400000000113, 0.00011088899999999943, 0.00011099999999999999, 0.00011094399999999824, 0.00011036199999999927, 0.00011036099999999979, 0.00011043000000000164, 0.00011034700000000022, 0.00011112500000000011, 0.00011062499999999961, 0.00011041699999999807, 0.00011043000000000164, 0.00011108400000000088, 0.00011112500000000011, 0.00011073600000000017, 0.00011048599999999992]</msg>
<status status="PASS" starttime="20201029 18:15:33.268" endtime="20201029 18:15:33.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.263" endtime="20201029 18:15:33.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.274" endtime="20201029 18:15:33.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.272" endtime="20201029 18:15:33.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.271" endtime="20201029 18:15:33.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.910" endtime="20201029 18:15:33.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.909" endtime="20201029 18:15:33.294"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.303" endtime="20201029 18:15:33.324"></status>
</kw>
<msg timestamp="20201029 18:15:33.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.301" endtime="20201029 18:15:33.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.325" endtime="20201029 18:15:33.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.328" endtime="20201029 18:15:33.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.299" endtime="20201029 18:15:33.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.297" endtime="20201029 18:15:33.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.336" endtime="20201029 18:15:33.622"></status>
</kw>
<msg timestamp="20201029 18:15:33.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.335" endtime="20201029 18:15:33.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022140111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.626" endtime="20201029 18:15:33.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.634" endtime="20201029 18:15:33.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.332" endtime="20201029 18:15:33.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.331" endtime="20201029 18:15:33.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.640" level="INFO">${RESULT} = [{'diff': 0.00011191699999999957}, {'diff': 0.00011176400000000031}, {'diff': 0.0001122770000000009}, {'diff': 0.00011137500000000036}, {'diff': 0.00011148600000000092}, {'diff': 0.0001117909999999999...</msg>
<status status="PASS" starttime="20201029 18:15:33.637" endtime="20201029 18:15:33.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.644" level="INFO">${ACCURACY} = {'diff': [0.00011191699999999957, 0.00011176400000000031, 0.0001122770000000009, 0.00011137500000000036, 0.00011148600000000092, 0.00011179099999999997, 0.00011166700000000279, 0.0001119160000000001, ...</msg>
<status status="PASS" starttime="20201029 18:15:33.641" endtime="20201029 18:15:33.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.649" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.648" endtime="20201029 18:15:33.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.651" level="INFO">VALUE: [0.00011191699999999957, 0.00011176400000000031, 0.0001122770000000009, 0.00011137500000000036, 0.00011148600000000092, 0.00011179099999999997, 0.00011166700000000279, 0.0001119160000000001, 0.00011173600000000117, 0.00011134699999999775, 0.00011175000000000074, 0.00011198600000000142, 0.00011215300000000025, 0.00011184700000000172, 0.0001117220000000016, 0.00011137499999999689, 0.0001115700000000018, 0.00011218099999999939, 0.00011236100000000179, 0.00011155600000000224, 0.00011200000000000099, 0.00011212499999999764, 0.00011148599999999745, 0.00011152799999999963, 0.00011180599999999902, 0.00011211100000000154, 0.00011161100000000104, 0.00011142999999999917, 0.00011229199999999995, 0.00011179199999999945, 0.0001114159999999996, 0.00011212499999999764, 0.00011175000000000074, 0.00011186100000000129, 0.00011144399999999874, 0.00011212500000000111, 0.00011217999999999992, 0.00011154099999999972, 0.00011184699999999825, 0.00011218099999999939, 0.00011198600000000142, 0.00011151400000000006, 0.00011161100000000104, 0.00011166699999999932, 0.00011154099999999972, 0.00011143099999999864, 0.00011208399999999841, 0.00011169399999999899, 0.00011187500000000086, 0.00011192999999999967]</msg>
<status status="PASS" starttime="20201029 18:15:33.650" endtime="20201029 18:15:33.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.645" endtime="20201029 18:15:33.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.656" endtime="20201029 18:15:33.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.655" endtime="20201029 18:15:33.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.654" endtime="20201029 18:15:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.295" endtime="20201029 18:15:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.295" endtime="20201029 18:15:33.677"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.686" endtime="20201029 18:15:33.706"></status>
</kw>
<msg timestamp="20201029 18:15:33.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.684" endtime="20201029 18:15:33.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.707" endtime="20201029 18:15:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.710" endtime="20201029 18:15:33.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.682" endtime="20201029 18:15:33.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.680" endtime="20201029 18:15:33.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.718" endtime="20201029 18:15:34.004"></status>
</kw>
<msg timestamp="20201029 18:15:34.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021197, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:33.717" endtime="20201029 18:15:34.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021083319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021197, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:34.008" endtime="20201029 18:15:34.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.016" endtime="20201029 18:15:34.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.714" endtime="20201029 18:15:34.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.713" endtime="20201029 18:15:34.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.022" level="INFO">${RESULT} = [{'diff': 0.00011368100000000089}, {'diff': 0.00011284700000000272}, {'diff': 0.00011266700000000032}, {'diff': 0.000113290999999998}, {'diff': 0.00011287500000000186}, {'diff': 0.00011258399999999891...</msg>
<status status="PASS" starttime="20201029 18:15:34.019" endtime="20201029 18:15:34.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.027" level="INFO">${ACCURACY} = {'diff': [0.00011368100000000089, 0.00011284700000000272, 0.00011266700000000032, 0.000113290999999998, 0.00011287500000000186, 0.00011258399999999891, 0.00011287500000000186, 0.00011329200000000095, ...</msg>
<status status="PASS" starttime="20201029 18:15:34.023" endtime="20201029 18:15:34.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.031" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.030" endtime="20201029 18:15:34.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.034" level="INFO">VALUE: [0.00011368100000000089, 0.00011284700000000272, 0.00011266700000000032, 0.000113290999999998, 0.00011287500000000186, 0.00011258399999999891, 0.00011287500000000186, 0.00011329200000000095, 0.00011270899999999903, 0.00011281999999999959, 0.00011268099999999989, 0.00011256899999999986, 0.00011280500000000054, 0.00011293000000000067, 0.00011294400000000024, 0.00011244399999999974, 0.00011330599999999705, 0.00011256899999999986, 0.00011240200000000103, 0.00011243099999999964, 0.00011319499999999996, 0.0001129299999999972, 0.00011262500000000161, 0.00011330600000000052, 0.00011284699999999925, 0.00011244399999999974, 0.00011279200000000045, 0.000112903000000001, 0.00011256899999999986, 0.0001132359999999992, 0.00011302800000000113, 0.00011261100000000204, 0.00011272199999999913, 0.00011317999999999745, 0.00011298600000000242, 0.00011291700000000057, 0.00011301400000000156, 0.00011301399999999809, 0.00011250000000000149, 0.00011249999999999802, 0.00011329199999999748, 0.00011315299999999778, 0.00011286099999999882, 0.00011237500000000136, 0.00011330600000000052, 0.0001127359999999987, 0.0001132359999999992, 0.00011286099999999882, 0.00011322199999999963, 0.00011255599999999977]</msg>
<status status="PASS" starttime="20201029 18:15:34.032" endtime="20201029 18:15:34.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.028" endtime="20201029 18:15:34.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.038" endtime="20201029 18:15:34.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.037" endtime="20201029 18:15:34.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.036" endtime="20201029 18:15:34.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.678" endtime="20201029 18:15:34.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.678" endtime="20201029 18:15:34.059"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.067" endtime="20201029 18:15:34.088"></status>
</kw>
<msg timestamp="20201029 18:15:34.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.066" endtime="20201029 18:15:34.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.089" endtime="20201029 18:15:34.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.092" endtime="20201029 18:15:34.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.063" endtime="20201029 18:15:34.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.061" endtime="20201029 18:15:34.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.100" endtime="20201029 18:15:34.387"></status>
</kw>
<msg timestamp="20201029 18:15:34.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021363, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:34.099" endtime="20201029 18:15:34.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021363, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:34.391" endtime="20201029 18:15:34.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.399" endtime="20201029 18:15:34.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.096" endtime="20201029 18:15:34.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.095" endtime="20201029 18:15:34.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.407" level="INFO">${RESULT} = [{'diff': 0.000114597000000001}, {'diff': 0.00011365299999999828}, {'diff': 0.00011416699999999835}, {'diff': 0.00011427800000000238}, {'diff': 0.00011429199999999848}, {'diff': 0.00011398599999999995...</msg>
<status status="PASS" starttime="20201029 18:15:34.403" endtime="20201029 18:15:34.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.411" level="INFO">${ACCURACY} = {'diff': [0.000114597000000001, 0.00011365299999999828, 0.00011416699999999835, 0.00011427800000000238, 0.00011429199999999848, 0.00011398599999999995, 0.00011347199999999988, 0.00011347199999999988, ...</msg>
<status status="PASS" starttime="20201029 18:15:34.408" endtime="20201029 18:15:34.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.415" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.414" endtime="20201029 18:15:34.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.417" level="INFO">VALUE: [0.000114597000000001, 0.00011365299999999828, 0.00011416699999999835, 0.00011427800000000238, 0.00011429199999999848, 0.00011398599999999995, 0.00011347199999999988, 0.00011347199999999988, 0.00011348599999999945, 0.00011388899999999896, 0.00011347299999999935, 0.00011388899999999896, 0.000113903000000002, 0.00011411100000000007, 0.00011397299999999985, 0.00011380600000000102, 0.00011402799999999866, 0.00011377799999999841, 0.00011362499999999914, 0.00011429199999999848, 0.00011351399999999859, 0.00011408299999999746, 0.00011336099999999932, 0.00011362499999999914, 0.0001142360000000002, 0.00011384700000000025, 0.00011351399999999859, 0.00011341599999999813, 0.00011418099999999792, 0.00011365300000000175, 0.00011365300000000175, 0.00011354099999999825, 0.00011427799999999891, 0.00011411199999999955, 0.00011402699999999918, 0.00011361099999999957, 0.00011351399999999859, 0.00011334699999999975, 0.00011427799999999891, 0.00011377799999999841, 0.00011398599999999995, 0.00011388900000000243, 0.00011332000000000009, 0.00011336099999999932, 0.00011358300000000043, 0.00011397200000000038, 0.00011348599999999945, 0.00011402699999999918, 0.00011429100000000247, 0.0001140420000000017]</msg>
<status status="PASS" starttime="20201029 18:15:34.416" endtime="20201029 18:15:34.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.411" endtime="20201029 18:15:34.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.422" endtime="20201029 18:15:34.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.421" endtime="20201029 18:15:34.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.420" endtime="20201029 18:15:34.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.060" endtime="20201029 18:15:34.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.059" endtime="20201029 18:15:34.443"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.451" endtime="20201029 18:15:34.473"></status>
</kw>
<msg timestamp="20201029 18:15:34.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.450" endtime="20201029 18:15:34.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.474" endtime="20201029 18:15:34.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.476" endtime="20201029 18:15:34.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.447" endtime="20201029 18:15:34.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.445" endtime="20201029 18:15:34.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.485" endtime="20201029 18:15:34.771"></status>
</kw>
<msg timestamp="20201029 18:15:34.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.484" endtime="20201029 18:15:34.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022355528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022471264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.775" endtime="20201029 18:15:34.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.783" endtime="20201029 18:15:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.481" endtime="20201029 18:15:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.480" endtime="20201029 18:15:34.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.790" level="INFO">${RESULT} = [{'diff': 0.0001157360000000017}, {'diff': 0.0001148620000000003}, {'diff': 0.0001149169999999991}, {'diff': 0.00011516599999999988}, {'diff': 0.00011490299999999953}, {'diff': 0.000115291}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:15:34.786" endtime="20201029 18:15:34.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.793" level="INFO">${ACCURACY} = {'diff': [0.0001157360000000017, 0.0001148620000000003, 0.0001149169999999991, 0.00011516599999999988, 0.00011490299999999953, 0.000115291, 0.00011526400000000034, 0.00011477799999999941, 0.0001151669...</msg>
<status status="PASS" starttime="20201029 18:15:34.791" endtime="20201029 18:15:34.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.798" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.797" endtime="20201029 18:15:34.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.800" level="INFO">VALUE: [0.0001157360000000017, 0.0001148620000000003, 0.0001149169999999991, 0.00011516599999999988, 0.00011490299999999953, 0.000115291, 0.00011526400000000034, 0.00011477799999999941, 0.00011516699999999935, 0.00011443099999999817, 0.00011498600000000095, 0.00011497200000000138, 0.00011509800000000098, 0.00011517999999999945, 0.00011537499999999742, 0.00011509800000000098, 0.00011441700000000207, 0.00011477800000000288, 0.00011516699999999935, 0.0001152360000000012, 0.0001147909999999995, 0.00011498700000000042, 0.00011497200000000138, 0.00011454099999999925, 0.00011480599999999855, 0.0001151109999999976, 0.00011447200000000088, 0.0001152360000000012, 0.00011490299999999953, 0.00011486100000000082, 0.00011451399999999959, 0.00011433299999999771, 0.00011475000000000027, 0.000115291, 0.00011465199999999981, 0.00011502700000000018, 0.00011515299999999978, 0.00011484700000000125, 0.00011484699999999778, 0.00011483299999999821, 0.00011483299999999821, 0.00011508399999999794, 0.00011513800000000074, 0.00011520900000000153, 0.00011488899999999996, 0.00011502799999999966, 0.00011527700000000043, 0.0001150970000000015, 0.00011504100000000322, 0.00011461200000000005]</msg>
<status status="PASS" starttime="20201029 18:15:34.799" endtime="20201029 18:15:34.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.794" endtime="20201029 18:15:34.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.806" endtime="20201029 18:15:34.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.804" endtime="20201029 18:15:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.803" endtime="20201029 18:15:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.444" endtime="20201029 18:15:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.443" endtime="20201029 18:15:34.827"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.835" endtime="20201029 18:15:34.855"></status>
</kw>
<msg timestamp="20201029 18:15:34.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.834" endtime="20201029 18:15:34.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.857" endtime="20201029 18:15:34.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.859" endtime="20201029 18:15:34.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.831" endtime="20201029 18:15:34.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.829" endtime="20201029 18:15:34.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.868" endtime="20201029 18:15:35.153"></status>
</kw>
<msg timestamp="20201029 18:15:35.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021229181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.867" endtime="20201029 18:15:35.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021229181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.158" endtime="20201029 18:15:35.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.165" endtime="20201029 18:15:35.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.864" endtime="20201029 18:15:35.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.862" endtime="20201029 18:15:35.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.172" level="INFO">${RESULT} = [{'diff': 0.00011605500000000032}, {'diff': 0.00011582000000000259}, {'diff': 0.00011563900000000071}, {'diff': 0.0001157910000000005}, {'diff': 0.00011554199999999973}, {'diff': 0.0001161249999999981...</msg>
<status status="PASS" starttime="20201029 18:15:35.169" endtime="20201029 18:15:35.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.176" level="INFO">${ACCURACY} = {'diff': [0.00011605500000000032, 0.00011582000000000259, 0.00011563900000000071, 0.0001157910000000005, 0.00011554199999999973, 0.00011612499999999817, 0.00011586199999999783, 0.0001159170000000001, ...</msg>
<status status="PASS" starttime="20201029 18:15:35.173" endtime="20201029 18:15:35.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.181" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.180" endtime="20201029 18:15:35.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.183" level="INFO">VALUE: [0.00011605500000000032, 0.00011582000000000259, 0.00011563900000000071, 0.0001157910000000005, 0.00011554199999999973, 0.00011612499999999817, 0.00011586199999999783, 0.0001159170000000001, 0.00011629200000000048, 0.00011570899999999856, 0.00011616600000000088, 0.00011595799999999934, 0.00011605500000000032, 0.00011568099999999942, 0.0001153750000000009, 0.00011606999999999937, 0.00011547199999999841, 0.00011619499999999949, 0.00011611200000000155, 0.0001157360000000017, 0.00011619500000000296, 0.00011565300000000028, 0.00011594399999999977, 0.00011568099999999942, 0.00011597199999999891, 0.00011623599999999873, 0.00011570799999999909, 0.000115597000000002, 0.00011534700000000175, 0.00011604100000000075, 0.00011600000000000152, 0.00011547199999999841, 0.00011534699999999828, 0.00011547300000000135, 0.00011554199999999973, 0.00011609800000000198, 0.00011580500000000007, 0.00011579199999999998, 0.00011626399999999787, 0.00011583299999999921, 0.00011568100000000289, 0.00011559800000000148, 0.00011598599999999848, 0.00011598699999999795, 0.000115388999999997, 0.00011536100000000132, 0.00011565300000000028, 0.00011609699999999903, 0.00011630500000000057, 0.00011626399999999787]</msg>
<status status="PASS" starttime="20201029 18:15:35.182" endtime="20201029 18:15:35.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.177" endtime="20201029 18:15:35.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.188" endtime="20201029 18:15:35.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.187" endtime="20201029 18:15:35.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.186" endtime="20201029 18:15:35.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.828" endtime="20201029 18:15:35.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.827" endtime="20201029 18:15:35.209"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.217" endtime="20201029 18:15:35.238"></status>
</kw>
<msg timestamp="20201029 18:15:35.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.216" endtime="20201029 18:15:35.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.239" endtime="20201029 18:15:35.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.242" endtime="20201029 18:15:35.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.213" endtime="20201029 18:15:35.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.211" endtime="20201029 18:15:35.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.250" endtime="20201029 18:15:35.537"></status>
</kw>
<msg timestamp="20201029 18:15:35.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021318097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.249" endtime="20201029 18:15:35.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021318097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021434819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.541" endtime="20201029 18:15:35.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.549" endtime="20201029 18:15:35.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.246" endtime="20201029 18:15:35.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.245" endtime="20201029 18:15:35.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.556" level="INFO">${RESULT} = [{'diff': 0.00011672199999999966}, {'diff': 0.0001170699999999969}, {'diff': 0.00011698599999999948}, {'diff': 0.00011726399999999887}, {'diff': 0.00011652800000000116}, {'diff': 0.0001164170000000006...</msg>
<status status="PASS" starttime="20201029 18:15:35.552" endtime="20201029 18:15:35.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.560" level="INFO">${ACCURACY} = {'diff': [0.00011672199999999966, 0.0001170699999999969, 0.00011698599999999948, 0.00011726399999999887, 0.00011652800000000116, 0.0001164170000000006, 0.00011723599999999973, 0.00011684799999999926, ...</msg>
<status status="PASS" starttime="20201029 18:15:35.556" endtime="20201029 18:15:35.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.564" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.563" endtime="20201029 18:15:35.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.566" level="INFO">VALUE: [0.00011672199999999966, 0.0001170699999999969, 0.00011698599999999948, 0.00011726399999999887, 0.00011652800000000116, 0.0001164170000000006, 0.00011723599999999973, 0.00011684799999999926, 0.00011729099999999854, 0.00011661199999999858, 0.00011626399999999787, 0.00011713899999999874, 0.0001169170000000011, 0.00011663899999999824, 0.00011688900000000196, 0.00011665299999999781, 0.00011668000000000095, 0.00011727799999999844, 0.00011697199999999991, 0.00011690299999999806, 0.00011705599999999733, 0.0001164170000000006, 0.00011677800000000141, 0.00011683399999999969, 0.00011713900000000221, 0.00011698599999999948, 0.00011650000000000202, 0.00011679200000000098, 0.00011697199999999991, 0.00011720800000000059, 0.00011686099999999935, 0.00011665300000000128, 0.00011658299999999996, 0.00011702799999999819, 0.00011697199999999991, 0.00011644400000000027, 0.00011690300000000153, 0.00011634699999999928, 0.0001163620000000018, 0.00011679200000000098, 0.00011698599999999948, 0.00011633399999999919, 0.00011719399999999755, 0.00011656999999999987, 0.00011716600000000188, 0.00011668000000000095, 0.00011709700000000003, 0.00011676399999999837, 0.00011658299999999996, 0.0001169170000000011]</msg>
<status status="PASS" starttime="20201029 18:15:35.565" endtime="20201029 18:15:35.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.560" endtime="20201029 18:15:35.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.571" endtime="20201029 18:15:35.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.570" endtime="20201029 18:15:35.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.569" endtime="20201029 18:15:35.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.210" endtime="20201029 18:15:35.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.209" endtime="20201029 18:15:35.592"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.600" endtime="20201029 18:15:35.622"></status>
</kw>
<msg timestamp="20201029 18:15:35.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.599" endtime="20201029 18:15:35.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.623" endtime="20201029 18:15:35.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.626" endtime="20201029 18:15:35.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.596" endtime="20201029 18:15:35.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.594" endtime="20201029 18:15:35.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.634" endtime="20201029 18:15:35.921"></status>
</kw>
<msg timestamp="20201029 18:15:35.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.633" endtime="20201029 18:15:35.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022213819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.925" endtime="20201029 18:15:35.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.933" endtime="20201029 18:15:35.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.630" endtime="20201029 18:15:35.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.629" endtime="20201029 18:15:35.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.939" level="INFO">${RESULT} = [{'diff': 0.000118695000000002}, {'diff': 0.00011798600000000048}, {'diff': 0.00011809800000000051}, {'diff': 0.00011820799999999812}, {'diff': 0.00011787499999999992}, {'diff': 0.00011801399999999962...</msg>
<status status="PASS" starttime="20201029 18:15:35.936" endtime="20201029 18:15:35.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.943" level="INFO">${ACCURACY} = {'diff': [0.000118695000000002, 0.00011798600000000048, 0.00011809800000000051, 0.00011820799999999812, 0.00011787499999999992, 0.00011801399999999962, 0.00011787499999999992, 0.000118082999999998, 0....</msg>
<status status="PASS" starttime="20201029 18:15:35.940" endtime="20201029 18:15:35.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.948" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.947" endtime="20201029 18:15:35.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.950" level="INFO">VALUE: [0.000118695000000002, 0.00011798600000000048, 0.00011809800000000051, 0.00011820799999999812, 0.00011787499999999992, 0.00011801399999999962, 0.00011787499999999992, 0.000118082999999998, 0.00011797200000000091, 0.00011745800000000084, 0.00011798600000000048, 0.00011740300000000203, 0.00011797200000000091, 0.00011777799999999894, 0.00011823600000000073, 0.00011786099999999688, 0.00011766699999999838, 0.0001177499999999998, 0.00011776400000000284, 0.00011787499999999992, 0.00011781899999999818, 0.00011801399999999962, 0.0001179439999999983, 0.00011787499999999992, 0.00011819399999999855, 0.00011808300000000146, 0.00011822200000000116, 0.00011777799999999894, 0.00011738900000000246, 0.00011829199999999901, 0.00011773600000000023, 0.00011822200000000116, 0.000117388999999999, 0.00011768000000000195, 0.000118082999999998, 0.00011815300000000278, 0.00011733299999999725, 0.00011797200000000091, 0.00011801399999999962, 0.0001178889999999995, 0.0001182500000000003, 0.00011826399999999987, 0.00011779199999999851, 0.00011752699999999922, 0.00011752799999999869, 0.00011809800000000051, 0.00011795799999999787, 0.0001177499999999998, 0.00011791599999999916, 0.00011731900000000114]</msg>
<status status="PASS" starttime="20201029 18:15:35.949" endtime="20201029 18:15:35.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.944" endtime="20201029 18:15:35.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.956" endtime="20201029 18:15:35.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.954" endtime="20201029 18:15:35.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.953" endtime="20201029 18:15:35.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.593" endtime="20201029 18:15:35.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.592" endtime="20201029 18:15:35.976"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.985" endtime="20201029 18:15:36.005"></status>
</kw>
<msg timestamp="20201029 18:15:36.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.983" endtime="20201029 18:15:36.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.007" endtime="20201029 18:15:36.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.009" endtime="20201029 18:15:36.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.981" endtime="20201029 18:15:36.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.979" endtime="20201029 18:15:36.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.018" endtime="20201029 18:15:36.304"></status>
</kw>
<msg timestamp="20201029 18:15:36.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021364528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.017" endtime="20201029 18:15:36.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021364528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.308" endtime="20201029 18:15:36.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.316" endtime="20201029 18:15:36.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.014" endtime="20201029 18:15:36.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.012" endtime="20201029 18:15:36.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.322" level="INFO">${RESULT} = [{'diff': 0.00011950000000000155}, {'diff': 0.00011851400000000012}, {'diff': 0.00011890300000000006}, {'diff': 0.00011909700000000203}, {'diff': 0.0001191110000000016}, {'diff': 0.0001186390000000002...</msg>
<status status="PASS" starttime="20201029 18:15:36.319" endtime="20201029 18:15:36.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.327" level="INFO">${ACCURACY} = {'diff': [0.00011950000000000155, 0.00011851400000000012, 0.00011890300000000006, 0.00011909700000000203, 0.0001191110000000016, 0.00011863900000000024, 0.00011845799999999837, 0.00011900000000000105,...</msg>
<status status="PASS" starttime="20201029 18:15:36.323" endtime="20201029 18:15:36.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.332" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.331" endtime="20201029 18:15:36.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.334" level="INFO">VALUE: [0.00011950000000000155, 0.00011851400000000012, 0.00011890300000000006, 0.00011909700000000203, 0.0001191110000000016, 0.00011863900000000024, 0.00011845799999999837, 0.00011900000000000105, 0.00011898599999999801, 0.00011920800000000259, 0.00011890300000000006, 0.00011927800000000044, 0.00011897200000000191, 0.00011926400000000087, 0.00011851399999999665, 0.00011862500000000067, 0.00011866699999999938, 0.0001188890000000005, 0.00011927700000000097, 0.00011927800000000044, 0.00011897199999999844, 0.00011887499999999745, 0.00011836100000000085, 0.0001189309999999992, 0.00011897199999999844, 0.00011866699999999938, 0.00011908300000000246, 0.00011837500000000042, 0.0001192089999999986, 0.000118389, 0.00011906899999999943, 0.00011859800000000101, 0.00011851400000000012, 0.00011895799999999887, 0.00011854099999999979, 0.00011922199999999869, 0.00011863900000000024, 0.0001188890000000005, 0.00011902800000000019, 0.00011856899999999893, 0.00011845900000000131, 0.00011865299999999981, 0.00011894500000000224, 0.00011834700000000128, 0.00011852799999999969, 0.00011829099999999954, 0.0001187639999999969, 0.00011865299999999981, 0.00011865200000000034, 0.00011884799999999779]</msg>
<status status="PASS" starttime="20201029 18:15:36.333" endtime="20201029 18:15:36.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.328" endtime="20201029 18:15:36.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.339" endtime="20201029 18:15:36.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.338" endtime="20201029 18:15:36.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.337" endtime="20201029 18:15:36.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.977" endtime="20201029 18:15:36.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.977" endtime="20201029 18:15:36.360"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.369" endtime="20201029 18:15:36.389"></status>
</kw>
<msg timestamp="20201029 18:15:36.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.367" endtime="20201029 18:15:36.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.391" endtime="20201029 18:15:36.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.393" endtime="20201029 18:15:36.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.364" endtime="20201029 18:15:36.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.362" endtime="20201029 18:15:36.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.402" endtime="20201029 18:15:36.713"></status>
</kw>
<msg timestamp="20201029 18:15:36.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.401" endtime="20201029 18:15:36.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.717" endtime="20201029 18:15:36.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.725" endtime="20201029 18:15:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.398" endtime="20201029 18:15:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.396" endtime="20201029 18:15:36.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.731" level="INFO">${RESULT} = [{'diff': 0.00012070800000000062}, {'diff': 0.00011933299999999925}, {'diff': 0.00011965300000000081}, {'diff': 0.00012024999999999883}, {'diff': 0.00011977799999999747}, {'diff': 0.000119389000000001...</msg>
<status status="PASS" starttime="20201029 18:15:36.728" endtime="20201029 18:15:36.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.735" level="INFO">${ACCURACY} = {'diff': [0.00012070800000000062, 0.00011933299999999925, 0.00011965300000000081, 0.00012024999999999883, 0.00011977799999999747, 0.000119389000000001, 0.00012002700000000172, 0.00011941700000000013, ...</msg>
<status status="PASS" starttime="20201029 18:15:36.732" endtime="20201029 18:15:36.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.740" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.739" endtime="20201029 18:15:36.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.742" level="INFO">VALUE: [0.00012070800000000062, 0.00011933299999999925, 0.00011965300000000081, 0.00012024999999999883, 0.00011977799999999747, 0.000119389000000001, 0.00012002700000000172, 0.00011941700000000013, 0.00012000000000000205, 0.00011941600000000066, 0.0001202500000000023, 0.00011968099999999995, 0.00012002800000000119, 0.00011952799999999722, 0.0001198189999999967, 0.00011987499999999846, 0.00011984699999999932, 0.00011945899999999884, 0.00012011099999999914, 0.00012006900000000043, 0.0001202639999999984, 0.00011997199999999944, 0.0001199310000000002, 0.00011993099999999673, 0.00011938899999999752, 0.00011976400000000137, 0.00011970799999999962, 0.00011944499999999927, 0.00011944400000000327, 0.00012026400000000187, 0.0001199440000000003, 0.00012005500000000086, 0.0001197370000000017, 0.00011947199999999894, 0.0001194029999999971, 0.00011995799999999987, 0.00011987499999999846, 0.00011984699999999932, 0.00011948599999999851, 0.00011972299999999866, 0.00012001300000000215, 0.00012006900000000043, 0.000119695000000003, 0.00012006900000000043, 0.00011961099999999864, 0.00011944499999999927, 0.00011974999999999833, 0.00011963900000000124, 0.0001202769999999985, 0.00011995799999999987]</msg>
<status status="PASS" starttime="20201029 18:15:36.741" endtime="20201029 18:15:36.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.736" endtime="20201029 18:15:36.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.751" endtime="20201029 18:15:36.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.750" endtime="20201029 18:15:36.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.748" endtime="20201029 18:15:36.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.361" endtime="20201029 18:15:36.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.360" endtime="20201029 18:15:36.772"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.780" endtime="20201029 18:15:36.802"></status>
</kw>
<msg timestamp="20201029 18:15:36.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.779" endtime="20201029 18:15:36.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.804" endtime="20201029 18:15:36.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.806" endtime="20201029 18:15:36.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.776" endtime="20201029 18:15:36.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.774" endtime="20201029 18:15:36.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.815" endtime="20201029 18:15:37.100"></status>
</kw>
<msg timestamp="20201029 18:15:37.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.814" endtime="20201029 18:15:37.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.104" endtime="20201029 18:15:37.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.112" endtime="20201029 18:15:37.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.811" endtime="20201029 18:15:37.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.809" endtime="20201029 18:15:37.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.119" level="INFO">${RESULT} = [{'diff': 0.00012083300000000075}, {'diff': 0.00012036099999999939}, {'diff': 0.0001205830000000005}, {'diff': 0.00012052800000000169}, {'diff': 0.00012059700000000007}, {'diff': 0.0001208889999999990...</msg>
<status status="PASS" starttime="20201029 18:15:37.116" endtime="20201029 18:15:37.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.123" level="INFO">${ACCURACY} = {'diff': [0.00012083300000000075, 0.00012036099999999939, 0.0001205830000000005, 0.00012052800000000169, 0.00012059700000000007, 0.00012088899999999903, 0.00012045800000000037, 0.00012051400000000212,...</msg>
<status status="PASS" starttime="20201029 18:15:37.120" endtime="20201029 18:15:37.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.127" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.126" endtime="20201029 18:15:37.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.129" level="INFO">VALUE: [0.00012083300000000075, 0.00012036099999999939, 0.0001205830000000005, 0.00012052800000000169, 0.00012059700000000007, 0.00012088899999999903, 0.00012045800000000037, 0.00012051400000000212, 0.00012030600000000058, 0.00012065300000000181, 0.00012119399999999808, 0.00012092999999999826, 0.00012056900000000093, 0.00012073599999999976, 0.00012031900000000068, 0.00012104199999999829, 0.0001211249999999997, 0.00012070800000000062, 0.00012101399999999915, 0.00012040300000000156, 0.00012124999999999983, 0.00012101399999999915, 0.00012077800000000194, 0.00012049999999999908, 0.00012052800000000169, 0.0001210700000000009, 0.00012108299999999753, 0.00012031900000000068, 0.00012045800000000037, 0.00012079199999999804, 0.00012052700000000222, 0.00012094500000000077, 0.0001206110000000031, 0.00012101400000000262, 0.00012087500000000292, 0.00012056900000000093, 0.00012054199999999779, 0.00012115299999999884, 0.00012101399999999915, 0.0001209579999999974, 0.00012080600000000108, 0.00012113899999999928, 0.00012077800000000194, 0.00012033300000000025, 0.00012047299999999941, 0.00012129099999999907, 0.00012090300000000206, 0.00012074999999999933, 0.00012072200000000019, 0.00012088799999999955]</msg>
<status status="PASS" starttime="20201029 18:15:37.128" endtime="20201029 18:15:37.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.123" endtime="20201029 18:15:37.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.135" endtime="20201029 18:15:37.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.134" endtime="20201029 18:15:37.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.132" endtime="20201029 18:15:37.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.773" endtime="20201029 18:15:37.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.772" endtime="20201029 18:15:37.156"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.164" endtime="20201029 18:15:37.185"></status>
</kw>
<msg timestamp="20201029 18:15:37.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.163" endtime="20201029 18:15:37.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.186" endtime="20201029 18:15:37.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.189" endtime="20201029 18:15:37.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.160" endtime="20201029 18:15:37.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.158" endtime="20201029 18:15:37.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.197" endtime="20201029 18:15:37.502"></status>
</kw>
<msg timestamp="20201029 18:15:37.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.196" endtime="20201029 18:15:37.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.506" endtime="20201029 18:15:37.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.514" endtime="20201029 18:15:37.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.193" endtime="20201029 18:15:37.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.192" endtime="20201029 18:15:37.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.521" level="INFO">${RESULT} = [{'diff': 0.00012187500000000046}, {'diff': 0.0001221250000000007}, {'diff': 0.00012150000000000008}, {'diff': 0.00012184800000000079}, {'diff': 0.00012130600000000158}, {'diff': 0.0001219439999999988...</msg>
<status status="PASS" starttime="20201029 18:15:37.518" endtime="20201029 18:15:37.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.526" level="INFO">${ACCURACY} = {'diff': [0.00012187500000000046, 0.0001221250000000007, 0.00012150000000000008, 0.00012184800000000079, 0.00012130600000000158, 0.00012194399999999883, 0.00012216699999999941, 0.0001222359999999978, ...</msg>
<status status="PASS" starttime="20201029 18:15:37.522" endtime="20201029 18:15:37.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.530" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.529" endtime="20201029 18:15:37.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.532" level="INFO">VALUE: [0.00012187500000000046, 0.0001221250000000007, 0.00012150000000000008, 0.00012184800000000079, 0.00012130600000000158, 0.00012194399999999883, 0.00012216699999999941, 0.0001222359999999978, 0.00012158400000000097, 0.00012225000000000083, 0.0001222220000000017, 0.00012180600000000208, 0.00012198599999999754, 0.00012137499999999996, 0.00012132000000000115, 0.00012167999999999901, 0.0001213050000000021, 0.00012168000000000248, 0.000121389000000003, 0.0001218189999999987, 0.00012191699999999916, 0.00012161100000000064, 0.0001222640000000004, 0.00012179199999999904, 0.00012138899999999953, 0.0001216250000000002, 0.0001217639999999999, 0.0001219440000000023, 0.00012150000000000008, 0.00012132000000000115, 0.00012212499999999724, 0.00012194399999999883, 0.00012187500000000046, 0.00012155499999999889, 0.00012148600000000051, 0.0001213050000000021, 0.00012161100000000064, 0.0001216250000000002, 0.00012155500000000236, 0.00012187500000000046, 0.00012143099999999823, 0.00012173599999999729, 0.00012137499999999996, 0.0001216250000000002, 0.00012183299999999828, 0.00012211100000000114, 0.00012212499999999724, 0.00012161100000000064, 0.0001214029999999991, 0.00012218099999999898]</msg>
<status status="PASS" starttime="20201029 18:15:37.531" endtime="20201029 18:15:37.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.526" endtime="20201029 18:15:37.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.537" endtime="20201029 18:15:37.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.536" endtime="20201029 18:15:37.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.535" endtime="20201029 18:15:37.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.157" endtime="20201029 18:15:37.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.156" endtime="20201029 18:15:37.558"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.566" endtime="20201029 18:15:37.587"></status>
</kw>
<msg timestamp="20201029 18:15:37.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.565" endtime="20201029 18:15:37.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.589" endtime="20201029 18:15:37.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.591" endtime="20201029 18:15:37.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.562" endtime="20201029 18:15:37.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.560" endtime="20201029 18:15:37.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.600" endtime="20201029 18:15:37.886"></status>
</kw>
<msg timestamp="20201029 18:15:37.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.598" endtime="20201029 18:15:37.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021432194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.891" endtime="20201029 18:15:37.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.899" endtime="20201029 18:15:37.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.596" endtime="20201029 18:15:37.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.594" endtime="20201029 18:15:37.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.905" level="INFO">${RESULT} = [{'diff': 0.00012330500000000064}, {'diff': 0.00012255499999999989}, {'diff': 0.00012316700000000042}, {'diff': 0.00012304100000000082}, {'diff': 0.00012238900000000053}, {'diff': 0.000123012999999998...</msg>
<status status="PASS" starttime="20201029 18:15:37.902" endtime="20201029 18:15:37.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.909" level="INFO">${ACCURACY} = {'diff': [0.00012330500000000064, 0.00012255499999999989, 0.00012316700000000042, 0.00012304100000000082, 0.00012238900000000053, 0.0001230129999999982, 0.00012319400000000008, 0.00012274999999999786,...</msg>
<status status="PASS" starttime="20201029 18:15:37.906" endtime="20201029 18:15:37.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.913" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.912" endtime="20201029 18:15:37.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.916" level="INFO">VALUE: [0.00012330500000000064, 0.00012255499999999989, 0.00012316700000000042, 0.00012304100000000082, 0.00012238900000000053, 0.0001230129999999982, 0.00012319400000000008, 0.00012274999999999786, 0.00012230600000000258, 0.00012243099999999923, 0.00012265299999999688, 0.00012297200000000244, 0.00012281999999999918, 0.0001229999999999981, 0.00012238800000000105, 0.00012280500000000014, 0.00012250000000000108, 0.00012297300000000191, 0.0001226250000000012, 0.00012259700000000207, 0.0001231250000000017, 0.00012312499999999824, 0.00012306899999999996, 0.0001225700000000024, 0.0001223059999999991, 0.00012326399999999793, 0.00012280500000000014, 0.00012266600000000044, 0.0001227359999999983, 0.00012305500000000039, 0.0001225700000000024, 0.00012266600000000044, 0.00012266600000000044, 0.00012245899999999837, 0.00012234699999999835, 0.0001227220000000022, 0.00012306999999999943, 0.00012274999999999786, 0.00012304100000000082, 0.00012229199999999954, 0.00012293099999999973, 0.00012266699999999991, 0.00012316699999999695, 0.0001230420000000003, 0.00012224999999999736, 0.00012234700000000182, 0.00012266699999999991, 0.00012286099999999842, 0.00012236099999999792, 0.0001225419999999998]</msg>
<status status="PASS" starttime="20201029 18:15:37.914" endtime="20201029 18:15:37.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.910" endtime="20201029 18:15:37.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.921" endtime="20201029 18:15:37.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.919" endtime="20201029 18:15:37.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.918" endtime="20201029 18:15:37.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.559" endtime="20201029 18:15:37.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.558" endtime="20201029 18:15:37.941"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.950" endtime="20201029 18:15:37.971"></status>
</kw>
<msg timestamp="20201029 18:15:37.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.948" endtime="20201029 18:15:37.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.973" endtime="20201029 18:15:37.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.975" endtime="20201029 18:15:37.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.946" endtime="20201029 18:15:37.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.944" endtime="20201029 18:15:37.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.984" endtime="20201029 18:15:38.270"></status>
</kw>
<msg timestamp="20201029 18:15:38.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.982" endtime="20201029 18:15:38.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.274" endtime="20201029 18:15:38.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.282" endtime="20201029 18:15:38.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.980" endtime="20201029 18:15:38.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.978" endtime="20201029 18:15:38.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.288" level="INFO">${RESULT} = [{'diff': 0.00012373600000000276}, {'diff': 0.00012386099999999942}, {'diff': 0.0001235969999999996}, {'diff': 0.00012411099999999967}, {'diff': 0.00012340200000000162}, {'diff': 0.0001237089999999996...</msg>
<status status="PASS" starttime="20201029 18:15:38.285" endtime="20201029 18:15:38.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.292" level="INFO">${ACCURACY} = {'diff': [0.00012373600000000276, 0.00012386099999999942, 0.0001235969999999996, 0.00012411099999999967, 0.00012340200000000162, 0.00012370899999999962, 0.00012384799999999932, 0.00012411099999999967,...</msg>
<status status="PASS" starttime="20201029 18:15:38.289" endtime="20201029 18:15:38.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.296" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.295" endtime="20201029 18:15:38.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.299" level="INFO">VALUE: [0.00012373600000000276, 0.00012386099999999942, 0.0001235969999999996, 0.00012411099999999967, 0.00012340200000000162, 0.00012370899999999962, 0.00012384799999999932, 0.00012411099999999967, 0.00012363900000000178, 0.00012355600000000036, 0.00012405600000000086, 0.00012323600000000226, 0.00012402800000000172, 0.00012402699999999878, 0.0001234169999999972, 0.00012411099999999967, 0.00012416699999999795, 0.00012405600000000086, 0.00012405500000000139, 0.00012334699999999935, 0.00012351400000000165, 0.00012354199999999732, 0.00012402699999999878, 0.00012407000000000043, 0.00012376399999999843, 0.0001242359999999998, 0.00012384699999999985, 0.00012372199999999972, 0.00012397300000000291, 0.00012387499999999899, 0.00012341599999999772, 0.00012366699999999745, 0.00012420800000000065, 0.00012379200000000104, 0.00012354100000000132, 0.00012415299999999838, 0.00012373600000000276, 0.00012374999999999886, 0.00012386099999999942, 0.0001233480000000023, 0.0001239160000000017, 0.00012416600000000194, 0.00012379200000000104, 0.0001239030000000016, 0.00012361099999999917, 0.00012347199999999947, 0.00012380500000000114, 0.00012422200000000022, 0.0001242359999999998, 0.00012325000000000183]</msg>
<status status="PASS" starttime="20201029 18:15:38.297" endtime="20201029 18:15:38.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.293" endtime="20201029 18:15:38.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.304" endtime="20201029 18:15:38.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.303" endtime="20201029 18:15:38.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.302" endtime="20201029 18:15:38.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.942" endtime="20201029 18:15:38.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.942" endtime="20201029 18:15:38.325"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.334" endtime="20201029 18:15:38.354"></status>
</kw>
<msg timestamp="20201029 18:15:38.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.332" endtime="20201029 18:15:38.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.356" endtime="20201029 18:15:38.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.358" endtime="20201029 18:15:38.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.330" endtime="20201029 18:15:38.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.328" endtime="20201029 18:15:38.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.367" endtime="20201029 18:15:38.651"></status>
</kw>
<msg timestamp="20201029 18:15:38.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.365" endtime="20201029 18:15:38.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.656" endtime="20201029 18:15:38.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.663" endtime="20201029 18:15:38.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.363" endtime="20201029 18:15:38.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.361" endtime="20201029 18:15:38.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.670" level="INFO">${RESULT} = [{'diff': 0.00012479100000000257}, {'diff': 0.0001246389999999993}, {'diff': 0.0001244030000000021}, {'diff': 0.0001252360000000008}, {'diff': 0.00012480499999999867}, {'diff': 0.00012522200000000122}...</msg>
<status status="PASS" starttime="20201029 18:15:38.667" endtime="20201029 18:15:38.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.675" level="INFO">${ACCURACY} = {'diff': [0.00012479100000000257, 0.0001246389999999993, 0.0001244030000000021, 0.0001252360000000008, 0.00012480499999999867, 0.00012522200000000122, 0.00012443100000000124, 0.0001244169999999982, 0....</msg>
<status status="PASS" starttime="20201029 18:15:38.671" endtime="20201029 18:15:38.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.679" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.678" endtime="20201029 18:15:38.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.681" level="INFO">VALUE: [0.00012479100000000257, 0.0001246389999999993, 0.0001244030000000021, 0.0001252360000000008, 0.00012480499999999867, 0.00012522200000000122, 0.00012443100000000124, 0.0001244169999999982, 0.00012487499999999999, 0.00012468100000000149, 0.00012487499999999999, 0.0001245559999999979, 0.00012462499999999974, 0.00012469400000000158, 0.00012495799999999793, 0.00012451400000000265, 0.00012511100000000067, 0.00012448600000000004, 0.00012504199999999882, 0.00012522199999999775, 0.00012447200000000047, 0.0001247909999999991, 0.0001249580000000014, 0.00012434700000000035, 0.00012436099999999992, 0.00012525000000000036, 0.0001252360000000008, 0.00012519499999999809, 0.00012469500000000105, 0.00012502800000000272, 0.00012516699999999895, 0.00012491599999999922, 0.00012480499999999867, 0.00012511100000000067, 0.0001243329999999973, 0.00012455600000000136, 0.00012509800000000057, 0.00012515299999999938, 0.00012493099999999827, 0.00012455600000000136, 0.00012479200000000204, 0.00012487499999999999, 0.00012448600000000004, 0.00012463900000000278, 0.00012479200000000204, 0.0001250000000000001, 0.00012486100000000042, 0.00012486100000000042, 0.0001245420000000018, 0.00012447200000000047]</msg>
<status status="PASS" starttime="20201029 18:15:38.680" endtime="20201029 18:15:38.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.675" endtime="20201029 18:15:38.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.686" endtime="20201029 18:15:38.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.685" endtime="20201029 18:15:38.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.684" endtime="20201029 18:15:38.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.326" endtime="20201029 18:15:38.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.325" endtime="20201029 18:15:38.707"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.715" endtime="20201029 18:15:38.736"></status>
</kw>
<msg timestamp="20201029 18:15:38.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.714" endtime="20201029 18:15:38.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.738" endtime="20201029 18:15:38.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.740" endtime="20201029 18:15:38.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.711" endtime="20201029 18:15:38.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.709" endtime="20201029 18:15:38.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.749" endtime="20201029 18:15:39.036"></status>
</kw>
<msg timestamp="20201029 18:15:39.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.747" endtime="20201029 18:15:39.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021252917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.040" endtime="20201029 18:15:39.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.048" endtime="20201029 18:15:39.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.745" endtime="20201029 18:15:39.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.743" endtime="20201029 18:15:39.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.054" level="INFO">${RESULT} = [{'diff': 0.00012622199999999875}, {'diff': 0.00012568099999999902}, {'diff': 0.00012529199999999907}, {'diff': 0.0001253329999999983}, {'diff': 0.00012541599999999972}, {'diff': 0.0001256110000000011...</msg>
<status status="PASS" starttime="20201029 18:15:39.051" endtime="20201029 18:15:39.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.058" level="INFO">${ACCURACY} = {'diff': [0.00012622199999999875, 0.00012568099999999902, 0.00012529199999999907, 0.0001253329999999983, 0.00012541599999999972, 0.00012561100000000117, 0.00012608299999999906, 0.00012580599999999914,...</msg>
<status status="PASS" starttime="20201029 18:15:39.055" endtime="20201029 18:15:39.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.062" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.061" endtime="20201029 18:15:39.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.065" level="INFO">VALUE: [0.00012622199999999875, 0.00012568099999999902, 0.00012529199999999907, 0.0001253329999999983, 0.00012541599999999972, 0.00012561100000000117, 0.00012608299999999906, 0.00012580599999999914, 0.0001254169999999992, 0.00012534800000000082, 0.0001261109999999982, 0.0001256390000000003, 0.00012538900000000006, 0.0001259580000000024, 0.00012580599999999914, 0.00012608399999999853, 0.0001257230000000012, 0.00012543099999999877, 0.0001259169999999997, 0.0001256109999999977, 0.00012552700000000028, 0.00012572199999999825, 0.0001261939999999996, 0.00012575000000000086, 0.00012618000000000004, 0.0001257360000000013, 0.00012529199999999907, 0.00012543099999999877, 0.00012566700000000292, 0.00012598599999999807, 0.00012548599999999757, 0.00012580599999999914, 0.000125778, 0.0001254169999999992, 0.00012593099999999927, 0.00012580599999999914, 0.00012566700000000292, 0.00012604199999999982, 0.00012616699999999995, 0.00012576400000000043, 0.00012580599999999914, 0.00012533300000000178, 0.000125568999999999, 0.00012548700000000051, 0.00012547300000000094, 0.00012579199999999957, 0.00012622200000000222, 0.0001260000000000011, 0.00012529200000000254, 0.00012587499999999752]</msg>
<status status="PASS" starttime="20201029 18:15:39.063" endtime="20201029 18:15:39.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.059" endtime="20201029 18:15:39.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.070" endtime="20201029 18:15:39.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.068" endtime="20201029 18:15:39.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.067" endtime="20201029 18:15:39.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.708" endtime="20201029 18:15:39.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.707" endtime="20201029 18:15:39.090"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.099" endtime="20201029 18:15:39.120"></status>
</kw>
<msg timestamp="20201029 18:15:39.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.097" endtime="20201029 18:15:39.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.122" endtime="20201029 18:15:39.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.124" endtime="20201029 18:15:39.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.095" endtime="20201029 18:15:39.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.093" endtime="20201029 18:15:39.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.133" endtime="20201029 18:15:39.419"></status>
</kw>
<msg timestamp="20201029 18:15:39.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.132" endtime="20201029 18:15:39.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.423" endtime="20201029 18:15:39.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.431" endtime="20201029 18:15:39.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.129" endtime="20201029 18:15:39.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.128" endtime="20201029 18:15:39.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.437" level="INFO">${RESULT} = [{'diff': 0.00012752799999999828}, {'diff': 0.0001266529999999974}, {'diff': 0.00012654199999999685}, {'diff': 0.00012686099999999895}, {'diff': 0.00012661199999999817}, {'diff': 0.0001263050000000001...</msg>
<status status="PASS" starttime="20201029 18:15:39.434" endtime="20201029 18:15:39.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.441" level="INFO">${ACCURACY} = {'diff': [0.00012752799999999828, 0.0001266529999999974, 0.00012654199999999685, 0.00012686099999999895, 0.00012661199999999817, 0.00012630500000000017, 0.00012666700000000045, 0.0001268199999999997, ...</msg>
<status status="PASS" starttime="20201029 18:15:39.438" endtime="20201029 18:15:39.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.445" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.444" endtime="20201029 18:15:39.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.448" level="INFO">VALUE: [0.00012752799999999828, 0.0001266529999999974, 0.00012654199999999685, 0.00012686099999999895, 0.00012661199999999817, 0.00012630500000000017, 0.00012666700000000045, 0.0001268199999999997, 0.00012693100000000027, 0.00012637499999999802, 0.00012711100000000267, 0.00012636099999999845, 0.0001266109999999987, 0.00012670799999999968, 0.0001267230000000022, 0.0001268889999999981, 0.00012722200000000322, 0.00012697200000000297, 0.00012669500000000306, 0.00012688900000000156, 0.00012687500000000199, 0.00012636100000000192, 0.00012647300000000194, 0.00012654200000000032, 0.00012698599999999907, 0.0001269300000000008, 0.00012718000000000104, 0.00012659699999999913, 0.00012720800000000018, 0.00012625000000000136, 0.00012659699999999913, 0.00012701400000000168, 0.00012720800000000018, 0.00012626400000000093, 0.00012630599999999964, 0.00012663899999999784, 0.00012654200000000032, 0.0001267919999999971, 0.00012704200000000082, 0.0001268049999999972, 0.00012645799999999943, 0.00012672299999999873, 0.00012686100000000242, 0.00012648600000000204, 0.00012673599999999882, 0.00012647200000000247, 0.00012659800000000207, 0.00012630500000000017, 0.00012688900000000156, 0.00012648599999999857]</msg>
<status status="PASS" starttime="20201029 18:15:39.447" endtime="20201029 18:15:39.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.442" endtime="20201029 18:15:39.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.454" endtime="20201029 18:15:39.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.452" endtime="20201029 18:15:39.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.451" endtime="20201029 18:15:39.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.091" endtime="20201029 18:15:39.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.091" endtime="20201029 18:15:39.474"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.483" endtime="20201029 18:15:39.504"></status>
</kw>
<msg timestamp="20201029 18:15:39.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.481" endtime="20201029 18:15:39.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.505" endtime="20201029 18:15:39.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.508" endtime="20201029 18:15:39.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.479" endtime="20201029 18:15:39.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.477" endtime="20201029 18:15:39.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.516" endtime="20201029 18:15:39.802"></status>
</kw>
<msg timestamp="20201029 18:15:39.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.515" endtime="20201029 18:15:39.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.806" endtime="20201029 18:15:39.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.814" endtime="20201029 18:15:39.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.512" endtime="20201029 18:15:39.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.511" endtime="20201029 18:15:39.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.820" level="INFO">${RESULT} = [{'diff': 0.0001279170000000017}, {'diff': 0.00012722199999999975}, {'diff': 0.00012780600000000114}, {'diff': 0.0001273889999999986}, {'diff': 0.0001281940000000016}, {'diff': 0.00012819500000000109}...</msg>
<status status="PASS" starttime="20201029 18:15:39.817" endtime="20201029 18:15:39.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.825" level="INFO">${ACCURACY} = {'diff': [0.0001279170000000017, 0.00012722199999999975, 0.00012780600000000114, 0.0001273889999999986, 0.0001281940000000016, 0.00012819500000000109, 0.00012795799999999746, 0.0001281529999999989, 0....</msg>
<status status="PASS" starttime="20201029 18:15:39.821" endtime="20201029 18:15:39.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.830" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.829" endtime="20201029 18:15:39.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.833" level="INFO">VALUE: [0.0001279170000000017, 0.00012722199999999975, 0.00012780600000000114, 0.0001273889999999986, 0.0001281940000000016, 0.00012819500000000109, 0.00012795799999999746, 0.0001281529999999989, 0.0001274309999999973, 0.0001280139999999992, 0.00012822200000000075, 0.000127569000000001, 0.00012738900000000206, 0.00012762499999999927, 0.00012773599999999982, 0.0001272919999999976, 0.0001280139999999992, 0.0001279309999999978, 0.0001276940000000011, 0.00012744400000000086, 0.0001273200000000002, 0.000127778000000002, 0.0001275560000000009, 0.0001281110000000002, 0.00012777799999999853, 0.00012780599999999767, 0.0001275139999999987, 0.00012759699999999666, 0.00012819500000000109, 0.0001280139999999992, 0.00012801400000000268, 0.00012818000000000204, 0.00012752799999999828, 0.00012727700000000203, 0.00012763899999999884, 0.00012765199999999893, 0.0001282079999999977, 0.00012797299999999998, 0.0001276940000000011, 0.0001276390000000023, 0.00012758300000000056, 0.00012748599999999957, 0.00012776400000000243, 0.00012799999999999964, 0.00012802799999999878, 0.00012794500000000084, 0.00012781900000000124, 0.00012776399999999896, 0.0001278330000000008, 0.00012820900000000066]</msg>
<status status="PASS" starttime="20201029 18:15:39.831" endtime="20201029 18:15:39.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.826" endtime="20201029 18:15:39.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.838" endtime="20201029 18:15:39.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.836" endtime="20201029 18:15:39.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.835" endtime="20201029 18:15:39.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.475" endtime="20201029 18:15:39.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.475" endtime="20201029 18:15:39.859"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.867" endtime="20201029 18:15:39.888"></status>
</kw>
<msg timestamp="20201029 18:15:39.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.866" endtime="20201029 18:15:39.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.890" endtime="20201029 18:15:39.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.892" endtime="20201029 18:15:39.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.863" endtime="20201029 18:15:39.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.861" endtime="20201029 18:15:39.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.901" endtime="20201029 18:15:40.190"></status>
</kw>
<msg timestamp="20201029 18:15:40.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.900" endtime="20201029 18:15:40.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.194" endtime="20201029 18:15:40.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.201" endtime="20201029 18:15:40.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.897" endtime="20201029 18:15:40.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.895" endtime="20201029 18:15:40.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.208" level="INFO">${RESULT} = [{'diff': 0.0001289439999999989}, {'diff': 0.00012909700000000163}, {'diff': 0.00012827799999999903}, {'diff': 0.00012868099999999855}, {'diff': 0.00012830599999999817}, {'diff': 0.0001290140000000002...</msg>
<status status="PASS" starttime="20201029 18:15:40.205" endtime="20201029 18:15:40.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.212" level="INFO">${ACCURACY} = {'diff': [0.0001289439999999989, 0.00012909700000000163, 0.00012827799999999903, 0.00012868099999999855, 0.00012830599999999817, 0.0001290140000000002, 0.00012918100000000252, 0.00012900000000000064, ...</msg>
<status status="PASS" starttime="20201029 18:15:40.209" endtime="20201029 18:15:40.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.216" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.215" endtime="20201029 18:15:40.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.218" level="INFO">VALUE: [0.0001289439999999989, 0.00012909700000000163, 0.00012827799999999903, 0.00012868099999999855, 0.00012830599999999817, 0.0001290140000000002, 0.00012918100000000252, 0.00012900000000000064, 0.00012870900000000116, 0.00012840299999999916, 0.000128472000000001, 0.00012859700000000113, 0.0001289300000000028, 0.00012859699999999766, 0.00012890299999999966, 0.00012854100000000285, 0.000129166, 0.0001286529999999994, 0.00012850000000000014, 0.0001287079999999982, 0.00012845799999999796, 0.00012842999999999882, 0.00012895800000000193, 0.00012892999999999932, 0.00012879099999999963, 0.00012872199999999778, 0.00012841699999999873, 0.0001283330000000013, 0.00012869399999999864, 0.00012888899999999662, 0.00012884700000000138, 0.00012891599999999975, 0.00012820800000000118, 0.00012859699999999766, 0.00012859699999999766, 0.00012884700000000138, 0.00012922300000000123, 0.00012884700000000138, 0.00012845800000000143, 0.00012891599999999975, 0.000128472999999997, 0.00012890200000000018, 0.00012918099999999905, 0.00012920900000000166, 0.000129263000000001, 0.00012858300000000156, 0.00012840299999999916, 0.0001282780000000025, 0.00012873600000000082, 0.0001282780000000025]</msg>
<status status="PASS" starttime="20201029 18:15:40.217" endtime="20201029 18:15:40.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.213" endtime="20201029 18:15:40.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.223" endtime="20201029 18:15:40.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.222" endtime="20201029 18:15:40.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.221" endtime="20201029 18:15:40.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.860" endtime="20201029 18:15:40.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.859" endtime="20201029 18:15:40.244"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.252" endtime="20201029 18:15:40.274"></status>
</kw>
<msg timestamp="20201029 18:15:40.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.251" endtime="20201029 18:15:40.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.276" endtime="20201029 18:15:40.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.278" endtime="20201029 18:15:40.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.248" endtime="20201029 18:15:40.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.246" endtime="20201029 18:15:40.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.287" endtime="20201029 18:15:40.573"></status>
</kw>
<msg timestamp="20201029 18:15:40.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.286" endtime="20201029 18:15:40.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022186514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.577" endtime="20201029 18:15:40.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.585" endtime="20201029 18:15:40.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.283" endtime="20201029 18:15:40.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.281" endtime="20201029 18:15:40.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.591" level="INFO">${RESULT} = [{'diff': 0.00013006900000000002}, {'diff': 0.00012923599999999785}, {'diff': 0.00012980599999999967}, {'diff': 0.0001294590000000019}, {'diff': 0.00012950000000000114}, {'diff': 0.0001292500000000009...</msg>
<status status="PASS" starttime="20201029 18:15:40.588" endtime="20201029 18:15:40.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.595" level="INFO">${ACCURACY} = {'diff': [0.00013006900000000002, 0.00012923599999999785, 0.00012980599999999967, 0.0001294590000000019, 0.00012950000000000114, 0.0001292500000000009, 0.00012969499999999912, 0.00012940300000000016, ...</msg>
<status status="PASS" starttime="20201029 18:15:40.592" endtime="20201029 18:15:40.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.599" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.598" endtime="20201029 18:15:40.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.602" level="INFO">VALUE: [0.00013006900000000002, 0.00012923599999999785, 0.00012980599999999967, 0.0001294590000000019, 0.00012950000000000114, 0.0001292500000000009, 0.00012969499999999912, 0.00012940300000000016, 0.00013013900000000134, 0.0001299309999999998, 0.00013013899999999787, 0.00013019499999999962, 0.00012983299999999934, 0.00012969399999999964, 0.00012956899999999952, 0.00013013899999999787, 0.00012983299999999934, 0.00012950000000000114, 0.00012994499999999937, 0.00013006900000000002, 0.00012980599999999967, 0.00012955499999999995, 0.00012987500000000152, 0.00012972299999999826, 0.0001293890000000006, 0.00012936199999999745, 0.00012959700000000213, 0.00013019499999999962, 0.0001297500000000014, 0.00012968000000000007, 0.00012999999999999817, 0.00012994499999999937, 0.00012945800000000243, 0.00012930599999999917, 0.0001299439999999999, 0.0001293890000000006, 0.00012995899999999894, 0.00012927800000000003, 0.00012948600000000157, 0.00012994499999999937, 0.00012926400000000046, 0.00013013900000000134, 0.00012923599999999785, 0.0001298200000000027, 0.0001294309999999993, 0.00012993000000000032, 0.00012981899999999977, 0.00012976299999999802, 0.00012997199999999903, 0.000129569999999999]</msg>
<status status="PASS" starttime="20201029 18:15:40.600" endtime="20201029 18:15:40.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.596" endtime="20201029 18:15:40.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.607" endtime="20201029 18:15:40.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.606" endtime="20201029 18:15:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.605" endtime="20201029 18:15:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.245" endtime="20201029 18:15:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.244" endtime="20201029 18:15:40.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.098" endtime="20201029 18:15:40.628"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:01.991" endtime="20201029 18:15:40.629" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.635" endtime="20201029 18:15:40.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.634" endtime="20201029 18:15:40.655"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.668" endtime="20201029 18:15:40.680"></status>
</kw>
<msg timestamp="20201029 18:15:40.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.667" endtime="20201029 18:15:40.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.682" endtime="20201029 18:15:40.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.686" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:40.684" endtime="20201029 18:15:40.687"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:40.664" endtime="20201029 18:15:40.687"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:40.662" endtime="20201029 18:15:40.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.661" endtime="20201029 18:15:40.688"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:40.692" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:40.691" endtime="20201029 18:15:40.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.689" endtime="20201029 18:15:40.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.660" endtime="20201029 18:15:40.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.659" endtime="20201029 18:15:40.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.693" endtime="20201029 18:15:40.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.658" endtime="20201029 18:15:40.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.656" endtime="20201029 18:15:40.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.633" endtime="20201029 18:15:40.696"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.708" endtime="20201029 18:15:40.723"></status>
</kw>
<msg timestamp="20201029 18:15:40.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.706" endtime="20201029 18:15:40.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.724" endtime="20201029 18:15:40.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.727" endtime="20201029 18:15:40.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.702" endtime="20201029 18:15:40.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.700" endtime="20201029 18:15:40.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.736" endtime="20201029 18:15:41.022"></status>
</kw>
<msg timestamp="20201029 18:15:41.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064942944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.734" endtime="20201029 18:15:41.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064910833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064942944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.027" endtime="20201029 18:15:41.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.035" endtime="20201029 18:15:41.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.732" endtime="20201029 18:15:41.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.730" endtime="20201029 18:15:41.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.041" level="INFO">${RESULT} = [{'diff': 3.211100000000133e-05}, {'diff': 3.10970000000077e-05}, {'diff': 3.102700000000291e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.105500000000205e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.038" endtime="20201029 18:15:41.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.045" level="INFO">${ACCURACY} = {'diff': [3.211100000000133e-05, 3.10970000000077e-05, 3.102700000000291e-05, 3.105600000000153e-05, 3.105500000000205e-05, 3.105500000000205e-05, 3.106900000000856e-05, 3.101399999999588e-05, 3.10689...</msg>
<status status="PASS" starttime="20201029 18:15:41.042" endtime="20201029 18:15:41.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.051" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.050" endtime="20201029 18:15:41.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.053" level="INFO">VALUE: [3.211100000000133e-05, 3.10970000000077e-05, 3.102700000000291e-05, 3.105600000000153e-05, 3.105500000000205e-05, 3.105500000000205e-05, 3.106900000000856e-05, 3.101399999999588e-05, 3.1068999999994684e-05, 3.105600000000153e-05, 3.1040999999995544e-05, 3.108400000000067e-05, 3.102800000000239e-05, 3.111100000000033e-05, 3.106999999999416e-05, 3.108300000000119e-05, 3.105600000000153e-05, 3.105500000000205e-05, 3.108400000000067e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.105500000000205e-05, 3.104199999999502e-05, 3.108300000000119e-05, 3.106900000000856e-05, 3.105500000000205e-05, 3.104199999999502e-05, 3.104100000000942e-05, 3.105600000000153e-05, 3.104199999999502e-05, 3.104199999999502e-05, 3.101399999999588e-05, 3.105500000000205e-05, 3.104199999999502e-05, 3.1040999999995544e-05, 3.105500000000205e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.1042000000008896e-05, 3.104199999999502e-05, 3.108300000000119e-05, 3.1068999999994684e-05, 3.100000000000325e-05, 3.1040999999995544e-05, 3.098599999999674e-05, 3.106999999999416e-05, 3.108300000000119e-05, 3.1068999999994684e-05, 3.104100000000942e-05, 3.1054999999988175e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.052" endtime="20201029 18:15:41.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.046" endtime="20201029 18:15:41.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.057" endtime="20201029 18:15:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.056" endtime="20201029 18:15:41.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.055" endtime="20201029 18:15:41.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.698" endtime="20201029 18:15:41.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.698" endtime="20201029 18:15:41.078"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.086" endtime="20201029 18:15:41.101"></status>
</kw>
<msg timestamp="20201029 18:15:41.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.085" endtime="20201029 18:15:41.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.103" endtime="20201029 18:15:41.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.105" endtime="20201029 18:15:41.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.082" endtime="20201029 18:15:41.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.080" endtime="20201029 18:15:41.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.115" endtime="20201029 18:15:41.400"></status>
</kw>
<msg timestamp="20201029 18:15:41.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.113" endtime="20201029 18:15:41.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.405" endtime="20201029 18:15:41.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.413" endtime="20201029 18:15:41.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.111" endtime="20201029 18:15:41.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.109" endtime="20201029 18:15:41.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.419" level="INFO">${RESULT} = [{'diff': 3.21250000000009e-05}, {'diff': 3.104199999999849e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.1054999999998584e-05}, {'diff': 3.10839999999972e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:41.416" endtime="20201029 18:15:41.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.424" level="INFO">${ACCURACY} = {'diff': [3.21250000000009e-05, 3.104199999999849e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.1054999999998584e-05, 3.10839999999972e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.10700...</msg>
<status status="PASS" starttime="20201029 18:15:41.420" endtime="20201029 18:15:41.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.429" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.428" endtime="20201029 18:15:41.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.431" level="INFO">VALUE: [3.21250000000009e-05, 3.104199999999849e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.1054999999998584e-05, 3.10839999999972e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.10700000000011e-05, 3.098600000000021e-05, 3.1068999999998154e-05, 3.1068999999998154e-05, 3.1068999999998154e-05, 3.1068999999998154e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.105599999999806e-05, 3.105599999999806e-05, 3.1040999999999014e-05, 3.104199999999849e-05, 3.105600000000153e-05, 3.1082999999997724e-05, 3.101399999999935e-05, 3.106900000000162e-05, 3.104200000000196e-05, 3.108300000000119e-05, 3.1054999999998584e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.109700000000076e-05, 3.10700000000011e-05, 3.099999999999978e-05, 3.106900000000162e-05, 3.10700000000011e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.104199999999849e-05, 3.105500000000205e-05, 3.111100000000033e-05, 3.108400000000067e-05, 3.099999999999978e-05, 3.1068999999998154e-05, 3.104100000000248e-05, 3.10700000000011e-05, 3.1026999999999444e-05, 3.106900000000162e-05, 3.106900000000162e-05, 3.106999999999763e-05, 3.1098000000000237e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.430" endtime="20201029 18:15:41.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.425" endtime="20201029 18:15:41.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.436" endtime="20201029 18:15:41.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.434" endtime="20201029 18:15:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.433" endtime="20201029 18:15:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.079" endtime="20201029 18:15:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.078" endtime="20201029 18:15:41.456"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.465" endtime="20201029 18:15:41.480"></status>
</kw>
<msg timestamp="20201029 18:15:41.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.464" endtime="20201029 18:15:41.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.481" endtime="20201029 18:15:41.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.484" endtime="20201029 18:15:41.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.461" endtime="20201029 18:15:41.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.459" endtime="20201029 18:15:41.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.492" endtime="20201029 18:15:41.779"></status>
</kw>
<msg timestamp="20201029 18:15:41.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.491" endtime="20201029 18:15:41.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.783" endtime="20201029 18:15:41.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.791" endtime="20201029 18:15:41.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.488" endtime="20201029 18:15:41.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.487" endtime="20201029 18:15:41.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.798" level="INFO">${RESULT} = [{'diff': 3.209800000000124e-05}, {'diff': 3.106999999999763e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.104199999999849e-05}, {'diff': 3.104200000000196e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.794" endtime="20201029 18:15:41.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.802" level="INFO">${ACCURACY} = {'diff': [3.209800000000124e-05, 3.106999999999763e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.104199999999849e-05, 3.104200000000196e-05, 3.1054999999998584e-05, 3.106900000000162e-05, 3.1054...</msg>
<status status="PASS" starttime="20201029 18:15:41.799" endtime="20201029 18:15:41.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.806" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.805" endtime="20201029 18:15:41.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.809" level="INFO">VALUE: [3.209800000000124e-05, 3.106999999999763e-05, 3.105600000000153e-05, 3.10700000000011e-05, 3.104199999999849e-05, 3.104200000000196e-05, 3.1054999999998584e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.1068999999998154e-05, 3.108300000000119e-05, 3.105599999999806e-05, 3.10839999999972e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.104200000000196e-05, 3.108300000000119e-05, 3.105600000000153e-05, 3.106999999999763e-05, 3.1068999999998154e-05, 3.105599999999806e-05, 3.106900000000162e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.106900000000162e-05, 3.106999999999763e-05, 3.105599999999806e-05, 3.1068999999998154e-05, 3.105500000000205e-05, 3.1054999999998584e-05, 3.1054999999998584e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.101400000000282e-05, 3.104200000000196e-05, 3.1068999999998154e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.102799999999892e-05, 3.1054999999998584e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.102799999999892e-05, 3.1054999999998584e-05, 3.102800000000239e-05, 3.108400000000067e-05, 3.104199999999849e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.808" endtime="20201029 18:15:41.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.802" endtime="20201029 18:15:41.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.814" endtime="20201029 18:15:41.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.812" endtime="20201029 18:15:41.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.811" endtime="20201029 18:15:41.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.457" endtime="20201029 18:15:41.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.457" endtime="20201029 18:15:41.835"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.844" endtime="20201029 18:15:41.859"></status>
</kw>
<msg timestamp="20201029 18:15:41.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.842" endtime="20201029 18:15:41.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.861" endtime="20201029 18:15:41.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.863" endtime="20201029 18:15:41.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.840" endtime="20201029 18:15:41.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.838" endtime="20201029 18:15:41.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.872" endtime="20201029 18:15:42.157"></status>
</kw>
<msg timestamp="20201029 18:15:42.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02274725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:41.871" endtime="20201029 18:15:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02274725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:42.161" endtime="20201029 18:15:42.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.169" endtime="20201029 18:15:42.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.868" endtime="20201029 18:15:42.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.867" endtime="20201029 18:15:42.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.176" level="INFO">${RESULT} = [{'diff': 3.211100000000133e-05}, {'diff': 3.106900000000162e-05}, {'diff': 3.098600000000021e-05}, {'diff': 3.1026999999999444e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.1098000000000237e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:42.173" endtime="20201029 18:15:42.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.180" level="INFO">${ACCURACY} = {'diff': [3.211100000000133e-05, 3.106900000000162e-05, 3.098600000000021e-05, 3.1026999999999444e-05, 3.105500000000205e-05, 3.1098000000000237e-05, 3.10700000000011e-05, 3.097200000000064e-05, 3.105...</msg>
<status status="PASS" starttime="20201029 18:15:42.177" endtime="20201029 18:15:42.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.184" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.183" endtime="20201029 18:15:42.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.186" level="INFO">VALUE: [3.211100000000133e-05, 3.106900000000162e-05, 3.098600000000021e-05, 3.1026999999999444e-05, 3.105500000000205e-05, 3.1098000000000237e-05, 3.10700000000011e-05, 3.097200000000064e-05, 3.1054999999998584e-05, 3.105599999999806e-05, 3.1054999999998584e-05, 3.1054999999998584e-05, 3.104200000000196e-05, 3.108300000000119e-05, 3.1026999999999444e-05, 3.106900000000162e-05, 3.102800000000239e-05, 3.1054999999998584e-05, 3.105500000000205e-05, 3.1054999999998584e-05, 3.1054999999998584e-05, 3.105500000000205e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.105599999999806e-05, 3.104199999999849e-05, 3.098600000000021e-05, 3.099999999999978e-05, 3.105599999999806e-05, 3.105599999999806e-05, 3.108400000000067e-05, 3.1012999999999874e-05, 3.105500000000205e-05, 3.108400000000067e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.102800000000239e-05, 3.10700000000011e-05, 3.1096999999997293e-05, 3.105600000000153e-05, 3.105599999999806e-05, 3.106900000000162e-05, 3.106900000000162e-05, 3.105600000000153e-05, 3.104199999999849e-05, 3.104199999999849e-05, 3.104199999999849e-05, 3.101399999999935e-05, 3.105600000000153e-05, 3.1040999999999014e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.185" endtime="20201029 18:15:42.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.181" endtime="20201029 18:15:42.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.192" endtime="20201029 18:15:42.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.191" endtime="20201029 18:15:42.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.190" endtime="20201029 18:15:42.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.836" endtime="20201029 18:15:42.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.836" endtime="20201029 18:15:42.213"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.221" endtime="20201029 18:15:42.236"></status>
</kw>
<msg timestamp="20201029 18:15:42.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.220" endtime="20201029 18:15:42.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.237" endtime="20201029 18:15:42.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.240" endtime="20201029 18:15:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.217" endtime="20201029 18:15:42.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.215" endtime="20201029 18:15:42.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.249" endtime="20201029 18:15:42.534"></status>
</kw>
<msg timestamp="20201029 18:15:42.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.247" endtime="20201029 18:15:42.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021457125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.538" endtime="20201029 18:15:42.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.546" endtime="20201029 18:15:42.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.244" endtime="20201029 18:15:42.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.243" endtime="20201029 18:15:42.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.553" level="INFO">${RESULT} = [{'diff': 3.209700000000176e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.098600000000021e-05}, {'diff': 3.1054999999998584e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.1096999999997293e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:42.550" endtime="20201029 18:15:42.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.558" level="INFO">${ACCURACY} = {'diff': [3.209700000000176e-05, 3.105600000000153e-05, 3.098600000000021e-05, 3.1054999999998584e-05, 3.1068999999998154e-05, 3.1096999999997293e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:42.554" endtime="20201029 18:15:42.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.562" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.561" endtime="20201029 18:15:42.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.565" level="INFO">VALUE: [3.209700000000176e-05, 3.105600000000153e-05, 3.098600000000021e-05, 3.1054999999998584e-05, 3.1068999999998154e-05, 3.1096999999997293e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3.099999999999978e-05, 3.108400000000067e-05, 3.105500000000205e-05, 3.1068999999998154e-05, 3.1054999999998584e-05, 3.106999999999763e-05, 3.104200000000196e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.105500000000205e-05, 3.109700000000076e-05, 3.1054999999998584e-05, 3.1082999999997724e-05, 3.10700000000011e-05, 3.1098000000000237e-05, 3.106999999999763e-05, 3.106999999999763e-05, 3.106900000000162e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.106999999999763e-05, 3.108400000000067e-05, 3.1054999999998584e-05, 3.104199999999849e-05, 3.10700000000011e-05, 3.106900000000162e-05, 3.104200000000196e-05, 3.101399999999935e-05, 3.106999999999763e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.105600000000153e-05, 3.106900000000162e-05, 3.106999999999763e-05, 3.113899999999947e-05, 3.105599999999806e-05, 3.115299999999904e-05, 3.1082999999997724e-05, 3.101399999999935e-05, 3.108400000000067e-05, 3.104200000000196e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.563" endtime="20201029 18:15:42.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.559" endtime="20201029 18:15:42.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.569" endtime="20201029 18:15:42.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.568" endtime="20201029 18:15:42.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.567" endtime="20201029 18:15:42.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.214" endtime="20201029 18:15:42.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.213" endtime="20201029 18:15:42.590"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.599" endtime="20201029 18:15:42.613"></status>
</kw>
<msg timestamp="20201029 18:15:42.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.597" endtime="20201029 18:15:42.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.615" endtime="20201029 18:15:42.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.617" endtime="20201029 18:15:42.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.595" endtime="20201029 18:15:42.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.593" endtime="20201029 18:15:42.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.626" endtime="20201029 18:15:42.911"></status>
</kw>
<msg timestamp="20201029 18:15:42.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:42.625" endtime="20201029 18:15:42.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213315, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:42.916" endtime="20201029 18:15:42.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.924" endtime="20201029 18:15:42.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.622" endtime="20201029 18:15:42.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.620" endtime="20201029 18:15:42.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.930" level="INFO">${RESULT} = [{'diff': 3.7167000000001144e-05}, {'diff': 3.605599999999959e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.6097000000002294e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.106900000000162e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:42.927" endtime="20201029 18:15:42.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.934" level="INFO">${ACCURACY} = {'diff': [3.7167000000001144e-05, 3.605599999999959e-05, 3.602800000000045e-05, 3.6097000000002294e-05, 3.6096999999998824e-05, 3.106900000000162e-05, 3.60979999999983e-05, 3.106900000000162e-05, 3.10...</msg>
<status status="PASS" starttime="20201029 18:15:42.931" endtime="20201029 18:15:42.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.939" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.938" endtime="20201029 18:15:42.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.941" level="INFO">VALUE: [3.7167000000001144e-05, 3.605599999999959e-05, 3.602800000000045e-05, 3.6097000000002294e-05, 3.6096999999998824e-05, 3.106900000000162e-05, 3.60979999999983e-05, 3.106900000000162e-05, 3.104199999999849e-05, 3.6111000000001864e-05, 3.106999999999763e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.611200000000134e-05, 3.6082999999999255e-05, 3.6082999999999255e-05, 3.6097000000002294e-05, 3.6096999999998824e-05, 3.6083000000002724e-05, 3.105599999999806e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.1054999999998584e-05, 3.608399999999873e-05, 3.6110999999998394e-05, 3.608399999999873e-05, 3.605599999999959e-05, 3.60840000000022e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.6082999999999255e-05, 3.6068999999999685e-05, 3.6097000000002294e-05, 3.609800000000177e-05, 3.6097000000002294e-05, 3.6139000000001004e-05, 3.105600000000153e-05, 3.6110999999998394e-05, 3.105500000000205e-05, 3.1098000000000237e-05, 3.6110999999998394e-05, 3.6152999999997104e-05, 3.6097000000002294e-05, 3.6082999999999255e-05, 3.1054999999998584e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.1054999999998584e-05, 3.607000000000263e-05, 3.60979999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.940" endtime="20201029 18:15:42.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.935" endtime="20201029 18:15:42.942"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.946" endtime="20201029 18:15:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.944" endtime="20201029 18:15:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.943" endtime="20201029 18:15:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.591" endtime="20201029 18:15:42.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.591" endtime="20201029 18:15:42.969"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.980" endtime="20201029 18:15:42.996"></status>
</kw>
<msg timestamp="20201029 18:15:42.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.979" endtime="20201029 18:15:42.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.997" endtime="20201029 18:15:42.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.000" endtime="20201029 18:15:43.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.976" endtime="20201029 18:15:43.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.973" endtime="20201029 18:15:43.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.009" endtime="20201029 18:15:43.305"></status>
</kw>
<msg timestamp="20201029 18:15:43.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026185708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026222875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.007" endtime="20201029 18:15:43.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026185708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026222875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.309" endtime="20201029 18:15:43.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.317" endtime="20201029 18:15:43.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.005" endtime="20201029 18:15:43.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.003" endtime="20201029 18:15:43.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.324" level="INFO">${RESULT} = [{'diff': 3.7167000000001144e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.6124999999997964e-05}, {'diff': 3.6055000000000115e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.60840000000022e-05...</msg>
<status status="PASS" starttime="20201029 18:15:43.321" endtime="20201029 18:15:43.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.328" level="INFO">${ACCURACY} = {'diff': [3.7167000000001144e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6055000000000115e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.6124999999997964e-05, 3.608399999999873e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:15:43.325" endtime="20201029 18:15:43.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.332" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.331" endtime="20201029 18:15:43.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.335" level="INFO">VALUE: [3.7167000000001144e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6055000000000115e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.6124999999997964e-05, 3.608399999999873e-05, 3.6124999999997964e-05, 3.6055000000000115e-05, 3.6139000000001004e-05, 3.6153000000000574e-05, 3.6125000000001434e-05, 3.6068999999999685e-05, 3.60979999999983e-05, 3.6096999999998824e-05, 3.609800000000177e-05, 3.608399999999873e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.611200000000134e-05, 3.6110999999998394e-05, 3.6153000000000574e-05, 3.6096999999998824e-05, 3.6125000000001434e-05, 3.6110999999998394e-05, 3.608399999999873e-05, 3.6097000000002294e-05, 3.608399999999873e-05, 3.61520000000011e-05, 3.6139000000001004e-05, 3.606999999999916e-05, 3.60979999999983e-05, 3.6110999999998394e-05, 3.6069000000003154e-05, 3.609800000000177e-05, 3.6082999999999255e-05, 3.607000000000263e-05, 3.60840000000022e-05, 3.6097000000002294e-05, 3.6097000000002294e-05, 3.6082999999999255e-05, 3.6110999999998394e-05, 3.6125000000001434e-05, 3.6097000000002294e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.601400000000088e-05, 3.609800000000177e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.333" endtime="20201029 18:15:43.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.329" endtime="20201029 18:15:43.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.343" endtime="20201029 18:15:43.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.341" endtime="20201029 18:15:43.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.340" endtime="20201029 18:15:43.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.970" endtime="20201029 18:15:43.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.969" endtime="20201029 18:15:43.363"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.372" endtime="20201029 18:15:43.386"></status>
</kw>
<msg timestamp="20201029 18:15:43.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.370" endtime="20201029 18:15:43.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.388" endtime="20201029 18:15:43.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.390" endtime="20201029 18:15:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.368" endtime="20201029 18:15:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.366" endtime="20201029 18:15:43.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.399" endtime="20201029 18:15:43.686"></status>
</kw>
<msg timestamp="20201029 18:15:43.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021361097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.398" endtime="20201029 18:15:43.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021361097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.690" endtime="20201029 18:15:43.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.698" endtime="20201029 18:15:43.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.395" endtime="20201029 18:15:43.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.393" endtime="20201029 18:15:43.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.704" level="INFO">${RESULT} = [{'diff': 3.7181000000000713e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.609800000000177e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.6124999999997964e-0...</msg>
<status status="PASS" starttime="20201029 18:15:43.701" endtime="20201029 18:15:43.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.755" level="INFO">${ACCURACY} = {'diff': [3.7181000000000713e-05, 3.6125000000001434e-05, 3.609800000000177e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.605600000000306e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:43.705" endtime="20201029 18:15:43.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.759" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.758" endtime="20201029 18:15:43.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.761" level="INFO">VALUE: [3.7181000000000713e-05, 3.6125000000001434e-05, 3.609800000000177e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.605600000000306e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.609800000000177e-05, 3.6096999999998824e-05, 3.6068999999999685e-05, 3.611199999999787e-05, 3.6097000000002294e-05, 3.6111000000001864e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6097000000002294e-05, 3.60979999999983e-05, 3.6096999999998824e-05, 3.6097000000002294e-05, 3.60979999999983e-05, 3.60979999999983e-05, 3.6138999999997534e-05, 3.6110999999998394e-05, 3.6111000000001864e-05, 3.6153000000000574e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6139000000001004e-05, 3.6082999999999255e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.605600000000306e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.608399999999873e-05, 3.6153000000000574e-05, 3.6082999999999255e-05, 3.6139000000001004e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.760" endtime="20201029 18:15:43.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.756" endtime="20201029 18:15:43.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.766" endtime="20201029 18:15:43.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.765" endtime="20201029 18:15:43.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.764" endtime="20201029 18:15:43.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.364" endtime="20201029 18:15:43.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.364" endtime="20201029 18:15:43.787"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.795" endtime="20201029 18:15:43.810"></status>
</kw>
<msg timestamp="20201029 18:15:43.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.794" endtime="20201029 18:15:43.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.811" endtime="20201029 18:15:43.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.814" endtime="20201029 18:15:43.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.791" endtime="20201029 18:15:43.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.789" endtime="20201029 18:15:43.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.823" endtime="20201029 18:15:44.110"></status>
</kw>
<msg timestamp="20201029 18:15:44.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.822" endtime="20201029 18:15:44.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.114" endtime="20201029 18:15:44.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.123" endtime="20201029 18:15:44.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.819" endtime="20201029 18:15:44.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.818" endtime="20201029 18:15:44.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.129" level="INFO">${RESULT} = [{'diff': 3.7139000000002004e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.60840000000022e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.6083000000002724e-05...</msg>
<status status="PASS" starttime="20201029 18:15:44.126" endtime="20201029 18:15:44.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.133" level="INFO">${ACCURACY} = {'diff': [3.7139000000002004e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.6111000000001864e-05, 3.6083000000002724e-05, 3.6082999999999255e-05, 3.6111000000001864e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:44.130" endtime="20201029 18:15:44.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.138" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.137" endtime="20201029 18:15:44.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.141" level="INFO">VALUE: [3.7139000000002004e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.60840000000022e-05, 3.6111000000001864e-05, 3.6083000000002724e-05, 3.6082999999999255e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.6153000000000574e-05, 3.6097000000002294e-05, 3.611200000000134e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.604200000000002e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.6125000000001434e-05, 3.6082999999999255e-05, 3.6153000000000574e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.604200000000002e-05, 3.608399999999873e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6097000000002294e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.609800000000177e-05, 3.608399999999873e-05, 3.6096999999998824e-05, 3.6083000000002724e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6125000000001434e-05, 3.611199999999787e-05, 3.6068999999999685e-05, 3.607000000000263e-05, 3.6083000000002724e-05, 3.60979999999983e-05, 3.6082999999999255e-05, 3.6125000000001434e-05, 3.60840000000022e-05, 3.6125000000001434e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.139" endtime="20201029 18:15:44.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.134" endtime="20201029 18:15:44.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.146" endtime="20201029 18:15:44.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.144" endtime="20201029 18:15:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.143" endtime="20201029 18:15:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.788" endtime="20201029 18:15:44.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.787" endtime="20201029 18:15:44.166"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.175" endtime="20201029 18:15:44.190"></status>
</kw>
<msg timestamp="20201029 18:15:44.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.174" endtime="20201029 18:15:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.192" endtime="20201029 18:15:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.194" endtime="20201029 18:15:44.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.171" endtime="20201029 18:15:44.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.169" endtime="20201029 18:15:44.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.203" endtime="20201029 18:15:44.489"></status>
</kw>
<msg timestamp="20201029 18:15:44.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.201" endtime="20201029 18:15:44.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.494" endtime="20201029 18:15:44.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.502" endtime="20201029 18:15:44.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.199" endtime="20201029 18:15:44.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.197" endtime="20201029 18:15:44.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.508" level="INFO">${RESULT} = [{'diff': 3.7166999999997674e-05}, {'diff': 3.6082999999999255e-05}, {'diff': 3.609800000000177e-05}, {'diff': 3.605599999999959e-05}, {'diff': 3.6041000000000545e-05}, {'diff': 3.6110999999998394e-05...</msg>
<status status="PASS" starttime="20201029 18:15:44.505" endtime="20201029 18:15:44.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.513" level="INFO">${ACCURACY} = {'diff': [3.7166999999997674e-05, 3.6082999999999255e-05, 3.609800000000177e-05, 3.605599999999959e-05, 3.6041000000000545e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6125000000001434e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:44.509" endtime="20201029 18:15:44.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.518" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.517" endtime="20201029 18:15:44.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.520" level="INFO">VALUE: [3.7166999999997674e-05, 3.6082999999999255e-05, 3.609800000000177e-05, 3.605599999999959e-05, 3.6041000000000545e-05, 3.6110999999998394e-05, 3.6124999999997964e-05, 3.6125000000001434e-05, 3.6110999999998394e-05, 3.6097000000002294e-05, 3.6110999999998394e-05, 3.60979999999983e-05, 3.6111000000001864e-05, 3.6125000000001434e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6125000000001434e-05, 3.609800000000177e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6124999999997964e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.606999999999916e-05, 3.6124999999997964e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6138999999997534e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.6068999999999685e-05, 3.6096999999998824e-05, 3.616600000000067e-05, 3.609800000000177e-05, 3.6096999999998824e-05, 3.6125000000001434e-05, 3.6096999999998824e-05, 3.6097000000002294e-05, 3.6125000000001434e-05, 3.6082999999999255e-05, 3.613800000000153e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.519" endtime="20201029 18:15:44.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.514" endtime="20201029 18:15:44.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.525" endtime="20201029 18:15:44.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.523" endtime="20201029 18:15:44.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.522" endtime="20201029 18:15:44.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.167" endtime="20201029 18:15:44.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.167" endtime="20201029 18:15:44.546"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.554" endtime="20201029 18:15:44.569"></status>
</kw>
<msg timestamp="20201029 18:15:44.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.553" endtime="20201029 18:15:44.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.571" endtime="20201029 18:15:44.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.573" endtime="20201029 18:15:44.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.550" endtime="20201029 18:15:44.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.548" endtime="20201029 18:15:44.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.582" endtime="20201029 18:15:44.886"></status>
</kw>
<msg timestamp="20201029 18:15:44.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.580" endtime="20201029 18:15:44.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.891" endtime="20201029 18:15:44.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.902" endtime="20201029 18:15:44.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.578" endtime="20201029 18:15:44.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.576" endtime="20201029 18:15:44.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.909" level="INFO">${RESULT} = [{'diff': 4.219400000000234e-05}, {'diff': 3.613800000000153e-05}, {'diff': 4.113799999999959e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 3.609800000000177e-05}, {'diff': 3.6068999999999685e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:44.906" endtime="20201029 18:15:44.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.913" level="INFO">${ACCURACY} = {'diff': [4.219400000000234e-05, 3.613800000000153e-05, 4.113799999999959e-05, 4.1125000000002965e-05, 3.609800000000177e-05, 3.6068999999999685e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 3.6...</msg>
<status status="PASS" starttime="20201029 18:15:44.910" endtime="20201029 18:15:44.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.918" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.917" endtime="20201029 18:15:44.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.920" level="INFO">VALUE: [4.219400000000234e-05, 3.613800000000153e-05, 4.113799999999959e-05, 4.1125000000002965e-05, 3.609800000000177e-05, 3.6068999999999685e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 3.6139000000001004e-05, 3.6124999999997964e-05, 4.1138999999999065e-05, 4.1194999999997345e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 3.6111000000001864e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1139000000002535e-05, 3.6069000000003154e-05, 3.606999999999916e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 3.6096999999998824e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 3.608399999999873e-05, 3.6082999999999255e-05, 4.1124999999999495e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1139000000002535e-05, 3.6097000000002294e-05, 4.11119999999994e-05, 4.1124999999999495e-05, 4.11119999999994e-05, 4.1097000000000355e-05, 3.609800000000177e-05, 3.6125000000001434e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 3.6082999999999255e-05, 4.1124999999999495e-05, 4.1153000000002105e-05, 3.6124999999997964e-05, 4.115200000000263e-05, 3.6110999999998394e-05, 4.1153000000002105e-05, 4.113800000000306e-05, 3.6096999999998824e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.919" endtime="20201029 18:15:44.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.914" endtime="20201029 18:15:44.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.925" endtime="20201029 18:15:44.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.924" endtime="20201029 18:15:44.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.923" endtime="20201029 18:15:44.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.546" endtime="20201029 18:15:44.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.546" endtime="20201029 18:15:44.946"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.955" endtime="20201029 18:15:44.971"></status>
</kw>
<msg timestamp="20201029 18:15:44.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.953" endtime="20201029 18:15:44.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.973" endtime="20201029 18:15:44.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.976" endtime="20201029 18:15:44.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.951" endtime="20201029 18:15:44.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.949" endtime="20201029 18:15:44.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.988" endtime="20201029 18:15:45.275"></status>
</kw>
<msg timestamp="20201029 18:15:45.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.986" endtime="20201029 18:15:45.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022441083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.279" endtime="20201029 18:15:45.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.287" endtime="20201029 18:15:45.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.983" endtime="20201029 18:15:45.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.980" endtime="20201029 18:15:45.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.294" level="INFO">${RESULT} = [{'diff': 4.216599999999973e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1138999999999065e-0...</msg>
<status status="PASS" starttime="20201029 18:15:45.291" endtime="20201029 18:15:45.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.298" level="INFO">${ACCURACY} = {'diff': [4.216599999999973e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1139000000002535e-05, 4.1139000000002535e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:45.295" endtime="20201029 18:15:45.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.302" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.301" endtime="20201029 18:15:45.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.305" level="INFO">VALUE: [4.216599999999973e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1181000000001244e-05, 4.1139000000002535e-05, 4.1152999999998635e-05, 4.107000000000069e-05, 4.1138999999999065e-05, 4.1069000000001216e-05, 4.1110999999999925e-05, 4.1054999999998176e-05, 4.1222999999999954e-05, 4.115199999999916e-05, 4.1110999999999925e-05, 4.1111000000003395e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.119399999999787e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.1110999999999925e-05, 4.1152999999998635e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.113799999999959e-05, 4.1180999999997775e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.11119999999994e-05, 4.1125000000002965e-05, 4.1167000000001674e-05, 4.1124999999999495e-05, 4.120799999999744e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.303" endtime="20201029 18:15:45.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.299" endtime="20201029 18:15:45.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.310" endtime="20201029 18:15:45.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.309" endtime="20201029 18:15:45.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.308" endtime="20201029 18:15:45.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.947" endtime="20201029 18:15:45.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.946" endtime="20201029 18:15:45.331"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.339" endtime="20201029 18:15:45.354"></status>
</kw>
<msg timestamp="20201029 18:15:45.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.338" endtime="20201029 18:15:45.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.356" endtime="20201029 18:15:45.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.359" endtime="20201029 18:15:45.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.335" endtime="20201029 18:15:45.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.333" endtime="20201029 18:15:45.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.367" endtime="20201029 18:15:45.670"></status>
</kw>
<msg timestamp="20201029 18:15:45.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.366" endtime="20201029 18:15:45.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021518806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.675" endtime="20201029 18:15:45.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.683" endtime="20201029 18:15:45.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.363" endtime="20201029 18:15:45.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.362" endtime="20201029 18:15:45.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.689" level="INFO">${RESULT} = [{'diff': 4.2195000000001814e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.115200000000263e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1124999999999495e-0...</msg>
<status status="PASS" starttime="20201029 18:15:45.686" endtime="20201029 18:15:45.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.694" level="INFO">${ACCURACY} = {'diff': [4.2195000000001814e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1125000000002965e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.115200000000263e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:45.690" endtime="20201029 18:15:45.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.699" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.698" endtime="20201029 18:15:45.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.701" level="INFO">VALUE: [4.2195000000001814e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1125000000002965e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.115200000000263e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.113799999999959e-05, 4.1110999999999925e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 4.113799999999959e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.1181000000001244e-05, 4.1125000000002965e-05, 4.115199999999916e-05, 4.1069000000001216e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.1124999999999495e-05, 4.113799999999959e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1139000000002535e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1124999999999495e-05, 4.1138999999999065e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.700" endtime="20201029 18:15:45.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.695" endtime="20201029 18:15:45.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.706" endtime="20201029 18:15:45.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.704" endtime="20201029 18:15:45.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.703" endtime="20201029 18:15:45.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.332" endtime="20201029 18:15:45.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.331" endtime="20201029 18:15:45.727"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.735" endtime="20201029 18:15:45.750"></status>
</kw>
<msg timestamp="20201029 18:15:45.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.733" endtime="20201029 18:15:45.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.752" endtime="20201029 18:15:45.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.754" endtime="20201029 18:15:45.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.731" endtime="20201029 18:15:45.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.729" endtime="20201029 18:15:45.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.763" endtime="20201029 18:15:46.049"></status>
</kw>
<msg timestamp="20201029 18:15:46.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.761" endtime="20201029 18:15:46.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.053" endtime="20201029 18:15:46.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.062" endtime="20201029 18:15:46.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.759" endtime="20201029 18:15:46.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.757" endtime="20201029 18:15:46.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.068" level="INFO">${RESULT} = [{'diff': 4.219399999999887e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.113799999999959e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.1152999999998635e-05...</msg>
<status status="PASS" starttime="20201029 18:15:46.065" endtime="20201029 18:15:46.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.072" level="INFO">${ACCURACY} = {'diff': [4.219399999999887e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.113799999999959e-05, 4.1124999999999495e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:46.069" endtime="20201029 18:15:46.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.077" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.076" endtime="20201029 18:15:46.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.079" level="INFO">VALUE: [4.219399999999887e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.113799999999959e-05, 4.1124999999999495e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.113799999999959e-05, 4.1139000000002535e-05, 4.1110999999999925e-05, 4.108400000000026e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1124999999999495e-05, 4.1180999999997775e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.115199999999916e-05, 4.1139000000002535e-05, 4.1209000000000384e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.116599999999873e-05, 4.1138999999999065e-05, 4.113799999999959e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 4.113800000000306e-05, 4.118000000000177e-05, 4.1166999999998205e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1152999999998635e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.078" endtime="20201029 18:15:46.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.073" endtime="20201029 18:15:46.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.084" endtime="20201029 18:15:46.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.083" endtime="20201029 18:15:46.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.082" endtime="20201029 18:15:46.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.728" endtime="20201029 18:15:46.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.727" endtime="20201029 18:15:46.105"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.114" endtime="20201029 18:15:46.130"></status>
</kw>
<msg timestamp="20201029 18:15:46.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.112" endtime="20201029 18:15:46.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.131" endtime="20201029 18:15:46.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.134" endtime="20201029 18:15:46.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.110" endtime="20201029 18:15:46.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.107" endtime="20201029 18:15:46.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.143" endtime="20201029 18:15:46.446"></status>
</kw>
<msg timestamp="20201029 18:15:46.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.141" endtime="20201029 18:15:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022590167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.450" endtime="20201029 18:15:46.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.459" endtime="20201029 18:15:46.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.139" endtime="20201029 18:15:46.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.137" endtime="20201029 18:15:46.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.465" level="INFO">${RESULT} = [{'diff': 4.220799999999844e-05}, {'diff': 4.113799999999959e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.1138999999999065e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:46.462" endtime="20201029 18:15:46.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.470" level="INFO">${ACCURACY} = {'diff': [4.220799999999844e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 4.107000000000069e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1097000000000355e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:15:46.466" endtime="20201029 18:15:46.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.474" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.473" endtime="20201029 18:15:46.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.477" level="INFO">VALUE: [4.220799999999844e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 4.107000000000069e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1097000000000355e-05, 4.116599999999873e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1181000000001244e-05, 4.1153000000002105e-05, 4.1138999999999065e-05, 4.1167000000001674e-05, 4.1166999999998205e-05, 4.113799999999959e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1167000000001674e-05, 4.1167000000001674e-05, 4.1138999999999065e-05, 4.118000000000177e-05, 4.1138999999999065e-05, 4.1167000000001674e-05, 4.1139000000002535e-05, 4.1166999999998205e-05, 4.116599999999873e-05, 4.119400000000134e-05, 4.11660000000022e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.109799999999983e-05, 4.116599999999873e-05, 4.1152999999998635e-05, 4.1125000000002965e-05, 4.1152999999998635e-05, 4.1167000000001674e-05, 4.113799999999959e-05, 4.1055000000001646e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.1167000000001674e-05, 4.1195000000000814e-05, 4.1208999999996915e-05, 4.116599999999873e-05, 4.1167000000001674e-05, 4.1167000000001674e-05, 4.1152999999998635e-05, 4.1153000000002105e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.475" endtime="20201029 18:15:46.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.470" endtime="20201029 18:15:46.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.482" endtime="20201029 18:15:46.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.481" endtime="20201029 18:15:46.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.480" endtime="20201029 18:15:46.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.106" endtime="20201029 18:15:46.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.105" endtime="20201029 18:15:46.503"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.512" endtime="20201029 18:15:46.527"></status>
</kw>
<msg timestamp="20201029 18:15:46.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.510" endtime="20201029 18:15:46.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.529" endtime="20201029 18:15:46.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.531" endtime="20201029 18:15:46.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.508" endtime="20201029 18:15:46.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.506" endtime="20201029 18:15:46.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.540" endtime="20201029 18:15:46.824"></status>
</kw>
<msg timestamp="20201029 18:15:46.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.539" endtime="20201029 18:15:46.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.829" endtime="20201029 18:15:46.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.837" endtime="20201029 18:15:46.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.536" endtime="20201029 18:15:46.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.534" endtime="20201029 18:15:46.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.843" level="INFO">${RESULT} = [{'diff': 4.21799999999993e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.6195000000002345e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.622199999999854e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:46.840" endtime="20201029 18:15:46.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.849" level="INFO">${ACCURACY} = {'diff': [4.21799999999993e-05, 4.1138999999999065e-05, 4.6180999999999306e-05, 4.6195000000002345e-05, 4.1153000000002105e-05, 4.622199999999854e-05, 4.111200000000287e-05, 4.617999999999983e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:15:46.845" endtime="20201029 18:15:46.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.853" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.852" endtime="20201029 18:15:46.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.856" level="INFO">VALUE: [4.21799999999993e-05, 4.1138999999999065e-05, 4.6180999999999306e-05, 4.6195000000002345e-05, 4.1153000000002105e-05, 4.622199999999854e-05, 4.111200000000287e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.6125000000001026e-05, 4.1138999999999065e-05, 4.6166999999999736e-05, 4.6153000000000166e-05, 4.119400000000134e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.6166999999999736e-05, 4.622200000000201e-05, 4.1153000000002105e-05, 4.6125000000001026e-05, 4.617999999999983e-05, 4.1124999999999495e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.620799999999897e-05, 4.6180999999999306e-05, 4.619400000000287e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.1138999999999065e-05, 4.6194999999998876e-05, 4.620799999999897e-05, 4.115199999999916e-05, 4.61939999999994e-05, 4.6139000000000596e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.622199999999854e-05, 4.11660000000022e-05, 4.1153000000002105e-05, 4.116599999999873e-05, 4.623600000000158e-05, 4.1138999999999065e-05, 4.617999999999983e-05, 4.1152999999998635e-05, 4.6208999999998446e-05, 4.617999999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.854" endtime="20201029 18:15:46.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.850" endtime="20201029 18:15:46.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.865" endtime="20201029 18:15:46.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.864" endtime="20201029 18:15:46.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.863" endtime="20201029 18:15:46.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.504" endtime="20201029 18:15:46.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.504" endtime="20201029 18:15:46.886"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.895" endtime="20201029 18:15:46.910"></status>
</kw>
<msg timestamp="20201029 18:15:46.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.893" endtime="20201029 18:15:46.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.912" endtime="20201029 18:15:46.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.914" endtime="20201029 18:15:46.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.891" endtime="20201029 18:15:46.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.889" endtime="20201029 18:15:46.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.923" endtime="20201029 18:15:47.214"></status>
</kw>
<msg timestamp="20201029 18:15:47.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.922" endtime="20201029 18:15:47.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.218" endtime="20201029 18:15:47.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.226" endtime="20201029 18:15:47.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.919" endtime="20201029 18:15:47.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.917" endtime="20201029 18:15:47.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.233" level="INFO">${RESULT} = [{'diff': 4.724999999999868e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6194999999998876e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:47.230" endtime="20201029 18:15:47.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.237" level="INFO">${ACCURACY} = {'diff': [4.724999999999868e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.620800000000244e-05, 4.6194999999998876e-05, 4.619...</msg>
<status status="PASS" starttime="20201029 18:15:47.234" endtime="20201029 18:15:47.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.242" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.241" endtime="20201029 18:15:47.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.244" level="INFO">VALUE: [4.724999999999868e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.620800000000244e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.6166999999999736e-05, 4.616600000000026e-05, 4.6180999999999306e-05, 4.6180999999999306e-05, 4.6180999999999306e-05, 4.617999999999983e-05, 4.622199999999854e-05, 4.6237000000001055e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.61939999999994e-05, 4.6111000000001456e-05, 4.6194999999998876e-05, 4.6166999999999736e-05, 4.6180999999999306e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.616600000000026e-05, 4.6166999999999736e-05, 4.6181000000002775e-05, 4.611099999999799e-05, 4.6166999999999736e-05, 4.6180999999999306e-05, 4.623599999999811e-05, 4.61939999999994e-05, 4.6166999999999736e-05, 4.616600000000026e-05, 4.6181000000002775e-05, 4.615200000000069e-05, 4.6111000000001456e-05, 4.6180999999999306e-05, 4.6139000000000596e-05, 4.6181000000002775e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.620800000000244e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.243" endtime="20201029 18:15:47.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.238" endtime="20201029 18:15:47.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.249" endtime="20201029 18:15:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.248" endtime="20201029 18:15:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.246" endtime="20201029 18:15:47.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.887" endtime="20201029 18:15:47.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.886" endtime="20201029 18:15:47.270"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.279" endtime="20201029 18:15:47.295"></status>
</kw>
<msg timestamp="20201029 18:15:47.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.277" endtime="20201029 18:15:47.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.296" endtime="20201029 18:15:47.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.299" endtime="20201029 18:15:47.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.274" endtime="20201029 18:15:47.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.272" endtime="20201029 18:15:47.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.308" endtime="20201029 18:15:47.596"></status>
</kw>
<msg timestamp="20201029 18:15:47.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.306" endtime="20201029 18:15:47.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022720264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.600" endtime="20201029 18:15:47.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.608" endtime="20201029 18:15:47.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.304" endtime="20201029 18:15:47.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.302" endtime="20201029 18:15:47.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.615" level="INFO">${RESULT} = [{'diff': 4.725000000000215e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.616599999999679e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:47.612" endtime="20201029 18:15:47.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.619" level="INFO">${ACCURACY} = {'diff': [4.725000000000215e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.616599999999679e-05, 4.617999999999983e-05, 4.6153000000000166e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:15:47.616" endtime="20201029 18:15:47.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.624" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.623" endtime="20201029 18:15:47.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.626" level="INFO">VALUE: [4.725000000000215e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.616599999999679e-05, 4.617999999999983e-05, 4.6153000000000166e-05, 4.620799999999897e-05, 4.6180999999999306e-05, 4.6181000000002775e-05, 4.6166999999999736e-05, 4.620799999999897e-05, 4.6194999999998876e-05, 4.6167000000003205e-05, 4.6153000000000166e-05, 4.619400000000287e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.6166999999999736e-05, 4.6166999999999736e-05, 4.616600000000026e-05, 4.61939999999994e-05, 4.6125000000001026e-05, 4.617999999999983e-05, 4.6166999999999736e-05, 4.616600000000026e-05, 4.619400000000287e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.620800000000244e-05, 4.620800000000244e-05, 4.6166999999999736e-05, 4.6180999999999306e-05, 4.6139000000000596e-05, 4.61939999999994e-05, 4.6153000000000166e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.6209000000001915e-05, 4.6166999999999736e-05, 4.6208999999998446e-05, 4.6180999999999306e-05, 4.61939999999994e-05, 4.6181000000002775e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.625" endtime="20201029 18:15:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.620" endtime="20201029 18:15:47.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.632" endtime="20201029 18:15:47.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.630" endtime="20201029 18:15:47.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.629" endtime="20201029 18:15:47.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.271" endtime="20201029 18:15:47.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.270" endtime="20201029 18:15:47.653"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.661" endtime="20201029 18:15:47.677"></status>
</kw>
<msg timestamp="20201029 18:15:47.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.660" endtime="20201029 18:15:47.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.678" endtime="20201029 18:15:47.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.681" endtime="20201029 18:15:47.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.657" endtime="20201029 18:15:47.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.655" endtime="20201029 18:15:47.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.690" endtime="20201029 18:15:47.975"></status>
</kw>
<msg timestamp="20201029 18:15:47.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.688" endtime="20201029 18:15:47.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021778458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.979" endtime="20201029 18:15:47.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.988" endtime="20201029 18:15:47.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.685" endtime="20201029 18:15:47.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.684" endtime="20201029 18:15:47.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.994" level="INFO">${RESULT} = [{'diff': 4.722199999999954e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.619400000000287e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.6194999999998876e-05...</msg>
<status status="PASS" starttime="20201029 18:15:47.991" endtime="20201029 18:15:47.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.999" level="INFO">${ACCURACY} = {'diff': [4.722199999999954e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.619400000000287e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:15:47.995" endtime="20201029 18:15:47.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.004" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.003" endtime="20201029 18:15:48.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.006" level="INFO">VALUE: [4.722199999999954e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.619400000000287e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.6180999999999306e-05, 4.6195000000002345e-05, 4.6180999999999306e-05, 4.6180999999999306e-05, 4.619400000000287e-05, 4.6194999999998876e-05, 4.6166999999999736e-05, 4.61939999999994e-05, 4.6180999999999306e-05, 4.623600000000158e-05, 4.616600000000026e-05, 4.6180999999999306e-05, 4.6195000000002345e-05, 4.6181000000002775e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.6237000000001055e-05, 4.6180999999999306e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6181000000002775e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.6209000000001915e-05, 4.620799999999897e-05, 4.613800000000112e-05, 4.615199999999722e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.6153000000000166e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.620799999999897e-05, 4.616600000000026e-05, 4.617999999999983e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.005" endtime="20201029 18:15:48.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.000" endtime="20201029 18:15:48.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.011" endtime="20201029 18:15:48.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.010" endtime="20201029 18:15:48.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.009" endtime="20201029 18:15:48.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.653" endtime="20201029 18:15:48.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.653" endtime="20201029 18:15:48.032"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.041" endtime="20201029 18:15:48.056"></status>
</kw>
<msg timestamp="20201029 18:15:48.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.039" endtime="20201029 18:15:48.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.058" endtime="20201029 18:15:48.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.060" endtime="20201029 18:15:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.036" endtime="20201029 18:15:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.034" endtime="20201029 18:15:48.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.069" endtime="20201029 18:15:48.354"></status>
</kw>
<msg timestamp="20201029 18:15:48.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.067" endtime="20201029 18:15:48.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.359" endtime="20201029 18:15:48.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.367" endtime="20201029 18:15:48.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.065" endtime="20201029 18:15:48.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.063" endtime="20201029 18:15:48.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.374" level="INFO">${RESULT} = [{'diff': 4.723599999999911e-05}, {'diff': 4.6166999999999736e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6181000000002775e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.6139000000000596e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:48.371" endtime="20201029 18:15:48.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.378" level="INFO">${ACCURACY} = {'diff': [4.723599999999911e-05, 4.6166999999999736e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.61939999999994e-05, 4.6139000000000596e-05, 4.6181000000002775e-05, 4.620799999999897e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:15:48.375" endtime="20201029 18:15:48.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.382" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.381" endtime="20201029 18:15:48.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.385" level="INFO">VALUE: [4.723599999999911e-05, 4.6166999999999736e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.61939999999994e-05, 4.6139000000000596e-05, 4.6181000000002775e-05, 4.620799999999897e-05, 4.6153000000000166e-05, 4.6153000000000166e-05, 4.6139000000000596e-05, 4.617999999999983e-05, 4.61800000000033e-05, 4.6180999999999306e-05, 4.61939999999994e-05, 4.615200000000069e-05, 4.6195000000002345e-05, 4.619400000000287e-05, 4.6153000000000166e-05, 4.6181000000002775e-05, 4.6194999999998876e-05, 4.622199999999854e-05, 4.61800000000033e-05, 4.6195000000002345e-05, 4.617999999999983e-05, 4.616600000000026e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.622199999999854e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.6195000000002345e-05, 4.6166999999999736e-05, 4.6166999999999736e-05, 4.6180999999999306e-05, 4.616600000000026e-05, 4.617999999999983e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.6180999999999306e-05, 4.616600000000026e-05, 4.6166999999999736e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.620799999999897e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.383" endtime="20201029 18:15:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.379" endtime="20201029 18:15:48.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.390" endtime="20201029 18:15:48.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.388" endtime="20201029 18:15:48.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.387" endtime="20201029 18:15:48.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.033" endtime="20201029 18:15:48.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.032" endtime="20201029 18:15:48.411"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.419" endtime="20201029 18:15:48.436"></status>
</kw>
<msg timestamp="20201029 18:15:48.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.418" endtime="20201029 18:15:48.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.439" endtime="20201029 18:15:48.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.443" endtime="20201029 18:15:48.446"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.415" endtime="20201029 18:15:48.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.413" endtime="20201029 18:15:48.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.458" endtime="20201029 18:15:48.743"></status>
</kw>
<msg timestamp="20201029 18:15:48.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:48.456" endtime="20201029 18:15:48.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0226575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:48.747" endtime="20201029 18:15:48.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.755" endtime="20201029 18:15:48.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.452" endtime="20201029 18:15:48.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.449" endtime="20201029 18:15:48.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.762" level="INFO">${RESULT} = [{'diff': 4.726400000000172e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.617999999999983e-05}, {'diff': 5.122200000000007e-05}, {'diff': 4.617999999999983e-05}, {'diff': 5.129199999999792e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:48.759" endtime="20201029 18:15:48.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.766" level="INFO">${ACCURACY} = {'diff': [4.726400000000172e-05, 4.61939999999994e-05, 4.617999999999983e-05, 5.122200000000007e-05, 4.617999999999983e-05, 5.129199999999792e-05, 5.119500000000041e-05, 5.118000000000136e-05, 4.61949...</msg>
<status status="PASS" starttime="20201029 18:15:48.763" endtime="20201029 18:15:48.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.771" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.770" endtime="20201029 18:15:48.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.773" level="INFO">VALUE: [4.726400000000172e-05, 4.61939999999994e-05, 4.617999999999983e-05, 5.122200000000007e-05, 4.617999999999983e-05, 5.129199999999792e-05, 5.119500000000041e-05, 5.118000000000136e-05, 4.6194999999998876e-05, 4.6166999999999736e-05, 4.6181000000002775e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.124999999999921e-05, 4.620800000000244e-05, 4.61939999999994e-05, 5.12080000000005e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 5.124999999999921e-05, 5.130600000000096e-05, 5.118100000000084e-05, 5.122200000000007e-05, 5.126400000000225e-05, 5.122200000000007e-05, 5.122299999999955e-05, 4.6194999999998876e-05, 5.122200000000007e-05, 5.118099999999737e-05, 5.123599999999964e-05, 5.122299999999955e-05, 4.624999999999768e-05, 5.122200000000007e-05, 5.126399999999878e-05, 5.126399999999878e-05, 4.617999999999983e-05, 5.124999999999921e-05, 4.6223000000001485e-05, 4.623600000000158e-05, 4.6209000000001915e-05, 5.123599999999964e-05, 4.6180999999999306e-05, 5.122200000000007e-05, 4.617999999999983e-05, 5.122200000000007e-05, 4.622200000000201e-05, 5.122200000000007e-05, 4.620800000000244e-05, 4.6180999999999306e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.772" endtime="20201029 18:15:48.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.767" endtime="20201029 18:15:48.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.779" endtime="20201029 18:15:48.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.777" endtime="20201029 18:15:48.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.776" endtime="20201029 18:15:48.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.411" endtime="20201029 18:15:48.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.411" endtime="20201029 18:15:48.800"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.808" endtime="20201029 18:15:48.824"></status>
</kw>
<msg timestamp="20201029 18:15:48.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.807" endtime="20201029 18:15:48.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.825" endtime="20201029 18:15:48.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.828" endtime="20201029 18:15:48.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.804" endtime="20201029 18:15:48.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.802" endtime="20201029 18:15:48.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.837" endtime="20201029 18:15:49.124"></status>
</kw>
<msg timestamp="20201029 18:15:49.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.835" endtime="20201029 18:15:49.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.128" endtime="20201029 18:15:49.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.136" endtime="20201029 18:15:49.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.833" endtime="20201029 18:15:49.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.831" endtime="20201029 18:15:49.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.143" level="INFO">${RESULT} = [{'diff': 5.227799999999935e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.11530000000017e-05}, {'diff': 5.122299999999955e-05}, {'diff': 5.123599999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:49.140" endtime="20201029 18:15:49.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.148" level="INFO">${ACCURACY} = {'diff': [5.227799999999935e-05, 5.118100000000084e-05, 5.123599999999964e-05, 5.11530000000017e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.12359...</msg>
<status status="PASS" starttime="20201029 18:15:49.144" endtime="20201029 18:15:49.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.152" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.151" endtime="20201029 18:15:49.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.155" level="INFO">VALUE: [5.227799999999935e-05, 5.118100000000084e-05, 5.123599999999964e-05, 5.11530000000017e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.115299999999823e-05, 5.122299999999955e-05, 5.123600000000311e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.119400000000093e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.129199999999792e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.130500000000149e-05, 5.116600000000179e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.1207999999997034e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.125000000000268e-05, 5.122299999999955e-05, 5.124999999999921e-05, 5.12080000000005e-05, 5.124999999999921e-05, 5.122299999999955e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.126400000000225e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.1193999999997464e-05, 5.125000000000268e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.122200000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.153" endtime="20201029 18:15:49.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.149" endtime="20201029 18:15:49.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.160" endtime="20201029 18:15:49.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.158" endtime="20201029 18:15:49.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.157" endtime="20201029 18:15:49.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.800" endtime="20201029 18:15:49.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.800" endtime="20201029 18:15:49.180"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.189" endtime="20201029 18:15:49.205"></status>
</kw>
<msg timestamp="20201029 18:15:49.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.187" endtime="20201029 18:15:49.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.206" endtime="20201029 18:15:49.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.209" endtime="20201029 18:15:49.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.185" endtime="20201029 18:15:49.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.183" endtime="20201029 18:15:49.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.218" endtime="20201029 18:15:49.505"></status>
</kw>
<msg timestamp="20201029 18:15:49.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.216" endtime="20201029 18:15:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021727319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.509" endtime="20201029 18:15:49.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.517" endtime="20201029 18:15:49.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.214" endtime="20201029 18:15:49.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.212" endtime="20201029 18:15:49.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.524" level="INFO">${RESULT} = [{'diff': 5.230499999999902e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.1179999999997894e-05}, {'diff': 5.122200000000007e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:49.521" endtime="20201029 18:15:49.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.528" level="INFO">${ACCURACY} = {'diff': [5.230499999999902e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.1179999999997894e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.1235...</msg>
<status status="PASS" starttime="20201029 18:15:49.525" endtime="20201029 18:15:49.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.532" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.531" endtime="20201029 18:15:49.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.535" level="INFO">VALUE: [5.230499999999902e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.1179999999997894e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.118100000000084e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.129200000000139e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.127799999999835e-05, 5.126399999999878e-05, 5.122200000000007e-05, 5.126400000000225e-05, 5.122200000000007e-05, 5.127799999999835e-05, 5.122200000000007e-05, 5.129099999999845e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.1207999999997034e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.129200000000139e-05, 5.1236999999999117e-05, 5.123599999999964e-05, 5.122299999999955e-05, 5.12080000000005e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.126400000000225e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.534" endtime="20201029 18:15:49.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.529" endtime="20201029 18:15:49.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.540" endtime="20201029 18:15:49.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.538" endtime="20201029 18:15:49.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.537" endtime="20201029 18:15:49.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.181" endtime="20201029 18:15:49.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.181" endtime="20201029 18:15:49.561"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.569" endtime="20201029 18:15:49.586"></status>
</kw>
<msg timestamp="20201029 18:15:49.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.568" endtime="20201029 18:15:49.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.587" endtime="20201029 18:15:49.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.590" endtime="20201029 18:15:49.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.565" endtime="20201029 18:15:49.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.563" endtime="20201029 18:15:49.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.599" endtime="20201029 18:15:49.885"></status>
</kw>
<msg timestamp="20201029 18:15:49.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:49.597" endtime="20201029 18:15:49.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227245, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:49.889" endtime="20201029 18:15:49.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.897" endtime="20201029 18:15:49.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.595" endtime="20201029 18:15:49.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.593" endtime="20201029 18:15:49.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.904" level="INFO">${RESULT} = [{'diff': 5.229200000000239e-05}, {'diff': 5.120899999999998e-05}, {'diff': 5.122200000000007e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.122200000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:49.901" endtime="20201029 18:15:49.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.908" level="INFO">${ACCURACY} = {'diff': [5.229200000000239e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.1236999999999117e-05, 5.120...</msg>
<status status="PASS" starttime="20201029 18:15:49.905" endtime="20201029 18:15:49.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.913" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.912" endtime="20201029 18:15:49.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.916" level="INFO">VALUE: [5.229200000000239e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.1236999999999117e-05, 5.120899999999998e-05, 5.125000000000268e-05, 5.122200000000007e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.12080000000005e-05, 5.127800000000182e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.129099999999845e-05, 5.123600000000311e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.122299999999955e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.1236999999999117e-05, 5.127800000000182e-05, 5.122200000000007e-05, 5.122299999999955e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.116700000000127e-05, 5.118100000000084e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.116700000000127e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.914" endtime="20201029 18:15:49.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.909" endtime="20201029 18:15:49.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.921" endtime="20201029 18:15:49.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.919" endtime="20201029 18:15:49.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.918" endtime="20201029 18:15:49.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.561" endtime="20201029 18:15:49.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.561" endtime="20201029 18:15:49.941"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.950" endtime="20201029 18:15:49.966"></status>
</kw>
<msg timestamp="20201029 18:15:49.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.949" endtime="20201029 18:15:49.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.967" endtime="20201029 18:15:49.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.970" endtime="20201029 18:15:49.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.946" endtime="20201029 18:15:49.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.944" endtime="20201029 18:15:49.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.980" endtime="20201029 18:15:50.266"></status>
</kw>
<msg timestamp="20201029 18:15:50.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.978" endtime="20201029 18:15:50.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.270" endtime="20201029 18:15:50.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.279" endtime="20201029 18:15:50.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.975" endtime="20201029 18:15:50.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.974" endtime="20201029 18:15:50.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.285" level="INFO">${RESULT} = [{'diff': 5.230599999999849e-05}, {'diff': 5.120899999999998e-05}, {'diff': 5.122200000000007e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.122200000000007e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:50.282" endtime="20201029 18:15:50.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.290" level="INFO">${ACCURACY} = {'diff': [5.230599999999849e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12089...</msg>
<status status="PASS" starttime="20201029 18:15:50.286" endtime="20201029 18:15:50.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.295" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.294" endtime="20201029 18:15:50.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.297" level="INFO">VALUE: [5.230599999999849e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.120899999999998e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.120899999999998e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.1193999999997464e-05, 5.1223000000003016e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.122299999999955e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.12080000000005e-05, 5.119400000000093e-05, 5.126399999999878e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.119500000000041e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.127699999999888e-05, 5.123599999999964e-05, 5.115299999999823e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.1236999999999117e-05, 5.126399999999878e-05, 5.120899999999998e-05, 5.122299999999955e-05, 5.12080000000005e-05, 5.12080000000005e-05, 5.122299999999955e-05, 5.119400000000093e-05, 5.12080000000005e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.296" endtime="20201029 18:15:50.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.291" endtime="20201029 18:15:50.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.302" endtime="20201029 18:15:50.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.301" endtime="20201029 18:15:50.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.299" endtime="20201029 18:15:50.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.942" endtime="20201029 18:15:50.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.942" endtime="20201029 18:15:50.323"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.331" endtime="20201029 18:15:50.347"></status>
</kw>
<msg timestamp="20201029 18:15:50.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.330" endtime="20201029 18:15:50.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.349" endtime="20201029 18:15:50.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.351" endtime="20201029 18:15:50.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.327" endtime="20201029 18:15:50.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.325" endtime="20201029 18:15:50.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.360" endtime="20201029 18:15:50.649"></status>
</kw>
<msg timestamp="20201029 18:15:50.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.359" endtime="20201029 18:15:50.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.653" endtime="20201029 18:15:50.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.662" endtime="20201029 18:15:50.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.356" endtime="20201029 18:15:50.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.354" endtime="20201029 18:15:50.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.668" level="INFO">${RESULT} = [{'diff': 5.734799999999873e-05}, {'diff': 5.1207999999997034e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.6249999999997274e-05}, {'diff': 5.119400000000093e-05}, {'diff': 5.122200000000007e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:50.665" endtime="20201029 18:15:50.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.672" level="INFO">${ACCURACY} = {'diff': [5.734799999999873e-05, 5.1207999999997034e-05, 5.123599999999964e-05, 5.6249999999997274e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.6236000000001174e-05, 5.1...</msg>
<status status="PASS" starttime="20201029 18:15:50.669" endtime="20201029 18:15:50.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.677" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.676" endtime="20201029 18:15:50.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.679" level="INFO">VALUE: [5.734799999999873e-05, 5.1207999999997034e-05, 5.123599999999964e-05, 5.6249999999997274e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.6236000000001174e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.6264000000000314e-05, 5.12080000000005e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6236000000001174e-05, 5.119500000000041e-05, 5.124999999999921e-05, 5.1207999999997034e-05, 5.122200000000007e-05, 5.127799999999835e-05, 5.6264000000000314e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.629099999999998e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.123599999999964e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.1223000000003016e-05, 5.123599999999964e-05, 5.630499999999955e-05, 5.126399999999878e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.1207999999997034e-05, 5.119400000000093e-05, 5.6235999999997704e-05, 5.6264000000000314e-05, 5.626300000000084e-05, 5.6277999999999884e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.6249999999997274e-05, 5.123600000000311e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.678" endtime="20201029 18:15:50.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.673" endtime="20201029 18:15:50.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.684" endtime="20201029 18:15:50.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.683" endtime="20201029 18:15:50.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.682" endtime="20201029 18:15:50.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.324" endtime="20201029 18:15:50.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.323" endtime="20201029 18:15:50.705"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.714" endtime="20201029 18:15:50.730"></status>
</kw>
<msg timestamp="20201029 18:15:50.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.712" endtime="20201029 18:15:50.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.732" endtime="20201029 18:15:50.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.735" endtime="20201029 18:15:50.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.710" endtime="20201029 18:15:50.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.707" endtime="20201029 18:15:50.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.743" endtime="20201029 18:15:51.028"></status>
</kw>
<msg timestamp="20201029 18:15:51.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.742" endtime="20201029 18:15:51.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.032" endtime="20201029 18:15:51.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.040" endtime="20201029 18:15:51.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.739" endtime="20201029 18:15:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.738" endtime="20201029 18:15:51.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.047" level="INFO">${RESULT} = [{'diff': 5.7278000000000884e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6277999999999884e-...</msg>
<status status="PASS" starttime="20201029 18:15:51.044" endtime="20201029 18:15:51.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.051" level="INFO">${ACCURACY} = {'diff': [5.7278000000000884e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.631900000000259e-05, 5.6277999999999884e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:51.048" endtime="20201029 18:15:51.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.056" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.055" endtime="20201029 18:15:51.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.058" level="INFO">VALUE: [5.7278000000000884e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.631900000000259e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.629099999999998e-05, 5.6222000000001604e-05, 5.631899999999912e-05, 5.627700000000041e-05, 5.629099999999998e-05, 5.627700000000041e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6193999999998995e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.6264000000000314e-05, 5.633300000000216e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.633399999999816e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.626300000000084e-05, 5.6263999999996844e-05, 5.6291999999999454e-05, 5.630499999999955e-05, 5.6264000000000314e-05, 5.626300000000084e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.627700000000041e-05, 5.633299999999869e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.057" endtime="20201029 18:15:51.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.052" endtime="20201029 18:15:51.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.064" endtime="20201029 18:15:51.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.062" endtime="20201029 18:15:51.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.061" endtime="20201029 18:15:51.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.706" endtime="20201029 18:15:51.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.705" endtime="20201029 18:15:51.085"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.093" endtime="20201029 18:15:51.109"></status>
</kw>
<msg timestamp="20201029 18:15:51.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.092" endtime="20201029 18:15:51.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.111" endtime="20201029 18:15:51.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.113" endtime="20201029 18:15:51.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.089" endtime="20201029 18:15:51.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.087" endtime="20201029 18:15:51.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.122" endtime="20201029 18:15:51.409"></status>
</kw>
<msg timestamp="20201029 18:15:51.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.121" endtime="20201029 18:15:51.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.413" endtime="20201029 18:15:51.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.421" endtime="20201029 18:15:51.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.118" endtime="20201029 18:15:51.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.116" endtime="20201029 18:15:51.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.428" level="INFO">${RESULT} = [{'diff': 5.736099999999883e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.629099999999998e-05}, {'diff': 5.6264000000000314e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.424" endtime="20201029 18:15:51.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.433" level="INFO">${ACCURACY} = {'diff': [5.736099999999883e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:51.429" endtime="20201029 18:15:51.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.437" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.436" endtime="20201029 18:15:51.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.440" level="INFO">VALUE: [5.736099999999883e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6263999999996844e-05, 5.6264000000000314e-05, 5.6249999999997274e-05, 5.6235999999997704e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.633299999999869e-05, 5.627700000000041e-05, 5.6235999999997704e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.627700000000041e-05, 5.632000000000206e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6249999999997274e-05, 5.627699999999694e-05, 5.6250000000000744e-05, 5.626300000000084e-05, 5.6264000000000314e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6250000000000744e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.438" endtime="20201029 18:15:51.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.434" endtime="20201029 18:15:51.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.445" endtime="20201029 18:15:51.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.443" endtime="20201029 18:15:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.442" endtime="20201029 18:15:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.085" endtime="20201029 18:15:51.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.085" endtime="20201029 18:15:51.465"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.474" endtime="20201029 18:15:51.490"></status>
</kw>
<msg timestamp="20201029 18:15:51.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.472" endtime="20201029 18:15:51.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.491" endtime="20201029 18:15:51.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.494" endtime="20201029 18:15:51.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.470" endtime="20201029 18:15:51.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.468" endtime="20201029 18:15:51.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.503" endtime="20201029 18:15:51.789"></status>
</kw>
<msg timestamp="20201029 18:15:51.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.501" endtime="20201029 18:15:51.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021906542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.793" endtime="20201029 18:15:51.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.801" endtime="20201029 18:15:51.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.499" endtime="20201029 18:15:51.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.497" endtime="20201029 18:15:51.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.808" level="INFO">${RESULT} = [{'diff': 5.7319999999999593e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.6263999999996844e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6264000000000314e-...</msg>
<status status="PASS" starttime="20201029 18:15:51.805" endtime="20201029 18:15:51.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.812" level="INFO">${ACCURACY} = {'diff': [5.7319999999999593e-05, 5.6250000000000744e-05, 5.6263999999996844e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6263999999996844e-05, 5.6277999999999884e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.809" endtime="20201029 18:15:51.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.817" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.816" endtime="20201029 18:15:51.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.819" level="INFO">VALUE: [5.7319999999999593e-05, 5.6250000000000744e-05, 5.6263999999996844e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6263999999996844e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6193999999998995e-05, 5.620900000000151e-05, 5.622300000000108e-05, 5.6250000000000744e-05, 5.6263999999996844e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6207999999998565e-05, 5.6249999999997274e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.629200000000292e-05, 5.6264000000000314e-05, 5.6221999999998135e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.6319999999998593e-05, 5.6305999999999023e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6277999999999884e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.818" endtime="20201029 18:15:51.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.813" endtime="20201029 18:15:51.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.824" endtime="20201029 18:15:51.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.823" endtime="20201029 18:15:51.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.821" endtime="20201029 18:15:51.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.466" endtime="20201029 18:15:51.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.466" endtime="20201029 18:15:51.845"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.853" endtime="20201029 18:15:51.870"></status>
</kw>
<msg timestamp="20201029 18:15:51.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.852" endtime="20201029 18:15:51.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.872" endtime="20201029 18:15:51.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.874" endtime="20201029 18:15:51.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.849" endtime="20201029 18:15:51.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.847" endtime="20201029 18:15:51.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.883" endtime="20201029 18:15:52.169"></status>
</kw>
<msg timestamp="20201029 18:15:52.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.882" endtime="20201029 18:15:52.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022621056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.173" endtime="20201029 18:15:52.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.182" endtime="20201029 18:15:52.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.879" endtime="20201029 18:15:52.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.877" endtime="20201029 18:15:52.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.188" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.627800000000335e-05}, {'diff': 5.627700000000041e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:52.185" endtime="20201029 18:15:52.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.192" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627800000000335e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6194000000002464e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:52.189" endtime="20201029 18:15:52.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.197" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.196" endtime="20201029 18:15:52.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.199" level="INFO">VALUE: [5.733299999999969e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627800000000335e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6194000000002464e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.630499999999955e-05, 5.627700000000041e-05, 5.6291999999999454e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6263999999996844e-05, 5.6221999999998135e-05, 5.6291999999999454e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.633300000000216e-05, 5.6263999999996844e-05, 5.623700000000065e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.630499999999955e-05, 5.6264000000000314e-05, 5.634699999999826e-05, 5.6250000000000744e-05, 5.6222000000001604e-05, 5.6264000000000314e-05, 5.6222000000001604e-05, 5.627700000000041e-05, 5.6249999999997274e-05, 5.6277999999999884e-05, 5.626300000000084e-05, 5.629200000000292e-05, 5.631900000000259e-05, 5.6277999999999884e-05, 5.629200000000292e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6250000000000744e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.198" endtime="20201029 18:15:52.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.193" endtime="20201029 18:15:52.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.210" endtime="20201029 18:15:52.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.208" endtime="20201029 18:15:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.207" endtime="20201029 18:15:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.846" endtime="20201029 18:15:52.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.845" endtime="20201029 18:15:52.230"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.239" endtime="20201029 18:15:52.255"></status>
</kw>
<msg timestamp="20201029 18:15:52.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.238" endtime="20201029 18:15:52.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.257" endtime="20201029 18:15:52.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.259" endtime="20201029 18:15:52.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.235" endtime="20201029 18:15:52.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.233" endtime="20201029 18:15:52.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.268" endtime="20201029 18:15:52.553"></status>
</kw>
<msg timestamp="20201029 18:15:52.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.266" endtime="20201029 18:15:52.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021739819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.558" endtime="20201029 18:15:52.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.566" endtime="20201029 18:15:52.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.264" endtime="20201029 18:15:52.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.262" endtime="20201029 18:15:52.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.573" level="INFO">${RESULT} = [{'diff': 5.734799999999873e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 6.127699999999847e-05}, {'diff': 6.126400000000184e-05}, {'diff': 5.627700000000041e-05}, {'diff': 6.131900000000065e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:52.569" endtime="20201029 18:15:52.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.578" level="INFO">${ACCURACY} = {'diff': [5.734799999999873e-05, 5.6222000000001604e-05, 6.127699999999847e-05, 6.126400000000184e-05, 5.627700000000041e-05, 6.131900000000065e-05, 5.629099999999998e-05, 6.131900000000065e-05, 6.138...</msg>
<status status="PASS" starttime="20201029 18:15:52.574" endtime="20201029 18:15:52.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.582" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.581" endtime="20201029 18:15:52.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.585" level="INFO">VALUE: [5.734799999999873e-05, 5.6222000000001604e-05, 6.127699999999847e-05, 6.126400000000184e-05, 5.627700000000041e-05, 6.131900000000065e-05, 5.629099999999998e-05, 6.131900000000065e-05, 6.138799999999903e-05, 5.6264000000000314e-05, 6.13889999999985e-05, 6.130499999999761e-05, 6.133300000000022e-05, 5.629200000000292e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 6.130500000000108e-05, 5.6264000000000314e-05, 6.130500000000108e-05, 6.133300000000022e-05, 5.6249999999997274e-05, 6.130600000000055e-05, 5.627700000000041e-05, 6.132000000000012e-05, 6.131900000000065e-05, 5.6305999999999023e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 6.131900000000065e-05, 6.132000000000012e-05, 5.6277999999999884e-05, 6.132000000000012e-05, 5.6264000000000314e-05, 6.133300000000022e-05, 6.13339999999997e-05, 6.130600000000055e-05, 5.6277999999999884e-05, 6.133400000000316e-05, 5.626299999999737e-05, 5.627700000000041e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 6.136099999999936e-05, 6.132000000000012e-05, 6.131900000000065e-05, 5.6264000000000314e-05, 6.133300000000022e-05, 5.6291999999999454e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.583" endtime="20201029 18:15:52.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.579" endtime="20201029 18:15:52.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.590" endtime="20201029 18:15:52.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.588" endtime="20201029 18:15:52.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.587" endtime="20201029 18:15:52.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.231" endtime="20201029 18:15:52.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.231" endtime="20201029 18:15:52.610"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.619" endtime="20201029 18:15:52.635"></status>
</kw>
<msg timestamp="20201029 18:15:52.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.617" endtime="20201029 18:15:52.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.637" endtime="20201029 18:15:52.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.639" endtime="20201029 18:15:52.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.615" endtime="20201029 18:15:52.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.613" endtime="20201029 18:15:52.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.648" endtime="20201029 18:15:52.934"></status>
</kw>
<msg timestamp="20201029 18:15:52.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.647" endtime="20201029 18:15:52.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.939" endtime="20201029 18:15:52.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.947" endtime="20201029 18:15:52.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.644" endtime="20201029 18:15:52.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.642" endtime="20201029 18:15:52.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.954" level="INFO">${RESULT} = [{'diff': 6.229100000000251e-05}, {'diff': 6.130500000000108e-05}, {'diff': 6.130500000000108e-05}, {'diff': 6.127699999999847e-05}, {'diff': 6.130600000000055e-05}, {'diff': 6.12499999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:52.950" endtime="20201029 18:15:52.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.958" level="INFO">${ACCURACY} = {'diff': [6.229100000000251e-05, 6.130500000000108e-05, 6.130500000000108e-05, 6.127699999999847e-05, 6.130600000000055e-05, 6.12499999999988e-05, 6.132000000000012e-05, 6.129099999999804e-05, 6.13060...</msg>
<status status="PASS" starttime="20201029 18:15:52.955" endtime="20201029 18:15:52.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.962" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.961" endtime="20201029 18:15:52.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.964" level="INFO">VALUE: [6.229100000000251e-05, 6.130500000000108e-05, 6.130500000000108e-05, 6.127699999999847e-05, 6.130600000000055e-05, 6.12499999999988e-05, 6.132000000000012e-05, 6.129099999999804e-05, 6.130600000000055e-05, 6.127800000000141e-05, 6.129100000000151e-05, 6.129200000000098e-05, 6.129200000000098e-05, 6.129200000000098e-05, 6.129099999999804e-05, 6.131999999999665e-05, 6.131900000000065e-05, 6.130499999999761e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.129100000000151e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.134699999999979e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.134699999999979e-05, 6.134699999999979e-05, 6.131900000000065e-05, 6.129200000000098e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.134699999999979e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.131899999999718e-05, 6.138900000000197e-05, 6.130599999999709e-05, 6.130500000000108e-05, 6.129099999999804e-05, 6.125000000000227e-05, 6.132000000000012e-05, 6.138799999999903e-05, 6.127799999999795e-05, 6.131900000000065e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.963" endtime="20201029 18:15:52.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.959" endtime="20201029 18:15:52.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.969" endtime="20201029 18:15:52.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.968" endtime="20201029 18:15:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.967" endtime="20201029 18:15:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.611" endtime="20201029 18:15:52.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.611" endtime="20201029 18:15:52.990"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.999" endtime="20201029 18:15:53.016"></status>
</kw>
<msg timestamp="20201029 18:15:53.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.997" endtime="20201029 18:15:53.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.018" endtime="20201029 18:15:53.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.020" endtime="20201029 18:15:53.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.995" endtime="20201029 18:15:53.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.993" endtime="20201029 18:15:53.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.030" endtime="20201029 18:15:53.314"></status>
</kw>
<msg timestamp="20201029 18:15:53.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:53.028" endtime="20201029 18:15:53.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:53.319" endtime="20201029 18:15:53.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.327" endtime="20201029 18:15:53.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.026" endtime="20201029 18:15:53.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.024" endtime="20201029 18:15:53.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.334" level="INFO">${RESULT} = [{'diff': 6.240299999999907e-05}, {'diff': 6.129199999999752e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.129100000000151e-05}, {'diff': 6.130600000000055e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:53.330" endtime="20201029 18:15:53.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.338" level="INFO">${ACCURACY} = {'diff': [6.240299999999907e-05, 6.129199999999752e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.129100000000151e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.134699999999979e-05, 6.1320...</msg>
<status status="PASS" starttime="20201029 18:15:53.335" endtime="20201029 18:15:53.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.342" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.341" endtime="20201029 18:15:53.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.345" level="INFO">VALUE: [6.240299999999907e-05, 6.129199999999752e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.129100000000151e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.134699999999979e-05, 6.132000000000012e-05, 6.130599999999709e-05, 6.130500000000108e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.13339999999997e-05, 6.131900000000065e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.129099999999804e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.13339999999997e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.130599999999709e-05, 6.132000000000012e-05, 6.137499999999893e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.129099999999804e-05, 6.131899999999718e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.127800000000141e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.130500000000108e-05, 6.123599999999924e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.343" endtime="20201029 18:15:53.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.339" endtime="20201029 18:15:53.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.350" endtime="20201029 18:15:53.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.349" endtime="20201029 18:15:53.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.348" endtime="20201029 18:15:53.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.991" endtime="20201029 18:15:53.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.991" endtime="20201029 18:15:53.371"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.380" endtime="20201029 18:15:53.396"></status>
</kw>
<msg timestamp="20201029 18:15:53.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.378" endtime="20201029 18:15:53.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.397" endtime="20201029 18:15:53.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.400" endtime="20201029 18:15:53.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.376" endtime="20201029 18:15:53.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.374" endtime="20201029 18:15:53.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.419" endtime="20201029 18:15:53.717"></status>
</kw>
<msg timestamp="20201029 18:15:53.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.413" endtime="20201029 18:15:53.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.721" endtime="20201029 18:15:53.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.729" endtime="20201029 18:15:53.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.405" endtime="20201029 18:15:53.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.403" endtime="20201029 18:15:53.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.736" level="INFO">${RESULT} = [{'diff': 6.236100000000036e-05}, {'diff': 6.130600000000055e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.130600000000055e-05}, {'diff': 6.129200000000098e-05}, {'diff': 6.130499999999761e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:53.733" endtime="20201029 18:15:53.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.741" level="INFO">${ACCURACY} = {'diff': [6.236100000000036e-05, 6.130600000000055e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.129200000000098e-05, 6.130499999999761e-05, 6.130600000000055e-05, 6.129099999999804e-05, 6.1305...</msg>
<status status="PASS" starttime="20201029 18:15:53.737" endtime="20201029 18:15:53.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.745" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.744" endtime="20201029 18:15:53.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.748" level="INFO">VALUE: [6.236100000000036e-05, 6.130600000000055e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.129200000000098e-05, 6.130499999999761e-05, 6.130600000000055e-05, 6.129099999999804e-05, 6.130599999999709e-05, 6.132000000000012e-05, 6.129200000000098e-05, 6.136100000000283e-05, 6.127800000000141e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.131900000000065e-05, 6.131900000000065e-05, 6.134699999999979e-05, 6.12499999999988e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.130600000000055e-05, 6.129200000000098e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.130500000000108e-05, 6.130599999999709e-05, 6.130500000000108e-05, 6.130499999999761e-05, 6.131900000000065e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.130499999999761e-05, 6.131900000000065e-05, 6.129099999999804e-05, 6.129199999999752e-05, 6.132000000000012e-05, 6.127799999999795e-05, 6.130599999999709e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.129100000000151e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.747" endtime="20201029 18:15:53.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.742" endtime="20201029 18:15:53.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.753" endtime="20201029 18:15:53.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.751" endtime="20201029 18:15:53.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.750" endtime="20201029 18:15:53.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.372" endtime="20201029 18:15:53.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.371" endtime="20201029 18:15:53.774"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.782" endtime="20201029 18:15:53.798"></status>
</kw>
<msg timestamp="20201029 18:15:53.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.781" endtime="20201029 18:15:53.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.800" endtime="20201029 18:15:53.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.802" endtime="20201029 18:15:53.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.778" endtime="20201029 18:15:53.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.776" endtime="20201029 18:15:53.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.811" endtime="20201029 18:15:54.100"></status>
</kw>
<msg timestamp="20201029 18:15:54.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.810" endtime="20201029 18:15:54.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.104" endtime="20201029 18:15:54.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.113" endtime="20201029 18:15:54.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.807" endtime="20201029 18:15:54.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.806" endtime="20201029 18:15:54.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.119" level="INFO">${RESULT} = [{'diff': 6.234700000000079e-05}, {'diff': 6.130599999999709e-05}, {'diff': 6.130500000000108e-05}, {'diff': 6.127699999999847e-05}, {'diff': 6.130499999999761e-05}, {'diff': 6.137499999999893e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:54.116" endtime="20201029 18:15:54.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.123" level="INFO">${ACCURACY} = {'diff': [6.234700000000079e-05, 6.130599999999709e-05, 6.130500000000108e-05, 6.127699999999847e-05, 6.130499999999761e-05, 6.137499999999893e-05, 6.13750000000024e-05, 6.129199999999752e-05, 6.13060...</msg>
<status status="PASS" starttime="20201029 18:15:54.120" endtime="20201029 18:15:54.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.128" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.127" endtime="20201029 18:15:54.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.130" level="INFO">VALUE: [6.234700000000079e-05, 6.130599999999709e-05, 6.130500000000108e-05, 6.127699999999847e-05, 6.130499999999761e-05, 6.137499999999893e-05, 6.13750000000024e-05, 6.129199999999752e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.126399999999838e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.133300000000022e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.130600000000055e-05, 6.136099999999936e-05, 6.129200000000098e-05, 6.136099999999936e-05, 6.130500000000108e-05, 6.129099999999804e-05, 6.129200000000098e-05, 6.134699999999979e-05, 6.136100000000283e-05, 6.129099999999804e-05, 6.129200000000098e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.130499999999761e-05, 6.126400000000184e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.130500000000108e-05, 6.129200000000098e-05, 6.12499999999988e-05, 6.130600000000055e-05, 6.127799999999795e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.13339999999997e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.129" endtime="20201029 18:15:54.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.124" endtime="20201029 18:15:54.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.135" endtime="20201029 18:15:54.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.134" endtime="20201029 18:15:54.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.133" endtime="20201029 18:15:54.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.774" endtime="20201029 18:15:54.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.774" endtime="20201029 18:15:54.156"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.164" endtime="20201029 18:15:54.182"></status>
</kw>
<msg timestamp="20201029 18:15:54.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.163" endtime="20201029 18:15:54.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.183" endtime="20201029 18:15:54.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.186" endtime="20201029 18:15:54.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.160" endtime="20201029 18:15:54.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.158" endtime="20201029 18:15:54.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.195" endtime="20201029 18:15:54.479"></status>
</kw>
<msg timestamp="20201029 18:15:54.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.193" endtime="20201029 18:15:54.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022554319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.484" endtime="20201029 18:15:54.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.492" endtime="20201029 18:15:54.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.191" endtime="20201029 18:15:54.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.189" endtime="20201029 18:15:54.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.499" level="INFO">${RESULT} = [{'diff': 6.23889999999995e-05}, {'diff': 6.130500000000108e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.129200000000098e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:54.495" endtime="20201029 18:15:54.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.503" level="INFO">${ACCURACY} = {'diff': [6.23889999999995e-05, 6.130500000000108e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.133300000000022e-05, 6.129200000000098e-05, 6.636099999999742e-05, 6.129100000000151e-05, 6.13190...</msg>
<status status="PASS" starttime="20201029 18:15:54.500" endtime="20201029 18:15:54.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.507" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.506" endtime="20201029 18:15:54.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.510" level="INFO">VALUE: [6.23889999999995e-05, 6.130500000000108e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.133300000000022e-05, 6.129200000000098e-05, 6.636099999999742e-05, 6.129100000000151e-05, 6.131900000000065e-05, 6.63480000000008e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.127800000000141e-05, 6.131900000000065e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.627800000000295e-05, 6.134799999999926e-05, 6.63480000000008e-05, 6.13339999999997e-05, 6.637499999999699e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.633400000000123e-05, 6.636200000000037e-05, 6.131900000000065e-05, 6.634700000000132e-05, 6.131900000000065e-05, 6.134699999999979e-05, 6.131900000000065e-05, 6.13339999999997e-05, 6.631899999999871e-05, 6.63480000000008e-05, 6.637500000000046e-05, 6.636099999999742e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.634700000000132e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.12499999999988e-05, 6.127699999999847e-05, 6.130600000000055e-05, 6.123599999999924e-05, 6.633400000000123e-05, 6.629200000000252e-05, 6.129099999999804e-05, 6.633400000000123e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.508" endtime="20201029 18:15:54.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.503" endtime="20201029 18:15:54.512"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.515" endtime="20201029 18:15:54.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.514" endtime="20201029 18:15:54.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.513" endtime="20201029 18:15:54.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.157" endtime="20201029 18:15:54.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.156" endtime="20201029 18:15:54.536"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.545" endtime="20201029 18:15:54.561"></status>
</kw>
<msg timestamp="20201029 18:15:54.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.543" endtime="20201029 18:15:54.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.563" endtime="20201029 18:15:54.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.565" endtime="20201029 18:15:54.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.541" endtime="20201029 18:15:54.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.538" endtime="20201029 18:15:54.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.574" endtime="20201029 18:15:54.860"></status>
</kw>
<msg timestamp="20201029 18:15:54.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.572" endtime="20201029 18:15:54.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.864" endtime="20201029 18:15:54.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.872" endtime="20201029 18:15:54.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.570" endtime="20201029 18:15:54.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.568" endtime="20201029 18:15:54.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.879" level="INFO">${RESULT} = [{'diff': 6.74030000000006e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.633400000000123e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.636200000000037e-05}, {'diff': 6.63480000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:54.876" endtime="20201029 18:15:54.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.884" level="INFO">${ACCURACY} = {'diff': [6.74030000000006e-05, 6.636100000000089e-05, 6.633400000000123e-05, 6.634700000000132e-05, 6.636200000000037e-05, 6.63480000000008e-05, 6.633300000000175e-05, 6.630600000000209e-05, 6.633400...</msg>
<status status="PASS" starttime="20201029 18:15:54.880" endtime="20201029 18:15:54.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.888" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.887" endtime="20201029 18:15:54.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.891" level="INFO">VALUE: [6.74030000000006e-05, 6.636100000000089e-05, 6.633400000000123e-05, 6.634700000000132e-05, 6.636200000000037e-05, 6.63480000000008e-05, 6.633300000000175e-05, 6.630600000000209e-05, 6.633400000000123e-05, 6.633300000000175e-05, 6.638900000000003e-05, 6.631899999999871e-05, 6.634699999999785e-05, 6.636099999999742e-05, 6.633300000000175e-05, 6.631899999999871e-05, 6.630500000000261e-05, 6.633300000000175e-05, 6.634700000000132e-05, 6.630599999999862e-05, 6.626400000000338e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.637500000000046e-05, 6.633300000000175e-05, 6.633299999999828e-05, 6.634700000000132e-05, 6.63480000000008e-05, 6.629199999999905e-05, 6.633299999999828e-05, 6.634700000000132e-05, 6.633399999999776e-05, 6.633299999999828e-05, 6.633299999999828e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.630499999999914e-05, 6.633299999999828e-05, 6.634700000000132e-05, 6.641699999999917e-05, 6.636200000000037e-05, 6.64029999999996e-05, 6.633299999999828e-05, 6.633399999999776e-05, 6.634699999999785e-05, 6.633300000000175e-05, 6.632000000000166e-05, 6.634799999999733e-05, 6.633300000000175e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.890" endtime="20201029 18:15:54.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.885" endtime="20201029 18:15:54.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.896" endtime="20201029 18:15:54.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.894" endtime="20201029 18:15:54.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.893" endtime="20201029 18:15:54.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.537" endtime="20201029 18:15:54.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.536" endtime="20201029 18:15:54.917"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.925" endtime="20201029 18:15:54.942"></status>
</kw>
<msg timestamp="20201029 18:15:54.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.924" endtime="20201029 18:15:54.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.943" endtime="20201029 18:15:54.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.946" endtime="20201029 18:15:54.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.921" endtime="20201029 18:15:54.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.919" endtime="20201029 18:15:54.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.954" endtime="20201029 18:15:55.242"></status>
</kw>
<msg timestamp="20201029 18:15:55.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.953" endtime="20201029 18:15:55.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021747722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.246" endtime="20201029 18:15:55.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.255" endtime="20201029 18:15:55.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.950" endtime="20201029 18:15:55.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.949" endtime="20201029 18:15:55.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.261" level="INFO">${RESULT} = [{'diff': 6.738900000000103e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.63480000000008e-05}, {'diff': 6.636100000000089e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:55.258" endtime="20201029 18:15:55.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.265" level="INFO">${ACCURACY} = {'diff': [6.738900000000103e-05, 6.641699999999917e-05, 6.64029999999996e-05, 6.634700000000132e-05, 6.63480000000008e-05, 6.636100000000089e-05, 6.633300000000175e-05, 6.634699999999785e-05, 6.638900...</msg>
<status status="PASS" starttime="20201029 18:15:55.262" endtime="20201029 18:15:55.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.270" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.269" endtime="20201029 18:15:55.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.272" level="INFO">VALUE: [6.738900000000103e-05, 6.641699999999917e-05, 6.64029999999996e-05, 6.634700000000132e-05, 6.63480000000008e-05, 6.636100000000089e-05, 6.633300000000175e-05, 6.634699999999785e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.634699999999785e-05, 6.637500000000046e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.633299999999828e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.633300000000175e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.633299999999828e-05, 6.631899999999871e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.633400000000123e-05, 6.629199999999905e-05, 6.630499999999914e-05, 6.634699999999785e-05, 6.64029999999996e-05, 6.63480000000008e-05, 6.638900000000003e-05, 6.634799999999733e-05, 6.634700000000132e-05, 6.631999999999819e-05, 6.636100000000089e-05, 6.640200000000013e-05, 6.636100000000089e-05, 6.627799999999948e-05, 6.630599999999862e-05, 6.634799999999733e-05, 6.633300000000175e-05, 6.63480000000008e-05, 6.633400000000123e-05, 6.633299999999828e-05, 6.640300000000307e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.271" endtime="20201029 18:15:55.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.266" endtime="20201029 18:15:55.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.277" endtime="20201029 18:15:55.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.276" endtime="20201029 18:15:55.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.274" endtime="20201029 18:15:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.918" endtime="20201029 18:15:55.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.917" endtime="20201029 18:15:55.298"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.306" endtime="20201029 18:15:55.324"></status>
</kw>
<msg timestamp="20201029 18:15:55.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.305" endtime="20201029 18:15:55.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.325" endtime="20201029 18:15:55.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.328" endtime="20201029 18:15:55.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.302" endtime="20201029 18:15:55.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.300" endtime="20201029 18:15:55.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.337" endtime="20201029 18:15:55.627"></status>
</kw>
<msg timestamp="20201029 18:15:55.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.335" endtime="20201029 18:15:55.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022589444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022656778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.632" endtime="20201029 18:15:55.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.640" endtime="20201029 18:15:55.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.333" endtime="20201029 18:15:55.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.331" endtime="20201029 18:15:55.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.646" level="INFO">${RESULT} = [{'diff': 6.733399999999876e-05}, {'diff': 6.632000000000166e-05}, {'diff': 6.634700000000132e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.637499999999699e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:55.643" endtime="20201029 18:15:55.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.651" level="INFO">${ACCURACY} = {'diff': [6.733399999999876e-05, 6.632000000000166e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.637499999999699e-05, 6.634699999999785e-05, 6.633300000000175e-05, 6.6346...</msg>
<status status="PASS" starttime="20201029 18:15:55.647" endtime="20201029 18:15:55.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.655" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.654" endtime="20201029 18:15:55.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.657" level="INFO">VALUE: [6.733399999999876e-05, 6.632000000000166e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.637499999999699e-05, 6.634699999999785e-05, 6.633300000000175e-05, 6.634699999999785e-05, 6.636099999999742e-05, 6.637500000000046e-05, 6.632000000000166e-05, 6.636100000000089e-05, 6.633299999999828e-05, 6.636100000000089e-05, 6.636200000000037e-05, 6.63480000000008e-05, 6.631900000000218e-05, 6.634700000000132e-05, 6.634799999999733e-05, 6.636100000000089e-05, 6.633400000000123e-05, 6.633300000000175e-05, 6.634700000000132e-05, 6.636099999999742e-05, 6.629199999999905e-05, 6.636200000000037e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.630499999999914e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.638900000000003e-05, 6.627799999999948e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.633400000000123e-05, 6.633299999999828e-05, 6.63480000000008e-05, 6.634799999999733e-05, 6.634699999999785e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.634699999999785e-05, 6.630599999999862e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.656" endtime="20201029 18:15:55.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.651" endtime="20201029 18:15:55.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.663" endtime="20201029 18:15:55.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.662" endtime="20201029 18:15:55.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.661" endtime="20201029 18:15:55.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.299" endtime="20201029 18:15:55.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.298" endtime="20201029 18:15:55.684"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.693" endtime="20201029 18:15:55.712"></status>
</kw>
<msg timestamp="20201029 18:15:55.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.691" endtime="20201029 18:15:55.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.714" endtime="20201029 18:15:55.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.716" endtime="20201029 18:15:55.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.689" endtime="20201029 18:15:55.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.686" endtime="20201029 18:15:55.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.725" endtime="20201029 18:15:56.010"></status>
</kw>
<msg timestamp="20201029 18:15:56.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.724" endtime="20201029 18:15:56.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021935347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.014" endtime="20201029 18:15:56.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.022" endtime="20201029 18:15:56.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.721" endtime="20201029 18:15:56.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.720" endtime="20201029 18:15:56.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.029" level="INFO">${RESULT} = [{'diff': 0.00013516600000000253}, {'diff': 0.00013467999999999813}, {'diff': 0.00013469400000000117}, {'diff': 0.00013469499999999718}, {'diff': 0.00013470800000000074}, {'diff': 0.000134638999999998...</msg>
<status status="PASS" starttime="20201029 18:15:56.025" endtime="20201029 18:15:56.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.033" level="INFO">${ACCURACY} = {'diff': [0.00013516600000000253, 0.00013467999999999813, 0.00013469400000000117, 0.00013469499999999718, 0.00013470800000000074, 0.0001346389999999989, 0.00013470900000000022, 0.00013467999999999813,...</msg>
<status status="PASS" starttime="20201029 18:15:56.030" endtime="20201029 18:15:56.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.038" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.037" endtime="20201029 18:15:56.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.040" level="INFO">VALUE: [0.00013516600000000253, 0.00013467999999999813, 0.00013469400000000117, 0.00013469499999999718, 0.00013470800000000074, 0.0001346389999999989, 0.00013470900000000022, 0.00013467999999999813, 0.00013466699999999804, 0.00013469500000000065, 0.0001346939999999977, 0.00013470900000000022, 0.00013470900000000022, 0.00013470800000000074, 0.0001346939999999977, 0.00013476399999999902, 0.00013470800000000074, 0.00013470800000000074, 0.00013472199999999684, 0.00013470900000000022, 0.00013470900000000022, 0.00013470800000000074, 0.0001346939999999977, 0.00013469400000000117, 0.00013472200000000031, 0.00013468100000000108, 0.00013469499999999718, 0.00013474999999999945, 0.00013468100000000108, 0.00013473599999999988, 0.00013469400000000117, 0.00013469400000000117, 0.00013469499999999718, 0.0001346800000000016, 0.00013470799999999727, 0.00013469500000000065, 0.0001346939999999977, 0.0001346670000000015, 0.0001346809999999976, 0.0001346800000000016, 0.00013469400000000117, 0.00013469500000000065, 0.00013469400000000117, 0.00013468100000000108, 0.0001346809999999976, 0.00013465299999999847, 0.00013469400000000117, 0.00013472200000000031, 0.00013466599999999856, 0.00013467999999999813]</msg>
<status status="PASS" starttime="20201029 18:15:56.039" endtime="20201029 18:15:56.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.034" endtime="20201029 18:15:56.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.045" endtime="20201029 18:15:56.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.044" endtime="20201029 18:15:56.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.043" endtime="20201029 18:15:56.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.685" endtime="20201029 18:15:56.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.684" endtime="20201029 18:15:56.066"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.075" endtime="20201029 18:15:56.095"></status>
</kw>
<msg timestamp="20201029 18:15:56.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.073" endtime="20201029 18:15:56.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.096" endtime="20201029 18:15:56.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.099" endtime="20201029 18:15:56.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.071" endtime="20201029 18:15:56.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.069" endtime="20201029 18:15:56.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.108" endtime="20201029 18:15:56.396"></status>
</kw>
<msg timestamp="20201029 18:15:56.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.106" endtime="20201029 18:15:56.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.400" endtime="20201029 18:15:56.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.408" endtime="20201029 18:15:56.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.104" endtime="20201029 18:15:56.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.102" endtime="20201029 18:15:56.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.415" level="INFO">${RESULT} = [{'diff': 0.00013519500000000115}, {'diff': 0.00013470800000000074}, {'diff': 0.00013476299999999955}, {'diff': 0.00013470900000000022}, {'diff': 0.00013470900000000022}, {'diff': 0.000134708000000000...</msg>
<status status="PASS" starttime="20201029 18:15:56.411" endtime="20201029 18:15:56.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.419" level="INFO">${ACCURACY} = {'diff': [0.00013519500000000115, 0.00013470800000000074, 0.00013476299999999955, 0.00013470900000000022, 0.00013470900000000022, 0.00013470800000000074, 0.00013470800000000074, 0.00013472200000000031...</msg>
<status status="PASS" starttime="20201029 18:15:56.416" endtime="20201029 18:15:56.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.423" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.422" endtime="20201029 18:15:56.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.425" level="INFO">VALUE: [0.00013519500000000115, 0.00013470800000000074, 0.00013476299999999955, 0.00013470900000000022, 0.00013470900000000022, 0.00013470800000000074, 0.00013470800000000074, 0.00013472200000000031, 0.00013470800000000074, 0.00013472200000000031, 0.00013470900000000022, 0.00013473599999999988, 0.00013470900000000022, 0.00013469400000000117, 0.00013470800000000074, 0.00013470800000000074, 0.00013473599999999988, 0.00013469500000000065, 0.00013470900000000022, 0.00013473699999999936, 0.00013469500000000065, 0.00013469499999999718, 0.00013470900000000022, 0.00013470800000000074, 0.00013470899999999675, 0.00013469400000000117, 0.00013472200000000031, 0.00013470800000000074, 0.00013474999999999945, 0.00013472200000000031, 0.00013469500000000065, 0.0001346800000000016, 0.00013469400000000117, 0.00013469400000000117, 0.00013469499999999718, 0.00013465300000000194, 0.0001346939999999977, 0.00013472200000000031, 0.00013470900000000022, 0.00013470799999999727, 0.00013473599999999988, 0.00013474999999999945, 0.00013470799999999727, 0.00013465299999999847, 0.00013470800000000074, 0.00013472200000000031, 0.00013470800000000074, 0.00013469400000000117, 0.000134651999999999, 0.00013465300000000194]</msg>
<status status="PASS" starttime="20201029 18:15:56.424" endtime="20201029 18:15:56.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.419" endtime="20201029 18:15:56.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.430" endtime="20201029 18:15:56.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.429" endtime="20201029 18:15:56.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.428" endtime="20201029 18:15:56.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.067" endtime="20201029 18:15:56.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.067" endtime="20201029 18:15:56.451"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.460" endtime="20201029 18:15:56.481"></status>
</kw>
<msg timestamp="20201029 18:15:56.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.458" endtime="20201029 18:15:56.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.482" endtime="20201029 18:15:56.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.484" endtime="20201029 18:15:56.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.456" endtime="20201029 18:15:56.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.454" endtime="20201029 18:15:56.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.494" endtime="20201029 18:15:56.779"></status>
</kw>
<msg timestamp="20201029 18:15:56.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.492" endtime="20201029 18:15:56.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.784" endtime="20201029 18:15:56.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.792" endtime="20201029 18:15:56.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.489" endtime="20201029 18:15:56.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.488" endtime="20201029 18:15:56.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.798" level="INFO">${RESULT} = [{'diff': 0.00013524999999999995}, {'diff': 0.00013469500000000065}, {'diff': 0.00013469400000000117}, {'diff': 0.0001347229999999998}, {'diff': 0.00013474999999999945}, {'diff': 0.0001346939999999977...</msg>
<status status="PASS" starttime="20201029 18:15:56.795" endtime="20201029 18:15:56.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.802" level="INFO">${ACCURACY} = {'diff': [0.00013524999999999995, 0.00013469500000000065, 0.00013469400000000117, 0.0001347229999999998, 0.00013474999999999945, 0.0001346939999999977, 0.00013470900000000022, 0.00013469500000000065, ...</msg>
<status status="PASS" starttime="20201029 18:15:56.799" endtime="20201029 18:15:56.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.807" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.806" endtime="20201029 18:15:56.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.810" level="INFO">VALUE: [0.00013524999999999995, 0.00013469500000000065, 0.00013469400000000117, 0.0001347229999999998, 0.00013474999999999945, 0.0001346939999999977, 0.00013470900000000022, 0.00013469500000000065, 0.00013468100000000108, 0.00013470899999999675, 0.00013470799999999727, 0.00013469500000000065, 0.00013470900000000022, 0.00013467999999999813, 0.00013470900000000022, 0.00013469500000000065, 0.00013469400000000117, 0.00013469400000000117, 0.00013469400000000117, 0.00013470900000000022, 0.00013469400000000117, 0.00013473599999999988, 0.00013472200000000031, 0.00013468100000000108, 0.0001346800000000016, 0.00013469500000000065, 0.00013469500000000065, 0.00013470800000000074, 0.00013472199999999684, 0.00013470799999999727, 0.00013470900000000022, 0.0001346380000000029, 0.00013473600000000335, 0.00013469500000000065, 0.0001347779999999986, 0.00013466699999999804, 0.00013469400000000117, 0.00013468100000000108, 0.00013469400000000117, 0.0001347229999999998, 0.00013462499999999933, 0.00013476399999999902, 0.0001346389999999989, 0.00013468100000000108, 0.00013470800000000074, 0.00013470800000000074, 0.00013470800000000074, 0.00013469400000000117, 0.00013470800000000074, 0.00013467999999999813]</msg>
<status status="PASS" starttime="20201029 18:15:56.808" endtime="20201029 18:15:56.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.803" endtime="20201029 18:15:56.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.815" endtime="20201029 18:15:56.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.813" endtime="20201029 18:15:56.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.812" endtime="20201029 18:15:56.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.452" endtime="20201029 18:15:56.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.452" endtime="20201029 18:15:56.836"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.844" endtime="20201029 18:15:56.864"></status>
</kw>
<msg timestamp="20201029 18:15:56.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.843" endtime="20201029 18:15:56.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.866" endtime="20201029 18:15:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.868" endtime="20201029 18:15:56.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.840" endtime="20201029 18:15:56.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.838" endtime="20201029 18:15:56.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.877" endtime="20201029 18:15:57.164"></status>
</kw>
<msg timestamp="20201029 18:15:57.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.876" endtime="20201029 18:15:57.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.168" endtime="20201029 18:15:57.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.176" endtime="20201029 18:15:57.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.873" endtime="20201029 18:15:57.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.871" endtime="20201029 18:15:57.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.182" level="INFO">${RESULT} = [{'diff': 0.00013516699999999854}, {'diff': 0.00013468100000000108}, {'diff': 0.00013469400000000117}, {'diff': 0.00013470800000000074}, {'diff': 0.00013469499999999718}, {'diff': 0.000134610999999999...</msg>
<status status="PASS" starttime="20201029 18:15:57.179" endtime="20201029 18:15:57.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.187" level="INFO">${ACCURACY} = {'diff': [0.00013516699999999854, 0.00013468100000000108, 0.00013469400000000117, 0.00013470800000000074, 0.00013469499999999718, 0.00013461099999999976, 0.00013473599999999988, 0.00013470800000000074...</msg>
<status status="PASS" starttime="20201029 18:15:57.183" endtime="20201029 18:15:57.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.192" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.191" endtime="20201029 18:15:57.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.194" level="INFO">VALUE: [0.00013516699999999854, 0.00013468100000000108, 0.00013469400000000117, 0.00013470800000000074, 0.00013469499999999718, 0.00013461099999999976, 0.00013473599999999988, 0.00013470800000000074, 0.00013470800000000074, 0.0001346809999999976, 0.00013470800000000074, 0.00013470900000000022, 0.00013470800000000074, 0.00013465300000000194, 0.00013468100000000108, 0.00013479200000000163, 0.0001347229999999998, 0.00013468100000000108, 0.00013473699999999936, 0.00013470799999999727, 0.00013469500000000065, 0.00013469400000000117, 0.0001346800000000016, 0.00013470900000000022, 0.00013470799999999727, 0.00013469400000000117, 0.00013470800000000074, 0.00013469500000000065, 0.00013473599999999988, 0.0001346939999999977, 0.00013467999999999813, 0.00013470900000000022, 0.00013470900000000022, 0.0001346800000000016, 0.00013472200000000031, 0.00013467999999999813, 0.0001346800000000016, 0.00013469400000000117, 0.00013469500000000065, 0.00013467999999999813, 0.0001346939999999977, 0.00013469400000000117, 0.00013470800000000074, 0.00013469500000000065, 0.00013469400000000117, 0.00013470900000000022, 0.00013469500000000065, 0.00013469400000000117, 0.00013469500000000065, 0.00013469400000000117]</msg>
<status status="PASS" starttime="20201029 18:15:57.193" endtime="20201029 18:15:57.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.188" endtime="20201029 18:15:57.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.199" endtime="20201029 18:15:57.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.198" endtime="20201029 18:15:57.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.197" endtime="20201029 18:15:57.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.836" endtime="20201029 18:15:57.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.836" endtime="20201029 18:15:57.220"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.229" endtime="20201029 18:15:58.246"></status>
</kw>
<msg timestamp="20201029 18:15:58.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:15:57.227" endtime="20201029 18:15:58.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 18:15:58.250" endtime="20201029 18:15:58.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.259" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 18:15:58.255" endtime="20201029 18:15:58.260"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.224" endtime="20201029 18:15:58.261"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.222" endtime="20201029 18:15:58.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.271" endtime="20201029 18:15:58.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.267" endtime="20201029 18:15:58.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.265" endtime="20201029 18:15:58.294"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.221" endtime="20201029 18:15:58.295"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:57.220" endtime="20201029 18:15:58.296"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:40.697" endtime="20201029 18:15:58.296"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201029 18:15:40.630" endtime="20201029 18:15:58.298" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201029 18:15:00.518" endtime="20201029 18:15:58.318"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.394" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:58.403" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:59.558" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:58.393" endtime="20201029 18:15:59.559"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.561" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:59.560" endtime="20201029 18:15:59.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.392" endtime="20201029 18:15:59.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.564" endtime="20201029 18:15:59.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.563" endtime="20201029 18:15:59.754"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.766" endtime="20201029 18:15:59.781"></status>
</kw>
<msg timestamp="20201029 18:15:59.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.764" endtime="20201029 18:15:59.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.787" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.784" endtime="20201029 18:15:59.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.794" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:59.790" endtime="20201029 18:15:59.794"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:59.762" endtime="20201029 18:15:59.796"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:59.760" endtime="20201029 18:15:59.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.759" endtime="20201029 18:15:59.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:59.805" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:59.804" endtime="20201029 18:15:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.799" endtime="20201029 18:15:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.758" endtime="20201029 18:15:59.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.757" endtime="20201029 18:15:59.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.809" endtime="20201029 18:15:59.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.756" endtime="20201029 18:15:59.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.814" endtime="20201029 18:15:59.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.754" endtime="20201029 18:15:59.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.391" endtime="20201029 18:15:59.819"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.830" endtime="20201029 18:15:59.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.827" endtime="20201029 18:15:59.853"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.875" endtime="20201029 18:15:59.887"></status>
</kw>
<msg timestamp="20201029 18:15:59.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.874" endtime="20201029 18:15:59.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.890" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.889" endtime="20201029 18:15:59.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.893" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:59.891" endtime="20201029 18:15:59.893"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:59.871" endtime="20201029 18:15:59.894"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:59.869" endtime="20201029 18:15:59.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.866" endtime="20201029 18:15:59.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:59.899" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:59.898" endtime="20201029 18:15:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.896" endtime="20201029 18:15:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.864" endtime="20201029 18:15:59.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.863" endtime="20201029 18:15:59.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.900" endtime="20201029 18:15:59.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.860" endtime="20201029 18:15:59.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.854" endtime="20201029 18:15:59.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.825" endtime="20201029 18:15:59.903"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.911" endtime="20201029 18:16:06.007"></status>
</kw>
<msg timestamp="20201029 18:16:06.008" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.910" endtime="20201029 18:16:06.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.013" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.010" endtime="20201029 18:16:06.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.015" endtime="20201029 18:16:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.907" endtime="20201029 18:16:06.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.905" endtime="20201029 18:16:06.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.026" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:16:06.022" endtime="20201029 18:16:06.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.034" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:06.032" endtime="20201029 18:16:06.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.041" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:06.039" endtime="20201029 18:16:06.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.027" endtime="20201029 18:16:06.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.050" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:06.048" endtime="20201029 18:16:06.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.054" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:06.052" endtime="20201029 18:16:06.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.044" endtime="20201029 18:16:06.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.062" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:06.060" endtime="20201029 18:16:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.063" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:16:06.063" endtime="20201029 18:16:06.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.057" endtime="20201029 18:16:06.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.071" endtime="20201029 18:16:06.371"></status>
</kw>
<msg timestamp="20201029 18:16:06.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071747722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171433389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.069" endtime="20201029 18:16:06.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071747722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171433389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.375" endtime="20201029 18:16:06.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.383" endtime="20201029 18:16:06.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.066" endtime="20201029 18:16:06.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.065" endtime="20201029 18:16:06.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:06.390" level="INFO">${FILTERED} = [{'diff': 0.09968566699999999}, {'diff': 0.09957995900000002}, {'diff': 0.09958905600000001}, {'diff': 0.09958916699999998}, {'diff': 0.09957916600000005}, {'diff': 0.09957958300000003}, {'diff': 0.09...</msg>
<status status="PASS" starttime="20201029 18:16:06.387" endtime="20201029 18:16:06.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.395" level="INFO">${RESULT} = {'diff': [0.09968566699999999, 0.09957995900000002, 0.09958905600000001, 0.09958916699999998, 0.09957916600000005, 0.09957958300000003, 0.09958463900000003, 0.099586375, 0.09958368099999992, 0.0995860...</msg>
<status status="PASS" starttime="20201029 18:16:06.391" endtime="20201029 18:16:06.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.399" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:06.398" endtime="20201029 18:16:06.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.401" level="INFO">VALUE: [0.09968566699999999, 0.09957995900000002, 0.09958905600000001, 0.09958916699999998, 0.09957916600000005, 0.09957958300000003, 0.09958463900000003, 0.099586375, 0.09958368099999992, 0.09958608299999994, 0.099589916, 0.09959379200000007, 0.09959593, 0.09959072200000008, 0.0995844159999999, 0.09958705600000006, 0.09959015300000007, 0.09959297299999981, 0.09958941699999979, 0.09958624999999999, 0.09958122199999986, 0.09958354199999997, 0.09958713900000005, 0.09958248600000008, 0.09958456900000012, 0.09958487499999968, 0.09958541600000004, 0.09958558300000009, 0.0995861389999999, 0.09958580599999989, 0.09958337499999992, 0.09958244400000016, 0.09958633299999997, 0.09959083300000016, 0.09958318000000022, 0.09958972199999971, 0.09958717999999989, 0.09958852799999995, 0.09959048600000031, 0.0995935969999997, 0.09959494499999977, 0.0996009029999998, 0.09959819500000044, 0.0996005689999997, 0.0996016949999996, 0.09960080499999968, 0.09960205500000008, 0.09959902800000009, 0.09959804200000022, 0.09960554099999985, 0.09960143099999996]</msg>
<status status="PASS" starttime="20201029 18:16:06.400" endtime="20201029 18:16:06.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.396" endtime="20201029 18:16:06.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.904" endtime="20201029 18:16:06.402"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:59.820" endtime="20201029 18:16:06.403" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.409" endtime="20201029 18:16:06.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.408" endtime="20201029 18:16:06.429"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.442" endtime="20201029 18:16:06.454"></status>
</kw>
<msg timestamp="20201029 18:16:06.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.440" endtime="20201029 18:16:06.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.456" endtime="20201029 18:16:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.460" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:06.458" endtime="20201029 18:16:06.460"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:06.438" endtime="20201029 18:16:06.461"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:06.435" endtime="20201029 18:16:06.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.434" endtime="20201029 18:16:06.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:06.465" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:06.465" endtime="20201029 18:16:06.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.463" endtime="20201029 18:16:06.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.434" endtime="20201029 18:16:06.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.433" endtime="20201029 18:16:06.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.468" endtime="20201029 18:16:06.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.432" endtime="20201029 18:16:06.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.430" endtime="20201029 18:16:06.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.407" endtime="20201029 18:16:06.470"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.479" endtime="20201029 18:16:12.579"></status>
</kw>
<msg timestamp="20201029 18:16:12.580" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.478" endtime="20201029 18:16:12.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.585" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.582" endtime="20201029 18:16:12.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.588" endtime="20201029 18:16:12.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.474" endtime="20201029 18:16:12.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.472" endtime="20201029 18:16:12.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.598" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:16:12.594" endtime="20201029 18:16:12.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.606" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:12.604" endtime="20201029 18:16:12.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.610" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:12.608" endtime="20201029 18:16:12.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.600" endtime="20201029 18:16:12.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.620" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:12.618" endtime="20201029 18:16:12.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.624" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:12.622" endtime="20201029 18:16:12.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.613" endtime="20201029 18:16:12.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.633" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:12.632" endtime="20201029 18:16:12.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.638" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:16:12.636" endtime="20201029 18:16:12.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.627" endtime="20201029 18:16:12.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.653" endtime="20201029 18:16:12.954"></status>
</kw>
<msg timestamp="20201029 18:16:12.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061334042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161127653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.650" endtime="20201029 18:16:12.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061334042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161127653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.959" endtime="20201029 18:16:12.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.967" endtime="20201029 18:16:12.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.644" endtime="20201029 18:16:12.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.641" endtime="20201029 18:16:12.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:12.973" level="INFO">${FILTERED} = [{'diff': 0.099793611}, {'diff': 0.09976597300000001}, {'diff': 0.09932280600000004}, {'diff': 0.09958930599999999}, {'diff': 0.09958815300000001}, {'diff': 0.09958948599999995}, {'diff': 0.0995923189...</msg>
<status status="PASS" starttime="20201029 18:16:12.970" endtime="20201029 18:16:12.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.978" level="INFO">${RESULT} = {'diff': [0.099793611, 0.09976597300000001, 0.09932280600000004, 0.09958930599999999, 0.09958815300000001, 0.09958948599999995, 0.09959231899999998, 0.09958856999999999, 0.09958787499999999, 0.0995892...</msg>
<status status="PASS" starttime="20201029 18:16:12.974" endtime="20201029 18:16:12.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.982" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:12.981" endtime="20201029 18:16:12.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.984" level="INFO">VALUE: [0.099793611, 0.09976597300000001, 0.09932280600000004, 0.09958930599999999, 0.09958815300000001, 0.09958948599999995, 0.09959231899999998, 0.09958856999999999, 0.09958787499999999, 0.09958923600000003, 0.09959480499999995, 0.0995924720000001, 0.09959327799999995, 0.09958855499999997, 0.09959293000000002, 0.09959711100000002, 0.09960111100000013, 0.0995931109999999, 0.09959802799999995, 0.09960190199999985, 0.09959293099999966, 0.09959441700000005, 0.09959215300000013, 0.09959223700000042, 0.09959519399999994, 0.09959140200000016, 0.09959058399999998, 0.09959423600000017, 0.0995909450000001, 0.09958976400000008, 0.09958748599999989, 0.09959151399999966, 0.09959369499999982, 0.0995895, 0.09959681899999984, 0.09960061100000006, 0.09959879100000002, 0.09959506900000026, 0.09959798600000003, 0.0995901250000002, 0.09959040300000055, 0.09959249999999997, 0.09959359800000023, 0.09959304200000041, 0.09958957000000002, 0.09959159700000075, 0.09958922200000053, 0.09959019400000013, 0.09959865200000007, 0.09959126399999985, 0.09959233299999948]</msg>
<status status="PASS" starttime="20201029 18:16:12.983" endtime="20201029 18:16:12.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.979" endtime="20201029 18:16:12.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.471" endtime="20201029 18:16:12.986"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:06.404" endtime="20201029 18:16:12.986" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.992" endtime="20201029 18:16:13.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.991" endtime="20201029 18:16:13.013"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.025" endtime="20201029 18:16:13.038"></status>
</kw>
<msg timestamp="20201029 18:16:13.039" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.024" endtime="20201029 18:16:13.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.040" endtime="20201029 18:16:13.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.044" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:13.042" endtime="20201029 18:16:13.044"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:13.021" endtime="20201029 18:16:13.045"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:13.019" endtime="20201029 18:16:13.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.018" endtime="20201029 18:16:13.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:13.049" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:13.049" endtime="20201029 18:16:13.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.046" endtime="20201029 18:16:13.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.017" endtime="20201029 18:16:13.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.016" endtime="20201029 18:16:13.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.051" endtime="20201029 18:16:13.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.015" endtime="20201029 18:16:13.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.013" endtime="20201029 18:16:13.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.990" endtime="20201029 18:16:13.054"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.062" endtime="20201029 18:16:19.158"></status>
</kw>
<msg timestamp="20201029 18:16:19.159" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.060" endtime="20201029 18:16:19.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.164" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.161" endtime="20201029 18:16:19.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.166" endtime="20201029 18:16:19.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.058" endtime="20201029 18:16:19.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.056" endtime="20201029 18:16:19.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.176" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:16:19.173" endtime="20201029 18:16:19.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.185" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:19.183" endtime="20201029 18:16:19.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.189" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:19.187" endtime="20201029 18:16:19.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.178" endtime="20201029 18:16:19.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.199" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:19.197" endtime="20201029 18:16:19.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.203" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:19.201" endtime="20201029 18:16:19.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.192" endtime="20201029 18:16:19.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.212" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:19.210" endtime="20201029 18:16:19.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.217" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:16:19.215" endtime="20201029 18:16:19.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.206" endtime="20201029 18:16:19.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.234" endtime="20201029 18:16:19.536"></status>
</kw>
<msg timestamp="20201029 18:16:19.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060998861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161227083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.228" endtime="20201029 18:16:19.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060998861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.161227083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.540" endtime="20201029 18:16:19.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.549" endtime="20201029 18:16:19.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.223" endtime="20201029 18:16:19.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.220" endtime="20201029 18:16:19.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:19.555" level="INFO">${FILTERED} = [{'diff': 0.10022822199999999}, {'diff': 0.09906609700000002}, {'diff': 0.099587166}, {'diff': 0.09959176399999997}, {'diff': 0.09959202800000005}, {'diff': 0.09959498600000005}, {'diff': 0.0995864170...</msg>
<status status="PASS" starttime="20201029 18:16:19.552" endtime="20201029 18:16:19.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.559" level="INFO">${RESULT} = {'diff': [0.10022822199999999, 0.09906609700000002, 0.099587166, 0.09959176399999997, 0.09959202800000005, 0.09959498600000005, 0.09958641700000004, 0.09958363799999992, 0.09958388900000004, 0.0995797...</msg>
<status status="PASS" starttime="20201029 18:16:19.556" endtime="20201029 18:16:19.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.563" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:19.562" endtime="20201029 18:16:19.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.565" level="INFO">VALUE: [0.10022822199999999, 0.09906609700000002, 0.099587166, 0.09959176399999997, 0.09959202800000005, 0.09959498600000005, 0.09958641700000004, 0.09958363799999992, 0.09958388900000004, 0.09957973600000014, 0.09959179200000001, 0.09959524999999991, 0.09959213900000008, 0.09959468000000005, 0.099593861, 0.09959087500000008, 0.09958295900000014, 0.0995889860000001, 0.09959140300000002, 0.09958876399999994, 0.0995877639999998, 0.09958652800000012, 0.09958915200000007, 0.09959095799999984, 0.0995880549999999, 0.09958559699999991, 0.09958490299999978, 0.09959168099999971, 0.09959237499999984, 0.09959263899999993, 0.0995907220000003, 0.09958880599999986, 0.09959055599999989, 0.09959056899999963, 0.09958638900000016, 0.09958473600000017, 0.09958831899999998, 0.09959126399999985, 0.09958736199999985, 0.09958640299999999, 0.09958437500000006, 0.09957686100000007, 0.09957640200000029, 0.09958441699999998, 0.09957945800000001, 0.09958150000000021, 0.09957891699999966, 0.0995804859999998, 0.09958398599999985, 0.0995840139999995, 0.09958047199999953]</msg>
<status status="PASS" starttime="20201029 18:16:19.564" endtime="20201029 18:16:19.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.560" endtime="20201029 18:16:19.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.055" endtime="20201029 18:16:19.567"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:12.988" endtime="20201029 18:16:19.567" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.574" endtime="20201029 18:16:19.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.572" endtime="20201029 18:16:19.594"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.613" endtime="20201029 18:16:19.626"></status>
</kw>
<msg timestamp="20201029 18:16:19.627" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.611" endtime="20201029 18:16:19.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.628" endtime="20201029 18:16:19.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.635" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:19.632" endtime="20201029 18:16:19.635"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:19.608" endtime="20201029 18:16:19.636"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:19.604" endtime="20201029 18:16:19.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.603" endtime="20201029 18:16:19.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:19.641" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:19.640" endtime="20201029 18:16:19.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.637" endtime="20201029 18:16:19.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.602" endtime="20201029 18:16:19.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.601" endtime="20201029 18:16:19.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.642" endtime="20201029 18:16:19.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.596" endtime="20201029 18:16:19.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.594" endtime="20201029 18:16:19.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.571" endtime="20201029 18:16:19.645"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.653" endtime="20201029 18:16:25.753"></status>
</kw>
<msg timestamp="20201029 18:16:25.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.652" endtime="20201029 18:16:25.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.760" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.757" endtime="20201029 18:16:25.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.762" endtime="20201029 18:16:25.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.649" endtime="20201029 18:16:25.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.647" endtime="20201029 18:16:25.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.772" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:16:25.769" endtime="20201029 18:16:25.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.780" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:25.778" endtime="20201029 18:16:25.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.786" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:25.782" endtime="20201029 18:16:25.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.774" endtime="20201029 18:16:25.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.796" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:25.794" endtime="20201029 18:16:25.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.800" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:25.798" endtime="20201029 18:16:25.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.790" endtime="20201029 18:16:25.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.810" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:25.808" endtime="20201029 18:16:25.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.814" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:16:25.812" endtime="20201029 18:16:25.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.803" endtime="20201029 18:16:25.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.829" endtime="20201029 18:16:26.131"></status>
</kw>
<msg timestamp="20201029 18:16:26.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071119972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171763333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.826" endtime="20201029 18:16:26.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071119972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.171763333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.136" endtime="20201029 18:16:26.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.144" endtime="20201029 18:16:26.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.821" endtime="20201029 18:16:26.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.817" endtime="20201029 18:16:26.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:26.150" level="INFO">${FILTERED} = [{'diff': 0.10064336099999999}, {'diff': 0.09977265300000002}, {'diff': 0.098468736}, {'diff': 0.09958804199999999}, {'diff': 0.099590222}, {'diff': 0.09959066700000008}, {'diff': 0.09958769499999998}...</msg>
<status status="PASS" starttime="20201029 18:16:26.147" endtime="20201029 18:16:26.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.156" level="INFO">${RESULT} = {'diff': [0.10064336099999999, 0.09977265300000002, 0.098468736, 0.09958804199999999, 0.099590222, 0.09959066700000008, 0.09958769499999998, 0.09958320900000006, 0.09958293100000004, 0.099581306000000...</msg>
<status status="PASS" starttime="20201029 18:16:26.151" endtime="20201029 18:16:26.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.161" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:26.160" endtime="20201029 18:16:26.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.163" level="INFO">VALUE: [0.10064336099999999, 0.09977265300000002, 0.098468736, 0.09958804199999999, 0.099590222, 0.09959066700000008, 0.09958769499999998, 0.09958320900000006, 0.09958293100000004, 0.09958130600000004, 0.09958957000000002, 0.09959245899999991, 0.09959118100000008, 0.09959158300000004, 0.09959630600000002, 0.09959509700000013, 0.0995916939999999, 0.09959806900000001, 0.09958844399999989, 0.09958702799999997, 0.0995864580000001, 0.09958906999999995, 0.09958974999999981, 0.09958411099999998, 0.09958261099999977, 0.09958059699999966, 0.09958825000000004, 0.0995866529999998, 0.09958736099999976, 0.0995889860000001, 0.0996004720000001, 0.0996023479999999, 0.09959779199999996, 0.09959707000000018, 0.09959666700000014, 0.09959498600000005, 0.09959965299999984, 0.09960273600000003, 0.09959909800000011, 0.09959936099999966, 0.09959895800000051, 0.09959976299999962, 0.09959245800000005, 0.09959256900000035, 0.09958613900000035, 0.09958843099999992, 0.09958709799999976, 0.09959057000000016, 0.09958422199999983, 0.09958216700000033, 0.0995931670000001]</msg>
<status status="PASS" starttime="20201029 18:16:26.162" endtime="20201029 18:16:26.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.157" endtime="20201029 18:16:26.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.646" endtime="20201029 18:16:26.164"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:19.569" endtime="20201029 18:16:26.165" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.171" endtime="20201029 18:16:26.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.170" endtime="20201029 18:16:26.191"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.203" endtime="20201029 18:16:26.216"></status>
</kw>
<msg timestamp="20201029 18:16:26.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.202" endtime="20201029 18:16:26.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.217" endtime="20201029 18:16:26.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:26.220" endtime="20201029 18:16:26.222"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:26.199" endtime="20201029 18:16:26.222"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:26.197" endtime="20201029 18:16:26.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.196" endtime="20201029 18:16:26.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:26.227" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:26.227" endtime="20201029 18:16:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.225" endtime="20201029 18:16:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.195" endtime="20201029 18:16:26.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.195" endtime="20201029 18:16:26.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.229" endtime="20201029 18:16:26.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.193" endtime="20201029 18:16:26.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.192" endtime="20201029 18:16:26.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.168" endtime="20201029 18:16:26.232"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.241" endtime="20201029 18:16:32.337"></status>
</kw>
<msg timestamp="20201029 18:16:32.338" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.239" endtime="20201029 18:16:32.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.343" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.340" endtime="20201029 18:16:32.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.345" endtime="20201029 18:16:32.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.236" endtime="20201029 18:16:32.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.234" endtime="20201029 18:16:32.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.355" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:16:32.352" endtime="20201029 18:16:32.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.364" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:32.362" endtime="20201029 18:16:32.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.368" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:32.366" endtime="20201029 18:16:32.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.357" endtime="20201029 18:16:32.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.377" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:32.375" endtime="20201029 18:16:32.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.382" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:32.380" endtime="20201029 18:16:32.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.371" endtime="20201029 18:16:32.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.391" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:32.389" endtime="20201029 18:16:32.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.395" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:16:32.393" endtime="20201029 18:16:32.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.384" endtime="20201029 18:16:32.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.410" endtime="20201029 18:16:32.708"></status>
</kw>
<msg timestamp="20201029 18:16:32.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162732347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.407" endtime="20201029 18:16:32.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061595833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162732347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.713" endtime="20201029 18:16:32.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.721" endtime="20201029 18:16:32.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.402" endtime="20201029 18:16:32.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.398" endtime="20201029 18:16:32.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:32.727" level="INFO">${FILTERED} = [{'diff': 0.101136514}, {'diff': 0.09978441599999999}, {'diff': 0.09796224999999997}, {'diff': 0.09958740299999996}, {'diff': 0.09959062500000004}, {'diff': 0.09958408399999996}, {'diff': 0.0995839720...</msg>
<status status="PASS" starttime="20201029 18:16:32.724" endtime="20201029 18:16:32.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.732" level="INFO">${RESULT} = {'diff': [0.101136514, 0.09978441599999999, 0.09796224999999997, 0.09958740299999996, 0.09959062500000004, 0.09958408399999996, 0.09958397200000002, 0.099588083, 0.09958654200000006, 0.099582097000000...</msg>
<status status="PASS" starttime="20201029 18:16:32.728" endtime="20201029 18:16:32.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.736" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:32.735" endtime="20201029 18:16:32.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.738" level="INFO">VALUE: [0.101136514, 0.09978441599999999, 0.09796224999999997, 0.09958740299999996, 0.09959062500000004, 0.09958408399999996, 0.09958397200000002, 0.099588083, 0.09958654200000006, 0.09958209700000009, 0.0995758889999998, 0.099586167, 0.09958766699999999, 0.09958675000000006, 0.09958766699999999, 0.09958819400000007, 0.09958244399999994, 0.09958773599999993, 0.09957944400000018, 0.09957994399999981, 0.09958220799999973, 0.0995912080000001, 0.09959054099999998, 0.09957958300000014, 0.0995815969999998, 0.09958398600000029, 0.09957137500000002, 0.09957577800000017, 0.099576903, 0.09958079099999972, 0.0995821659999998, 0.09957955500000004, 0.09958793099999985, 0.09958876399999994, 0.09958945800000008, 0.09958549999999988, 0.09959605600000021, 0.09958781899999991, 0.09958940199999988, 0.09959304099999944, 0.09959193099999997, 0.09959522299999968, 0.09959694399999997, 0.09959354099999995, 0.09959179099999993, 0.09959291699999984, 0.09958840299999938, 0.09959359800000023, 0.09959143100000034, 0.09958943100000006, 0.09958454199999967]</msg>
<status status="PASS" starttime="20201029 18:16:32.737" endtime="20201029 18:16:32.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.733" endtime="20201029 18:16:32.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.232" endtime="20201029 18:16:32.740"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:26.166" endtime="20201029 18:16:32.740" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.746" endtime="20201029 18:16:32.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.745" endtime="20201029 18:16:32.767"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.779" endtime="20201029 18:16:32.792"></status>
</kw>
<msg timestamp="20201029 18:16:32.793" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.778" endtime="20201029 18:16:32.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.795" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.794" endtime="20201029 18:16:32.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.798" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:32.796" endtime="20201029 18:16:32.799"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:32.775" endtime="20201029 18:16:32.799"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:32.773" endtime="20201029 18:16:32.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.772" endtime="20201029 18:16:32.800"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:32.804" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:32.803" endtime="20201029 18:16:32.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.801" endtime="20201029 18:16:32.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.771" endtime="20201029 18:16:32.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.770" endtime="20201029 18:16:32.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.805" endtime="20201029 18:16:32.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.769" endtime="20201029 18:16:32.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.767" endtime="20201029 18:16:32.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.744" endtime="20201029 18:16:32.808"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.816" endtime="20201029 18:16:38.912"></status>
</kw>
<msg timestamp="20201029 18:16:38.913" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.815" endtime="20201029 18:16:38.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.915" endtime="20201029 18:16:38.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.921" endtime="20201029 18:16:38.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.812" endtime="20201029 18:16:38.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.810" endtime="20201029 18:16:38.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.931" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:16:38.927" endtime="20201029 18:16:38.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.939" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:38.937" endtime="20201029 18:16:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.943" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:38.941" endtime="20201029 18:16:38.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.932" endtime="20201029 18:16:38.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.953" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:38.951" endtime="20201029 18:16:38.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.957" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:38.955" endtime="20201029 18:16:38.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.946" endtime="20201029 18:16:38.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.966" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:38.964" endtime="20201029 18:16:38.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.971" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:16:38.969" endtime="20201029 18:16:38.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.960" endtime="20201029 18:16:38.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.985" endtime="20201029 18:16:39.285"></status>
</kw>
<msg timestamp="20201029 18:16:39.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061367847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163159944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.982" endtime="20201029 18:16:39.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061367847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163159944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.289" endtime="20201029 18:16:39.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.297" endtime="20201029 18:16:39.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.977" endtime="20201029 18:16:39.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.974" endtime="20201029 18:16:39.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:39.304" level="INFO">${FILTERED} = [{'diff': 0.101792097}, {'diff': 0.09980993100000002}, {'diff': 0.09729890300000005}, {'diff': 0.10236983399999999}, {'diff': 0.09679816599999996}, {'diff': 0.09958506899999997}, {'diff': 0.0995871379...</msg>
<status status="PASS" starttime="20201029 18:16:39.301" endtime="20201029 18:16:39.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.308" level="INFO">${RESULT} = {'diff': [0.101792097, 0.09980993100000002, 0.09729890300000005, 0.10236983399999999, 0.09679816599999996, 0.09958506899999997, 0.09958713799999996, 0.09958687500000007, 0.099586277, 0.099591236000000...</msg>
<status status="PASS" starttime="20201029 18:16:39.305" endtime="20201029 18:16:39.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.312" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:39.311" endtime="20201029 18:16:39.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.314" level="INFO">VALUE: [0.101792097, 0.09980993100000002, 0.09729890300000005, 0.10236983399999999, 0.09679816599999996, 0.09958506899999997, 0.09958713799999996, 0.09958687500000007, 0.099586277, 0.09959123600000008, 0.09958662500000015, 0.09958908300000013, 0.09959238900000011, 0.09959195799999998, 0.0995919719999998, 0.099593708, 0.09958559700000014, 0.0995863330000002, 0.09958627799999986, 0.09957881899999976, 0.09958072199999979, 0.09957805599999991, 0.09957870799999968, 0.09958134699999999, 0.09958884700000015, 0.0995873340000002, 0.0995885689999998, 0.09958431899999987, 0.09958505499999992, 0.09958254199999983, 0.09958070799999996, 0.09957837500000011, 0.09958087500000001, 0.0995749720000001, 0.09957587499999976, 0.0995744300000001, 0.09958052800000017, 0.09958827800000014, 0.09958988899999976, 0.09958686199999978, 0.09958913899999988, 0.09959366699999972, 0.09959738800000029, 0.09959081900000033, 0.09958826300000023, 0.09959284699999937, 0.09959370800000045, 0.09959230499999983, 0.0995862780000003, 0.09958297200000032, 0.09958205499999995]</msg>
<status status="PASS" starttime="20201029 18:16:39.313" endtime="20201029 18:16:39.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.308" endtime="20201029 18:16:39.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.809" endtime="20201029 18:16:39.315"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:32.742" endtime="20201029 18:16:39.316" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:58.347" endtime="20201029 18:16:39.322"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201029 18:14:11.365" endtime="20201029 18:16:39.355"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="17" fail="1">APP_tests_xtimer_benchmarks</stat>
<stat pass="17" fail="1">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
