<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:42:47.620" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.205" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:48.214" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:49.423" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:48.204" endtime="20201029 12:42:49.424"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.426" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:49.425" endtime="20201029 12:42:49.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.202" endtime="20201029 12:42:49.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:49.429" endtime="20201029 12:42:49.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.428" endtime="20201029 12:42:49.613"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.626" endtime="20201029 12:42:49.639"></status>
</kw>
<msg timestamp="20201029 12:42:49.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.625" endtime="20201029 12:42:49.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.642" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.640" endtime="20201029 12:42:49.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:49.643" endtime="20201029 12:42:49.645"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.622" endtime="20201029 12:42:49.646"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.620" endtime="20201029 12:42:49.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.619" endtime="20201029 12:42:49.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:49.650" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:49.650" endtime="20201029 12:42:49.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.648" endtime="20201029 12:42:49.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.618" endtime="20201029 12:42:49.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.617" endtime="20201029 12:42:49.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.653" endtime="20201029 12:42:49.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.616" endtime="20201029 12:42:49.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.656" endtime="20201029 12:42:49.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.614" endtime="20201029 12:42:49.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.201" endtime="20201029 12:42:49.658"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:49.664" endtime="20201029 12:42:49.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.662" endtime="20201029 12:42:49.684"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.697" endtime="20201029 12:42:49.709"></status>
</kw>
<msg timestamp="20201029 12:42:49.710" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.695" endtime="20201029 12:42:49.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.712" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.711" endtime="20201029 12:42:49.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.715" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:49.713" endtime="20201029 12:42:49.715"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.693" endtime="20201029 12:42:49.716"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:49.691" endtime="20201029 12:42:49.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.689" endtime="20201029 12:42:49.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:49.721" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:49.720" endtime="20201029 12:42:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.718" endtime="20201029 12:42:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.688" endtime="20201029 12:42:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.687" endtime="20201029 12:42:49.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.722" endtime="20201029 12:42:49.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.686" endtime="20201029 12:42:49.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.684" endtime="20201029 12:42:49.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.661" endtime="20201029 12:42:49.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.733" endtime="20201029 12:42:49.741"></status>
</kw>
<msg timestamp="20201029 12:42:49.741" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.730" endtime="20201029 12:42:49.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.744" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.742" endtime="20201029 12:42:49.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.745" endtime="20201029 12:42:49.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.727" endtime="20201029 12:42:49.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.726" endtime="20201029 12:42:49.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.755" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:42:49.753" endtime="20201029 12:42:49.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.759" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:42:49.757" endtime="20201029 12:42:49.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.748" endtime="20201029 12:42:49.761"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:49.658" endtime="20201029 12:42:49.762" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:47.739" endtime="20201029 12:42:49.767"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.869" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:49.877" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:51.099" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:49.868" endtime="20201029 12:42:51.099"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.102" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:42:51.100" endtime="20201029 12:42:51.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.866" endtime="20201029 12:42:51.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:51.105" endtime="20201029 12:42:51.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.103" endtime="20201029 12:42:51.327"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.339" endtime="20201029 12:42:51.351"></status>
</kw>
<msg timestamp="20201029 12:42:51.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.338" endtime="20201029 12:42:51.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.354" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.353" endtime="20201029 12:42:51.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.355" endtime="20201029 12:42:51.358"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.335" endtime="20201029 12:42:51.358"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.333" endtime="20201029 12:42:51.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.332" endtime="20201029 12:42:51.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.363" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.362" endtime="20201029 12:42:51.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.360" endtime="20201029 12:42:51.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.331" endtime="20201029 12:42:51.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.330" endtime="20201029 12:42:51.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.365" endtime="20201029 12:42:51.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.329" endtime="20201029 12:42:51.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.367" endtime="20201029 12:42:51.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.328" endtime="20201029 12:42:51.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.865" endtime="20201029 12:42:51.370"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:51.376" endtime="20201029 12:42:51.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.374" endtime="20201029 12:42:51.398"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.425" endtime="20201029 12:42:51.442"></status>
</kw>
<msg timestamp="20201029 12:42:51.443" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.421" endtime="20201029 12:42:51.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.446" endtime="20201029 12:42:51.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.455" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.451" endtime="20201029 12:42:51.456"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.416" endtime="20201029 12:42:51.457"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.411" endtime="20201029 12:42:51.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.409" endtime="20201029 12:42:51.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.465" endtime="20201029 12:42:51.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.461" endtime="20201029 12:42:51.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.407" endtime="20201029 12:42:51.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.406" endtime="20201029 12:42:51.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.470" endtime="20201029 12:42:51.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.403" endtime="20201029 12:42:51.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.400" endtime="20201029 12:42:51.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.372" endtime="20201029 12:42:51.476"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.486" endtime="20201029 12:42:51.497"></status>
</kw>
<msg timestamp="20201029 12:42:51.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.484" endtime="20201029 12:42:51.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.500" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.498" endtime="20201029 12:42:51.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.501" endtime="20201029 12:42:51.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.482" endtime="20201029 12:42:51.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.480" endtime="20201029 12:42:51.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.510" endtime="20201029 12:42:51.809"></status>
</kw>
<msg timestamp="20201029 12:42:51.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.100649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.100650694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.508" endtime="20201029 12:42:51.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.100649417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.100650694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.813" endtime="20201029 12:42:51.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.822" endtime="20201029 12:42:51.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.506" endtime="20201029 12:42:51.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.504" endtime="20201029 12:42:51.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.828" level="INFO">${RESULT} = [{'diff': 1.2769999999939774e-06}, {'diff': 1.1939999999960316e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1939999999960316e-...</msg>
<status status="PASS" starttime="20201029 12:42:51.825" endtime="20201029 12:42:51.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.833" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2769999999939774e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06...</msg>
<status status="PASS" starttime="20201029 12:42:51.829" endtime="20201029 12:42:51.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.837" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:51.836" endtime="20201029 12:42:51.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.840" level="INFO">VALUE: [1.2769999999939774e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.2080000000025404e-06, 1.1949999999955052e-06, 1.1810000000028742e-06, 1.1940000000099094e-06, 1.2499999999943112e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.1939999999960316e-06, 1.0970000000054547e-06, 1.1800000000034006e-06, 1.1940000000099094e-06, 1.1799999999895228e-06, 1.1810000000028742e-06, 1.195000000009383e-06, 1.2080000000025404e-06, 1.195000000009383e-06, 1.1800000000034006e-06, 1.1940000000099094e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.1249999999907168e-06, 1.195000000009383e-06, 1.1939999999960316e-06, 1.2080000000025404e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1809999999889964e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.1939999999960316e-06, 1.2080000000025404e-06, 1.1810000000028742e-06, 1.2080000000025404e-06, 1.1810000000028742e-06, 1.2360000000016802e-06, 1.1810000000028742e-06, 1.1389999999972256e-06]</msg>
<status status="PASS" starttime="20201029 12:42:51.838" endtime="20201029 12:42:51.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.834" endtime="20201029 12:42:51.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.479" endtime="20201029 12:42:51.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.478" endtime="20201029 12:42:51.842"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.850" endtime="20201029 12:42:51.860"></status>
</kw>
<msg timestamp="20201029 12:42:51.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.848" endtime="20201029 12:42:51.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.862" endtime="20201029 12:42:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.864" endtime="20201029 12:42:51.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.846" endtime="20201029 12:42:51.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.844" endtime="20201029 12:42:51.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.878" endtime="20201029 12:42:52.192"></status>
</kw>
<msg timestamp="20201029 12:42:52.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102213292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1022145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:51.876" endtime="20201029 12:42:52.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.102213292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1022145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:52.204" endtime="20201029 12:42:52.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.241" endtime="20201029 12:42:52.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.872" endtime="20201029 12:42:52.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.870" endtime="20201029 12:42:52.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.264" level="INFO">${RESULT} = [{'diff': 1.2080000000025404e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1809999999889964e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1530000000037344e-...</msg>
<status status="PASS" starttime="20201029 12:42:52.254" endtime="20201029 12:42:52.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.275" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2080000000025404e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1809999999889964e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.1939999999960316e-06, 1.2080000000025404e-06...</msg>
<status status="PASS" starttime="20201029 12:42:52.266" endtime="20201029 12:42:52.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.285" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:52.283" endtime="20201029 12:42:52.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.288" level="INFO">VALUE: [1.2080000000025404e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1809999999889964e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.1939999999960316e-06, 1.2080000000025404e-06, 1.1810000000028742e-06, 1.2080000000025404e-06, 1.1810000000028742e-06, 1.2360000000016802e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.195000000009383e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.194000000037665e-06, 1.1659999999968917e-06, 1.195000000009383e-06, 1.195000000009383e-06, 1.1949999999538718e-06, 1.250000000008189e-06, 1.195000000009383e-06, 1.222999999994645e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.209000000002014e-06, 1.181000000016752e-06, 1.180000000045034e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.222000000022927e-06, 1.1799999999895228e-06, 1.222000000022927e-06, 1.1799999999895228e-06, 1.167000000024121e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.208000000030296e-06, 1.195000000009383e-06, 1.1669999999686098e-06, 1.195000000009383e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.139000000038859e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1939999999821538e-06, 1.1799999999895228e-06, 1.222999999994645e-06, 1.1799999999895228e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.287" endtime="20201029 12:42:52.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.278" endtime="20201029 12:42:52.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.843" endtime="20201029 12:42:52.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.842" endtime="20201029 12:42:52.290"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.298" endtime="20201029 12:42:52.308"></status>
</kw>
<msg timestamp="20201029 12:42:52.308" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.296" endtime="20201029 12:42:52.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.309" endtime="20201029 12:42:52.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.312" endtime="20201029 12:42:52.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.293" endtime="20201029 12:42:52.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.292" endtime="20201029 12:42:52.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.321" endtime="20201029 12:42:52.631"></status>
</kw>
<msg timestamp="20201029 12:42:52.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.455450625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.455451806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.320" endtime="20201029 12:42:52.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.455450625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.455451806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.639" endtime="20201029 12:42:52.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.654" endtime="20201029 12:42:52.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.317" endtime="20201029 12:42:52.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.315" endtime="20201029 12:42:52.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.662" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.167000000024121e-06}, {'diff': 1.167000000024121e-06}, {'diff': 1.1799999999895228e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:52.659" endtime="20201029 12:42:52.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.667" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.139000000038859e-06, 1.1659999999968917e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:42:52.663" endtime="20201029 12:42:52.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.671" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:52.670" endtime="20201029 12:42:52.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.674" level="INFO">VALUE: [1.181000000016752e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.139000000038859e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1939999999821538e-06, 1.1799999999895228e-06, 1.222999999994645e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.2500000000637002e-06, 1.180000000045034e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2219999999674158e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.180000000045034e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.180000000045034e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2219999999674158e-06, 1.181000000016752e-06, 1.1670000000796321e-06, 1.2079999999192736e-06, 1.1659999999968917e-06, 1.1949999999538718e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.2219999999674158e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.1389999999833478e-06, 1.1949999999538718e-06, 1.1949999999538718e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2079999999192736e-06, 1.180000000045034e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.2219999999674158e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1520000000597719e-06, 1.15300000003149e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.672" endtime="20201029 12:42:52.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.668" endtime="20201029 12:42:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.291" endtime="20201029 12:42:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.290" endtime="20201029 12:42:52.675"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.684" endtime="20201029 12:42:52.694"></status>
</kw>
<msg timestamp="20201029 12:42:52.695" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.682" endtime="20201029 12:42:52.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.696" endtime="20201029 12:42:52.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.698" endtime="20201029 12:42:52.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.679" endtime="20201029 12:42:52.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.677" endtime="20201029 12:42:52.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.708" endtime="20201029 12:42:53.016"></status>
</kw>
<msg timestamp="20201029 12:42:53.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.894231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.894232292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.706" endtime="20201029 12:42:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.894231111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.894232292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.021" endtime="20201029 12:42:53.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.031" endtime="20201029 12:42:53.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.703" endtime="20201029 12:42:53.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.702" endtime="20201029 12:42:53.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.038" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.2079999999192736e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.1950000000648942e-06...</msg>
<status status="PASS" starttime="20201029 12:42:53.034" endtime="20201029 12:42:53.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.044" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2079999999192736e-06, 1.180000000045034e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:42:53.039" endtime="20201029 12:42:53.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.048" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:53.047" endtime="20201029 12:42:53.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.050" level="INFO">VALUE: [1.181000000016752e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2079999999192736e-06, 1.180000000045034e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.2219999999674158e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1520000000597719e-06, 1.15300000003149e-06, 1.1799999999340116e-06, 1.26400000000082e-06, 1.1939999999821538e-06, 1.2220000000784381e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.125000000046228e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.2089999998909917e-06, 1.1799999999340116e-06, 1.1109999999980857e-06, 1.1809999997947074e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.2630000001401243e-06, 1.1809999997947074e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1950000000648942e-06, 1.1659999998858694e-06, 1.2499999999526779e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1530000001425122e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.1939999999821538e-06, 1.26400000000082e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2220000000784381e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1939999999821538e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.049" endtime="20201029 12:42:53.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.045" endtime="20201029 12:42:53.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.676" endtime="20201029 12:42:53.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.676" endtime="20201029 12:42:53.052"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.060" endtime="20201029 12:42:53.070"></status>
</kw>
<msg timestamp="20201029 12:42:53.070" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.058" endtime="20201029 12:42:53.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.073" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.071" endtime="20201029 12:42:53.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.074" endtime="20201029 12:42:53.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.055" endtime="20201029 12:42:53.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.054" endtime="20201029 12:42:53.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.082" endtime="20201029 12:42:53.371"></status>
</kw>
<msg timestamp="20201029 12:42:53.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.270649028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.270650222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.081" endtime="20201029 12:42:53.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.270649028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.270650222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.376" endtime="20201029 12:42:53.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.386" endtime="20201029 12:42:53.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.078" endtime="20201029 12:42:53.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.077" endtime="20201029 12:42:53.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.392" level="INFO">${RESULT} = [{'diff': 1.1939999999821538e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1950000000648942e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:53.389" endtime="20201029 12:42:53.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.398" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1939999999821538e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:42:53.394" endtime="20201029 12:42:53.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.403" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:53.402" endtime="20201029 12:42:53.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.405" level="INFO">VALUE: [1.1939999999821538e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2220000000784381e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.2079999998082513e-06, 1.1800000001560562e-06, 1.1109999999980857e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1109999999980857e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.2220000000784381e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.1809999997947074e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.1939999999821538e-06, 1.2090000001130363e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.404" endtime="20201029 12:42:53.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.399" endtime="20201029 12:42:53.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.053" endtime="20201029 12:42:53.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.052" endtime="20201029 12:42:53.407"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.414" endtime="20201029 12:42:53.424"></status>
</kw>
<msg timestamp="20201029 12:42:53.425" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.413" endtime="20201029 12:42:53.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.426" endtime="20201029 12:42:53.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.428" endtime="20201029 12:42:53.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.410" endtime="20201029 12:42:53.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.409" endtime="20201029 12:42:53.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.437" endtime="20201029 12:42:53.771"></status>
</kw>
<msg timestamp="20201029 12:42:53.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.635134, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.635135181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:42:53.436" endtime="20201029 12:42:53.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.635134, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.635135181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:42:53.783" endtime="20201029 12:42:53.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.803" endtime="20201029 12:42:53.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.433" endtime="20201029 12:42:53.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.431" endtime="20201029 12:42:53.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.813" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1659999998858694e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.208000000030296e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:53.809" endtime="20201029 12:42:53.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.820" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:42:53.815" endtime="20201029 12:42:53.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.825" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:53.823" endtime="20201029 12:42:53.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.827" level="INFO">VALUE: [1.181000000016752e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.236999999987276e-06, 1.1809999997947074e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.166000000107914e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.2220000000784381e-06, 1.1800000001560562e-06, 1.1530000001425122e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.098000000032684e-06, 1.166000000107914e-06, 1.1939999999821538e-06, 1.166000000107914e-06, 1.1939999999821538e-06, 1.125000000046228e-06, 1.1950000000648942e-06, 1.1939999999821538e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1809999997947074e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.125000000046228e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1949999998428495e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.826" endtime="20201029 12:42:53.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.821" endtime="20201029 12:42:53.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.407" endtime="20201029 12:42:53.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.407" endtime="20201029 12:42:53.829"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.838" endtime="20201029 12:42:53.848"></status>
</kw>
<msg timestamp="20201029 12:42:53.849" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.836" endtime="20201029 12:42:53.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.851" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.850" endtime="20201029 12:42:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.853" endtime="20201029 12:42:53.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.833" endtime="20201029 12:42:53.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.831" endtime="20201029 12:42:53.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.862" endtime="20201029 12:42:54.170"></status>
</kw>
<msg timestamp="20201029 12:42:54.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.980685375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.9806865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:53.860" endtime="20201029 12:42:54.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.980685375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.9806865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:54.175" endtime="20201029 12:42:54.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.184" endtime="20201029 12:42:54.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.858" endtime="20201029 12:42:54.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.856" endtime="20201029 12:42:54.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.192" level="INFO">${RESULT} = [{'diff': 1.125000000046228e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1380000000116297e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1950000000648942e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 12:42:54.188" endtime="20201029 12:42:54.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.197" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.125000000046228e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1949999998428495e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1799999999340116e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:54.193" endtime="20201029 12:42:54.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.201" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:54.200" endtime="20201029 12:42:54.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.204" level="INFO">VALUE: [1.125000000046228e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1949999998428495e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.125000000046228e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.2220000003004827e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.2079999995862067e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, 1.2229999999391339e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1949999998428495e-06, 1.235999999682491e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1800000003781008e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.2219999998563935e-06, 1.208000000030296e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.202" endtime="20201029 12:42:54.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.198" endtime="20201029 12:42:54.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.829" endtime="20201029 12:42:54.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.829" endtime="20201029 12:42:54.205"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.213" endtime="20201029 12:42:54.223"></status>
</kw>
<msg timestamp="20201029 12:42:54.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.211" endtime="20201029 12:42:54.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.224" endtime="20201029 12:42:54.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.227" endtime="20201029 12:42:54.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.209" endtime="20201029 12:42:54.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.207" endtime="20201029 12:42:54.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.236" endtime="20201029 12:42:54.565"></status>
</kw>
<msg timestamp="20201029 12:42:54.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.3946815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.394682708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:54.234" endtime="20201029 12:42:54.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.3946815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.394682708, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:42:54.576" endtime="20201029 12:42:54.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.598" endtime="20201029 12:42:54.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.232" endtime="20201029 12:42:54.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.230" endtime="20201029 12:42:54.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.611" level="INFO">${RESULT} = [{'diff': 1.208000000030296e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1800000003781008e-06}, {'diff': 1.1950000002869388e-0...</msg>
<status status="PASS" starttime="20201029 12:42:54.606" endtime="20201029 12:42:54.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.617" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.208000000030296e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1800000003781008e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:54.612" endtime="20201029 12:42:54.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.621" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:54.620" endtime="20201029 12:42:54.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.623" level="INFO">VALUE: [1.208000000030296e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1800000003781008e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.2219999998563935e-06, 1.208000000030296e-06, 1.2499999999526779e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.166000000107914e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1120000000808261e-06, 1.1949999998428495e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.2079999995862067e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1809999995726628e-06, 1.2499999999526779e-06, 1.1670000001906544e-06, 1.1940000002041984e-06, 1.1670000001906544e-06, 1.1950000002869388e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.622" endtime="20201029 12:42:54.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.618" endtime="20201029 12:42:54.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.206" endtime="20201029 12:42:54.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.205" endtime="20201029 12:42:54.625"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.632" endtime="20201029 12:42:54.643"></status>
</kw>
<msg timestamp="20201029 12:42:54.643" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.631" endtime="20201029 12:42:54.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.645" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.644" endtime="20201029 12:42:54.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.646" endtime="20201029 12:42:54.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.628" endtime="20201029 12:42:54.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.627" endtime="20201029 12:42:54.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.656" endtime="20201029 12:42:54.975"></status>
</kw>
<msg timestamp="20201029 12:42:54.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.760222722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.760223903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.655" endtime="20201029 12:42:54.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.760222722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.760223903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.980" endtime="20201029 12:42:54.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.990" endtime="20201029 12:42:54.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.651" endtime="20201029 12:42:54.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.650" endtime="20201029 12:42:54.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.997" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1939999997601092e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.181000000016752e-06...</msg>
<status status="PASS" starttime="20201029 12:42:54.994" endtime="20201029 12:42:54.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.002" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:42:54.998" endtime="20201029 12:42:55.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.006" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:55.005" endtime="20201029 12:42:55.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.009" level="INFO">VALUE: [1.181000000016752e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1809999995726628e-06, 1.2499999999526779e-06, 1.1670000001906544e-06, 1.1940000002041984e-06, 1.1670000001906544e-06, 1.1950000002869388e-06, 1.2499999999526779e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1809999995726628e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.1109999999980857e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.166000000107914e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1389999996502809e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.2089999996689471e-06, 1.1800000003781008e-06, 1.1939999997601092e-06, 1.2639999997787754e-06, 1.1659999996638248e-06, 1.2090000001130363e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1519999998377273e-06, 1.13900000009437e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1250000002682725e-06, 1.1940000002041984e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.007" endtime="20201029 12:42:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.003" endtime="20201029 12:42:55.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.626" endtime="20201029 12:42:55.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.625" endtime="20201029 12:42:55.011"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.019" endtime="20201029 12:42:55.029"></status>
</kw>
<msg timestamp="20201029 12:42:55.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.017" endtime="20201029 12:42:55.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.032" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.030" endtime="20201029 12:42:55.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.033" endtime="20201029 12:42:55.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.014" endtime="20201029 12:42:55.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.013" endtime="20201029 12:42:55.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.041" endtime="20201029 12:42:55.353"></status>
</kw>
<msg timestamp="20201029 12:42:55.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.169927431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.169928625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.040" endtime="20201029 12:42:55.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.169927431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.169928625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.358" endtime="20201029 12:42:55.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.368" endtime="20201029 12:42:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.037" endtime="20201029 12:42:55.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.036" endtime="20201029 12:42:55.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.375" level="INFO">${RESULT} = [{'diff': 1.1939999997601092e-06}, {'diff': 1.2639999997787754e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.2090000001130363e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1249999998241833e-...</msg>
<status status="PASS" starttime="20201029 12:42:55.372" endtime="20201029 12:42:55.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.380" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1939999997601092e-06, 1.2639999997787754e-06, 1.1659999996638248e-06, 1.2090000001130363e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1519999998377273e-06, 1.13900000009437e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:55.376" endtime="20201029 12:42:55.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.384" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:55.383" endtime="20201029 12:42:55.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.387" level="INFO">VALUE: [1.1939999997601092e-06, 1.2639999997787754e-06, 1.1659999996638248e-06, 1.2090000001130363e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1519999998377273e-06, 1.13900000009437e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1250000002682725e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.2499999999526779e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1800000003781008e-06, 1.1939999997601092e-06, 1.2219999998563935e-06, 1.1809999995726628e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.208000000030296e-06, 1.1949999998428495e-06, 1.2090000001130363e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1250000002682725e-06, 1.181000000016752e-06, 1.1809999995726628e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1809999995726628e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1949999998428495e-06, 1.166000000107914e-06, 1.1939999997601092e-06, 1.2499999999526779e-06, 1.2220000003004827e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1670000001906544e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.385" endtime="20201029 12:42:55.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.381" endtime="20201029 12:42:55.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.012" endtime="20201029 12:42:55.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.011" endtime="20201029 12:42:55.388"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.396" endtime="20201029 12:42:55.406"></status>
</kw>
<msg timestamp="20201029 12:42:55.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.394" endtime="20201029 12:42:55.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.408" endtime="20201029 12:42:55.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.410" endtime="20201029 12:42:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.392" endtime="20201029 12:42:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.390" endtime="20201029 12:42:55.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.419" endtime="20201029 12:42:55.735"></status>
</kw>
<msg timestamp="20201029 12:42:55.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.546161583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.54616275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:55.418" endtime="20201029 12:42:55.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.546161583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.54616275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:55.740" endtime="20201029 12:42:55.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.750" endtime="20201029 12:42:55.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.415" endtime="20201029 12:42:55.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.413" endtime="20201029 12:42:55.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.757" level="INFO">${RESULT} = [{'diff': 1.1670000001906544e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1939999997601092e-06...</msg>
<status status="PASS" starttime="20201029 12:42:55.753" endtime="20201029 12:42:55.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.761" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1670000001906544e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1949999998428495e-06, 1.166000000107914e-06, 1.1939999997601092e-06, 1.2499999999526779e-06, 1.2220000003004827e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:55.758" endtime="20201029 12:42:55.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.765" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:55.764" endtime="20201029 12:42:55.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.768" level="INFO">VALUE: [1.1670000001906544e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1949999998428495e-06, 1.166000000107914e-06, 1.1939999997601092e-06, 1.2499999999526779e-06, 1.2220000003004827e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1670000001906544e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.208000000030296e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1940000002041984e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1389999996502809e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.250000000396767e-06, 1.166000000107914e-06, 1.2499999999526779e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.208000000030296e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.767" endtime="20201029 12:42:55.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.762" endtime="20201029 12:42:55.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.389" endtime="20201029 12:42:55.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.389" endtime="20201029 12:42:55.770"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.778" endtime="20201029 12:42:55.788"></status>
</kw>
<msg timestamp="20201029 12:42:55.789" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.776" endtime="20201029 12:42:55.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.791" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.790" endtime="20201029 12:42:55.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.792" endtime="20201029 12:42:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.773" endtime="20201029 12:42:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.771" endtime="20201029 12:42:55.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.801" endtime="20201029 12:42:56.115"></status>
</kw>
<msg timestamp="20201029 12:42:56.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.914526653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.914527847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.800" endtime="20201029 12:42:56.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.914526653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.914527847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.120" endtime="20201029 12:42:56.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.130" endtime="20201029 12:42:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.797" endtime="20201029 12:42:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.795" endtime="20201029 12:42:56.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.137" level="INFO">${RESULT} = [{'diff': 1.1940000002041984e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.250000000396767e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.1800000003781008e-06...</msg>
<status status="PASS" starttime="20201029 12:42:56.133" endtime="20201029 12:42:56.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.142" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1940000002041984e-06, 1.1659999996638248e-06, 1.250000000396767e-06, 1.166000000107914e-06, 1.2499999999526779e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:56.138" endtime="20201029 12:42:56.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.149" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:56.146" endtime="20201029 12:42:56.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.153" level="INFO">VALUE: [1.1940000002041984e-06, 1.1659999996638248e-06, 1.250000000396767e-06, 1.166000000107914e-06, 1.2499999999526779e-06, 1.1800000003781008e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1939999997601092e-06, 1.208000000030296e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.250000000396767e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.1950000002869388e-06, 1.2079999995862067e-06, 1.1250000007123617e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.2079999995862067e-06, 1.2639999997787754e-06, 1.2090000005571255e-06, 1.19399999931602e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.2090000005571255e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.1520000002818165e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.150" endtime="20201029 12:42:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.143" endtime="20201029 12:42:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.770" endtime="20201029 12:42:56.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.770" endtime="20201029 12:42:56.155"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.168" endtime="20201029 12:42:56.178"></status>
</kw>
<msg timestamp="20201029 12:42:56.179" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.165" endtime="20201029 12:42:56.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.180" endtime="20201029 12:42:56.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.182" endtime="20201029 12:42:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.161" endtime="20201029 12:42:56.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.159" endtime="20201029 12:42:56.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.191" endtime="20201029 12:42:56.492"></status>
</kw>
<msg timestamp="20201029 12:42:56.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.285683819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.285684972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.190" endtime="20201029 12:42:56.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.285683819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.285684972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.497" endtime="20201029 12:42:56.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.507" endtime="20201029 12:42:56.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.187" endtime="20201029 12:42:56.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.185" endtime="20201029 12:42:56.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.514" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1949999993987603e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.2080000004743852e-06}, {'diff': 1.2079999995862067e-06}, {'diff': 1.2639999997787754e-...</msg>
<status status="PASS" starttime="20201029 12:42:56.510" endtime="20201029 12:42:56.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.519" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.2079999995862067e-06, 1.2639999997787754e-06, 1.2090000005571255e-06, 1.19399999931602e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:56.515" endtime="20201029 12:42:56.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.524" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:56.523" endtime="20201029 12:42:56.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.526" level="INFO">VALUE: [1.1530000003645569e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.2080000004743852e-06, 1.2079999995862067e-06, 1.2639999997787754e-06, 1.2090000005571255e-06, 1.19399999931602e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.2090000005571255e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.1520000002818165e-06, 1.2639999997787754e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1949999993987603e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2360000001265803e-06, 1.1799999999340116e-06, 1.250000000396767e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.525" endtime="20201029 12:42:56.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.520" endtime="20201029 12:42:56.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.157" endtime="20201029 12:42:56.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.156" endtime="20201029 12:42:56.528"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.535" endtime="20201029 12:42:56.545"></status>
</kw>
<msg timestamp="20201029 12:42:56.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.534" endtime="20201029 12:42:56.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.547" endtime="20201029 12:42:56.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.549" endtime="20201029 12:42:56.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.531" endtime="20201029 12:42:56.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.530" endtime="20201029 12:42:56.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.558" endtime="20201029 12:42:56.872"></status>
</kw>
<msg timestamp="20201029 12:42:56.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.666669153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.666670347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.557" endtime="20201029 12:42:56.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.666669153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.666670347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.877" endtime="20201029 12:42:56.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.887" endtime="20201029 12:42:56.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.554" endtime="20201029 12:42:56.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.552" endtime="20201029 12:42:56.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.894" level="INFO">${RESULT} = [{'diff': 1.1940000002041984e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1950000002869388e-06}, {'diff': 1.13900000009437e-06...</msg>
<status status="PASS" starttime="20201029 12:42:56.890" endtime="20201029 12:42:56.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.898" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1940000002041984e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:42:56.895" endtime="20201029 12:42:56.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.903" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:56.902" endtime="20201029 12:42:56.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.905" level="INFO">VALUE: [1.1940000002041984e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.2639999997787754e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.222000000744572e-06, 1.2079999995862067e-06, 1.19399999931602e-06, 1.2499999995085886e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.1950000002869388e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.2229999999391339e-06, 1.1950000002869388e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.2229999999391339e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.262999999696035e-06, 1.181000000016752e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.19399999931602e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.2079999995862067e-06, 1.1530000003645569e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.904" endtime="20201029 12:42:56.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.899" endtime="20201029 12:42:56.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.528" endtime="20201029 12:42:56.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.528" endtime="20201029 12:42:56.907"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.917" endtime="20201029 12:42:56.927"></status>
</kw>
<msg timestamp="20201029 12:42:56.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.915" endtime="20201029 12:42:56.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.930" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.928" endtime="20201029 12:42:56.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.931" endtime="20201029 12:42:56.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.910" endtime="20201029 12:42:56.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.909" endtime="20201029 12:42:56.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.940" endtime="20201029 12:42:57.250"></status>
</kw>
<msg timestamp="20201029 12:42:57.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.02467825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.024679431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:56.938" endtime="20201029 12:42:57.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.02467825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.024679431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:57.255" endtime="20201029 12:42:57.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.267" endtime="20201029 12:42:57.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.936" endtime="20201029 12:42:57.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.934" endtime="20201029 12:42:57.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.276" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.262999999696035e-06}, {'diff': 1.181000000016752e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:42:57.272" endtime="20201029 12:42:57.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.284" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.262999999696035e-06, 1.181000000016752e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.110...</msg>
<status status="PASS" starttime="20201029 12:42:57.278" endtime="20201029 12:42:57.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:57.287" endtime="20201029 12:42:57.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.293" level="INFO">VALUE: [1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.262999999696035e-06, 1.181000000016752e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.19399999931602e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.2079999995862067e-06, 1.1530000003645569e-06, 1.222000000744572e-06, 1.1659999996638248e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.2499999995085886e-06, 1.1669999997465652e-06, 1.2080000004743852e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.0970000001719882e-06, 1.1530000003645569e-06, 1.1949999993987603e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.222000000744572e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2089999996689471e-06, 1.1950000002869388e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.291" endtime="20201029 12:42:57.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.284" endtime="20201029 12:42:57.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.907" endtime="20201029 12:42:57.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.907" endtime="20201029 12:42:57.295"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.302" endtime="20201029 12:42:57.313"></status>
</kw>
<msg timestamp="20201029 12:42:57.313" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.301" endtime="20201029 12:42:57.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.316" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.314" endtime="20201029 12:42:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.317" endtime="20201029 12:42:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.298" endtime="20201029 12:42:57.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.297" endtime="20201029 12:42:57.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.325" endtime="20201029 12:42:57.652"></status>
</kw>
<msg timestamp="20201029 12:42:57.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.397142417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.397143597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.324" endtime="20201029 12:42:57.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.397142417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.397143597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.657" endtime="20201029 12:42:57.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.667" endtime="20201029 12:42:57.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.321" endtime="20201029 12:42:57.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.320" endtime="20201029 12:42:57.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.674" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.222000000744572e-06}, {'diff': 1.19399999931602e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.2079999995862067e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:57.671" endtime="20201029 12:42:57.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.680" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1940000002041984e-06, 1.222000000744572e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:42:57.675" endtime="20201029 12:42:57.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.684" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:57.683" endtime="20201029 12:42:57.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.686" level="INFO">VALUE: [1.1799999999340116e-06, 1.1940000002041984e-06, 1.222000000744572e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2089999996689471e-06, 1.1950000002869388e-06, 1.2639999997787754e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.2640000006669538e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.250000000396767e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.2089999996689471e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.2640000006669538e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.2079999995862067e-06, 1.18000000082219e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.685" endtime="20201029 12:42:57.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.680" endtime="20201029 12:42:57.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.296" endtime="20201029 12:42:57.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.295" endtime="20201029 12:42:57.688"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.695" endtime="20201029 12:42:57.705"></status>
</kw>
<msg timestamp="20201029 12:42:57.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.694" endtime="20201029 12:42:57.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.708" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.707" endtime="20201029 12:42:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.709" endtime="20201029 12:42:57.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.691" endtime="20201029 12:42:57.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.690" endtime="20201029 12:42:57.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.719" endtime="20201029 12:42:58.038"></status>
</kw>
<msg timestamp="20201029 12:42:58.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.772902639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.772903833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.717" endtime="20201029 12:42:58.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.772902639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.772903833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.043" endtime="20201029 12:42:58.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.053" endtime="20201029 12:42:58.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.714" endtime="20201029 12:42:58.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.712" endtime="20201029 12:42:58.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.059" level="INFO">${RESULT} = [{'diff': 1.1940000002041984e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-...</msg>
<status status="PASS" starttime="20201029 12:42:58.056" endtime="20201029 12:42:58.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.064" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1940000002041984e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2080000004743852e-06...</msg>
<status status="PASS" starttime="20201029 12:42:58.060" endtime="20201029 12:42:58.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.068" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:58.067" endtime="20201029 12:42:58.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.071" level="INFO">VALUE: [1.1940000002041984e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.1940000002041984e-06, 1.2089999996689471e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.1950000002869388e-06, 1.2079999995862067e-06, 1.1670000006347436e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.19399999931602e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1949999993987603e-06, 1.1670000006347436e-06, 1.2639999997787754e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1660000005520033e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.069" endtime="20201029 12:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.065" endtime="20201029 12:42:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.688" endtime="20201029 12:42:58.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.688" endtime="20201029 12:42:58.072"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.080" endtime="20201029 12:42:58.091"></status>
</kw>
<msg timestamp="20201029 12:42:58.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.079" endtime="20201029 12:42:58.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.092" endtime="20201029 12:42:58.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.095" endtime="20201029 12:42:58.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.076" endtime="20201029 12:42:58.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.074" endtime="20201029 12:42:58.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.104" endtime="20201029 12:42:58.404"></status>
</kw>
<msg timestamp="20201029 12:42:58.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.153806486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.153807653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.102" endtime="20201029 12:42:58.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.153806486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.153807653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.409" endtime="20201029 12:42:58.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.419" endtime="20201029 12:42:58.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.099" endtime="20201029 12:42:58.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.098" endtime="20201029 12:42:58.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.426" level="INFO">${RESULT} = [{'diff': 1.1670000006347436e-06}, {'diff': 1.2639999997787754e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.2079999995862067e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.2079999995862067e-...</msg>
<status status="PASS" starttime="20201029 12:42:58.423" endtime="20201029 12:42:58.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.431" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1670000006347436e-06, 1.2639999997787754e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.2080000004743852e-06...</msg>
<status status="PASS" starttime="20201029 12:42:58.427" endtime="20201029 12:42:58.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.435" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:58.434" endtime="20201029 12:42:58.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.438" level="INFO">VALUE: [1.1670000006347436e-06, 1.2639999997787754e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1660000005520033e-06, 1.2360000001265803e-06, 1.13900000009437e-06, 1.2499999995085886e-06, 1.2499999995085886e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.250000000396767e-06, 1.2219999998563935e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.151999999393638e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1940000002041984e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.437" endtime="20201029 12:42:58.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.432" endtime="20201029 12:42:58.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.073" endtime="20201029 12:42:58.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.072" endtime="20201029 12:42:58.440"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.447" endtime="20201029 12:42:58.457"></status>
</kw>
<msg timestamp="20201029 12:42:58.458" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.446" endtime="20201029 12:42:58.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.460" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.459" endtime="20201029 12:42:58.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.461" endtime="20201029 12:42:58.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.443" endtime="20201029 12:42:58.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.441" endtime="20201029 12:42:58.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.471" endtime="20201029 12:42:58.786"></status>
</kw>
<msg timestamp="20201029 12:42:58.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.529109528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.529110708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.469" endtime="20201029 12:42:58.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.529109528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.529110708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.791" endtime="20201029 12:42:58.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.800" endtime="20201029 12:42:58.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.466" endtime="20201029 12:42:58.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.464" endtime="20201029 12:42:58.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.807" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.2080000004743852e-06...</msg>
<status status="PASS" starttime="20201029 12:42:58.804" endtime="20201029 12:42:58.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.813" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:58.808" endtime="20201029 12:42:58.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:58.816" endtime="20201029 12:42:58.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.819" level="INFO">VALUE: [1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.2780000000489622e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.2360000001265803e-06, 1.181000000016752e-06, 1.2080000004743852e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1530000003645569e-06, 1.1380000000116297e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1949999993987603e-06, 1.1809999991285736e-06, 1.1950000002869388e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.2219999998563935e-06, 1.1950000002869388e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.2079999995862067e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.818" endtime="20201029 12:42:58.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.813" endtime="20201029 12:42:58.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.440" endtime="20201029 12:42:58.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.440" endtime="20201029 12:42:58.821"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.829" endtime="20201029 12:42:58.839"></status>
</kw>
<msg timestamp="20201029 12:42:58.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.827" endtime="20201029 12:42:58.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.842" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.840" endtime="20201029 12:42:58.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.843" endtime="20201029 12:42:58.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.824" endtime="20201029 12:42:58.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.823" endtime="20201029 12:42:58.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.853" endtime="20201029 12:42:59.162"></status>
</kw>
<msg timestamp="20201029 12:42:59.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.884029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.884030903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.850" endtime="20201029 12:42:59.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.884029708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.884030903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.167" endtime="20201029 12:42:59.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.177" endtime="20201029 12:42:59.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.848" endtime="20201029 12:42:59.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.846" endtime="20201029 12:42:59.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.184" level="INFO">${RESULT} = [{'diff': 1.1950000002869388e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.2079999995862067e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1659999996638248e-0...</msg>
<status status="PASS" starttime="20201029 12:42:59.180" endtime="20201029 12:42:59.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.189" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000002869388e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.2229999999391339e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:59.185" endtime="20201029 12:42:59.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.193" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:59.192" endtime="20201029 12:42:59.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.196" level="INFO">VALUE: [1.1950000002869388e-06, 1.1249999998241833e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.2080000004743852e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.2079999995862067e-06, 1.2639999997787754e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.222000000744572e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1109999995539965e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.2780000000489622e-06, 1.2219999998563935e-06, 1.1949999993987603e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1530000003645569e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.111000000442175e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06]</msg>
<status status="PASS" starttime="20201029 12:42:59.195" endtime="20201029 12:42:59.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.190" endtime="20201029 12:42:59.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.822" endtime="20201029 12:42:59.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.821" endtime="20201029 12:42:59.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.476" endtime="20201029 12:42:59.198"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:51.370" endtime="20201029 12:42:59.198" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:59.206" endtime="20201029 12:42:59.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.204" endtime="20201029 12:42:59.226"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.239" endtime="20201029 12:42:59.251"></status>
</kw>
<msg timestamp="20201029 12:42:59.252" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.237" endtime="20201029 12:42:59.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.253" endtime="20201029 12:42:59.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.257" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:59.255" endtime="20201029 12:42:59.257"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.234" endtime="20201029 12:42:59.258"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:59.232" endtime="20201029 12:42:59.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.231" endtime="20201029 12:42:59.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:59.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:59.262" endtime="20201029 12:42:59.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.260" endtime="20201029 12:42:59.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.230" endtime="20201029 12:42:59.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.229" endtime="20201029 12:42:59.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.264" endtime="20201029 12:42:59.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.228" endtime="20201029 12:42:59.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.226" endtime="20201029 12:42:59.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.202" endtime="20201029 12:42:59.267"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.275" endtime="20201029 12:42:59.287"></status>
</kw>
<msg timestamp="20201029 12:42:59.288" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.274" endtime="20201029 12:42:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.289" endtime="20201029 12:42:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.291" endtime="20201029 12:42:59.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.271" endtime="20201029 12:42:59.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.270" endtime="20201029 12:42:59.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.300" endtime="20201029 12:42:59.586"></status>
</kw>
<msg timestamp="20201029 12:42:59.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061222792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.298" endtime="20201029 12:42:59.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061222792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061234764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.591" endtime="20201029 12:42:59.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.599" endtime="20201029 12:42:59.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.296" endtime="20201029 12:42:59.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.294" endtime="20201029 12:42:59.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.606" level="INFO">${RESULT} = [{'diff': 1.1971999999998983e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1388000000001064e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1416999999999677e-...</msg>
<status status="PASS" starttime="20201029 12:42:59.603" endtime="20201029 12:42:59.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.610" level="INFO">${OVERHEAD} = {'diff': [1.1971999999998983e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1402000000000634e-05...</msg>
<status status="PASS" starttime="20201029 12:42:59.607" endtime="20201029 12:42:59.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.614" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:59.613" endtime="20201029 12:42:59.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.616" level="INFO">VALUE: [1.1971999999998983e-05, 1.1403000000000107e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1346999999994889e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1402000000000634e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1333000000002258e-05, 1.1388000000001064e-05, 1.1375000000000968e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1403000000007046e-05, 1.1416000000000204e-05, 1.1375000000007907e-05, 1.1416999999999677e-05, 1.1388000000001064e-05, 1.1389000000000538e-05]</msg>
<status status="PASS" starttime="20201029 12:42:59.615" endtime="20201029 12:42:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.611" endtime="20201029 12:42:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.268" endtime="20201029 12:42:59.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.268" endtime="20201029 12:42:59.619"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.626" endtime="20201029 12:42:59.637"></status>
</kw>
<msg timestamp="20201029 12:42:59.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.625" endtime="20201029 12:42:59.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.640" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.639" endtime="20201029 12:42:59.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.641" endtime="20201029 12:42:59.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.622" endtime="20201029 12:42:59.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.621" endtime="20201029 12:42:59.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.650" endtime="20201029 12:42:59.956"></status>
</kw>
<msg timestamp="20201029 12:42:59.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062406847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062418222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.649" endtime="20201029 12:42:59.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062406847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062418222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.962" endtime="20201029 12:42:59.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.971" endtime="20201029 12:42:59.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.646" endtime="20201029 12:42:59.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.644" endtime="20201029 12:42:59.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.979" level="INFO">${RESULT} = [{'diff': 1.1375000000000968e-05}, {'diff': 1.1402000000000634e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1416999999999677e-...</msg>
<status status="PASS" starttime="20201029 12:42:59.975" endtime="20201029 12:42:59.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.984" level="INFO">${OVERHEAD} = {'diff': [1.1375000000000968e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1374999999994029e-05...</msg>
<status status="PASS" starttime="20201029 12:42:59.980" endtime="20201029 12:42:59.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.988" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:59.987" endtime="20201029 12:42:59.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.991" level="INFO">VALUE: [1.1375000000000968e-05, 1.1402000000000634e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1403000000007046e-05, 1.1416000000000204e-05, 1.1375000000007907e-05, 1.1416999999999677e-05, 1.1388000000001064e-05, 1.1389000000000538e-05, 1.2027000000025545e-05, 1.1346999999994889e-05, 1.1389000000028293e-05, 1.1374999999980151e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1374999999980151e-05, 1.1417000000013555e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.136099999998752e-05, 1.1417000000013555e-05, 1.136099999998752e-05, 1.1375000000035662e-05, 1.1388000000001064e-05, 1.1389000000028293e-05, 1.1389000000028293e-05, 1.1402999999965413e-05, 1.1415999999986326e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1402999999965413e-05, 1.1401999999993695e-05, 1.1403000000020924e-05, 1.1374999999980151e-05, 1.1402999999965413e-05, 1.1388999999972782e-05, 1.1416999999958044e-05, 1.1388999999972782e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1402999999965413e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1389000000028293e-05]</msg>
<status status="PASS" starttime="20201029 12:42:59.989" endtime="20201029 12:42:59.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.985" endtime="20201029 12:42:59.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.619" endtime="20201029 12:42:59.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.619" endtime="20201029 12:42:59.992"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.000" endtime="20201029 12:43:00.011"></status>
</kw>
<msg timestamp="20201029 12:43:00.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.998" endtime="20201029 12:43:00.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.014" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.012" endtime="20201029 12:43:00.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.015" endtime="20201029 12:43:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.996" endtime="20201029 12:43:00.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.994" endtime="20201029 12:43:00.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.023" endtime="20201029 12:43:00.326"></status>
</kw>
<msg timestamp="20201029 12:43:00.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4045275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:00.022" endtime="20201029 12:43:00.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.404516111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4045275, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:00.331" endtime="20201029 12:43:00.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.341" endtime="20201029 12:43:00.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.019" endtime="20201029 12:43:00.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.018" endtime="20201029 12:43:00.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.348" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1389000000028293e-05}, {'diff': 1.1417000000013555e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1389000000028293e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 12:43:00.345" endtime="20201029 12:43:00.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.353" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1417000000013555e-05...</msg>
<status status="PASS" starttime="20201029 12:43:00.349" endtime="20201029 12:43:00.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.357" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:00.356" endtime="20201029 12:43:00.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.359" level="INFO">VALUE: [1.1388999999972782e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1417000000013555e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1402999999965413e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1389000000028293e-05, 1.2013999999949121e-05, 1.137499999992464e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1431000000006186e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1348000000022118e-05, 1.1319000000065138e-05, 1.1472000000067872e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1472000000067872e-05, 1.1388999999972782e-05, 1.1388000000001064e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1389000000083804e-05, 1.147199999995685e-05, 1.1305000000016996e-05, 1.1417000000069066e-05, 1.1334000000084998e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1402000000049206e-05, 1.1402999999909902e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1375000000035662e-05, 1.1388000000001064e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1389000000083804e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1401999999938184e-05, 1.1375000000035662e-05]</msg>
<status status="PASS" starttime="20201029 12:43:00.358" endtime="20201029 12:43:00.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.354" endtime="20201029 12:43:00.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.993" endtime="20201029 12:43:00.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.992" endtime="20201029 12:43:00.361"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.369" endtime="20201029 12:43:00.380"></status>
</kw>
<msg timestamp="20201029 12:43:00.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.367" endtime="20201029 12:43:00.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.382" endtime="20201029 12:43:00.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.384" endtime="20201029 12:43:00.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.364" endtime="20201029 12:43:00.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.363" endtime="20201029 12:43:00.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.393" endtime="20201029 12:43:00.699"></status>
</kw>
<msg timestamp="20201029 12:43:00.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.767001806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.767013194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.392" endtime="20201029 12:43:00.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.767001806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.767013194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.704" endtime="20201029 12:43:00.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.714" endtime="20201029 12:43:00.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.389" endtime="20201029 12:43:00.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.387" endtime="20201029 12:43:00.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.721" level="INFO">${RESULT} = [{'diff': 1.1388000000001064e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1375000000035662e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 12:43:00.718" endtime="20201029 12:43:00.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.727" level="INFO">${OVERHEAD} = {'diff': [1.1388000000001064e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000001064e-05...</msg>
<status status="PASS" starttime="20201029 12:43:00.722" endtime="20201029 12:43:00.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.731" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:00.730" endtime="20201029 12:43:00.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.733" level="INFO">VALUE: [1.1388000000001064e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1389000000083804e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1401999999938184e-05, 1.1375000000035662e-05, 1.2042000000045405e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1458999999991448e-05, 1.1401999999938184e-05, 1.1388999999972782e-05, 1.1360999999876498e-05, 1.1388000000112086e-05, 1.1387999999890042e-05, 1.1334000000084998e-05, 1.1387999999890042e-05, 1.1431000000117209e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.137499999992464e-05, 1.144500000016535e-05, 1.131900000017616e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.131900000017616e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.141600000020837e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1360999999876498e-05, 1.1416999999847022e-05, 1.1403000000020924e-05, 1.134800000013314e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1430000000034468e-05, 1.1388999999972782e-05, 1.1402000000160228e-05]</msg>
<status status="PASS" starttime="20201029 12:43:00.732" endtime="20201029 12:43:00.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.728" endtime="20201029 12:43:00.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.362" endtime="20201029 12:43:00.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.361" endtime="20201029 12:43:00.735"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.743" endtime="20201029 12:43:00.754"></status>
</kw>
<msg timestamp="20201029 12:43:00.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.741" endtime="20201029 12:43:00.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.755" endtime="20201029 12:43:00.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.758" endtime="20201029 12:43:00.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.739" endtime="20201029 12:43:00.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.737" endtime="20201029 12:43:00.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.767" endtime="20201029 12:43:01.090"></status>
</kw>
<msg timestamp="20201029 12:43:01.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.127641181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.127652556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.765" endtime="20201029 12:43:01.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.127641181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.127652556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.095" endtime="20201029 12:43:01.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.105" endtime="20201029 12:43:01.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.763" endtime="20201029 12:43:01.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.761" endtime="20201029 12:43:01.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.112" level="INFO">${RESULT} = [{'diff': 1.137499999992464e-05}, {'diff': 1.141600000020837e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.137499999992464e-05}, {'diff': 1.1360999999876498e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:01.109" endtime="20201029 12:43:01.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.118" level="INFO">${OVERHEAD} = {'diff': [1.137499999992464e-05, 1.141600000020837e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1360999999876498e-05, 1.1416999999847022e-05, 1.1403000000020924e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:01.113" endtime="20201029 12:43:01.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.122" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:01.121" endtime="20201029 12:43:01.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.125" level="INFO">VALUE: [1.137499999992464e-05, 1.141600000020837e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1360999999876498e-05, 1.1416999999847022e-05, 1.1403000000020924e-05, 1.134800000013314e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1430000000034468e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.2013999999949121e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1389000000194827e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.1416999999847022e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1444999999943306e-05, 1.1401999999938184e-05, 1.1417000000069066e-05, 1.134800000013314e-05, 1.1416999999847022e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.1415999999986326e-05, 1.137499999992464e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1375000000146684e-05, 1.1402000000160228e-05, 1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1401999999938184e-05, 1.137499999992464e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1361000000098542e-05, 1.137499999992464e-05, 1.1375000000146684e-05]</msg>
<status status="PASS" starttime="20201029 12:43:01.123" endtime="20201029 12:43:01.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.119" endtime="20201029 12:43:01.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.736" endtime="20201029 12:43:01.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.735" endtime="20201029 12:43:01.126"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.134" endtime="20201029 12:43:01.145"></status>
</kw>
<msg timestamp="20201029 12:43:01.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.133" endtime="20201029 12:43:01.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.147" endtime="20201029 12:43:01.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.149" endtime="20201029 12:43:01.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.130" endtime="20201029 12:43:01.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.128" endtime="20201029 12:43:01.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.158" endtime="20201029 12:43:01.450"></status>
</kw>
<msg timestamp="20201029 12:43:01.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.490883931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.490895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.156" endtime="20201029 12:43:01.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.490883931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.490895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.456" endtime="20201029 12:43:01.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.466" endtime="20201029 12:43:01.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.154" endtime="20201029 12:43:01.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.152" endtime="20201029 12:43:01.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.473" level="INFO">${RESULT} = [{'diff': 1.1388000000112086e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388000000112086e-05}, {'diff': 1.1401999999938184e-05}, {'diff': 1.137499999992464e-05}, {'diff': 1.1375000000146684e-0...</msg>
<status status="PASS" starttime="20201029 12:43:01.469" endtime="20201029 12:43:01.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.478" level="INFO">${OVERHEAD} = {'diff': [1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1401999999938184e-05, 1.137499999992464e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1415999999986326e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:01.474" endtime="20201029 12:43:01.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.482" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:01.481" endtime="20201029 12:43:01.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.484" level="INFO">VALUE: [1.1388000000112086e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1401999999938184e-05, 1.137499999992464e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1361000000098542e-05, 1.137499999992464e-05, 1.1375000000146684e-05, 1.2013999999949121e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1387999999890042e-05, 1.1430999999895164e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1457999999908708e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1375000000146684e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.1361000000098542e-05, 1.1401999999938184e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1430000000034468e-05, 1.1388999999972782e-05, 1.1401999999938184e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1458000000130752e-05, 1.1431000000117209e-05, 1.1389000000194827e-05, 1.137499999992464e-05, 1.1401999999938184e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1361000000098542e-05, 1.1416999999847022e-05, 1.1333000000002258e-05, 1.1388999999972782e-05, 1.1361999999959238e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1458000000130752e-05]</msg>
<status status="PASS" starttime="20201029 12:43:01.483" endtime="20201029 12:43:01.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.478" endtime="20201029 12:43:01.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.127" endtime="20201029 12:43:01.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.127" endtime="20201029 12:43:01.486"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.494" endtime="20201029 12:43:01.505"></status>
</kw>
<msg timestamp="20201029 12:43:01.506" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.493" endtime="20201029 12:43:01.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.508" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.507" endtime="20201029 12:43:01.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.509" endtime="20201029 12:43:01.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.489" endtime="20201029 12:43:01.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.488" endtime="20201029 12:43:01.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.518" endtime="20201029 12:43:01.835"></status>
</kw>
<msg timestamp="20201029 12:43:01.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.871318931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.871330333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.517" endtime="20201029 12:43:01.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.871318931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.871330333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:01.847" endtime="20201029 12:43:01.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.870" endtime="20201029 12:43:01.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.514" endtime="20201029 12:43:01.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.512" endtime="20201029 12:43:01.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.882" level="INFO">${RESULT} = [{'diff': 1.1401999999938184e-05}, {'diff': 1.1361000000098542e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1361000000098542e-05}, {'diff': 1.1416999999847022e-...</msg>
<status status="PASS" starttime="20201029 12:43:01.878" endtime="20201029 12:43:01.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.887" level="INFO">${OVERHEAD} = {'diff': [1.1401999999938184e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1361000000098542e-05, 1.1416999999847022e-05, 1.1333000000002258e-05, 1.1388999999972782e-05...</msg>
<status status="PASS" starttime="20201029 12:43:01.883" endtime="20201029 12:43:01.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.892" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:01.891" endtime="20201029 12:43:01.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.894" level="INFO">VALUE: [1.1401999999938184e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1361000000098542e-05, 1.1416999999847022e-05, 1.1333000000002258e-05, 1.1388999999972782e-05, 1.1361999999959238e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1458000000130752e-05, 1.2026999999914523e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1387999999890042e-05, 1.1430000000256513e-05, 1.144500000016535e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1457999999908708e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1333000000224303e-05, 1.1403000000242969e-05, 1.140199999971614e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1431000000339253e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1415999999986326e-05, 1.1402000000160228e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 12:43:01.893" endtime="20201029 12:43:01.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.888" endtime="20201029 12:43:01.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.486" endtime="20201029 12:43:01.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.486" endtime="20201029 12:43:01.896"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.904" endtime="20201029 12:43:01.914"></status>
</kw>
<msg timestamp="20201029 12:43:01.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.902" endtime="20201029 12:43:01.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.916" endtime="20201029 12:43:01.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.919" endtime="20201029 12:43:01.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.899" endtime="20201029 12:43:01.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.898" endtime="20201029 12:43:01.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.928" endtime="20201029 12:43:02.242"></status>
</kw>
<msg timestamp="20201029 12:43:02.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.22156175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.221573181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:01.926" endtime="20201029 12:43:02.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.22156175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.221573181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:02.252" endtime="20201029 12:43:02.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.271" endtime="20201029 12:43:02.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.923" endtime="20201029 12:43:02.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.922" endtime="20201029 12:43:02.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.284" level="INFO">${RESULT} = [{'diff': 1.1431000000339253e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.140299999979888e-05...</msg>
<status status="PASS" starttime="20201029 12:43:02.278" endtime="20201029 12:43:02.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:02.295" level="INFO">${OVERHEAD} = {'diff': [1.1431000000339253e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:02.286" endtime="20201029 12:43:02.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.304" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:02.302" endtime="20201029 12:43:02.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.309" level="INFO">VALUE: [1.1431000000339253e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1415999999986326e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.2014000000171166e-05, 1.140199999971614e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1472000000178895e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.140299999979888e-05, 1.1431000000339253e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1318999999954116e-05, 1.1415999999986326e-05, 1.1402000000160228e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1429999999812424e-05, 1.1375000000146684e-05, 1.140199999971614e-05, 1.1318999999954116e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.1360999999876498e-05, 1.1416999999624977e-05, 1.1375000000146684e-05, 1.1431000000339253e-05, 1.1320000000036856e-05, 1.1333999999862954e-05, 1.1388999999972782e-05, 1.1375000000146684e-05]</msg>
<status status="PASS" starttime="20201029 12:43:02.306" endtime="20201029 12:43:02.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.297" endtime="20201029 12:43:02.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.896" endtime="20201029 12:43:02.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.896" endtime="20201029 12:43:02.313"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.325" endtime="20201029 12:43:02.336"></status>
</kw>
<msg timestamp="20201029 12:43:02.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.323" endtime="20201029 12:43:02.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.340" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.338" endtime="20201029 12:43:02.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.342" endtime="20201029 12:43:02.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.319" endtime="20201029 12:43:02.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.316" endtime="20201029 12:43:02.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.360" endtime="20201029 12:43:02.676"></status>
</kw>
<msg timestamp="20201029 12:43:02.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.620777931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.620789319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.357" endtime="20201029 12:43:02.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.620777931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.620789319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.687" endtime="20201029 12:43:02.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.698" endtime="20201029 12:43:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.348" endtime="20201029 12:43:02.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.346" endtime="20201029 12:43:02.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.705" level="INFO">${RESULT} = [{'diff': 1.1387999999890042e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1360999999876498e-05}, {'diff': 1.1374999999702595e-0...</msg>
<status status="PASS" starttime="20201029 12:43:02.701" endtime="20201029 12:43:02.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:02.709" level="INFO">${OVERHEAD} = {'diff': [1.1387999999890042e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.1360999999876498e-05, 1.1416999999624977e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:02.706" endtime="20201029 12:43:02.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.714" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:02.713" endtime="20201029 12:43:02.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.716" level="INFO">VALUE: [1.1387999999890042e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1374999999702595e-05, 1.1360999999876498e-05, 1.1416999999624977e-05, 1.1375000000146684e-05, 1.1431000000339253e-05, 1.1320000000036856e-05, 1.1333999999862954e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.2026999999914523e-05, 1.1417000000069066e-05, 1.1402000000160228e-05, 1.1416000000430415e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.140199999971614e-05, 1.140299999979888e-05, 1.1417000000069066e-05, 1.1374999999702595e-05, 1.1389000000416871e-05, 1.1361000000320587e-05, 1.1417000000069066e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.140199999971614e-05, 1.1429999999812424e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1374999999702595e-05, 1.1486000000004992e-05, 1.1332999999780213e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1360999999876498e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1387999999890042e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1360999999876498e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 12:43:02.715" endtime="20201029 12:43:02.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.710" endtime="20201029 12:43:02.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.314" endtime="20201029 12:43:02.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.313" endtime="20201029 12:43:02.718"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.726" endtime="20201029 12:43:02.737"></status>
</kw>
<msg timestamp="20201029 12:43:02.738" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.725" endtime="20201029 12:43:02.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.739" endtime="20201029 12:43:02.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.741" endtime="20201029 12:43:02.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.722" endtime="20201029 12:43:02.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.720" endtime="20201029 12:43:02.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.750" endtime="20201029 12:43:03.065"></status>
</kw>
<msg timestamp="20201029 12:43:03.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.030637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.030649278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.749" endtime="20201029 12:43:03.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.030637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.030649278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.070" endtime="20201029 12:43:03.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.080" endtime="20201029 12:43:03.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.746" endtime="20201029 12:43:03.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.744" endtime="20201029 12:43:03.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.086" level="INFO">${RESULT} = [{'diff': 1.1430999999895164e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1415999999986326e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1417000000069066e-05}, {'diff': 1.1374999999702595e-...</msg>
<status status="PASS" starttime="20201029 12:43:03.083" endtime="20201029 12:43:03.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.092" level="INFO">${OVERHEAD} = {'diff': [1.1430999999895164e-05, 1.1374999999702595e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05...</msg>
<status status="PASS" starttime="20201029 12:43:03.087" endtime="20201029 12:43:03.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.096" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:03.095" endtime="20201029 12:43:03.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.099" level="INFO">VALUE: [1.1430999999895164e-05, 1.1374999999702595e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1346999999606311e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.140199999971614e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1318999999954116e-05, 1.1429999999812424e-05, 1.1403000000242969e-05, 1.138800000033413e-05, 1.1415999999986326e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.140299999979888e-05, 1.1429999999812424e-05, 1.140199999971614e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1389000000416871e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1360999999876498e-05]</msg>
<status status="PASS" starttime="20201029 12:43:03.097" endtime="20201029 12:43:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.093" endtime="20201029 12:43:03.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.718" endtime="20201029 12:43:03.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.718" endtime="20201029 12:43:03.100"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.108" endtime="20201029 12:43:03.119"></status>
</kw>
<msg timestamp="20201029 12:43:03.119" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.106" endtime="20201029 12:43:03.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.120" endtime="20201029 12:43:03.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.122" endtime="20201029 12:43:03.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.104" endtime="20201029 12:43:03.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.102" endtime="20201029 12:43:03.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.132" endtime="20201029 12:43:03.442"></status>
</kw>
<msg timestamp="20201029 12:43:03.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.421656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.421667806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.130" endtime="20201029 12:43:03.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.421656417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.421667806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.447" endtime="20201029 12:43:03.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.456" endtime="20201029 12:43:03.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.128" endtime="20201029 12:43:03.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.126" endtime="20201029 12:43:03.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.464" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.138800000033413e-0...</msg>
<status status="PASS" starttime="20201029 12:43:03.460" endtime="20201029 12:43:03.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.469" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1403000000242969e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:03.465" endtime="20201029 12:43:03.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.473" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:03.472" endtime="20201029 12:43:03.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.475" level="INFO">VALUE: [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1389000000416871e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.2027999999997263e-05, 1.1430999999895164e-05, 1.1415999999986326e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1332999999780213e-05, 1.1374999999702595e-05, 1.140199999971614e-05, 1.1417000000069066e-05, 1.138800000033413e-05, 1.1375000000146684e-05, 1.1360999999876498e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.1416999999624977e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1318999999954116e-05, 1.1375000000146684e-05, 1.1430999999895164e-05, 1.1403000000242969e-05, 1.1443999999638521e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.1360999999876498e-05, 1.1471999999734805e-05, 1.1387999999890042e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.140299999979888e-05]</msg>
<status status="PASS" starttime="20201029 12:43:03.474" endtime="20201029 12:43:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.470" endtime="20201029 12:43:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.101" endtime="20201029 12:43:03.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.100" endtime="20201029 12:43:03.477"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.484" endtime="20201029 12:43:03.495"></status>
</kw>
<msg timestamp="20201029 12:43:03.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.483" endtime="20201029 12:43:03.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.497" endtime="20201029 12:43:03.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.500" endtime="20201029 12:43:03.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.480" endtime="20201029 12:43:03.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.479" endtime="20201029 12:43:03.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.511" endtime="20201029 12:43:03.828"></status>
</kw>
<msg timestamp="20201029 12:43:03.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.794076167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.794087639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.510" endtime="20201029 12:43:03.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.794076167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.794087639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.833" endtime="20201029 12:43:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.843" endtime="20201029 12:43:03.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.504" endtime="20201029 12:43:03.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.503" endtime="20201029 12:43:03.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.850" level="INFO">${RESULT} = [{'diff': 1.1471999999734805e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1430999999895164e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 12:43:03.847" endtime="20201029 12:43:03.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.855" level="INFO">${OVERHEAD} = {'diff': [1.1471999999734805e-05, 1.1387999999890042e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.138800000033413e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:03.851" endtime="20201029 12:43:03.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.860" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:03.858" endtime="20201029 12:43:03.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.862" level="INFO">VALUE: [1.1471999999734805e-05, 1.1387999999890042e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.140299999979888e-05, 1.1999999999900979e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1417000000513156e-05, 1.1374999999702595e-05, 1.140199999927205e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1458999999547359e-05, 1.1346999999162222e-05, 1.1361000000320587e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1403000000242969e-05, 1.1416999999624977e-05, 1.1320000000480945e-05, 1.144500000016535e-05]</msg>
<status status="PASS" starttime="20201029 12:43:03.861" endtime="20201029 12:43:03.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.856" endtime="20201029 12:43:03.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.478" endtime="20201029 12:43:03.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.477" endtime="20201029 12:43:03.864"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.871" endtime="20201029 12:43:03.882"></status>
</kw>
<msg timestamp="20201029 12:43:03.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.870" endtime="20201029 12:43:03.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.884" endtime="20201029 12:43:03.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.887" endtime="20201029 12:43:03.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.867" endtime="20201029 12:43:03.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.866" endtime="20201029 12:43:03.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.896" endtime="20201029 12:43:04.226"></status>
</kw>
<msg timestamp="20201029 12:43:04.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.160783556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.160794917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.894" endtime="20201029 12:43:04.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.160783556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.160794917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.231" endtime="20201029 12:43:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.241" endtime="20201029 12:43:04.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.892" endtime="20201029 12:43:04.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.890" endtime="20201029 12:43:04.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.248" level="INFO">${RESULT} = [{'diff': 1.1360999999432408e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1388999999972782e-0...</msg>
<status status="PASS" starttime="20201029 12:43:04.244" endtime="20201029 12:43:04.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:04.259" level="INFO">${OVERHEAD} = {'diff': [1.1360999999432408e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:04.249" endtime="20201029 12:43:04.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.263" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:04.262" endtime="20201029 12:43:04.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.266" level="INFO">VALUE: [1.1360999999432408e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1457999999464619e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1403000000242969e-05, 1.1416999999624977e-05, 1.1320000000480945e-05, 1.144500000016535e-05, 1.198600000051897e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.138900000086096e-05, 1.1402000000160228e-05, 1.1416000000430415e-05, 1.1459000000435537e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.140299999935479e-05, 1.1416000000430415e-05, 1.1429999999812424e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.1472000000622984e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1430999999895164e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 12:43:04.264" endtime="20201029 12:43:04.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.260" endtime="20201029 12:43:04.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.864" endtime="20201029 12:43:04.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.864" endtime="20201029 12:43:04.268"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.275" endtime="20201029 12:43:04.286"></status>
</kw>
<msg timestamp="20201029 12:43:04.287" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.274" endtime="20201029 12:43:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.288" endtime="20201029 12:43:04.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.291" endtime="20201029 12:43:04.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.271" endtime="20201029 12:43:04.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.270" endtime="20201029 12:43:04.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.300" endtime="20201029 12:43:04.613"></status>
</kw>
<msg timestamp="20201029 12:43:04.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537872514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.298" endtime="20201029 12:43:04.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537861125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537872514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.618" endtime="20201029 12:43:04.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.628" endtime="20201029 12:43:04.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.295" endtime="20201029 12:43:04.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.294" endtime="20201029 12:43:04.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.635" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1402000000160228e-...</msg>
<status status="PASS" starttime="20201029 12:43:04.631" endtime="20201029 12:43:04.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:04.640" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05...</msg>
<status status="PASS" starttime="20201029 12:43:04.636" endtime="20201029 12:43:04.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.644" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:04.643" endtime="20201029 12:43:04.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.646" level="INFO">VALUE: [1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.204199999982336e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.144400000008261e-05, 1.140299999935479e-05, 1.1416999999624977e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1457999999464619e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1431000000783342e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.138900000086096e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1402000000160228e-05]</msg>
<status status="PASS" starttime="20201029 12:43:04.645" endtime="20201029 12:43:04.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.641" endtime="20201029 12:43:04.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.269" endtime="20201029 12:43:04.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.268" endtime="20201029 12:43:04.648"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.656" endtime="20201029 12:43:04.668"></status>
</kw>
<msg timestamp="20201029 12:43:04.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.654" endtime="20201029 12:43:04.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.669" endtime="20201029 12:43:04.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.672" endtime="20201029 12:43:04.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.652" endtime="20201029 12:43:04.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.650" endtime="20201029 12:43:04.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.681" endtime="20201029 12:43:05.012"></status>
</kw>
<msg timestamp="20201029 12:43:05.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.932725486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.932736875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.679" endtime="20201029 12:43:05.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.932725486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.932736875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.017" endtime="20201029 12:43:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.027" endtime="20201029 12:43:05.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.677" endtime="20201029 12:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.675" endtime="20201029 12:43:05.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.033" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1403000000242969e-...</msg>
<status status="PASS" starttime="20201029 12:43:05.030" endtime="20201029 12:43:05.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.039" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.138900000086096e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:05.034" endtime="20201029 12:43:05.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.043" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:05.042" endtime="20201029 12:43:05.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.045" level="INFO">VALUE: [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.138900000086096e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.2014000000171166e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1403000000242969e-05, 1.1429999999812424e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1318999999510027e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.144400000008261e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.138900000086096e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1417000000513156e-05, 1.1417000000513156e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1430000000700602e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1374999999702595e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.044" endtime="20201029 12:43:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.040" endtime="20201029 12:43:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.649" endtime="20201029 12:43:05.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.648" endtime="20201029 12:43:05.047"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.055" endtime="20201029 12:43:05.066"></status>
</kw>
<msg timestamp="20201029 12:43:05.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.053" endtime="20201029 12:43:05.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.069" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.068" endtime="20201029 12:43:05.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.070" endtime="20201029 12:43:05.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.051" endtime="20201029 12:43:05.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.049" endtime="20201029 12:43:05.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.079" endtime="20201029 12:43:05.399"></status>
</kw>
<msg timestamp="20201029 12:43:05.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.305257861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.30526925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:05.078" endtime="20201029 12:43:05.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.305257861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.30526925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:05.404" endtime="20201029 12:43:05.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.414" endtime="20201029 12:43:05.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.075" endtime="20201029 12:43:05.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.073" endtime="20201029 12:43:05.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.421" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1375000000590774e-05}, {'diff': 1.1430000000700602e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 12:43:05.417" endtime="20201029 12:43:05.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.427" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1430000000700602e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05...</msg>
<status status="PASS" starttime="20201029 12:43:05.422" endtime="20201029 12:43:05.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.431" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:05.430" endtime="20201029 12:43:05.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.433" level="INFO">VALUE: [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1430000000700602e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.2069000000280994e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1346999999162222e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1334000000751132e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.144500000016535e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1402000000160228e-05, 1.1416999999624977e-05, 1.13470000000504e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1403000000242969e-05, 1.1374999999702595e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.432" endtime="20201029 12:43:05.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.427" endtime="20201029 12:43:05.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.048" endtime="20201029 12:43:05.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.047" endtime="20201029 12:43:05.435"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.443" endtime="20201029 12:43:05.454"></status>
</kw>
<msg timestamp="20201029 12:43:05.455" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.442" endtime="20201029 12:43:05.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.456" endtime="20201029 12:43:05.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.458" endtime="20201029 12:43:05.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.439" endtime="20201029 12:43:05.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.437" endtime="20201029 12:43:05.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.467" endtime="20201029 12:43:05.794"></status>
</kw>
<msg timestamp="20201029 12:43:05.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.693636375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.69364775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:05.466" endtime="20201029 12:43:05.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.693636375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.69364775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:05.805" endtime="20201029 12:43:05.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.823" endtime="20201029 12:43:05.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.463" endtime="20201029 12:43:05.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.461" endtime="20201029 12:43:05.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.830" level="INFO">${RESULT} = [{'diff': 1.1375000000590774e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.134800000013314e-05}, {'diff': 1.1430999999895164e-05}, {'diff': 1.1388999999972782e-0...</msg>
<status status="PASS" starttime="20201029 12:43:05.826" endtime="20201029 12:43:05.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.835" level="INFO">${OVERHEAD} = {'diff': [1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:05.831" endtime="20201029 12:43:05.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.839" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:05.838" endtime="20201029 12:43:05.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.842" level="INFO">VALUE: [1.1375000000590774e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.2014000000171166e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1416999999624977e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1444999999277172e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1402000000160228e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1403000000242969e-05, 1.13470000000504e-05, 1.1416000000430415e-05, 1.1387999999890042e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.140199999927205e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1458999999547359e-05, 1.1374999999702595e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.140199999927205e-05]</msg>
<status status="PASS" starttime="20201029 12:43:05.840" endtime="20201029 12:43:05.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.836" endtime="20201029 12:43:05.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.436" endtime="20201029 12:43:05.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.435" endtime="20201029 12:43:05.843"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.852" endtime="20201029 12:43:05.863"></status>
</kw>
<msg timestamp="20201029 12:43:05.864" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.851" endtime="20201029 12:43:05.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.866" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.865" endtime="20201029 12:43:05.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.867" endtime="20201029 12:43:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.847" endtime="20201029 12:43:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.846" endtime="20201029 12:43:05.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.876" endtime="20201029 12:43:06.195"></status>
</kw>
<msg timestamp="20201029 12:43:06.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.072456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.072467472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.875" endtime="20201029 12:43:06.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.072456083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.072467472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.200" endtime="20201029 12:43:06.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.210" endtime="20201029 12:43:06.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.872" endtime="20201029 12:43:06.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.870" endtime="20201029 12:43:06.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.217" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1416999999624977e-05}, {'diff': 1.1458999999547359e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1416999999624977e-05}, {'diff': 1.140299999935479e-0...</msg>
<status status="PASS" starttime="20201029 12:43:06.213" endtime="20201029 12:43:06.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.222" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1416999999624977e-05, 1.1458999999547359e-05, 1.1374999999702595e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1361000000320587e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:06.218" endtime="20201029 12:43:06.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.226" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:06.225" endtime="20201029 12:43:06.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.229" level="INFO">VALUE: [1.1388999999972782e-05, 1.1416999999624977e-05, 1.1458999999547359e-05, 1.1374999999702595e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.140199999927205e-05, 1.2014000000171166e-05, 1.1375000000590774e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.144500000016535e-05, 1.140299999935479e-05, 1.1472999999817546e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1431000000783342e-05, 1.1417000000513156e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.138800000077822e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1361999999515149e-05, 1.1361000000320587e-05, 1.13470000000504e-05]</msg>
<status status="PASS" starttime="20201029 12:43:06.227" endtime="20201029 12:43:06.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.223" endtime="20201029 12:43:06.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.844" endtime="20201029 12:43:06.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.843" endtime="20201029 12:43:06.231"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.239" endtime="20201029 12:43:06.250"></status>
</kw>
<msg timestamp="20201029 12:43:06.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.237" endtime="20201029 12:43:06.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.251" endtime="20201029 12:43:06.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.254" endtime="20201029 12:43:06.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.234" endtime="20201029 12:43:06.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.233" endtime="20201029 12:43:06.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.263" endtime="20201029 12:43:06.578"></status>
</kw>
<msg timestamp="20201029 12:43:06.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.471491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.471502653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.261" endtime="20201029 12:43:06.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.471491278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.471502653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.583" endtime="20201029 12:43:06.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.592" endtime="20201029 12:43:06.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.259" endtime="20201029 12:43:06.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.257" endtime="20201029 12:43:06.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.599" level="INFO">${RESULT} = [{'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1361000000320587e-...</msg>
<status status="PASS" starttime="20201029 12:43:06.596" endtime="20201029 12:43:06.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.605" level="INFO">${OVERHEAD} = {'diff': [1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1374999999702595e-05...</msg>
<status status="PASS" starttime="20201029 12:43:06.600" endtime="20201029 12:43:06.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.609" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:06.608" endtime="20201029 12:43:06.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.612" level="INFO">VALUE: [1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.138800000077822e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1361999999515149e-05, 1.1361000000320587e-05, 1.13470000000504e-05, 1.204199999982336e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1388999999972782e-05, 1.140199999927205e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1417000000513156e-05, 1.140299999935479e-05, 1.140299999935479e-05, 1.1416000000430415e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.13470000000504e-05, 1.138900000086096e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.1459000000435537e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.13470000000504e-05, 1.1430999999895164e-05]</msg>
<status status="PASS" starttime="20201029 12:43:06.610" endtime="20201029 12:43:06.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.606" endtime="20201029 12:43:06.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.232" endtime="20201029 12:43:06.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.231" endtime="20201029 12:43:06.614"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.622" endtime="20201029 12:43:06.633"></status>
</kw>
<msg timestamp="20201029 12:43:06.633" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.620" endtime="20201029 12:43:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.634" endtime="20201029 12:43:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.637" endtime="20201029 12:43:06.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.618" endtime="20201029 12:43:06.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.616" endtime="20201029 12:43:06.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.647" endtime="20201029 12:43:06.967"></status>
</kw>
<msg timestamp="20201029 12:43:06.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.848897903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.848909278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.645" endtime="20201029 12:43:06.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.848897903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.848909278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.972" endtime="20201029 12:43:06.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.986" endtime="20201029 12:43:06.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.642" endtime="20201029 12:43:06.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.640" endtime="20201029 12:43:06.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.995" level="INFO">${RESULT} = [{'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1459000000435537e-05}, {'diff': 1.1374999999702595e-...</msg>
<status status="PASS" starttime="20201029 12:43:06.990" endtime="20201029 12:43:06.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.001" level="INFO">${OVERHEAD} = {'diff': [1.1374999999702595e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.1459000000435537e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05...</msg>
<status status="PASS" starttime="20201029 12:43:06.996" endtime="20201029 12:43:07.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.007" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:07.005" endtime="20201029 12:43:07.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.013" level="INFO">VALUE: [1.1374999999702595e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.1459000000435537e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.13470000000504e-05, 1.1430999999895164e-05, 1.2069999999475556e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.140199999927205e-05, 1.1416999999624977e-05, 1.1361999999515149e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1472000000622984e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.144400000008261e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1319000000398205e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1332999999780213e-05]</msg>
<status status="PASS" starttime="20201029 12:43:07.008" endtime="20201029 12:43:07.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.002" endtime="20201029 12:43:07.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.615" endtime="20201029 12:43:07.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.614" endtime="20201029 12:43:07.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.267" endtime="20201029 12:43:07.015"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:59.200" endtime="20201029 12:43:07.015" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.022" endtime="20201029 12:43:07.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.021" endtime="20201029 12:43:07.042"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.055" endtime="20201029 12:43:07.068"></status>
</kw>
<msg timestamp="20201029 12:43:07.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.054" endtime="20201029 12:43:07.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.071" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.069" endtime="20201029 12:43:07.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.074" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:07.072" endtime="20201029 12:43:07.074"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.051" endtime="20201029 12:43:07.075"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.049" endtime="20201029 12:43:07.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.047" endtime="20201029 12:43:07.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:07.079" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:07.079" endtime="20201029 12:43:07.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.076" endtime="20201029 12:43:07.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.047" endtime="20201029 12:43:07.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.046" endtime="20201029 12:43:07.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.081" endtime="20201029 12:43:07.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.045" endtime="20201029 12:43:07.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.043" endtime="20201029 12:43:07.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.019" endtime="20201029 12:43:07.084"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.093" endtime="20201029 12:43:07.113"></status>
</kw>
<msg timestamp="20201029 12:43:07.114" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.092" endtime="20201029 12:43:07.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.116" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.115" endtime="20201029 12:43:07.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.117" endtime="20201029 12:43:07.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.088" endtime="20201029 12:43:07.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.086" endtime="20201029 12:43:07.120"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.123" endtime="20201029 12:43:07.124"></status>
</kw>
<msg timestamp="20201029 12:43:07.125" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:07.121" endtime="20201029 12:43:07.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.129" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:07.128" endtime="20201029 12:43:07.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.131" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:07.130" endtime="20201029 12:43:07.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.126" endtime="20201029 12:43:07.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.136" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:07.135" endtime="20201029 12:43:07.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.138" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:07.137" endtime="20201029 12:43:07.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.132" endtime="20201029 12:43:07.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.145" endtime="20201029 12:43:07.431"></status>
</kw>
<msg timestamp="20201029 12:43:07.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063580139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.143" endtime="20201029 12:43:07.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063580139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.435" endtime="20201029 12:43:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.444" endtime="20201029 12:43:07.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.141" endtime="20201029 12:43:07.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.139" endtime="20201029 12:43:07.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.450" level="INFO">${RESULT} = [{'diff': 3.281900000000337e-05}, {'diff': 3.2304999999996364e-05}, {'diff': 3.2306000000009716e-05}, {'diff': 3.229199999998933e-05}, {'diff': 3.224999999999756e-05}, {'diff': 3.2318999999988995e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:07.447" endtime="20201029 12:43:07.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.455" level="INFO">${OVERHEAD} = {'diff': [3.281900000000337e-05, 3.2304999999996364e-05, 3.2306000000009716e-05, 3.229199999998933e-05, 3.224999999999756e-05, 3.2318999999988995e-05, 3.229200000000321e-05, 3.230599999999584e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 12:43:07.451" endtime="20201029 12:43:07.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.460" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:07.459" endtime="20201029 12:43:07.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.462" level="INFO">VALUE: [3.281900000000337e-05, 3.2304999999996364e-05, 3.2306000000009716e-05, 3.229199999998933e-05, 3.224999999999756e-05, 3.2318999999988995e-05, 3.229200000000321e-05, 3.230599999999584e-05, 3.2304999999996364e-05, 3.236100000000852e-05, 3.230500000001024e-05, 3.2306000000009716e-05, 3.234700000000201e-05, 3.232000000000235e-05, 3.226400000000407e-05, 3.229200000000321e-05, 3.230599999999584e-05, 3.230599999999584e-05, 3.2304999999996364e-05, 3.231900000000287e-05, 3.2304999999996364e-05, 3.231900000000287e-05, 3.226400000000407e-05, 3.224999999999756e-05, 3.230599999999584e-05, 3.230599999999584e-05, 3.230500000001024e-05, 3.2304999999996364e-05, 3.234700000000201e-05, 3.229200000000321e-05, 3.226399999999019e-05, 3.232000000000235e-05, 3.230599999999584e-05, 3.233399999999498e-05, 3.2304999999996364e-05, 3.2332999999995504e-05, 3.2332999999995504e-05, 3.230599999999584e-05, 3.232000000000235e-05, 3.229200000000321e-05, 3.229200000000321e-05, 3.226400000000407e-05, 3.229100000000373e-05, 3.2318999999988995e-05, 3.230599999999584e-05, 3.233399999999498e-05, 3.237500000000115e-05, 3.2306000000009716e-05, 3.230599999999584e-05, 3.2304999999996364e-05]</msg>
<status status="PASS" starttime="20201029 12:43:07.461" endtime="20201029 12:43:07.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.456" endtime="20201029 12:43:07.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.084" endtime="20201029 12:43:07.548"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:07.017" endtime="20201029 12:43:07.549" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.556" endtime="20201029 12:43:07.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.554" endtime="20201029 12:43:07.576"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.589" endtime="20201029 12:43:07.601"></status>
</kw>
<msg timestamp="20201029 12:43:07.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.587" endtime="20201029 12:43:07.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.603" endtime="20201029 12:43:07.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.607" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:07.605" endtime="20201029 12:43:07.607"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.585" endtime="20201029 12:43:07.608"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.582" endtime="20201029 12:43:07.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.581" endtime="20201029 12:43:07.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:07.613" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:07.613" endtime="20201029 12:43:07.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.610" endtime="20201029 12:43:07.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.580" endtime="20201029 12:43:07.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.580" endtime="20201029 12:43:07.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.615" endtime="20201029 12:43:07.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.578" endtime="20201029 12:43:07.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.577" endtime="20201029 12:43:07.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.553" endtime="20201029 12:43:07.618"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.626" endtime="20201029 12:43:07.869"></status>
</kw>
<msg timestamp="20201029 12:43:07.870" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.624" endtime="20201029 12:43:07.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.872" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.871" endtime="20201029 12:43:07.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.874" endtime="20201029 12:43:07.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.622" endtime="20201029 12:43:07.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.620" endtime="20201029 12:43:07.876"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.879" endtime="20201029 12:43:07.880"></status>
</kw>
<msg timestamp="20201029 12:43:07.881" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:07.877" endtime="20201029 12:43:07.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.885" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:07.884" endtime="20201029 12:43:07.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.887" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:07.886" endtime="20201029 12:43:07.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.881" endtime="20201029 12:43:07.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.891" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:07.890" endtime="20201029 12:43:07.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.893" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:07.892" endtime="20201029 12:43:07.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.888" endtime="20201029 12:43:07.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.900" endtime="20201029 12:43:08.210"></status>
</kw>
<msg timestamp="20201029 12:43:08.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06679825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066942375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:07.899" endtime="20201029 12:43:08.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06679825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066942375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:08.214" endtime="20201029 12:43:08.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.222" endtime="20201029 12:43:08.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.896" endtime="20201029 12:43:08.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.895" endtime="20201029 12:43:08.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:08.229" level="INFO">${RESULT} = [{'diff': 0.00014412499999999495}, {'diff': 0.00014302800000000337}, {'diff': 0.0001429720000000051}, {'diff': 0.00014294499999999155}, {'diff': 0.00014298599999999773}, {'diff': 0.0001429999999999903...</msg>
<status status="PASS" starttime="20201029 12:43:08.225" endtime="20201029 12:43:08.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:08.233" level="INFO">${OVERHEAD} = {'diff': [0.00014412499999999495, 0.00014302800000000337, 0.0001429720000000051, 0.00014294499999999155, 0.00014298599999999773, 0.00014299999999999036, 0.00014297199999999122, 0.00014298599999999773,...</msg>
<status status="PASS" starttime="20201029 12:43:08.230" endtime="20201029 12:43:08.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.238" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:08.237" endtime="20201029 12:43:08.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.240" level="INFO">VALUE: [0.00014412499999999495, 0.00014302800000000337, 0.0001429720000000051, 0.00014294499999999155, 0.00014298599999999773, 0.00014299999999999036, 0.00014297199999999122, 0.00014298599999999773, 0.00014294499999999155, 0.00014290299999999978, 0.00014291600000000682, 0.00014294500000000543, 0.00014290299999999978, 0.00014290299999999978, 0.00014300000000000423, 0.00014291599999999294, 0.00014288900000000715, 0.0001429310000000128, 0.00014294500000000543, 0.00014290299999999978, 0.00014290299999999978, 0.0001429310000000128, 0.00014293099999998504, 0.0001429020000000003, 0.00014288900000000715, 0.0001428889999999794, 0.00014291599999999294, 0.00014294500000000543, 0.00014294500000000543, 0.0001428200000000157, 0.0001429310000000128, 0.00014293099999998504, 0.0001429169999999924, 0.00014290299999999978, 0.00014287499999998676, 0.0001429020000000003, 0.00014293000000001332, 0.00014291599999999294, 0.00014290299999999978, 0.00014298599999998385, 0.00014294500000000543, 0.00014291700000002017, 0.00014290300000002754, 0.0001429439999999782, 0.00014291699999996466, 0.00014291700000002017, 0.00014290299999997202, 0.0001429439999999782, 0.0001428890000000349, 0.0001429309999999573]</msg>
<status status="PASS" starttime="20201029 12:43:08.239" endtime="20201029 12:43:08.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.234" endtime="20201029 12:43:08.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.618" endtime="20201029 12:43:08.242"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:07.551" endtime="20201029 12:43:08.242" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:08.249" endtime="20201029 12:43:08.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.248" endtime="20201029 12:43:08.269"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.282" endtime="20201029 12:43:08.295"></status>
</kw>
<msg timestamp="20201029 12:43:08.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.281" endtime="20201029 12:43:08.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.298" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.296" endtime="20201029 12:43:08.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:08.301" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:08.299" endtime="20201029 12:43:08.301"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:08.278" endtime="20201029 12:43:08.302"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:08.275" endtime="20201029 12:43:08.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.274" endtime="20201029 12:43:08.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:08.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:08.305" endtime="20201029 12:43:08.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.303" endtime="20201029 12:43:08.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.273" endtime="20201029 12:43:08.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.273" endtime="20201029 12:43:08.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.308" endtime="20201029 12:43:08.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.271" endtime="20201029 12:43:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.270" endtime="20201029 12:43:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.246" endtime="20201029 12:43:08.311"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:08.321" endtime="20201029 12:43:09.163"></status>
</kw>
<msg timestamp="20201029 12:43:09.164" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:08.319" endtime="20201029 12:43:09.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.169" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.166" endtime="20201029 12:43:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.171" endtime="20201029 12:43:09.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.316" endtime="20201029 12:43:09.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.313" endtime="20201029 12:43:09.176"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.182" endtime="20201029 12:43:09.190"></status>
</kw>
<msg timestamp="20201029 12:43:09.191" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:09.178" endtime="20201029 12:43:09.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.202" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:09.198" endtime="20201029 12:43:09.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.207" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:09.205" endtime="20201029 12:43:09.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.193" endtime="20201029 12:43:09.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.220" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:09.217" endtime="20201029 12:43:09.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.227" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:09.223" endtime="20201029 12:43:09.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.211" endtime="20201029 12:43:09.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.244" endtime="20201029 12:43:09.543"></status>
</kw>
<msg timestamp="20201029 12:43:09.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078551986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078820583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.241" endtime="20201029 12:43:09.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078551986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078820583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.546" endtime="20201029 12:43:09.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.554" endtime="20201029 12:43:09.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.234" endtime="20201029 12:43:09.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.230" endtime="20201029 12:43:09.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:09.560" level="INFO">${RESULT} = [{'diff': 0.0002685969999999954}, {'diff': 0.0002617780000000042}, {'diff': 0.00026176399999999767}, {'diff': 0.0002618339999999886}, {'diff': 0.0002617920000000107}, {'diff': 0.00026180500000000384},...</msg>
<status status="PASS" starttime="20201029 12:43:09.557" endtime="20201029 12:43:09.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:09.564" level="INFO">${OVERHEAD} = {'diff': [0.0002685969999999954, 0.0002617780000000042, 0.00026176399999999767, 0.0002618339999999886, 0.0002617920000000107, 0.00026180500000000384, 0.0002617779999999903, 0.00026176399999999767, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:09.561" endtime="20201029 12:43:09.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.569" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:09.568" endtime="20201029 12:43:09.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.571" level="INFO">VALUE: [0.0002685969999999954, 0.0002617780000000042, 0.00026176399999999767, 0.0002618339999999886, 0.0002617920000000107, 0.00026180500000000384, 0.0002617779999999903, 0.00026176399999999767, 0.00026180500000000384, 0.0002617779999999903, 0.0002618329999999891, 0.00026180500000000384, 0.00026180599999997556, 0.00026180599999997556, 0.00026179199999998293, 0.00026181899999999647, 0.00026179200000003844, 0.0002618329999999891, 0.0002618200000000237, 0.00026181899999999647, 0.00026184699999998173, 0.00026180600000003107, 0.00026181899999999647, 0.00026175000000000503, 0.00026179199999998293, 0.0002617779999999903, 0.00026180599999992005, 0.00026180600000003107, 0.0002617779999999348, 0.0002617360000000124, 0.0002618610000000299, 0.00026180500000005935, 0.00026179199999998293, 0.00026180500000005935, 0.0002617910000000112, 0.0002617910000000112, 0.00026184699999998173, 0.0002617779999999348, 0.0002617910000000112, 0.00026180500000005935, 0.00026180600000003107, 0.00026175000000006055, 0.00026172199999996426, 0.0002617499999999495, 0.00026181899999999647, 0.00026179200000009395, 0.0002617499999999495, 0.00026176399999999767, 0.0002617220000000753, 0.00026176399999999767]</msg>
<status status="PASS" starttime="20201029 12:43:09.570" endtime="20201029 12:43:09.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.565" endtime="20201029 12:43:09.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:08.311" endtime="20201029 12:43:09.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:08.244" endtime="20201029 12:43:09.573" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:09.580" endtime="20201029 12:43:09.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.579" endtime="20201029 12:43:09.602"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.626" endtime="20201029 12:43:09.638"></status>
</kw>
<msg timestamp="20201029 12:43:09.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.624" endtime="20201029 12:43:09.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.640" endtime="20201029 12:43:09.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.644" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:09.642" endtime="20201029 12:43:09.644"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.622" endtime="20201029 12:43:09.645"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:09.619" endtime="20201029 12:43:09.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.617" endtime="20201029 12:43:09.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:09.650" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:09.649" endtime="20201029 12:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.647" endtime="20201029 12:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.614" endtime="20201029 12:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.612" endtime="20201029 12:43:09.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.651" endtime="20201029 12:43:09.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.609" endtime="20201029 12:43:09.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.603" endtime="20201029 12:43:09.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.577" endtime="20201029 12:43:09.654"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.663" endtime="20201029 12:43:09.684"></status>
</kw>
<msg timestamp="20201029 12:43:09.684" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.661" endtime="20201029 12:43:09.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.687" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:09.685" endtime="20201029 12:43:09.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.688" endtime="20201029 12:43:09.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.658" endtime="20201029 12:43:09.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.656" endtime="20201029 12:43:09.690"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.692" endtime="20201029 12:43:09.695"></status>
</kw>
<msg timestamp="20201029 12:43:09.696" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:09.691" endtime="20201029 12:43:09.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.700" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:09.699" endtime="20201029 12:43:09.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.702" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:09.701" endtime="20201029 12:43:09.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.697" endtime="20201029 12:43:09.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.707" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:09.706" endtime="20201029 12:43:09.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:09.709" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:09.708" endtime="20201029 12:43:09.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.703" endtime="20201029 12:43:09.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:09.716" endtime="20201029 12:43:10.005"></status>
</kw>
<msg timestamp="20201029 12:43:10.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075703028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075708931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:09.714" endtime="20201029 12:43:10.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075703028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075708931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.014" endtime="20201029 12:43:10.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.032" endtime="20201029 12:43:10.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.712" endtime="20201029 12:43:10.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.710" endtime="20201029 12:43:10.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.047" level="INFO">${RESULT} = [{'diff': 5.902999999987668e-06}, {'diff': 5.930000000001212e-06}, {'diff': 5.902000000002072e-06}, {'diff': 5.916999999994177e-06}, {'diff': 5.903000000001546e-06}, {'diff': 5.917000000008055e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:10.040" endtime="20201029 12:43:10.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.057" level="INFO">${OVERHEAD} = {'diff': [5.902999999987668e-06, 5.930000000001212e-06, 5.902000000002072e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.8750...</msg>
<status status="PASS" starttime="20201029 12:43:10.049" endtime="20201029 12:43:10.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.067" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:10.065" endtime="20201029 12:43:10.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.072" level="INFO">VALUE: [5.902999999987668e-06, 5.930000000001212e-06, 5.902000000002072e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.875000000002406e-06, 5.943999999993843e-06, 5.902999999987668e-06, 5.930000000001212e-06, 5.916999999994177e-06, 5.916000000008581e-06, 5.931000000000686e-06, 5.930000000001212e-06, 5.916999999994177e-06, 5.958000000000352e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.931000000000686e-06, 5.903000000001546e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.84800000000274e-06, 5.930000000001212e-06, 5.917000000008055e-06, 5.985999999999492e-06, 5.915999999994703e-06, 5.889000000008915e-06, 5.916000000008581e-06, 5.917000000008055e-06, 5.916000000008581e-06, 5.888999999995037e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.943999999993843e-06, 5.917000000008055e-06, 5.916000000008581e-06, 5.916000000008581e-06, 5.903000000001546e-06, 5.9729999999924566e-06, 5.915999999994703e-06, 5.888999999995037e-06, 5.931000000000686e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.917000000008055e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201029 12:43:10.069" endtime="20201029 12:43:10.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.059" endtime="20201029 12:43:10.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:09.655" endtime="20201029 12:43:10.075"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:09.575" endtime="20201029 12:43:10.076" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.090" endtime="20201029 12:43:10.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.088" endtime="20201029 12:43:10.110"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.124" endtime="20201029 12:43:10.136"></status>
</kw>
<msg timestamp="20201029 12:43:10.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.122" endtime="20201029 12:43:10.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.139" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.137" endtime="20201029 12:43:10.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.142" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:10.140" endtime="20201029 12:43:10.142"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:10.120" endtime="20201029 12:43:10.143"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:10.117" endtime="20201029 12:43:10.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.116" endtime="20201029 12:43:10.144"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:10.148" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:10.147" endtime="20201029 12:43:10.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.145" endtime="20201029 12:43:10.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.114" endtime="20201029 12:43:10.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.114" endtime="20201029 12:43:10.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.149" endtime="20201029 12:43:10.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.112" endtime="20201029 12:43:10.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.111" endtime="20201029 12:43:10.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.085" endtime="20201029 12:43:10.152"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.161" endtime="20201029 12:43:10.405"></status>
</kw>
<msg timestamp="20201029 12:43:10.406" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.160" endtime="20201029 12:43:10.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.409" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.407" endtime="20201029 12:43:10.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.412" endtime="20201029 12:43:10.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.157" endtime="20201029 12:43:10.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.154" endtime="20201029 12:43:10.415"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.417" endtime="20201029 12:43:10.419"></status>
</kw>
<msg timestamp="20201029 12:43:10.420" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:10.416" endtime="20201029 12:43:10.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.425" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:10.424" endtime="20201029 12:43:10.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.427" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:10.426" endtime="20201029 12:43:10.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.421" endtime="20201029 12:43:10.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.432" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:10.431" endtime="20201029 12:43:10.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.434" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:10.433" endtime="20201029 12:43:10.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.428" endtime="20201029 12:43:10.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.442" endtime="20201029 12:43:10.735"></status>
</kw>
<msg timestamp="20201029 12:43:10.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068443069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068476556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.441" endtime="20201029 12:43:10.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068443069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068476556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:10.739" endtime="20201029 12:43:10.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.747" endtime="20201029 12:43:10.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.438" endtime="20201029 12:43:10.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.436" endtime="20201029 12:43:10.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:10.754" level="INFO">${RESULT} = [{'diff': 3.348699999999871e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.348599999999924e-05}, {'diff': 3.347300000000608e-05}, {'diff': 3.347199999999273e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:10.750" endtime="20201029 12:43:10.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:10.759" level="INFO">${OVERHEAD} = {'diff': [3.348699999999871e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.347300000000608e-05, 3.347199999999273e-05, 3.348599999999924e-05, 3.3444999999993064e-05, 3.347...</msg>
<status status="PASS" starttime="20201029 12:43:10.755" endtime="20201029 12:43:10.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.763" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:10.762" endtime="20201029 12:43:10.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.766" level="INFO">VALUE: [3.348699999999871e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.347300000000608e-05, 3.347199999999273e-05, 3.348599999999924e-05, 3.3444999999993064e-05, 3.347200000000661e-05, 3.347199999999273e-05, 3.347199999999273e-05, 3.351399999999838e-05, 3.348599999999924e-05, 3.347199999997885e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3514000000012256e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3458000000013977e-05, 3.3514000000012256e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3458999999985695e-05, 3.352800000000489e-05, 3.347200000000661e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.3514000000012256e-05, 3.348699999999871e-05, 3.349999999999187e-05, 3.347199999997885e-05, 3.348599999999924e-05, 3.3500000000019625e-05, 3.347200000000661e-05, 3.347200000000661e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3499999999964114e-05, 3.344399999999359e-05, 3.3486000000026994e-05, 3.348599999997148e-05, 3.3486000000026994e-05, 3.347199999997885e-05, 3.347199999997885e-05, 3.3500000000019625e-05, 3.347199999997885e-05]</msg>
<status status="PASS" starttime="20201029 12:43:10.764" endtime="20201029 12:43:10.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.760" endtime="20201029 12:43:10.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.152" endtime="20201029 12:43:10.767"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:10.080" endtime="20201029 12:43:10.768" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:10.775" endtime="20201029 12:43:10.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.774" endtime="20201029 12:43:10.797"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.824" endtime="20201029 12:43:10.843"></status>
</kw>
<msg timestamp="20201029 12:43:10.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.821" endtime="20201029 12:43:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.847" endtime="20201029 12:43:10.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:10.862" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:10.852" endtime="20201029 12:43:10.863"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:10.815" endtime="20201029 12:43:10.864"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:10.810" endtime="20201029 12:43:10.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.808" endtime="20201029 12:43:10.866"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:10.874" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:10.872" endtime="20201029 12:43:10.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.868" endtime="20201029 12:43:10.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.806" endtime="20201029 12:43:10.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.804" endtime="20201029 12:43:10.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.879" endtime="20201029 12:43:10.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.802" endtime="20201029 12:43:10.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.798" endtime="20201029 12:43:10.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.772" endtime="20201029 12:43:10.888"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:10.904" endtime="20201029 12:43:11.751"></status>
</kw>
<msg timestamp="20201029 12:43:11.752" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:10.901" endtime="20201029 12:43:11.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.757" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.754" endtime="20201029 12:43:11.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.760" endtime="20201029 12:43:11.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.898" endtime="20201029 12:43:11.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.894" endtime="20201029 12:43:11.765"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.770" endtime="20201029 12:43:11.773"></status>
</kw>
<msg timestamp="20201029 12:43:11.774" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:43:11.767" endtime="20201029 12:43:11.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.783" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:11.781" endtime="20201029 12:43:11.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.788" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:11.786" endtime="20201029 12:43:11.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.776" endtime="20201029 12:43:11.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.798" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:11.795" endtime="20201029 12:43:11.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.802" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:11.800" endtime="20201029 12:43:11.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.791" endtime="20201029 12:43:11.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.818" endtime="20201029 12:43:12.110"></status>
</kw>
<msg timestamp="20201029 12:43:12.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137276486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:11.814" endtime="20201029 12:43:12.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137276486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:12.114" endtime="20201029 12:43:12.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.122" endtime="20201029 12:43:12.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.808" endtime="20201029 12:43:12.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.805" endtime="20201029 12:43:12.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.130" level="INFO">${RESULT} = [{'diff': 6.148599999999949e-05}, {'diff': 6.149999999999212e-05}, {'diff': 6.149999999999212e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.149999999999212e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:12.127" endtime="20201029 12:43:12.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:12.134" level="INFO">${OVERHEAD} = {'diff': [6.148599999999949e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.1499...</msg>
<status status="PASS" starttime="20201029 12:43:12.131" endtime="20201029 12:43:12.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.139" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:12.138" endtime="20201029 12:43:12.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.141" level="INFO">VALUE: [6.148599999999949e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.149999999999212e-05, 6.151400000004026e-05, 6.154199999997001e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.151299999995752e-05, 6.148599999999949e-05, 6.152700000000566e-05, 6.148599999999949e-05, 6.144400000002159e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.14999999999366e-05, 6.151300000001303e-05, 6.148599999999949e-05, 6.14440000000771e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.150000000004763e-05, 6.141699999995254e-05, 6.14999999999366e-05, 6.148599999999949e-05, 6.155500000004643e-05, 6.143100000000068e-05, 6.150000000004763e-05, 6.148599999999949e-05, 6.147199999995134e-05, 6.148700000008223e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.14869999999712e-05, 6.14999999999366e-05, 6.14999999999366e-05, 6.150000000004763e-05, 6.151399999998475e-05, 6.151400000009577e-05, 6.14999999999366e-05, 6.151399999998475e-05]</msg>
<status status="PASS" starttime="20201029 12:43:12.140" endtime="20201029 12:43:12.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.135" endtime="20201029 12:43:12.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:10.889" endtime="20201029 12:43:12.143"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:10.769" endtime="20201029 12:43:12.143" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.150" endtime="20201029 12:43:12.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.148" endtime="20201029 12:43:12.170"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.184" endtime="20201029 12:43:12.196"></status>
</kw>
<msg timestamp="20201029 12:43:12.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.182" endtime="20201029 12:43:12.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.198" endtime="20201029 12:43:12.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.202" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:12.201" endtime="20201029 12:43:12.203"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:12.180" endtime="20201029 12:43:12.203"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:12.177" endtime="20201029 12:43:12.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.175" endtime="20201029 12:43:12.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:12.208" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:12.207" endtime="20201029 12:43:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.205" endtime="20201029 12:43:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.175" endtime="20201029 12:43:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.174" endtime="20201029 12:43:12.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.210" endtime="20201029 12:43:12.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.173" endtime="20201029 12:43:12.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.171" endtime="20201029 12:43:12.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.147" endtime="20201029 12:43:12.213"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.216" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:12.225" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:13.469" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:12.215" endtime="20201029 12:43:13.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.472" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:13.471" endtime="20201029 12:43:13.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.213" endtime="20201029 12:43:13.473"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.477" endtime="20201029 12:43:13.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.475" endtime="20201029 12:43:13.497"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.505" endtime="20201029 12:43:13.513"></status>
</kw>
<msg timestamp="20201029 12:43:13.513" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.504" endtime="20201029 12:43:13.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.516" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.514" endtime="20201029 12:43:13.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.517" endtime="20201029 12:43:13.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.501" endtime="20201029 12:43:13.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.499" endtime="20201029 12:43:13.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.528" endtime="20201029 12:43:13.815"></status>
</kw>
<msg timestamp="20201029 12:43:13.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017894958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.527" endtime="20201029 12:43:13.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017894958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.820" endtime="20201029 12:43:13.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.828" endtime="20201029 12:43:13.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.523" endtime="20201029 12:43:13.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.521" endtime="20201029 12:43:13.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:13.835" level="INFO">${PHILIP_RES} = [{'diff': 3.398599999999974e-05}, {'diff': 3.184800000000099e-05}, {'diff': 3.175000000000053e-05}, {'diff': 3.17640000000001e-05}, {'diff': 3.173600000000096e-05}, {'diff': 3.174999999999706e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:13.831" endtime="20201029 12:43:13.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.839" level="INFO">${RESULT} = {'diff': [3.398599999999974e-05, 3.184800000000099e-05, 3.175000000000053e-05, 3.17640000000001e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.175000000000053e-05, 3.172199999999792e-05, 3.17220...</msg>
<status status="PASS" starttime="20201029 12:43:13.836" endtime="20201029 12:43:13.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.843" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:13.842" endtime="20201029 12:43:13.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.846" level="INFO">VALUE: [3.398599999999974e-05, 3.184800000000099e-05, 3.175000000000053e-05, 3.17640000000001e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.175000000000053e-05, 3.172199999999792e-05, 3.172200000000139e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.166700000000258e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.173600000000096e-05, 3.172300000000086e-05, 3.175000000000053e-05, 3.172200000000139e-05, 3.180599999999881e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.169499999999825e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.173600000000096e-05, 3.1763000000000624e-05, 3.170800000000182e-05, 3.172200000000139e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.17640000000001e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.17640000000001e-05, 3.1763000000000624e-05, 3.177799999999967e-05, 3.173600000000096e-05, 3.167999999999921e-05, 3.177799999999967e-05, 3.175000000000053e-05, 3.173600000000096e-05]</msg>
<status status="PASS" starttime="20201029 12:43:13.845" endtime="20201029 12:43:13.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.840" endtime="20201029 12:43:13.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.498" endtime="20201029 12:43:13.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.474" endtime="20201029 12:43:13.847"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.850" endtime="20201029 12:43:13.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.848" endtime="20201029 12:43:13.870"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.882" endtime="20201029 12:43:13.892"></status>
</kw>
<msg timestamp="20201029 12:43:13.892" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.878" endtime="20201029 12:43:13.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.896" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.894" endtime="20201029 12:43:13.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.898" endtime="20201029 12:43:13.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.875" endtime="20201029 12:43:13.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.872" endtime="20201029 12:43:13.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.911" endtime="20201029 12:43:14.210"></status>
</kw>
<msg timestamp="20201029 12:43:14.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.909" endtime="20201029 12:43:14.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.219" endtime="20201029 12:43:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.238" endtime="20201029 12:43:14.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.906" endtime="20201029 12:43:14.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.903" endtime="20201029 12:43:14.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.250" level="INFO">${PHILIP_RES} = [{'diff': 5.9069999999997874e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.6402000000000535e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.640300000000001e-05}, {'diff': 5.637500000000087e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:14.245" endtime="20201029 12:43:14.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.255" level="INFO">${RESULT} = {'diff': [5.9069999999997874e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.64...</msg>
<status status="PASS" starttime="20201029 12:43:14.251" endtime="20201029 12:43:14.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.259" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.258" endtime="20201029 12:43:14.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.262" level="INFO">VALUE: [5.9069999999997874e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.645900000000176e-05, 5.637500000000087e-05, 5.643099999999915e-05, 5.637500000000087e-05, 5.63610000000013e-05, 5.640300000000001e-05, 5.638900000000044e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.6402000000000535e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.640300000000001e-05, 5.636099999999783e-05, 5.641699999999958e-05, 5.637500000000087e-05, 5.638900000000044e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.634700000000173e-05, 5.638900000000044e-05, 5.6402000000000535e-05, 5.6402000000000535e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.633299999999869e-05, 5.637500000000087e-05, 5.63619999999973e-05, 5.634700000000173e-05, 5.641700000000305e-05, 5.640300000000001e-05, 5.63749999999974e-05, 5.640300000000001e-05, 5.641699999999958e-05, 5.63610000000013e-05, 5.645900000000176e-05, 5.640300000000001e-05, 5.6416000000000105e-05, 5.640300000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:43:14.260" endtime="20201029 12:43:14.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.256" endtime="20201029 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.870" endtime="20201029 12:43:14.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.848" endtime="20201029 12:43:14.263"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.265" endtime="20201029 12:43:14.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.264" endtime="20201029 12:43:14.285"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.293" endtime="20201029 12:43:14.304"></status>
</kw>
<msg timestamp="20201029 12:43:14.305" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.292" endtime="20201029 12:43:14.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.307" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.306" endtime="20201029 12:43:14.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.309" endtime="20201029 12:43:14.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.289" endtime="20201029 12:43:14.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.287" endtime="20201029 12:43:14.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.317" endtime="20201029 12:43:14.604"></status>
</kw>
<msg timestamp="20201029 12:43:14.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017454375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.316" endtime="20201029 12:43:14.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017368042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017454375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.609" endtime="20201029 12:43:14.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.617" endtime="20201029 12:43:14.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.313" endtime="20201029 12:43:14.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.312" endtime="20201029 12:43:14.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.624" level="INFO">${PHILIP_RES} = [{'diff': 8.633300000000094e-05}, {'diff': 8.36110000000008e-05}, {'diff': 8.366699999999908e-05}, {'diff': 8.368099999999865e-05}, {'diff': 8.367999999999917e-05}, {'diff': 8.365300000000297e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:14.620" endtime="20201029 12:43:14.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.629" level="INFO">${RESULT} = {'diff': [8.633300000000094e-05, 8.36110000000008e-05, 8.366699999999908e-05, 8.368099999999865e-05, 8.367999999999917e-05, 8.365300000000297e-05, 8.359699999999776e-05, 8.36529999999995e-05, 8.362499...</msg>
<status status="PASS" starttime="20201029 12:43:14.624" endtime="20201029 12:43:14.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.633" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.632" endtime="20201029 12:43:14.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.635" level="INFO">VALUE: [8.633300000000094e-05, 8.36110000000008e-05, 8.366699999999908e-05, 8.368099999999865e-05, 8.367999999999917e-05, 8.365300000000297e-05, 8.359699999999776e-05, 8.36529999999995e-05, 8.36249999999969e-05, 8.367999999999917e-05, 8.368100000000211e-05, 8.36529999999995e-05, 8.359700000000123e-05, 8.363899999999994e-05, 8.36529999999995e-05, 8.368000000000264e-05, 8.363899999999994e-05, 8.370799999999831e-05, 8.36529999999995e-05, 8.368100000000211e-05, 8.365200000000003e-05, 8.35980000000007e-05, 8.363899999999994e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.368099999999865e-05, 8.36529999999995e-05, 8.365200000000003e-05, 8.366699999999908e-05, 8.366700000000254e-05, 8.36659999999996e-05, 8.370799999999831e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.366699999999908e-05, 8.36659999999996e-05, 8.363899999999994e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.36529999999995e-05, 8.36529999999995e-05, 8.359700000000123e-05, 8.365300000000297e-05, 8.36529999999995e-05, 8.36659999999996e-05, 8.366699999999908e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.368099999999865e-05]</msg>
<status status="PASS" starttime="20201029 12:43:14.634" endtime="20201029 12:43:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.630" endtime="20201029 12:43:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.286" endtime="20201029 12:43:14.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.264" endtime="20201029 12:43:14.637"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.639" endtime="20201029 12:43:14.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.638" endtime="20201029 12:43:14.659"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.667" endtime="20201029 12:43:14.679"></status>
</kw>
<msg timestamp="20201029 12:43:14.680" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.666" endtime="20201029 12:43:14.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.683" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.681" endtime="20201029 12:43:14.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.684" endtime="20201029 12:43:14.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.663" endtime="20201029 12:43:14.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.661" endtime="20201029 12:43:14.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.693" endtime="20201029 12:43:14.979"></status>
</kw>
<msg timestamp="20201029 12:43:14.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017490889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.691" endtime="20201029 12:43:14.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017374806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017490889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.983" endtime="20201029 12:43:14.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.991" endtime="20201029 12:43:14.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.689" endtime="20201029 12:43:14.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.687" endtime="20201029 12:43:14.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.997" level="INFO">${PHILIP_RES} = [{'diff': 0.00011608299999999946}, {'diff': 0.00011340299999999803}, {'diff': 0.00011341700000000107}, {'diff': 0.00011340299999999803}, {'diff': 0.00011341700000000107}, {'diff': 0.000113416000000001...</msg>
<status status="PASS" starttime="20201029 12:43:14.994" endtime="20201029 12:43:14.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.002" level="INFO">${RESULT} = {'diff': [0.00011608299999999946, 0.00011340299999999803, 0.00011341700000000107, 0.00011340299999999803, 0.00011341700000000107, 0.0001134160000000016, 0.00011334699999999975, 0.00011340200000000203,...</msg>
<status status="PASS" starttime="20201029 12:43:14.998" endtime="20201029 12:43:15.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.006" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.005" endtime="20201029 12:43:15.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.008" level="INFO">VALUE: [0.00011608299999999946, 0.00011340299999999803, 0.00011341700000000107, 0.00011340299999999803, 0.00011341700000000107, 0.0001134160000000016, 0.00011334699999999975, 0.00011340200000000203, 0.00011344400000000074, 0.00011341599999999813, 0.00011349999999999902, 0.00011338900000000193, 0.0001134169999999976, 0.00011341700000000107, 0.00011345899999999978, 0.00011343100000000064, 0.00011341700000000107, 0.00011340199999999856, 0.00011341599999999813, 0.00011340299999999803, 0.00011343100000000064, 0.00011337500000000236, 0.0001134030000000015, 0.0001134030000000015, 0.00011343000000000117, 0.00011340199999999856, 0.00011341700000000107, 0.00011341700000000107, 0.0001134169999999976, 0.0001134169999999976, 0.00011340299999999803, 0.00011344400000000074, 0.0001134299999999977, 0.00011341599999999813, 0.00011336099999999932, 0.0001134169999999976, 0.00011340299999999803, 0.0001134030000000015, 0.00011341700000000107, 0.00011338899999999846, 0.00011343100000000064, 0.0001134030000000015, 0.00011343100000000064, 0.00011343100000000064, 0.00011341700000000107, 0.00011344400000000074, 0.00011343000000000117, 0.00011341599999999813, 0.00011338899999999846, 0.0001134299999999977]</msg>
<status status="PASS" starttime="20201029 12:43:15.007" endtime="20201029 12:43:15.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.002" endtime="20201029 12:43:15.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.660" endtime="20201029 12:43:15.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.637" endtime="20201029 12:43:15.010"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.012" endtime="20201029 12:43:15.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.011" endtime="20201029 12:43:15.032"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.040" endtime="20201029 12:43:15.055"></status>
</kw>
<msg timestamp="20201029 12:43:15.056" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.038" endtime="20201029 12:43:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.058" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.057" endtime="20201029 12:43:15.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.059" endtime="20201029 12:43:15.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.036" endtime="20201029 12:43:15.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.034" endtime="20201029 12:43:15.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.068" endtime="20201029 12:43:15.362"></status>
</kw>
<msg timestamp="20201029 12:43:15.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018252181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.067" endtime="20201029 12:43:15.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018252181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018400528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.366" endtime="20201029 12:43:15.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.374" endtime="20201029 12:43:15.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.064" endtime="20201029 12:43:15.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.062" endtime="20201029 12:43:15.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.380" level="INFO">${PHILIP_RES} = [{'diff': 0.00014834700000000006}, {'diff': 0.00014570800000000134}, {'diff': 0.00014565299999999906}, {'diff': 0.00014562499999999992}, {'diff': 0.00014565299999999906}, {'diff': 0.000145680999999998...</msg>
<status status="PASS" starttime="20201029 12:43:15.377" endtime="20201029 12:43:15.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.384" level="INFO">${RESULT} = {'diff': [0.00014834700000000006, 0.00014570800000000134, 0.00014565299999999906, 0.00014562499999999992, 0.00014565299999999906, 0.0001456809999999982, 0.0001456670000000021, 0.00014565299999999906, ...</msg>
<status status="PASS" starttime="20201029 12:43:15.381" endtime="20201029 12:43:15.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.389" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.388" endtime="20201029 12:43:15.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.391" level="INFO">VALUE: [0.00014834700000000006, 0.00014570800000000134, 0.00014565299999999906, 0.00014562499999999992, 0.00014565299999999906, 0.0001456809999999982, 0.0001456670000000021, 0.00014565299999999906, 0.00014566600000000263, 0.00014565299999999906, 0.00014566600000000263, 0.00014575000000000005, 0.00014567999999999873, 0.0001456670000000021, 0.00014567999999999873, 0.0001456670000000021, 0.00014567999999999873, 0.0001456670000000021, 0.00014566699999999863, 0.00014566599999999916, 0.00014558400000000069, 0.0001456939999999983, 0.00014568100000000167, 0.00014566599999999916, 0.00014566699999999863, 0.0001457220000000009, 0.00014567999999999873, 0.00014565299999999906, 0.0001456670000000021, 0.0001456809999999982, 0.00014565299999999906, 0.0001456809999999982, 0.0001456939999999983, 0.00014568100000000167, 0.00014566599999999916, 0.0001456809999999982, 0.0001456800000000022, 0.0001456670000000021, 0.00014566599999999916, 0.0001456670000000021, 0.00014567999999999873, 0.00014559700000000078, 0.0001456800000000022, 0.00014565299999999906, 0.0001456389999999995, 0.0001456800000000022, 0.00014566699999999863, 0.00014566599999999916, 0.00014570800000000134, 0.00014566599999999916]</msg>
<status status="PASS" starttime="20201029 12:43:15.390" endtime="20201029 12:43:15.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.385" endtime="20201029 12:43:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.032" endtime="20201029 12:43:15.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.010" endtime="20201029 12:43:15.393"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.396" endtime="20201029 12:43:15.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.394" endtime="20201029 12:43:15.416"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.424" endtime="20201029 12:43:15.440"></status>
</kw>
<msg timestamp="20201029 12:43:15.441" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.422" endtime="20201029 12:43:15.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.444" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.442" endtime="20201029 12:43:15.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.445" endtime="20201029 12:43:15.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.420" endtime="20201029 12:43:15.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.418" endtime="20201029 12:43:15.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.454" endtime="20201029 12:43:15.739"></status>
</kw>
<msg timestamp="20201029 12:43:15.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017844236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.452" endtime="20201029 12:43:15.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017844236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.743" endtime="20201029 12:43:15.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.751" endtime="20201029 12:43:15.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.450" endtime="20201029 12:43:15.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.448" endtime="20201029 12:43:15.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.758" level="INFO">${PHILIP_RES} = [{'diff': 0.0001831390000000023}, {'diff': 0.0001804169999999987}, {'diff': 0.00018038899999999955}, {'diff': 0.00018038800000000008}, {'diff': 0.00018047200000000096}, {'diff': 0.00018043099999999826...</msg>
<status status="PASS" starttime="20201029 12:43:15.755" endtime="20201029 12:43:15.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.762" level="INFO">${RESULT} = {'diff': [0.0001831390000000023, 0.0001804169999999987, 0.00018038899999999955, 0.00018038800000000008, 0.00018047200000000096, 0.00018043099999999826, 0.0001804169999999987, 0.0001803610000000004, 0....</msg>
<status status="PASS" starttime="20201029 12:43:15.759" endtime="20201029 12:43:15.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.767" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.766" endtime="20201029 12:43:15.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.769" level="INFO">VALUE: [0.0001831390000000023, 0.0001804169999999987, 0.00018038899999999955, 0.00018038800000000008, 0.00018047200000000096, 0.00018043099999999826, 0.0001804169999999987, 0.0001803610000000004, 0.00018041599999999922, 0.00018034800000000031, 0.00018038899999999955, 0.00018042999999999879, 0.00018041700000000216, 0.00018040299999999912, 0.0001804169999999987, 0.00018038899999999955, 0.00018043099999999826, 0.00018040299999999912, 0.00018041600000000269, 0.00018038899999999955, 0.0001804169999999987, 0.00018045799999999793, 0.00018034700000000084, 0.00018041700000000216, 0.00018048600000000053, 0.00018040299999999912, 0.00018040299999999912, 0.00018043099999999826, 0.00018038800000000008, 0.0001804030000000026, 0.00018040299999999912, 0.00018038899999999955, 0.00018041700000000216, 0.0001804169999999987, 0.00018043100000000173, 0.00018041599999999922, 0.0001804169999999987, 0.00018041700000000216, 0.00018043099999999826, 0.00018041600000000269, 0.00018041599999999922, 0.0001804169999999987, 0.00018043100000000173, 0.00018042999999999879, 0.0001803879999999966, 0.00018040299999999912, 0.00018038899999999955, 0.00018037499999999998, 0.0001804169999999987, 0.0001804450000000013]</msg>
<status status="PASS" starttime="20201029 12:43:15.768" endtime="20201029 12:43:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.763" endtime="20201029 12:43:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.416" endtime="20201029 12:43:15.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.394" endtime="20201029 12:43:15.771"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.773" endtime="20201029 12:43:15.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.771" endtime="20201029 12:43:15.793"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.801" endtime="20201029 12:43:15.820"></status>
</kw>
<msg timestamp="20201029 12:43:15.820" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.800" endtime="20201029 12:43:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.822" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.821" endtime="20201029 12:43:15.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.824" endtime="20201029 12:43:15.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.797" endtime="20201029 12:43:15.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.795" endtime="20201029 12:43:15.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.832" endtime="20201029 12:43:16.119"></status>
</kw>
<msg timestamp="20201029 12:43:16.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017841458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018061806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.831" endtime="20201029 12:43:16.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017841458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018061806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.123" endtime="20201029 12:43:16.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.131" endtime="20201029 12:43:16.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.828" endtime="20201029 12:43:16.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.827" endtime="20201029 12:43:16.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.139" level="INFO">${PHILIP_RES} = [{'diff': 0.00022034799999999868}, {'diff': 0.00021763899999999864}, {'diff': 0.00021757000000000026}, {'diff': 0.0002176529999999982}, {'diff': 0.00021765300000000168}, {'diff': 0.0002176389999999986...</msg>
<status status="PASS" starttime="20201029 12:43:16.135" endtime="20201029 12:43:16.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.143" level="INFO">${RESULT} = {'diff': [0.00022034799999999868, 0.00021763899999999864, 0.00021757000000000026, 0.0002176529999999982, 0.00021765300000000168, 0.00021763899999999864, 0.00021765300000000168, 0.0002176390000000021, ...</msg>
<status status="PASS" starttime="20201029 12:43:16.140" endtime="20201029 12:43:16.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.147" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.146" endtime="20201029 12:43:16.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.150" level="INFO">VALUE: [0.00022034799999999868, 0.00021763899999999864, 0.00021757000000000026, 0.0002176529999999982, 0.00021765300000000168, 0.00021763899999999864, 0.00021765300000000168, 0.0002176390000000021, 0.00021766700000000125, 0.00021763799999999917, 0.00021766600000000177, 0.00021769399999999745, 0.00021768000000000134, 0.00021765199999999874, 0.00021768000000000134, 0.00021765199999999874, 0.00021765199999999874, 0.00021765300000000168, 0.0002176529999999982, 0.00021768000000000134, 0.00021767999999999788, 0.00021762499999999907, 0.0002176390000000021, 0.00021768099999999735, 0.00021763899999999864, 0.0002176390000000021, 0.00021763799999999917, 0.00021765300000000168, 0.00021765300000000168, 0.00021767999999999788, 0.00021766600000000177, 0.00021767999999999788, 0.00021765300000000168, 0.00021768100000000082, 0.00021759699999999993, 0.0002176390000000021, 0.00021768099999999735, 0.00021763899999999864, 0.00021763899999999864, 0.00021761199999999897, 0.00021765300000000168, 0.0002176659999999983, 0.00021763899999999864, 0.00021762500000000254, 0.0002175560000000007, 0.00021763899999999864, 0.0002176390000000021, 0.00021762500000000254, 0.0002175979999999994, 0.00021766700000000125]</msg>
<status status="PASS" starttime="20201029 12:43:16.148" endtime="20201029 12:43:16.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.144" endtime="20201029 12:43:16.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.793" endtime="20201029 12:43:16.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.771" endtime="20201029 12:43:16.151"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.153" endtime="20201029 12:43:16.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.152" endtime="20201029 12:43:16.173"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.182" endtime="20201029 12:43:16.203"></status>
</kw>
<msg timestamp="20201029 12:43:16.203" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.180" endtime="20201029 12:43:16.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.206" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.204" endtime="20201029 12:43:16.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.207" endtime="20201029 12:43:16.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.178" endtime="20201029 12:43:16.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.175" endtime="20201029 12:43:16.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.219" endtime="20201029 12:43:16.526"></status>
</kw>
<msg timestamp="20201029 12:43:16.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.217" endtime="20201029 12:43:16.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018398125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.530" endtime="20201029 12:43:16.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.538" endtime="20201029 12:43:16.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.215" endtime="20201029 12:43:16.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.213" endtime="20201029 12:43:16.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.545" level="INFO">${PHILIP_RES} = [{'diff': 0.0002600280000000024}, {'diff': 0.0002573470000000015}, {'diff': 0.00025741699999999937}, {'diff': 0.00025737500000000066}, {'diff': 0.0002573059999999988}, {'diff': 0.00025737500000000066}...</msg>
<status status="PASS" starttime="20201029 12:43:16.541" endtime="20201029 12:43:16.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.549" level="INFO">${RESULT} = {'diff': [0.0002600280000000024, 0.0002573470000000015, 0.00025741699999999937, 0.00025737500000000066, 0.0002573059999999988, 0.00025737500000000066, 0.0002573190000000024, 0.0002572779999999997, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:16.546" endtime="20201029 12:43:16.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.553" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.552" endtime="20201029 12:43:16.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.555" level="INFO">VALUE: [0.0002600280000000024, 0.0002573470000000015, 0.00025741699999999937, 0.00025737500000000066, 0.0002573059999999988, 0.00025737500000000066, 0.0002573190000000024, 0.0002572779999999997, 0.0002573059999999988, 0.00025729099999999977, 0.0002573340000000014, 0.0002572779999999997, 0.0002573329999999985, 0.0002573059999999988, 0.00025730499999999934, 0.0002573060000000023, 0.00025733300000000195, 0.0002573329999999985, 0.0002573199999999984, 0.0002573059999999988, 0.00025733300000000195, 0.000257348000000001, 0.0002573609999999976, 0.0002573189999999989, 0.0002573340000000014, 0.0002573199999999984, 0.0002573329999999985, 0.0002572779999999997, 0.00025733300000000195, 0.00025726300000000063, 0.0002573199999999984, 0.0002573340000000014, 0.0002574159999999999, 0.0002573610000000011, 0.0002573470000000015, 0.00025734699999999805, 0.0002573610000000011, 0.0002573329999999985, 0.0002573340000000014, 0.0002573340000000014, 0.0002573470000000015, 0.0002573189999999989, 0.00025734699999999805, 0.00025734699999999805, 0.00025736100000000456, 0.00025729199999999924, 0.00025733399999999795, 0.0002573189999999989, 0.0002573329999999985, 0.00025736100000000456]</msg>
<status status="PASS" starttime="20201029 12:43:16.554" endtime="20201029 12:43:16.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.550" endtime="20201029 12:43:16.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.174" endtime="20201029 12:43:16.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.151" endtime="20201029 12:43:16.558"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.560" endtime="20201029 12:43:16.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.559" endtime="20201029 12:43:16.580"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.589" endtime="20201029 12:43:16.612"></status>
</kw>
<msg timestamp="20201029 12:43:16.612" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.587" endtime="20201029 12:43:16.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.615" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.613" endtime="20201029 12:43:16.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.616" endtime="20201029 12:43:16.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.584" endtime="20201029 12:43:16.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.583" endtime="20201029 12:43:16.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.625" endtime="20201029 12:43:16.911"></status>
</kw>
<msg timestamp="20201029 12:43:16.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017983389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.623" endtime="20201029 12:43:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017983389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.916" endtime="20201029 12:43:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.924" endtime="20201029 12:43:16.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.621" endtime="20201029 12:43:16.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.619" endtime="20201029 12:43:16.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.930" level="INFO">${PHILIP_RES} = [{'diff': 0.0003022080000000017}, {'diff': 0.0002995280000000003}, {'diff': 0.00029951399999999725}, {'diff': 0.00029954199999999986}, {'diff': 0.00029951399999999725}, {'diff': 0.00029954199999999986...</msg>
<status status="PASS" starttime="20201029 12:43:16.927" endtime="20201029 12:43:16.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.935" level="INFO">${RESULT} = {'diff': [0.0003022080000000017, 0.0002995280000000003, 0.00029951399999999725, 0.00029954199999999986, 0.00029951399999999725, 0.00029954199999999986, 0.00029955599999999943, 0.0002995279999999968, 0...</msg>
<status status="PASS" starttime="20201029 12:43:16.931" endtime="20201029 12:43:16.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.939" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.938" endtime="20201029 12:43:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.942" level="INFO">VALUE: [0.0003022080000000017, 0.0002995280000000003, 0.00029951399999999725, 0.00029954199999999986, 0.00029951399999999725, 0.00029954199999999986, 0.00029955599999999943, 0.0002995279999999968, 0.0002995280000000003, 0.00029955599999999943, 0.000299457999999999, 0.0002994860000000016, 0.00029950000000000115, 0.0002994309999999993, 0.000299472000000002, 0.0002994860000000016, 0.0002994860000000016, 0.0002995280000000003, 0.0002994999999999977, 0.00029955599999999943, 0.0002995280000000003, 0.0002995140000000007, 0.0002995140000000007, 0.00029945800000000244, 0.0002995280000000003, 0.0002994859999999981, 0.0002994860000000016, 0.0002994999999999977, 0.0002995280000000003, 0.00029952699999999735, 0.0002995140000000007, 0.0002995280000000003, 0.0002995140000000007, 0.00029951399999999725, 0.0002995280000000003, 0.00029951399999999725, 0.0002995280000000003, 0.00029951399999999725, 0.0002994999999999977, 0.0002995140000000007, 0.0002995270000000008, 0.0002995140000000007, 0.0002994999999999942, 0.00029955599999999943, 0.0002994860000000016, 0.0002994860000000016, 0.00029948599999999465, 0.00029954199999999986, 0.0002995140000000007, 0.0002995280000000003]</msg>
<status status="PASS" starttime="20201029 12:43:16.941" endtime="20201029 12:43:16.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.936" endtime="20201029 12:43:16.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.581" endtime="20201029 12:43:16.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.558" endtime="20201029 12:43:16.943"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.946" endtime="20201029 12:43:16.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.945" endtime="20201029 12:43:16.966"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.974" endtime="20201029 12:43:17.000"></status>
</kw>
<msg timestamp="20201029 12:43:17.001" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.973" endtime="20201029 12:43:17.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.003" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.002" endtime="20201029 12:43:17.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.004" endtime="20201029 12:43:17.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.970" endtime="20201029 12:43:17.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.968" endtime="20201029 12:43:17.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.013" endtime="20201029 12:43:17.299"></status>
</kw>
<msg timestamp="20201029 12:43:17.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017765792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.012" endtime="20201029 12:43:17.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017765792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.303" endtime="20201029 12:43:17.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.311" endtime="20201029 12:43:17.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.009" endtime="20201029 12:43:17.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.007" endtime="20201029 12:43:17.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.319" level="INFO">${PHILIP_RES} = [{'diff': 0.00034691600000000267}, {'diff': 0.0003442079999999986}, {'diff': 0.00034423599999999777}, {'diff': 0.00034423600000000124}, {'diff': 0.00034420900000000157}, {'diff': 0.0003441939999999990...</msg>
<status status="PASS" starttime="20201029 12:43:17.316" endtime="20201029 12:43:17.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.323" level="INFO">${RESULT} = {'diff': [0.00034691600000000267, 0.0003442079999999986, 0.00034423599999999777, 0.00034423600000000124, 0.00034420900000000157, 0.00034419399999999906, 0.00034422300000000114, 0.0003442219999999982, ...</msg>
<status status="PASS" starttime="20201029 12:43:17.320" endtime="20201029 12:43:17.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.327" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.326" endtime="20201029 12:43:17.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.330" level="INFO">VALUE: [0.00034691600000000267, 0.0003442079999999986, 0.00034423599999999777, 0.00034423600000000124, 0.00034420900000000157, 0.00034419399999999906, 0.00034422300000000114, 0.0003442219999999982, 0.0003442919999999995, 0.0003442500000000008, 0.00034424999999999734, 0.0003442640000000004, 0.00034422200000000167, 0.0003442219999999982, 0.00034427799999999995, 0.00034423600000000124, 0.0003442370000000007, 0.0003442500000000008, 0.0003442919999999995, 0.00034420900000000157, 0.0003442500000000008, 0.0003441940000000025, 0.00034422200000000167, 0.00034426299999999743, 0.0003442219999999982, 0.0003442219999999982, 0.0003442079999999986, 0.00034422200000000167, 0.0003442500000000008, 0.0003442630000000009, 0.0003442219999999982, 0.0003442640000000004, 0.0003441669999999994, 0.00034424999999999734, 0.00034424999999999734, 0.0003442219999999982, 0.00034422200000000513, 0.00034420800000000557, 0.00034420800000000557, 0.00034422200000000513, 0.0003442360000000047, 0.0003442360000000047, 0.0003442219999999982, 0.0003442219999999982, 0.00034423699999999724, 0.0003442079999999986, 0.0003442089999999981, 0.0003442079999999986, 0.0003442079999999986, 0.00034424999999999734]</msg>
<status status="PASS" starttime="20201029 12:43:17.328" endtime="20201029 12:43:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.324" endtime="20201029 12:43:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.967" endtime="20201029 12:43:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.944" endtime="20201029 12:43:17.332"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.334" endtime="20201029 12:43:17.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.333" endtime="20201029 12:43:17.354"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.362" endtime="20201029 12:43:17.390"></status>
</kw>
<msg timestamp="20201029 12:43:17.391" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.361" endtime="20201029 12:43:17.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.393" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.392" endtime="20201029 12:43:17.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.395" endtime="20201029 12:43:17.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.358" endtime="20201029 12:43:17.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.356" endtime="20201029 12:43:17.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.405" endtime="20201029 12:43:17.690"></status>
</kw>
<msg timestamp="20201029 12:43:17.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.403" endtime="20201029 12:43:17.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017685347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.694" endtime="20201029 12:43:17.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.703" endtime="20201029 12:43:17.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.400" endtime="20201029 12:43:17.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.399" endtime="20201029 12:43:17.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.709" level="INFO">${PHILIP_RES} = [{'diff': 0.0003940420000000007}, {'diff': 0.00039137499999999936}, {'diff': 0.00039140199999999903}, {'diff': 0.0003913609999999998}, {'diff': 0.0003913609999999998}, {'diff': 0.00039137499999999936}...</msg>
<status status="PASS" starttime="20201029 12:43:17.706" endtime="20201029 12:43:17.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.713" level="INFO">${RESULT} = {'diff': [0.0003940420000000007, 0.00039137499999999936, 0.00039140199999999903, 0.0003913609999999998, 0.0003913609999999998, 0.00039137499999999936, 0.0003913890000000024, 0.0003914450000000007, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:17.710" endtime="20201029 12:43:17.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.718" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.716" endtime="20201029 12:43:17.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.720" level="INFO">VALUE: [0.0003940420000000007, 0.00039137499999999936, 0.00039140199999999903, 0.0003913609999999998, 0.0003913609999999998, 0.00039137499999999936, 0.0003913890000000024, 0.0003914450000000007, 0.00039138799999999946, 0.0003914029999999985, 0.0003914029999999985, 0.00039138899999999893, 0.0003914029999999985, 0.0003914029999999985, 0.0003913609999999998, 0.00039132000000000056, 0.00039137499999999936, 0.0003914440000000012, 0.00039141700000000154, 0.00039138899999999893, 0.00039142999999999817, 0.0003913050000000015, 0.0003913890000000024, 0.00039141700000000154, 0.00039137499999999936, 0.00039138899999999893, 0.00039140199999999903, 0.00039137499999999936, 0.00039141699999999807, 0.00039141699999999807, 0.0003913470000000002, 0.00039141699999999807, 0.0003914029999999985, 0.00039145800000000425, 0.0003914029999999985, 0.0003914159999999986, 0.00039143099999999764, 0.00039141600000000554, 0.00039143099999999764, 0.000391417000000005, 0.0003914449999999972, 0.0003913470000000002, 0.0003914029999999985, 0.0003914440000000047, 0.00039141699999999807, 0.0003914589999999968, 0.00039141699999999807, 0.0003914300000000051, 0.00039141699999999807, 0.00039144399999999774]</msg>
<status status="PASS" starttime="20201029 12:43:17.719" endtime="20201029 12:43:17.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.714" endtime="20201029 12:43:17.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.355" endtime="20201029 12:43:17.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.332" endtime="20201029 12:43:17.723"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.725" endtime="20201029 12:43:17.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.724" endtime="20201029 12:43:17.745"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.753" endtime="20201029 12:43:17.784"></status>
</kw>
<msg timestamp="20201029 12:43:17.785" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.752" endtime="20201029 12:43:17.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.787" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.786" endtime="20201029 12:43:17.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.788" endtime="20201029 12:43:17.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.749" endtime="20201029 12:43:17.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.747" endtime="20201029 12:43:17.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.798" endtime="20201029 12:43:18.084"></status>
</kw>
<msg timestamp="20201029 12:43:18.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017885361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.796" endtime="20201029 12:43:18.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017885361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018329153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.088" endtime="20201029 12:43:18.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.096" endtime="20201029 12:43:18.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.793" endtime="20201029 12:43:18.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.791" endtime="20201029 12:43:18.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.102" level="INFO">${PHILIP_RES} = [{'diff': 0.0004437920000000019}, {'diff': 0.0004411390000000001}, {'diff': 0.00044109699999999794}, {'diff': 0.00044112500000000054}, {'diff': 0.000441111000000001}, {'diff': 0.00044113899999999664},...</msg>
<status status="PASS" starttime="20201029 12:43:18.099" endtime="20201029 12:43:18.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.107" level="INFO">${RESULT} = {'diff': [0.0004437920000000019, 0.0004411390000000001, 0.00044109699999999794, 0.00044112500000000054, 0.000441111000000001, 0.00044113899999999664, 0.0004410980000000009, 0.00044116699999999925, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:18.103" endtime="20201029 12:43:18.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.111" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.110" endtime="20201029 12:43:18.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.114" level="INFO">VALUE: [0.0004437920000000019, 0.0004411390000000001, 0.00044109699999999794, 0.00044112500000000054, 0.000441111000000001, 0.00044113899999999664, 0.0004410980000000009, 0.00044116699999999925, 0.0004411659999999998, 0.00044112500000000054, 0.00044112500000000054, 0.00044112500000000054, 0.0004411809999999988, 0.00044112500000000054, 0.00044116699999999925, 0.000441111000000001, 0.0004410970000000014, 0.0004410980000000009, 0.000441111000000001, 0.0004411109999999975, 0.00044112500000000054, 0.0004411659999999998, 0.00044112500000000054, 0.0004411659999999998, 0.0004411809999999988, 0.00044112500000000054, 0.000441111000000001, 0.00044109699999999447, 0.00044112500000000054, 0.00044116699999999925, 0.0004411390000000001, 0.0004411390000000001, 0.000441111000000001, 0.0004411390000000001, 0.00044112500000000054, 0.00044106900000000226, 0.0004411800000000063, 0.0004411390000000001, 0.000441111000000001, 0.0004410840000000013, 0.0004410840000000013, 0.0004410970000000014, 0.000441111000000001, 0.0004411520000000002, 0.0004411390000000001, 0.00044109699999999447, 0.000441111000000001, 0.00044105600000000217, 0.0004410840000000013, 0.0004410970000000014]</msg>
<status status="PASS" starttime="20201029 12:43:18.113" endtime="20201029 12:43:18.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.108" endtime="20201029 12:43:18.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.746" endtime="20201029 12:43:18.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.723" endtime="20201029 12:43:18.116"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.118" endtime="20201029 12:43:18.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.117" endtime="20201029 12:43:18.138"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.146" endtime="20201029 12:43:18.180"></status>
</kw>
<msg timestamp="20201029 12:43:18.180" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.144" endtime="20201029 12:43:18.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.183" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.181" endtime="20201029 12:43:18.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.184" endtime="20201029 12:43:18.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.142" endtime="20201029 12:43:18.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.140" endtime="20201029 12:43:18.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.193" endtime="20201029 12:43:18.477"></status>
</kw>
<msg timestamp="20201029 12:43:18.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.191" endtime="20201029 12:43:18.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017503417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.481" endtime="20201029 12:43:18.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.489" endtime="20201029 12:43:18.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.189" endtime="20201029 12:43:18.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.187" endtime="20201029 12:43:18.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.497" level="INFO">${PHILIP_RES} = [{'diff': 0.0004959299999999986}, {'diff': 0.0004932909999999999}, {'diff': 0.0004932500000000006}, {'diff': 0.0004932770000000003}, {'diff': 0.0004932360000000011}, {'diff': 0.0004932779999999998}, {...</msg>
<status status="PASS" starttime="20201029 12:43:18.494" endtime="20201029 12:43:18.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.502" level="INFO">${RESULT} = {'diff': [0.0004959299999999986, 0.0004932909999999999, 0.0004932500000000006, 0.0004932770000000003, 0.0004932360000000011, 0.0004932779999999998, 0.0004932640000000002, 0.0004932640000000002, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:43:18.498" endtime="20201029 12:43:18.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.506" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.505" endtime="20201029 12:43:18.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.508" level="INFO">VALUE: [0.0004959299999999986, 0.0004932909999999999, 0.0004932500000000006, 0.0004932770000000003, 0.0004932360000000011, 0.0004932779999999998, 0.0004932640000000002, 0.0004932640000000002, 0.0004932919999999993, 0.0004933049999999994, 0.0004932770000000003, 0.0004932630000000007, 0.0004933049999999994, 0.0004932359999999976, 0.0004932500000000006, 0.0004932359999999976, 0.0004931809999999988, 0.0004932500000000006, 0.000493221999999998, 0.000493221999999998, 0.0004932080000000019, 0.0004932080000000019, 0.000493223000000001, 0.0004932360000000011, 0.0004932500000000006, 0.0004932220000000015, 0.0004931950000000018, 0.0004931800000000028, 0.0004931799999999958, 0.000493223000000001, 0.0004932919999999993, 0.0004933059999999989, 0.0004932630000000007, 0.0004931939999999954, 0.0004933200000000054, 0.0004932219999999946, 0.0004932499999999937, 0.0004932219999999946, 0.0004932359999999941, 0.0004932640000000002, 0.0004932080000000019, 0.0004932360000000011, 0.0004932220000000015, 0.0004931950000000018, 0.0004932220000000015, 0.0004931950000000018, 0.0004932500000000006, 0.0004932360000000011, 0.0004932640000000002, 0.0004932500000000006]</msg>
<status status="PASS" starttime="20201029 12:43:18.507" endtime="20201029 12:43:18.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.503" endtime="20201029 12:43:18.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.139" endtime="20201029 12:43:18.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.116" endtime="20201029 12:43:18.510"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.513" endtime="20201029 12:43:18.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.511" endtime="20201029 12:43:18.533"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.541" endtime="20201029 12:43:18.577"></status>
</kw>
<msg timestamp="20201029 12:43:18.578" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.539" endtime="20201029 12:43:18.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.580" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.579" endtime="20201029 12:43:18.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.581" endtime="20201029 12:43:18.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.536" endtime="20201029 12:43:18.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.535" endtime="20201029 12:43:18.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.596" endtime="20201029 12:43:18.893"></status>
</kw>
<msg timestamp="20201029 12:43:18.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01762475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:18.592" endtime="20201029 12:43:18.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01762475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:18.897" endtime="20201029 12:43:18.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.905" endtime="20201029 12:43:18.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.587" endtime="20201029 12:43:18.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.585" endtime="20201029 12:43:18.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.912" level="INFO">${PHILIP_RES} = [{'diff': 0.0005505829999999969}, {'diff': 0.0005479029999999989}, {'diff': 0.0005479440000000016}, {'diff': 0.0005479169999999985}, {'diff': 0.0005478749999999998}, {'diff': 0.000547930999999998}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:18.909" endtime="20201029 12:43:18.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.915" level="INFO">${RESULT} = {'diff': [0.0005505829999999969, 0.0005479029999999989, 0.0005479440000000016, 0.0005479169999999985, 0.0005478749999999998, 0.000547930999999998, 0.0005478749999999998, 0.0005479579999999977, 0.00054...</msg>
<status status="PASS" starttime="20201029 12:43:18.912" endtime="20201029 12:43:18.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.920" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.919" endtime="20201029 12:43:18.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.922" level="INFO">VALUE: [0.0005505829999999969, 0.0005479029999999989, 0.0005479440000000016, 0.0005479169999999985, 0.0005478749999999998, 0.000547930999999998, 0.0005478749999999998, 0.0005479579999999977, 0.0005478340000000005, 0.0005478889999999993, 0.0005478470000000006, 0.0005479170000000019, 0.0005479720000000007, 0.0005479169999999985, 0.0005479580000000012, 0.0005479170000000019, 0.0005478340000000005, 0.000547915999999999, 0.0005478059999999979, 0.0005478889999999993, 0.0005478889999999993, 0.0005478890000000028, 0.0005478480000000036, 0.0005479310000000015, 0.0005479030000000024, 0.0005478889999999959, 0.0005478890000000028, 0.0005479160000000025, 0.0005479030000000024, 0.0005478889999999959, 0.0005479160000000025, 0.000547833999999997, 0.0005478480000000036, 0.0005478470000000041, 0.0005478750000000032, 0.000547930000000002, 0.0005479310000000015, 0.0005479299999999951, 0.000547901999999996, 0.0005478749999999963, 0.0005478890000000028, 0.0005478890000000028, 0.0005479170000000019, 0.0005478889999999959, 0.0005478749999999963, 0.0005479170000000019, 0.0005478890000000028, 0.0005478890000000028, 0.0005478750000000032, 0.0005477919999999983]</msg>
<status status="PASS" starttime="20201029 12:43:18.921" endtime="20201029 12:43:18.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.916" endtime="20201029 12:43:18.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.533" endtime="20201029 12:43:18.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.511" endtime="20201029 12:43:18.925"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.927" endtime="20201029 12:43:18.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.926" endtime="20201029 12:43:18.947"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.955" endtime="20201029 12:43:18.995"></status>
</kw>
<msg timestamp="20201029 12:43:18.995" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.953" endtime="20201029 12:43:18.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.998" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.996" endtime="20201029 12:43:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.999" endtime="20201029 12:43:19.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.951" endtime="20201029 12:43:19.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.949" endtime="20201029 12:43:19.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.008" endtime="20201029 12:43:19.296"></status>
</kw>
<msg timestamp="20201029 12:43:19.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.006" endtime="20201029 12:43:19.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017508056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.300" endtime="20201029 12:43:19.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.308" endtime="20201029 12:43:19.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.004" endtime="20201029 12:43:19.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.002" endtime="20201029 12:43:19.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.315" level="INFO">${PHILIP_RES} = [{'diff': 0.0006077500000000007}, {'diff': 0.0006050550000000002}, {'diff': 0.0006051109999999985}, {'diff': 0.0006050559999999996}, {'diff': 0.0006050699999999992}, {'diff': 0.0006050839999999988}, {...</msg>
<status status="PASS" starttime="20201029 12:43:19.312" endtime="20201029 12:43:19.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.320" level="INFO">${RESULT} = {'diff': [0.0006077500000000007, 0.0006050550000000002, 0.0006051109999999985, 0.0006050559999999996, 0.0006050699999999992, 0.0006050839999999988, 0.0006050550000000002, 0.0006050829999999993, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:19.316" endtime="20201029 12:43:19.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.324" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.323" endtime="20201029 12:43:19.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.326" level="INFO">VALUE: [0.0006077500000000007, 0.0006050550000000002, 0.0006051109999999985, 0.0006050559999999996, 0.0006050699999999992, 0.0006050839999999988, 0.0006050550000000002, 0.0006050829999999993, 0.0006050410000000006, 0.0006050550000000002, 0.0006049870000000013, 0.0006050839999999988, 0.0006050140000000009, 0.0006050280000000005, 0.0006050280000000005, 0.0006049859999999983, 0.0006050410000000006, 0.0006050140000000009, 0.0006050140000000009, 0.0006050140000000009, 0.0006050420000000035, 0.0006050140000000009, 0.0006050689999999997, 0.000605027000000001, 0.0006050420000000001, 0.0006050420000000001, 0.0006050280000000005, 0.0006050129999999945, 0.0006050000000000014, 0.000605027000000001, 0.0006050559999999996, 0.0006051530000000041, 0.0006050969999999989, 0.0006050559999999996, 0.0006050550000000002, 0.0006050000000000014, 0.0006050689999999997, 0.0006050829999999993, 0.0006051109999999985, 0.000605125000000005, 0.0006050979999999984, 0.0006050699999999992, 0.0006050829999999993, 0.0006050689999999997, 0.0006050970000000058, 0.0006050699999999992, 0.0006050559999999996, 0.0006051109999999985, 0.0006050829999999993, 0.0006050550000000002]</msg>
<status status="PASS" starttime="20201029 12:43:19.325" endtime="20201029 12:43:19.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.321" endtime="20201029 12:43:19.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.948" endtime="20201029 12:43:19.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.925" endtime="20201029 12:43:19.328"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.331" endtime="20201029 12:43:19.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.329" endtime="20201029 12:43:19.351"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.359" endtime="20201029 12:43:19.404"></status>
</kw>
<msg timestamp="20201029 12:43:19.405" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.357" endtime="20201029 12:43:19.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.410" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.408" endtime="20201029 12:43:19.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.413" endtime="20201029 12:43:19.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.355" endtime="20201029 12:43:19.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.353" endtime="20201029 12:43:19.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.432" endtime="20201029 12:43:19.728"></status>
</kw>
<msg timestamp="20201029 12:43:19.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018384639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.429" endtime="20201029 12:43:19.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018384639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.732" endtime="20201029 12:43:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.740" endtime="20201029 12:43:19.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.423" endtime="20201029 12:43:19.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.419" endtime="20201029 12:43:19.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.746" level="INFO">${PHILIP_RES} = [{'diff': 0.0006674030000000004}, {'diff': 0.0006647779999999978}, {'diff': 0.0006646670000000007}, {'diff': 0.0006646940000000004}, {'diff': 0.0006646810000000003}, {'diff': 0.000664708}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:19.743" endtime="20201029 12:43:19.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.750" level="INFO">${RESULT} = {'diff': [0.0006674030000000004, 0.0006647779999999978, 0.0006646670000000007, 0.0006646940000000004, 0.0006646810000000003, 0.000664708, 0.0006646949999999999, 0.0006646529999999977, 0.00066475000000...</msg>
<status status="PASS" starttime="20201029 12:43:19.747" endtime="20201029 12:43:19.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.755" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.754" endtime="20201029 12:43:19.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.757" level="INFO">VALUE: [0.0006674030000000004, 0.0006647779999999978, 0.0006646670000000007, 0.0006646940000000004, 0.0006646810000000003, 0.000664708, 0.0006646949999999999, 0.0006646529999999977, 0.0006647500000000021, 0.0006647090000000029, 0.0006646519999999982, 0.0006646249999999986, 0.0006646249999999986, 0.0006646530000000012, 0.0006647089999999994, 0.0006646389999999981, 0.0006646530000000012, 0.0006646529999999977, 0.000664610999999999, 0.0006646249999999951, 0.0006646940000000004, 0.0006646660000000013, 0.0006646799999999939, 0.0006646110000000024, 0.0006646949999999999, 0.0006647219999999995, 0.0006646810000000003, 0.000664736000000006, 0.0006647359999999991, 0.0006646810000000003, 0.0006647359999999991, 0.0006646660000000013, 0.0006647219999999995, 0.0006647090000000064, 0.0006647219999999995, 0.000664708, 0.0006646670000000007, 0.0006647090000000064, 0.0006646800000000008, 0.0006647500000000056, 0.0006647639999999982, 0.0006647499999999987, 0.0006646949999999999, 0.0006646660000000013, 0.000664708, 0.0006647359999999991, 0.0006647219999999995, 0.0006646660000000013, 0.0006646390000000016, 0.0006647089999999994]</msg>
<status status="PASS" starttime="20201029 12:43:19.756" endtime="20201029 12:43:19.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.751" endtime="20201029 12:43:19.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.351" endtime="20201029 12:43:19.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.329" endtime="20201029 12:43:19.759"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.761" endtime="20201029 12:43:19.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.760" endtime="20201029 12:43:19.782"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.790" endtime="20201029 12:43:19.836"></status>
</kw>
<msg timestamp="20201029 12:43:19.837" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.788" endtime="20201029 12:43:19.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.839" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.838" endtime="20201029 12:43:19.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.840" endtime="20201029 12:43:19.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.785" endtime="20201029 12:43:19.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.784" endtime="20201029 12:43:19.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.853" endtime="20201029 12:43:20.138"></status>
</kw>
<msg timestamp="20201029 12:43:20.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.851" endtime="20201029 12:43:20.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017773833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.142" endtime="20201029 12:43:20.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.150" endtime="20201029 12:43:20.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.848" endtime="20201029 12:43:20.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.847" endtime="20201029 12:43:20.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.157" level="INFO">${PHILIP_RES} = [{'diff': 0.0007294730000000013}, {'diff': 0.0007267640000000013}, {'diff': 0.0007267640000000013}, {'diff': 0.0007267920000000004}, {'diff': 0.0007268190000000001}, {'diff': 0.0007267219999999991}, {...</msg>
<status status="PASS" starttime="20201029 12:43:20.154" endtime="20201029 12:43:20.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.161" level="INFO">${RESULT} = {'diff': [0.0007294730000000013, 0.0007267640000000013, 0.0007267640000000013, 0.0007267920000000004, 0.0007268190000000001, 0.0007267219999999991, 0.0007267780000000008, 0.0007267500000000017, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:20.158" endtime="20201029 12:43:20.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.165" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.164" endtime="20201029 12:43:20.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.168" level="INFO">VALUE: [0.0007294730000000013, 0.0007267640000000013, 0.0007267640000000013, 0.0007267920000000004, 0.0007268190000000001, 0.0007267219999999991, 0.0007267780000000008, 0.0007267500000000017, 0.0007267079999999995, 0.0007267920000000004, 0.0007267359999999987, 0.0007267779999999974, 0.0007267780000000008, 0.0007267499999999982, 0.0007268050000000005, 0.0007267640000000013, 0.0007267639999999978, 0.0007267779999999974, 0.0007267079999999995, 0.0007267639999999978, 0.000726694, 0.0007267229999999986, 0.0007267499999999982, 0.0007267629999999983, 0.0007267640000000047, 0.0007267640000000047, 0.000726804999999997, 0.0007267359999999987, 0.0007267780000000043, 0.0007267639999999978, 0.0007267499999999982, 0.0007267639999999978, 0.0007267640000000047, 0.0007267500000000052, 0.0007267910000000044, 0.0007267639999999978, 0.0007267370000000051, 0.0007267640000000047, 0.0007267779999999974, 0.0007267499999999982, 0.0007267639999999978, 0.0007267229999999986, 0.0007268060000000034, 0.0007267779999999974, 0.0007266949999999994, 0.0007267499999999982, 0.0007267629999999983, 0.0007267640000000047, 0.0007267639999999978, 0.0007267779999999974]</msg>
<status status="PASS" starttime="20201029 12:43:20.166" endtime="20201029 12:43:20.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.162" endtime="20201029 12:43:20.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.782" endtime="20201029 12:43:20.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.759" endtime="20201029 12:43:20.170"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.173" endtime="20201029 12:43:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.171" endtime="20201029 12:43:20.193"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.201" endtime="20201029 12:43:20.251"></status>
</kw>
<msg timestamp="20201029 12:43:20.252" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.199" endtime="20201029 12:43:20.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.254" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.253" endtime="20201029 12:43:20.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.255" endtime="20201029 12:43:20.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.197" endtime="20201029 12:43:20.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.195" endtime="20201029 12:43:20.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.264" endtime="20201029 12:43:20.551"></status>
</kw>
<msg timestamp="20201029 12:43:20.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017985125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018779292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.263" endtime="20201029 12:43:20.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017985125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018779292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.555" endtime="20201029 12:43:20.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.563" endtime="20201029 12:43:20.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.260" endtime="20201029 12:43:20.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.258" endtime="20201029 12:43:20.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.570" level="INFO">${PHILIP_RES} = [{'diff': 0.0007941669999999984}, {'diff': 0.0007914309999999987}, {'diff': 0.0007913749999999969}, {'diff': 0.0007914029999999996}, {'diff': 0.000791389}, {'diff': 0.0007914029999999996}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:20.566" endtime="20201029 12:43:20.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.574" level="INFO">${RESULT} = {'diff': [0.0007941669999999984, 0.0007914309999999987, 0.0007913749999999969, 0.0007914029999999996, 0.000791389, 0.0007914029999999996, 0.000791403000000003, 0.0007914590000000013, 0.000791375000000...</msg>
<status status="PASS" starttime="20201029 12:43:20.571" endtime="20201029 12:43:20.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.579" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.578" endtime="20201029 12:43:20.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.581" level="INFO">VALUE: [0.0007941669999999984, 0.0007914309999999987, 0.0007913749999999969, 0.0007914029999999996, 0.000791389, 0.0007914029999999996, 0.000791403000000003, 0.0007914590000000013, 0.0007913750000000004, 0.0007914169999999991, 0.000791306000000002, 0.000791306000000002, 0.0007913050000000026, 0.0007912499999999968, 0.0007913199999999981, 0.0007913199999999981, 0.0007912910000000065, 0.0007913049999999991, 0.000791291999999999, 0.0007914449999999948, 0.0007912909999999995, 0.0007912639999999999, 0.0007913470000000047, 0.0007913199999999981, 0.0007912910000000065, 0.0007913049999999991, 0.0007913049999999991, 0.0007913889999999965, 0.0007913610000000043, 0.0007913610000000043, 0.0007913609999999974, 0.0007913469999999978, 0.0007913059999999986, 0.0007913199999999981, 0.0007913340000000046, 0.0007913189999999987, 0.0007913189999999987, 0.0007913469999999978, 0.0007913889999999965, 0.0007913889999999965, 0.0007913890000000035, 0.0007913750000000039, 0.0007913199999999981, 0.0007913340000000046, 0.0007913750000000039, 0.0007913609999999974, 0.000791403000000003, 0.000791403000000003, 0.0007913609999999974, 0.0007913339999999977]</msg>
<status status="PASS" starttime="20201029 12:43:20.580" endtime="20201029 12:43:20.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.575" endtime="20201029 12:43:20.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.193" endtime="20201029 12:43:20.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.171" endtime="20201029 12:43:20.583"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.585" endtime="20201029 12:43:20.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.584" endtime="20201029 12:43:20.606"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.614" endtime="20201029 12:43:20.667"></status>
</kw>
<msg timestamp="20201029 12:43:20.668" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.612" endtime="20201029 12:43:20.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.670" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.669" endtime="20201029 12:43:20.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.671" endtime="20201029 12:43:20.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.610" endtime="20201029 12:43:20.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.608" endtime="20201029 12:43:20.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.681" endtime="20201029 12:43:20.987"></status>
</kw>
<msg timestamp="20201029 12:43:20.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018691319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.679" endtime="20201029 12:43:20.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018691319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.996" endtime="20201029 12:43:21.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.015" endtime="20201029 12:43:21.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.676" endtime="20201029 12:43:21.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.675" endtime="20201029 12:43:21.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.024" level="INFO">${PHILIP_RES} = [{'diff': 0.0008611380000000009}, {'diff': 0.0008584720000000025}, {'diff': 0.0008584859999999986}, {'diff': 0.0008584859999999986}, {'diff': 0.0008584859999999986}, {'diff': 0.0008584589999999989}, {...</msg>
<status status="PASS" starttime="20201029 12:43:21.021" endtime="20201029 12:43:21.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.028" level="INFO">${RESULT} = {'diff': [0.0008611380000000009, 0.0008584720000000025, 0.0008584859999999986, 0.0008584859999999986, 0.0008584859999999986, 0.0008584589999999989, 0.0008583750000000015, 0.0008585270000000013, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:21.025" endtime="20201029 12:43:21.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.032" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.031" endtime="20201029 12:43:21.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.034" level="INFO">VALUE: [0.0008611380000000009, 0.0008584720000000025, 0.0008584859999999986, 0.0008584859999999986, 0.0008584859999999986, 0.0008584589999999989, 0.0008583750000000015, 0.0008585270000000013, 0.0008585140000000012, 0.0008584589999999989, 0.0008584579999999994, 0.000858473000000002, 0.0008585280000000008, 0.0008585139999999977, 0.000858486000000002, 0.0008585280000000042, 0.0008585000000000051, 0.0008585420000000038, 0.000858472000000006, 0.0008585140000000047, 0.0008584300000000003, 0.0008584859999999986, 0.0008583330000000028, 0.0008584030000000006, 0.0008585000000000051, 0.0008584859999999986, 0.0008584579999999994, 0.0008584999999999982, 0.0008583750000000015, 0.0008584449999999993, 0.000858472000000006, 0.0008584449999999993, 0.0008584449999999993, 0.0008584439999999999, 0.0008584449999999993, 0.0008583750000000015, 0.0008584170000000002, 0.0008583749999999946, 0.0008584579999999994, 0.0008584309999999998, 0.0008585279999999973, 0.0008585139999999977, 0.0008584160000000007, 0.0008584729999999985, 0.0008584579999999994, 0.0008584590000000059, 0.0008583890000000011, 0.0008585280000000112, 0.0008584579999999925, 0.000858500000000012]</msg>
<status status="PASS" starttime="20201029 12:43:21.033" endtime="20201029 12:43:21.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.029" endtime="20201029 12:43:21.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.606" endtime="20201029 12:43:21.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.583" endtime="20201029 12:43:21.036"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.039" endtime="20201029 12:43:21.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.037" endtime="20201029 12:43:21.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.067" endtime="20201029 12:43:21.124"></status>
</kw>
<msg timestamp="20201029 12:43:21.125" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.065" endtime="20201029 12:43:21.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.127" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.126" endtime="20201029 12:43:21.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.129" endtime="20201029 12:43:21.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.063" endtime="20201029 12:43:21.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.061" endtime="20201029 12:43:21.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.138" endtime="20201029 12:43:21.426"></status>
</kw>
<msg timestamp="20201029 12:43:21.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018803125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.137" endtime="20201029 12:43:21.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018803125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.430" endtime="20201029 12:43:21.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.438" endtime="20201029 12:43:21.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.134" endtime="20201029 12:43:21.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.133" endtime="20201029 12:43:21.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.445" level="INFO">${PHILIP_RES} = [{'diff': 0.0009308059999999993}, {'diff': 0.0009281390000000014}, {'diff': 0.0009280829999999997}, {'diff': 0.0009280550000000005}, {'diff': 0.0009280420000000004}, {'diff': 0.0009280829999999997}, {...</msg>
<status status="PASS" starttime="20201029 12:43:21.442" endtime="20201029 12:43:21.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.449" level="INFO">${RESULT} = {'diff': [0.0009308059999999993, 0.0009281390000000014, 0.0009280829999999997, 0.0009280550000000005, 0.0009280420000000004, 0.0009280829999999997, 0.0009281390000000014, 0.0009281249999999984, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:43:21.446" endtime="20201029 12:43:21.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.453" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.452" endtime="20201029 12:43:21.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.456" level="INFO">VALUE: [0.0009308059999999993, 0.0009281390000000014, 0.0009280829999999997, 0.0009280550000000005, 0.0009280420000000004, 0.0009280829999999997, 0.0009281390000000014, 0.0009281249999999984, 0.0009281660000000011, 0.0009281670000000006, 0.0009282229999999989, 0.0009282640000000016, 0.000928235999999999, 0.0009281250000000019, 0.0009281390000000014, 0.0009280970000000027, 0.0009280690000000036, 0.0009280829999999962, 0.0009280840000000026, 0.0009280840000000026, 0.0009280279999999974, 0.0009280279999999974, 0.0009280000000000052, 0.0009280829999999962, 0.0009280549999999971, 0.0009281110000000023, 0.0009281390000000014, 0.0009281250000000019, 0.0009281110000000023, 0.0009280690000000036, 0.0009279859999999987, 0.0009279859999999987, 0.0009280689999999966, 0.0009280840000000026, 0.0009280560000000035, 0.0009281390000000014, 0.0009281109999999954, 0.0009281250000000019, 0.0009281390000000014, 0.0009281250000000019, 0.0009280970000000027, 0.0009281109999999954, 0.0009281109999999954, 0.000928138000000002, 0.0009280560000000104, 0.0009281250000000019, 0.0009280700000000031, 0.0009280689999999897, 0.0009281669999999936, 0.0009281109999999954]</msg>
<status status="PASS" starttime="20201029 12:43:21.454" endtime="20201029 12:43:21.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.450" endtime="20201029 12:43:21.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.059" endtime="20201029 12:43:21.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.037" endtime="20201029 12:43:21.458"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.461" endtime="20201029 12:43:21.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.459" endtime="20201029 12:43:21.481"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.489" endtime="20201029 12:43:21.550"></status>
</kw>
<msg timestamp="20201029 12:43:21.551" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.487" endtime="20201029 12:43:21.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.553" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.552" endtime="20201029 12:43:21.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.554" endtime="20201029 12:43:21.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.485" endtime="20201029 12:43:21.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.483" endtime="20201029 12:43:21.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.563" endtime="20201029 12:43:21.871"></status>
</kw>
<msg timestamp="20201029 12:43:21.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017753083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018756014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.562" endtime="20201029 12:43:21.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017753083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018756014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.875" endtime="20201029 12:43:21.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.882" endtime="20201029 12:43:21.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.559" endtime="20201029 12:43:21.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.558" endtime="20201029 12:43:21.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.889" level="INFO">${PHILIP_RES} = [{'diff': 0.001002931000000002}, {'diff': 0.0010001949999999989}, {'diff': 0.0010001810000000028}, {'diff': 0.0010002089999999984}, {'diff': 0.001000235999999998}, {'diff': 0.0010002219999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:21.886" endtime="20201029 12:43:21.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.894" level="INFO">${RESULT} = {'diff': [0.001002931000000002, 0.0010001949999999989, 0.0010001810000000028, 0.0010002089999999984, 0.001000235999999998, 0.0010002219999999985, 0.001000235999999998, 0.0010000980000000013, 0.0010002...</msg>
<status status="PASS" starttime="20201029 12:43:21.890" endtime="20201029 12:43:21.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.898" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.897" endtime="20201029 12:43:21.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.901" level="INFO">VALUE: [0.001002931000000002, 0.0010001949999999989, 0.0010001810000000028, 0.0010002089999999984, 0.001000235999999998, 0.0010002219999999985, 0.001000235999999998, 0.0010000980000000013, 0.001000222000000002, 0.0010002219999999985, 0.0010002219999999985, 0.0010002499999999977, 0.0010002769999999973, 0.0010001799999999963, 0.0010002360000000016, 0.0010001949999999954, 0.001000222000000002, 0.0010002360000000016, 0.0010000419999999996, 0.0010001389999999971, 0.0010001530000000036, 0.0010002230000000015, 0.0010001249999999975, 0.0010002359999999946, 0.0010001519999999972, 0.0010001940000000029, 0.0010002500000000011, 0.0010002079999999955, 0.0010002360000000016, 0.0010001660000000037, 0.0010001669999999963, 0.0010002780000000003, 0.0010001520000000041, 0.0010002080000000024, 0.0010002079999999955, 0.001000237000000001, 0.0010001670000000032, 0.0010000979999999979, 0.0010002079999999955, 0.0010000969999999984, 0.0010001800000000033, 0.0010001389999999971, 0.0010001250000000045, 0.0010001670000000101, 0.001000193999999996, 0.0010001530000000036, 0.0010002080000000024, 0.0010001800000000033, 0.0010001940000000098, 0.0010002359999999877]</msg>
<status status="PASS" starttime="20201029 12:43:21.899" endtime="20201029 12:43:21.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.895" endtime="20201029 12:43:21.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.481" endtime="20201029 12:43:21.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.459" endtime="20201029 12:43:21.902"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.905" endtime="20201029 12:43:21.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.904" endtime="20201029 12:43:21.925"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.933" endtime="20201029 12:43:21.998"></status>
</kw>
<msg timestamp="20201029 12:43:21.999" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.932" endtime="20201029 12:43:21.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.001" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.000" endtime="20201029 12:43:22.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.002" endtime="20201029 12:43:22.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.929" endtime="20201029 12:43:22.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.927" endtime="20201029 12:43:22.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.012" endtime="20201029 12:43:22.299"></status>
</kw>
<msg timestamp="20201029 12:43:22.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017705222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018782611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.010" endtime="20201029 12:43:22.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017705222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018782611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.303" endtime="20201029 12:43:22.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.311" endtime="20201029 12:43:22.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.008" endtime="20201029 12:43:22.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.006" endtime="20201029 12:43:22.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.317" level="INFO">${PHILIP_RES} = [{'diff': 0.0010773890000000015}, {'diff': 0.001074791999999998}, {'diff': 0.0010748059999999976}, {'diff': 0.0010747779999999985}, {'diff': 0.0010747360000000032}, {'diff': 0.0010747779999999985}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:22.314" endtime="20201029 12:43:22.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.321" level="INFO">${RESULT} = {'diff': [0.0010773890000000015, 0.001074791999999998, 0.0010748059999999976, 0.0010747779999999985, 0.0010747360000000032, 0.0010747779999999985, 0.001074681000000001, 0.0010747080000000006, 0.001074...</msg>
<status status="PASS" starttime="20201029 12:43:22.318" endtime="20201029 12:43:22.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.326" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.325" endtime="20201029 12:43:22.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.328" level="INFO">VALUE: [0.0010773890000000015, 0.001074791999999998, 0.0010748059999999976, 0.0010747779999999985, 0.0010747360000000032, 0.0010747779999999985, 0.001074681000000001, 0.0010747080000000006, 0.0010747220000000002, 0.0010747220000000002, 0.0010748200000000006, 0.0010747909999999986, 0.001074791999999998, 0.001074875000000003, 0.0010748609999999964, 0.001074820000000004, 0.0010748609999999964, 0.001074805000000005, 0.0010748199999999972, 0.0010748190000000046, 0.0010748610000000033, 0.0010748609999999964, 0.0010748190000000046, 0.0010748059999999976, 0.0010748330000000042, 0.0010748339999999967, 0.0010747779999999985, 0.0010748339999999967, 0.001074874999999996, 0.0010748189999999977, 0.001074986, 0.0010749300000000017, 0.0010748480000000032, 0.001074875000000003, 0.0010748329999999973, 0.0010748610000000033, 0.0010748339999999967, 0.0010748610000000033, 0.0010748609999999964, 0.0010749169999999947, 0.0010748059999999976, 0.001074763999999992, 0.0010748049999999981, 0.0010748049999999981, 0.0010749590000000003, 0.0010749170000000086, 0.0010750139999999991, 0.0010749020000000026, 0.001074903000000002, 0.0010749310000000012]</msg>
<status status="PASS" starttime="20201029 12:43:22.327" endtime="20201029 12:43:22.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.322" endtime="20201029 12:43:22.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.926" endtime="20201029 12:43:22.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.903" endtime="20201029 12:43:22.330"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.332" endtime="20201029 12:43:22.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.331" endtime="20201029 12:43:22.352"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.361" endtime="20201029 12:43:22.430"></status>
</kw>
<msg timestamp="20201029 12:43:22.431" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.359" endtime="20201029 12:43:22.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.433" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.432" endtime="20201029 12:43:22.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.434" endtime="20201029 12:43:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.357" endtime="20201029 12:43:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.355" endtime="20201029 12:43:22.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.444" endtime="20201029 12:43:22.746"></status>
</kw>
<msg timestamp="20201029 12:43:22.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.443" endtime="20201029 12:43:22.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019133125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.753" endtime="20201029 12:43:22.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.761" endtime="20201029 12:43:22.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.440" endtime="20201029 12:43:22.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.438" endtime="20201029 12:43:22.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.767" level="INFO">${PHILIP_RES} = [{'diff': 0.0011545690000000011}, {'diff': 0.0011518889999999997}, {'diff': 0.001151847000000001}, {'diff': 0.0011519439999999985}, {'diff': 0.0011518750000000001}, {'diff': 0.0011519170000000023}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:22.764" endtime="20201029 12:43:22.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.772" level="INFO">${RESULT} = {'diff': [0.0011545690000000011, 0.0011518889999999997, 0.001151847000000001, 0.0011519439999999985, 0.0011518750000000001, 0.0011519170000000023, 0.0011520000000000002, 0.0011518889999999997, 0.00115...</msg>
<status status="PASS" starttime="20201029 12:43:22.769" endtime="20201029 12:43:22.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.777" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.776" endtime="20201029 12:43:22.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.779" level="INFO">VALUE: [0.0011545690000000011, 0.0011518889999999997, 0.001151847000000001, 0.0011519439999999985, 0.0011518750000000001, 0.0011519170000000023, 0.0011520000000000002, 0.0011518889999999997, 0.0011518750000000001, 0.0011519169999999988, 0.001151972000000001, 0.0011519159999999959, 0.0011517779999999991, 0.0011517910000000062, 0.0011518750000000036, 0.0011518470000000045, 0.0011518469999999975, 0.0011519030000000027, 0.0011518189999999984, 0.0011518199999999978, 0.0011518339999999974, 0.0011517909999999992, 0.0011517779999999991, 0.0011517639999999996, 0.0011518889999999962, 0.0011519580000000015, 0.0011518199999999978, 0.0011517919999999987, 0.0011519299999999955, 0.001151847999999997, 0.0011518199999999978, 0.0011517639999999996, 0.0011517920000000056, 0.001151832999999998, 0.0011518469999999975, 0.0011518470000000045, 0.0011518750000000105, 0.0011518469999999975, 0.0011518049999999919, 0.0011517779999999922, 0.0011517919999999987, 0.0011518620000000035, 0.0011518469999999975, 0.0011518189999999984, 0.0011518189999999984, 0.0011518620000000035, 0.0011518469999999975, 0.0011519310000000088, 0.001151972000000001, 0.0011518880000000037]</msg>
<status status="PASS" starttime="20201029 12:43:22.778" endtime="20201029 12:43:22.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.773" endtime="20201029 12:43:22.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.353" endtime="20201029 12:43:22.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.330" endtime="20201029 12:43:22.782"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.784" endtime="20201029 12:43:22.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.783" endtime="20201029 12:43:22.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.812" endtime="20201029 12:43:22.886"></status>
</kw>
<msg timestamp="20201029 12:43:22.886" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.811" endtime="20201029 12:43:22.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.889" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.888" endtime="20201029 12:43:22.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.890" endtime="20201029 12:43:22.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.808" endtime="20201029 12:43:22.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.806" endtime="20201029 12:43:22.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.899" endtime="20201029 12:43:23.186"></status>
</kw>
<msg timestamp="20201029 12:43:23.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.898" endtime="20201029 12:43:23.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017921444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.190" endtime="20201029 12:43:23.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.198" endtime="20201029 12:43:23.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.895" endtime="20201029 12:43:23.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.893" endtime="20201029 12:43:23.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.204" level="INFO">${PHILIP_RES} = [{'diff': 0.0012339449999999967}, {'diff': 0.0012312920000000019}, {'diff': 0.001231290999999999}, {'diff': 0.001231208000000001}, {'diff': 0.001231290999999999}, {'diff': 0.001231305000000002}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:43:23.201" endtime="20201029 12:43:23.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.209" level="INFO">${RESULT} = {'diff': [0.0012339449999999967, 0.0012312920000000019, 0.001231290999999999, 0.001231208000000001, 0.001231290999999999, 0.001231305000000002, 0.0012312919999999984, 0.0012313190000000016, 0.00123138...</msg>
<status status="PASS" starttime="20201029 12:43:23.205" endtime="20201029 12:43:23.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.214" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.213" endtime="20201029 12:43:23.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.216" level="INFO">VALUE: [0.0012339449999999967, 0.0012312920000000019, 0.001231290999999999, 0.001231208000000001, 0.001231290999999999, 0.001231305000000002, 0.0012312919999999984, 0.0012313190000000016, 0.0012313889999999994, 0.0012313329999999977, 0.0012313610000000003, 0.001231291999999995, 0.0012313889999999994, 0.0012314019999999995, 0.001231402999999999, 0.0012313889999999994, 0.001231485999999997, 0.0012313610000000003, 0.0012313749999999998, 0.0012314860000000039, 0.0012313610000000003, 0.0012313750000000068, 0.001231402999999999, 0.0012313889999999994, 0.001231415999999999, 0.0012313889999999994, 0.0012313610000000003, 0.0012314169999999985, 0.0012313480000000002, 0.0012313889999999994, 0.0012314019999999995, 0.0012312360000000036, 0.0012312230000000035, 0.0012313059999999876, 0.0012313470000000076, 0.0012313060000000015, 0.0012312920000000088, 0.001231194000000005, 0.0012312359999999967, 0.0012313330000000011, 0.0012312909999999955, 0.0012313470000000076, 0.001231374999999993, 0.0012314170000000124, 0.0012313889999999994, 0.0012314860000000039, 0.001231415999999999, 0.0012314169999999985, 0.001231403000000006, 0.0012313610000000003]</msg>
<status status="PASS" starttime="20201029 12:43:23.215" endtime="20201029 12:43:23.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.210" endtime="20201029 12:43:23.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.805" endtime="20201029 12:43:23.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.782" endtime="20201029 12:43:23.218"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.220" endtime="20201029 12:43:23.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.219" endtime="20201029 12:43:23.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.248" endtime="20201029 12:43:23.326"></status>
</kw>
<msg timestamp="20201029 12:43:23.327" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.247" endtime="20201029 12:43:23.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.329" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.328" endtime="20201029 12:43:23.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.330" endtime="20201029 12:43:23.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.244" endtime="20201029 12:43:23.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.242" endtime="20201029 12:43:23.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.342" endtime="20201029 12:43:23.647"></status>
</kw>
<msg timestamp="20201029 12:43:23.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01764675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:23.339" endtime="20201029 12:43:23.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01764675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:23.651" endtime="20201029 12:43:23.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.659" endtime="20201029 12:43:23.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.335" endtime="20201029 12:43:23.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.334" endtime="20201029 12:43:23.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.666" level="INFO">${PHILIP_RES} = [{'diff': 0.0013161110000000018}, {'diff': 0.0013134719999999996}, {'diff': 0.0013133879999999987}, {'diff': 0.0013136109999999993}, {'diff': 0.0013135690000000005}, {'diff': 0.0013134719999999996}, {...</msg>
<status status="PASS" starttime="20201029 12:43:23.663" endtime="20201029 12:43:23.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.670" level="INFO">${RESULT} = {'diff': [0.0013161110000000018, 0.0013134719999999996, 0.0013133879999999987, 0.0013136109999999993, 0.0013135690000000005, 0.0013134719999999996, 0.00131357, 0.0013134859999999991, 0.001313555000000...</msg>
<status status="PASS" starttime="20201029 12:43:23.667" endtime="20201029 12:43:23.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.674" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.673" endtime="20201029 12:43:23.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.677" level="INFO">VALUE: [0.0013161110000000018, 0.0013134719999999996, 0.0013133879999999987, 0.0013136109999999993, 0.0013135690000000005, 0.0013134719999999996, 0.00131357, 0.0013134859999999991, 0.001313555000000001, 0.0013135560000000004, 0.0013134580000000035, 0.001313555000000001, 0.0013135560000000004, 0.0013134159999999978, 0.0013135690000000005, 0.0013135270000000018, 0.0013134730000000025, 0.0013134170000000042, 0.0013135000000000022, 0.0013135130000000023, 0.001313443999999997, 0.0013135000000000022, 0.0013133889999999981, 0.0013135280000000013, 0.0013134999999999952, 0.0013135420000000009, 0.0013135280000000013, 0.0013134860000000026, 0.0013135830000000001, 0.0013135000000000022, 0.0013135280000000013, 0.0013134999999999952, 0.0013135690000000005, 0.0013134859999999887, 0.0013135410000000014, 0.001313500000000009, 0.001313526999999995, 0.0013134029999999908, 0.0013134999999999952, 0.0013136249999999988, 0.0013134860000000026, 0.0013135410000000014, 0.0013135280000000082, 0.001313459000000003, 0.00131347200000001, 0.0013135559999999935, 0.0013136950000000036, 0.0013136249999999988, 0.001313526999999995, 0.0013134300000000043]</msg>
<status status="PASS" starttime="20201029 12:43:23.675" endtime="20201029 12:43:23.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.671" endtime="20201029 12:43:23.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.241" endtime="20201029 12:43:23.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.218" endtime="20201029 12:43:23.679"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.681" endtime="20201029 12:43:23.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.679" endtime="20201029 12:43:23.701"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.709" endtime="20201029 12:43:23.792"></status>
</kw>
<msg timestamp="20201029 12:43:23.792" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.708" endtime="20201029 12:43:23.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.795" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.793" endtime="20201029 12:43:23.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.796" endtime="20201029 12:43:23.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.705" endtime="20201029 12:43:23.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.703" endtime="20201029 12:43:23.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.808" endtime="20201029 12:43:24.094"></status>
</kw>
<msg timestamp="20201029 12:43:24.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017934375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.806" endtime="20201029 12:43:24.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017934375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019334917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.098" endtime="20201029 12:43:24.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.106" endtime="20201029 12:43:24.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.804" endtime="20201029 12:43:24.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.802" endtime="20201029 12:43:24.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:24.113" level="INFO">${PHILIP_RES} = [{'diff': 0.0014005420000000011}, {'diff': 0.001398}, {'diff': 0.0013978889999999994}, {'diff': 0.0013978049999999985}, {'diff': 0.0013977360000000001}, {'diff': 0.0013978199999999975}, {'diff': 0.001...</msg>
<status status="PASS" starttime="20201029 12:43:24.110" endtime="20201029 12:43:24.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.117" level="INFO">${RESULT} = {'diff': [0.0014005420000000011, 0.001398, 0.0013978889999999994, 0.0013978049999999985, 0.0013977360000000001, 0.0013978199999999975, 0.0013978749999999998, 0.0013979310000000016, 0.00139791699999999...</msg>
<status status="PASS" starttime="20201029 12:43:24.114" endtime="20201029 12:43:24.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.121" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:24.120" endtime="20201029 12:43:24.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.124" level="INFO">VALUE: [0.0014005420000000011, 0.001398, 0.0013978889999999994, 0.0013978049999999985, 0.0013977360000000001, 0.0013978199999999975, 0.0013978749999999998, 0.0013979310000000016, 0.0013979169999999985, 0.0013980000000000034, 0.0013979439999999982, 0.001398013999999996, 0.001398014000000003, 0.0013980700000000013, 0.0013980550000000022, 0.001397902999999999, 0.001398014000000003, 0.0013979019999999995, 0.0013980280000000025, 0.0013979999999999965, 0.0013980000000000034, 0.001397985999999997, 0.0013980410000000026, 0.001398097000000001, 0.001398013999999996, 0.0013980280000000025, 0.001397985999999997, 0.0013980000000000034, 0.0013980410000000026, 0.0013981109999999936, 0.0013981389999999927, 0.001398097000000001, 0.0013980830000000083, 0.0013980420000000021, 0.0013979860000000038, 0.0013980279999999956, 0.0013979860000000038, 0.0013980549999999953, 0.0013979870000000033, 0.0013980700000000013, 0.0013980000000000103, 0.0013980279999999956, 0.0013980410000000026, 0.001398013999999989, 0.0013980280000000095, 0.0013979589999999903, 0.0013980560000000086, 0.0013981390000000066, 0.0013981109999999936, 0.001398014000000003]</msg>
<status status="PASS" starttime="20201029 12:43:24.122" endtime="20201029 12:43:24.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.118" endtime="20201029 12:43:24.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.702" endtime="20201029 12:43:24.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.679" endtime="20201029 12:43:24.126"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.129" endtime="20201029 12:43:24.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.127" endtime="20201029 12:43:24.149"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.157" endtime="20201029 12:43:24.246"></status>
</kw>
<msg timestamp="20201029 12:43:24.247" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.155" endtime="20201029 12:43:24.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.252" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.249" endtime="20201029 12:43:24.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.254" endtime="20201029 12:43:24.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.153" endtime="20201029 12:43:24.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.151" endtime="20201029 12:43:24.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.274" endtime="20201029 12:43:24.572"></status>
</kw>
<msg timestamp="20201029 12:43:24.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:24.271" endtime="20201029 12:43:24.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019896125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:24.576" endtime="20201029 12:43:24.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.584" endtime="20201029 12:43:24.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.265" endtime="20201029 12:43:24.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.262" endtime="20201029 12:43:24.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:24.590" level="INFO">${PHILIP_RES} = [{'diff': 0.0014876249999999994}, {'diff': 0.001485069000000002}, {'diff': 0.001485069000000002}, {'diff': 0.001485069000000002}, {'diff': 0.001484944999999998}, {'diff': 0.001485054999999999}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:43:24.587" endtime="20201029 12:43:24.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.596" level="INFO">${RESULT} = {'diff': [0.0014876249999999994, 0.001485069000000002, 0.001485069000000002, 0.001485069000000002, 0.001484944999999998, 0.001485054999999999, 0.0014850409999999994, 0.001484972000000001, 0.0014850139...</msg>
<status status="PASS" starttime="20201029 12:43:24.591" endtime="20201029 12:43:24.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.603" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:24.601" endtime="20201029 12:43:24.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.606" level="INFO">VALUE: [0.0014876249999999994, 0.001485069000000002, 0.001485069000000002, 0.001485069000000002, 0.001484944999999998, 0.001485054999999999, 0.0014850409999999994, 0.001484972000000001, 0.0014850139999999998, 0.001484972000000001, 0.0014850000000000002, 0.001484972000000001, 0.0014850689999999986, 0.0014850409999999994, 0.0014850139999999998, 0.0014850970000000047, 0.0014851390000000034, 0.0014850559999999985, 0.0014849450000000014, 0.0014850139999999998, 0.0014850139999999998, 0.0014850000000000002, 0.0014850279999999993, 0.0014851249999999969, 0.0014849719999999941, 0.0014850000000000002, 0.0014850139999999998, 0.001485069999999998, 0.0014850559999999985, 0.0014850279999999993, 0.0014850000000000002, 0.0014850829999999982, 0.0014849029999999958, 0.0014849160000000028, 0.0014849579999999946, 0.0014849859999999937, 0.0014850559999999985, 0.0014850139999999928, 0.0014850970000000047, 0.0014850139999999928, 0.0014850000000000002, 0.0014849580000000084, 0.0014850699999999911, 0.0014850139999999928, 0.0014850559999999985, 0.0014849170000000023, 0.0014848890000000031, 0.0014850139999999928, 0.0014849160000000028, 0.0014849579999999946]</msg>
<status status="PASS" starttime="20201029 12:43:24.604" endtime="20201029 12:43:24.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.598" endtime="20201029 12:43:24.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.149" endtime="20201029 12:43:24.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.127" endtime="20201029 12:43:24.609"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.612" endtime="20201029 12:43:24.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.610" endtime="20201029 12:43:24.632"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.640" endtime="20201029 12:43:24.732"></status>
</kw>
<msg timestamp="20201029 12:43:24.732" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.639" endtime="20201029 12:43:24.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.735" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.733" endtime="20201029 12:43:24.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.736" endtime="20201029 12:43:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.636" endtime="20201029 12:43:24.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.634" endtime="20201029 12:43:24.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.745" endtime="20201029 12:43:25.036"></status>
</kw>
<msg timestamp="20201029 12:43:25.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019314347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.744" endtime="20201029 12:43:25.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017737236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019314347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.040" endtime="20201029 12:43:25.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.048" endtime="20201029 12:43:25.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.741" endtime="20201029 12:43:25.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.739" endtime="20201029 12:43:25.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:25.054" level="INFO">${PHILIP_RES} = [{'diff': 0.001577110999999999}, {'diff': 0.001574471999999997}, {'diff': 0.0015744029999999985}, {'diff': 0.0015744440000000012}, {'diff': 0.0015744020000000025}, {'diff': 0.0015743330000000007}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:25.051" endtime="20201029 12:43:25.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.058" level="INFO">${RESULT} = {'diff': [0.001577110999999999, 0.001574471999999997, 0.0015744029999999985, 0.0015744440000000012, 0.0015744020000000025, 0.0015743330000000007, 0.001574486, 0.0015744589999999968, 0.0015743880000000...</msg>
<status status="PASS" starttime="20201029 12:43:25.055" endtime="20201029 12:43:25.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.063" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:25.062" endtime="20201029 12:43:25.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.065" level="INFO">VALUE: [0.001577110999999999, 0.001574471999999997, 0.0015744029999999985, 0.0015744440000000012, 0.0015744020000000025, 0.0015743330000000007, 0.001574486, 0.0015744589999999968, 0.001574388000000003, 0.0015744579999999939, 0.0015744310000000011, 0.0015744590000000003, 0.001574486, 0.0015744720000000004, 0.0015744310000000011, 0.0015744440000000012, 0.0015743890000000024, 0.001574403000000002, 0.001574513999999999, 0.0015744169999999946, 0.0015743610000000033, 0.0015744170000000016, 0.001574486, 0.0015745279999999987, 0.0015744310000000011, 0.0015745550000000053, 0.0015745689999999979, 0.0015744029999999881, 0.0015744450000000076, 0.0015745829999999905, 0.0015745410000000126, 0.0015744869999999994, 0.001574612000000003, 0.0015745280000000056, 0.0015745279999999917, 0.0015745410000000126, 0.0015745689999999979, 0.001574542000000012, 0.001574513999999999, 0.0015744580000000008, 0.001574513999999999, 0.001574403000000002, 0.0015745409999999987, 0.0015744590000000003, 0.0015744999999999926, 0.0015743750000000029, 0.0015744450000000076, 0.0015743610000000102, 0.0015744590000000003, 0.0015744720000000073]</msg>
<status status="PASS" starttime="20201029 12:43:25.064" endtime="20201029 12:43:25.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.059" endtime="20201029 12:43:25.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.632" endtime="20201029 12:43:25.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.609" endtime="20201029 12:43:25.069"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.074" endtime="20201029 12:43:25.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.071" endtime="20201029 12:43:25.097"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.114" endtime="20201029 12:43:25.214"></status>
</kw>
<msg timestamp="20201029 12:43:25.215" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.111" endtime="20201029 12:43:25.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.220" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.217" endtime="20201029 12:43:25.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.223" endtime="20201029 12:43:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.105" endtime="20201029 12:43:25.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.101" endtime="20201029 12:43:25.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.243" endtime="20201029 12:43:25.542"></status>
</kw>
<msg timestamp="20201029 12:43:25.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031011861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032681083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.240" endtime="20201029 12:43:25.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031011861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032681083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.546" endtime="20201029 12:43:25.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.553" endtime="20201029 12:43:25.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.234" endtime="20201029 12:43:25.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.231" endtime="20201029 12:43:25.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:25.560" level="INFO">${PHILIP_RES} = [{'diff': 0.001669221999999998}, {'diff': 0.0016666390000000045}, {'diff': 0.0016665829999999993}, {'diff': 0.0016665829999999993}, {'diff': 0.0016666939999999963}, {'diff': 0.0016665689999999997}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:25.557" endtime="20201029 12:43:25.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.564" level="INFO">${RESULT} = {'diff': [0.001669221999999998, 0.0016666390000000045, 0.0016665829999999993, 0.0016665829999999993, 0.0016666939999999963, 0.0016665689999999997, 0.0016666529999999971, 0.0016667369999999945, 0.00166...</msg>
<status status="PASS" starttime="20201029 12:43:25.561" endtime="20201029 12:43:25.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.568" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:25.567" endtime="20201029 12:43:25.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.571" level="INFO">VALUE: [0.001669221999999998, 0.0016666390000000045, 0.0016665829999999993, 0.0016665829999999993, 0.0016666939999999963, 0.0016665689999999997, 0.0016666529999999971, 0.0016667369999999945, 0.0016668050000000004, 0.0016667080000000029, 0.0016666669999999967, 0.0016666809999999962, 0.0016666950000000028, 0.0016665000000000013, 0.0016665140000000009, 0.0016666799999999968, 0.0016666110000000053, 0.001666625000000005, 0.0016667780000000076, 0.0016666940000000102, 0.0016666519999999907, 0.0016665699999999922, 0.001666653000000004, 0.0016666520000000046, 0.0016666110000000123, 0.001666624999999991, 0.0016666659999999972, 0.0016665829999999993, 0.001666624999999991, 0.0016665550000000001, 0.001666459000000009, 0.0016666810000000032, 0.0016665550000000001, 0.0016667220000000094, 0.0016665969999999919, 0.0016664859999999948, 0.001666542000000007, 0.0016665970000000058, 0.001666513999999994, 0.0016665000000000013, 0.0016664720000000022, 0.0016665000000000013, 0.0016665979999999914, 0.0016665689999999928, 0.0016665140000000078, 0.0016664719999999883, 0.001666570000000006, 0.001666570000000006, 0.001666444000000003, 0.0016666109999999984]</msg>
<status status="PASS" starttime="20201029 12:43:25.570" endtime="20201029 12:43:25.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.565" endtime="20201029 12:43:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.098" endtime="20201029 12:43:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.069" endtime="20201029 12:43:25.574"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.576" endtime="20201029 12:43:25.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.574" endtime="20201029 12:43:25.596"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.604" endtime="20201029 12:43:25.706"></status>
</kw>
<msg timestamp="20201029 12:43:25.706" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.602" endtime="20201029 12:43:25.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.709" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.707" endtime="20201029 12:43:25.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.710" endtime="20201029 12:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.600" endtime="20201029 12:43:25.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.598" endtime="20201029 12:43:25.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.719" endtime="20201029 12:43:26.007"></status>
</kw>
<msg timestamp="20201029 12:43:26.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:25.718" endtime="20201029 12:43:26.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627319, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:26.011" endtime="20201029 12:43:26.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.020" endtime="20201029 12:43:26.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.715" endtime="20201029 12:43:26.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.713" endtime="20201029 12:43:26.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.034" level="INFO">${PHILIP_RES} = [{'diff': 0.0017638189999999998}, {'diff': 0.0017611810000000006}, {'diff': 0.0017611109999999992}, {'diff': 0.0017611389999999984}, {'diff': 0.001761083}, {'diff': 0.0017613060000000007}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 12:43:26.027" endtime="20201029 12:43:26.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.044" level="INFO">${RESULT} = {'diff': [0.0017638189999999998, 0.0017611810000000006, 0.0017611109999999992, 0.0017611389999999984, 0.001761083, 0.0017613060000000007, 0.001761292000000001, 0.0017611530000000014, 0.001761139000000...</msg>
<status status="PASS" starttime="20201029 12:43:26.036" endtime="20201029 12:43:26.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.055" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.052" endtime="20201029 12:43:26.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.061" level="INFO">VALUE: [0.0017638189999999998, 0.0017611810000000006, 0.0017611109999999992, 0.0017611389999999984, 0.001761083, 0.0017613060000000007, 0.001761292000000001, 0.0017611530000000014, 0.0017611390000000018, 0.0017611250000000023, 0.001761138999999995, 0.0017610830000000036, 0.0017612770000000055, 0.0017612080000000002, 0.0017611380000000024, 0.0017612359999999994, 0.0017611390000000018, 0.001761138999999995, 0.001761167000000001, 0.0017610699999999965, 0.0017611530000000014, 0.0017611530000000014, 0.0017611380000000024, 0.0017612220000000067, 0.001761166999999994, 0.0017611530000000014, 0.0017612220000000067, 0.0017611810000000006, 0.0017611810000000006, 0.0017611530000000014, 0.0017611109999999958, 0.0017610970000000031, 0.001761180000000001, 0.0017612080000000002, 0.001761195000000007, 0.0017611530000000014, 0.0017612089999999997, 0.0017612359999999994, 0.0017613199999999968, 0.001761249999999992, 0.001761167000000008, 0.0017611530000000014, 0.0017610700000000035, 0.0017612080000000002, 0.0017611940000000076, 0.001761166999999994, 0.0017611939999999937, 0.0017613199999999968, 0.001761444000000001, 0.001761389000000002]</msg>
<status status="PASS" starttime="20201029 12:43:26.058" endtime="20201029 12:43:26.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.046" endtime="20201029 12:43:26.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.596" endtime="20201029 12:43:26.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.574" endtime="20201029 12:43:26.065"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.070" endtime="20201029 12:43:26.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.067" endtime="20201029 12:43:26.093"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.110" endtime="20201029 12:43:26.219"></status>
</kw>
<msg timestamp="20201029 12:43:26.219" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.107" endtime="20201029 12:43:26.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.222" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.220" endtime="20201029 12:43:26.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.223" endtime="20201029 12:43:26.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.101" endtime="20201029 12:43:26.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.097" endtime="20201029 12:43:26.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.232" endtime="20201029 12:43:26.522"></status>
</kw>
<msg timestamp="20201029 12:43:26.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030914361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.230" endtime="20201029 12:43:26.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030914361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032775181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.526" endtime="20201029 12:43:26.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.534" endtime="20201029 12:43:26.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.228" endtime="20201029 12:43:26.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.226" endtime="20201029 12:43:26.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.540" level="INFO">${PHILIP_RES} = [{'diff': 0.0018608199999999991}, {'diff': 0.001858097000000003}, {'diff': 0.001858096999999996}, {'diff': 0.0018582640000000053}, {'diff': 0.0018581109999999956}, {'diff': 0.0018580000000000055}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:26.537" endtime="20201029 12:43:26.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.544" level="INFO">${RESULT} = {'diff': [0.0018608199999999991, 0.001858097000000003, 0.001858096999999996, 0.0018582640000000053, 0.0018581109999999956, 0.0018580000000000055, 0.0018581249999999952, 0.0018580560000000038, 0.001858...</msg>
<status status="PASS" starttime="20201029 12:43:26.541" endtime="20201029 12:43:26.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.548" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.547" endtime="20201029 12:43:26.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.551" level="INFO">VALUE: [0.0018608199999999991, 0.001858097000000003, 0.001858096999999996, 0.0018582640000000053, 0.0018581109999999956, 0.0018580000000000055, 0.0018581249999999952, 0.0018580560000000038, 0.0018580139999999981, 0.0018580280000000046, 0.0018580269999999982, 0.0018579579999999998, 0.0018579170000000006, 0.0018579719999999994, 0.0018579440000000003, 0.0018579439999999933, 0.0018580560000000107, 0.0018581660000000083, 0.0018581249999999883, 0.0018581520000000018, 0.001858208, 0.001858097000000003, 0.0018581109999999956, 0.001858097000000003, 0.0018580419999999903, 0.0018580279999999977, 0.0018579999999999985, 0.0018579999999999985, 0.0018579719999999994, 0.0018579300000000076, 0.0018580559999999968, 0.0018579440000000003, 0.0018580969999999891, 0.001858180000000001, 0.0018580549999999973, 0.0018580980000000025, 0.0018580969999999891, 0.001857985999999992, 0.0018579999999999985, 0.001858166999999994, 0.001858166999999994, 0.0018582780000000049, 0.0018581670000000078, 0.0018580690000000039, 0.0018580700000000033, 0.0018580550000000112, 0.0018582359999999992, 0.0018581940000000075, 0.0018583189999999972, 0.0018582500000000057]</msg>
<status status="PASS" starttime="20201029 12:43:26.550" endtime="20201029 12:43:26.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.545" endtime="20201029 12:43:26.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.094" endtime="20201029 12:43:26.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.066" endtime="20201029 12:43:26.553"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.555" endtime="20201029 12:43:26.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.554" endtime="20201029 12:43:26.575"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.583" endtime="20201029 12:43:26.695"></status>
</kw>
<msg timestamp="20201029 12:43:26.696" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.582" endtime="20201029 12:43:26.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.698" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.697" endtime="20201029 12:43:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.699" endtime="20201029 12:43:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.579" endtime="20201029 12:43:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.577" endtime="20201029 12:43:26.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.709" endtime="20201029 12:43:27.016"></status>
</kw>
<msg timestamp="20201029 12:43:27.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760208, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 12:43:26.708" endtime="20201029 12:43:27.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0178, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760208, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 12:43:27.020" endtime="20201029 12:43:27.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.028" endtime="20201029 12:43:27.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.705" endtime="20201029 12:43:27.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.703" endtime="20201029 12:43:27.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0019602080000000015}, {'diff': 0.001957582999999999}, {'diff': 0.0019575140000000005}, {'diff': 0.0019574720000000018}, {'diff': 0.0019575419999999996}, {'diff': 0.001957416}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:27.032" endtime="20201029 12:43:27.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.039" level="INFO">${RESULT} = {'diff': [0.0019602080000000015, 0.001957582999999999, 0.0019575140000000005, 0.0019574720000000018, 0.0019575419999999996, 0.001957416, 0.0019573480000000046, 0.0019573199999999985, 0.001957415999999...</msg>
<status status="PASS" starttime="20201029 12:43:27.036" endtime="20201029 12:43:27.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.043" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.042" endtime="20201029 12:43:27.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.045" level="INFO">VALUE: [0.0019602080000000015, 0.001957582999999999, 0.0019575140000000005, 0.0019574720000000018, 0.0019575419999999996, 0.001957416, 0.0019573480000000046, 0.0019573199999999985, 0.0019574159999999965, 0.001957680999999996, 0.0019575140000000005, 0.0019574030000000034, 0.001957389000000004, 0.0019575140000000005, 0.0019574730000000012, 0.001957500000000001, 0.0019576250000000045, 0.0019574860000000013, 0.001957528, 0.0019576530000000036, 0.0019575689999999993, 0.0019576529999999967, 0.0019575970000000054, 0.001957611000000012, 0.001957638999999997, 0.0019576530000000036, 0.0019575839999999983, 0.001957598000000005, 0.0019574309999999956, 0.001957499999999987, 0.0019575689999999923, 0.0019576119999999975, 0.001957513000000008, 0.001957610999999998, 0.0019576249999999906, 0.001957638999999997, 0.001957528, 0.0019575140000000074, 0.001957610999999998, 0.0019575549999999997, 0.0019575970000000054, 0.001957638999999997, 0.0019575689999999923, 0.0019575140000000074, 0.0019576669999999963, 0.001957610999999998, 0.001957486999999994, 0.0019575419999999927, 0.0019574720000000018, 0.0019575549999999997]</msg>
<status status="PASS" starttime="20201029 12:43:27.044" endtime="20201029 12:43:27.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.039" endtime="20201029 12:43:27.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.576" endtime="20201029 12:43:27.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.553" endtime="20201029 12:43:27.048"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.050" endtime="20201029 12:43:27.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.049" endtime="20201029 12:43:27.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.079" endtime="20201029 12:43:27.196"></status>
</kw>
<msg timestamp="20201029 12:43:27.196" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.077" endtime="20201029 12:43:27.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.199" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.198" endtime="20201029 12:43:27.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.200" endtime="20201029 12:43:27.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.074" endtime="20201029 12:43:27.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.072" endtime="20201029 12:43:27.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.209" endtime="20201029 12:43:27.498"></status>
</kw>
<msg timestamp="20201029 12:43:27.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.208" endtime="20201029 12:43:27.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017872708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.502" endtime="20201029 12:43:27.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.510" endtime="20201029 12:43:27.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.205" endtime="20201029 12:43:27.512"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.203" endtime="20201029 12:43:27.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.516" level="INFO">${PHILIP_RES} = [{'diff': 0.0020622229999999984}, {'diff': 0.0020596109999999994}, {'diff': 0.0020595280000000014}, {'diff': 0.0020595979999999993}, {'diff': 0.0020594589999999996}, {'diff': 0.002059514000000002}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:27.513" endtime="20201029 12:43:27.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.521" level="INFO">${RESULT} = {'diff': [0.0020622229999999984, 0.0020596109999999994, 0.0020595280000000014, 0.0020595979999999993, 0.0020594589999999996, 0.002059514000000002, 0.002059527999999998, 0.002059569000000004, 0.0020594...</msg>
<status status="PASS" starttime="20201029 12:43:27.517" endtime="20201029 12:43:27.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.525" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.524" endtime="20201029 12:43:27.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.528" level="INFO">VALUE: [0.0020622229999999984, 0.0020596109999999994, 0.0020595280000000014, 0.0020595979999999993, 0.0020594589999999996, 0.002059514000000002, 0.002059527999999998, 0.002059569000000004, 0.002059445, 0.0020595139999999984, 0.0020594719999999997, 0.002059527999999998, 0.0020595969999999963, 0.002059527999999998, 0.002059569000000004, 0.002059709, 0.002059527999999998, 0.0020593880000000023, 0.0020593749999999952, 0.002059319000000004, 0.002059417000000001, 0.0020594310000000005, 0.0020594859999999993, 0.002059430000000001, 0.0020593890000000087, 0.002059388999999995, 0.0020593609999999957, 0.0020592910000000048, 0.0020595419999999975, 0.0020595969999999963, 0.002059416999999994, 0.002059430000000001, 0.002059402000000002, 0.0020593330000000104, 0.0020593049999999974, 0.0020594030000000013, 0.0020594030000000013, 0.0020592920000000042, 0.0020592499999999986, 0.002059361999999995, 0.0020592920000000042, 0.002059305999999997, 0.0020592779999999977, 0.0020593060000000107, 0.0020593749999999883, 0.0020593330000000104, 0.0020593049999999974, 0.002059416999999994, 0.0020593890000000087, 0.0020595139999999845]</msg>
<status status="PASS" starttime="20201029 12:43:27.526" endtime="20201029 12:43:27.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.522" endtime="20201029 12:43:27.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.071" endtime="20201029 12:43:27.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.048" endtime="20201029 12:43:27.530"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.532" endtime="20201029 12:43:27.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.531" endtime="20201029 12:43:27.552"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.560" endtime="20201029 12:43:27.685"></status>
</kw>
<msg timestamp="20201029 12:43:27.686" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.559" endtime="20201029 12:43:27.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.691" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.688" endtime="20201029 12:43:27.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.693" endtime="20201029 12:43:27.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.556" endtime="20201029 12:43:27.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.554" endtime="20201029 12:43:27.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.713" endtime="20201029 12:43:28.026"></status>
</kw>
<msg timestamp="20201029 12:43:28.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017763833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.710" endtime="20201029 12:43:28.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017763833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.030" endtime="20201029 12:43:28.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.038" endtime="20201029 12:43:28.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.704" endtime="20201029 12:43:28.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.700" endtime="20201029 12:43:28.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.044" level="INFO">${PHILIP_RES} = [{'diff': 0.0021667640000000016}, {'diff': 0.002164111}, {'diff': 0.002163972}, {'diff': 0.002164082999999997}, {'diff': 0.0021640420000000014}, {'diff': 0.0021641529999999985}, {'diff': 0.00216398599...</msg>
<status status="PASS" starttime="20201029 12:43:28.041" endtime="20201029 12:43:28.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.048" level="INFO">${RESULT} = {'diff': [0.0021667640000000016, 0.002164111, 0.002163972, 0.002164082999999997, 0.0021640420000000014, 0.0021641529999999985, 0.0021639859999999997, 0.002164042000000005, 0.0021641110000000033, 0.002...</msg>
<status status="PASS" starttime="20201029 12:43:28.045" endtime="20201029 12:43:28.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.053" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.051" endtime="20201029 12:43:28.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.055" level="INFO">VALUE: [0.0021667640000000016, 0.002164111, 0.002163972, 0.002164082999999997, 0.0021640420000000014, 0.0021641529999999985, 0.0021639859999999997, 0.002164042000000005, 0.0021641110000000033, 0.0021641800000000017, 0.002164070000000004, 0.002164166000000002, 0.0021641520000000025, 0.002164125000000003, 0.002164165999999995, 0.0021641389999999955, 0.002164026999999999, 0.0021641670000000016, 0.0021639859999999997, 0.0021640279999999915, 0.0021641520000000025, 0.002164125000000003, 0.002164013999999992, 0.0021639859999999927, 0.002164125000000003, 0.0021639999999999993, 0.002164153000000002, 0.0021641110000000102, 0.002164263999999999, 0.002164013999999992, 0.002164070000000004, 0.0021639860000000066, 0.002163944000000001, 0.0021639450000000005, 0.0021639859999999927, 0.0021639999999999993, 0.0021640140000000058, 0.002163889000000002, 0.002163889000000002, 0.0021638050000000048, 0.002163916000000002, 0.0021638749999999957, 0.002163819999999997, 0.002163861000000003, 0.002164041999999991, 0.002164054999999984, 0.002164042000000005, 0.002164208000000001, 0.0021640140000000196, 0.002163847999999996]</msg>
<status status="PASS" starttime="20201029 12:43:28.054" endtime="20201029 12:43:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.049" endtime="20201029 12:43:28.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.553" endtime="20201029 12:43:28.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.530" endtime="20201029 12:43:28.062"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.064" endtime="20201029 12:43:28.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.063" endtime="20201029 12:43:28.085"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.093" endtime="20201029 12:43:28.221"></status>
</kw>
<msg timestamp="20201029 12:43:28.222" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.091" endtime="20201029 12:43:28.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.224" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.223" endtime="20201029 12:43:28.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.225" endtime="20201029 12:43:28.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.089" endtime="20201029 12:43:28.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.087" endtime="20201029 12:43:28.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.237" endtime="20201029 12:43:28.529"></status>
</kw>
<msg timestamp="20201029 12:43:28.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.236" endtime="20201029 12:43:28.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.533" endtime="20201029 12:43:28.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.540" endtime="20201029 12:43:28.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.233" endtime="20201029 12:43:28.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.232" endtime="20201029 12:43:28.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.547" level="INFO">${PHILIP_RES} = [{'diff': 0.0022737769999999977}, {'diff': 0.002271124999999999}, {'diff': 0.0022711109999999993}, {'diff': 0.002271152999999998}, {'diff': 0.0022712080000000003}, {'diff': 0.0022711660000000015}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:28.544" endtime="20201029 12:43:28.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.555" level="INFO">${RESULT} = {'diff': [0.0022737769999999977, 0.002271124999999999, 0.0022711109999999993, 0.002271152999999998, 0.0022712080000000003, 0.0022711660000000015, 0.0022712219999999964, 0.002271055000000001, 0.0022711...</msg>
<status status="PASS" starttime="20201029 12:43:28.549" endtime="20201029 12:43:28.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.564" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.562" endtime="20201029 12:43:28.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.569" level="INFO">VALUE: [0.0022737769999999977, 0.002271124999999999, 0.0022711109999999993, 0.002271152999999998, 0.0022712080000000003, 0.0022711660000000015, 0.0022712219999999964, 0.002271055000000001, 0.0022711670000000045, 0.0022712089999999963, 0.002271209000000003, 0.002271124999999999, 0.0022711950000000036, 0.0022711109999999993, 0.002271152999999998, 0.0022711799999999976, 0.002271124999999999, 0.002271194000000004, 0.0022710689999999936, 0.0022710690000000006, 0.002271292000000008, 0.002271152999999998, 0.0022711669999999906, 0.0022711390000000053, 0.0022712230000000028, 0.0022710560000000074, 0.0022711519999999985, 0.002271207999999997, 0.0022710140000000018, 0.002271180999999997, 0.0022711120000000057, 0.002271153000000012, 0.0022710690000000006, 0.0022711390000000053, 0.002271180999999997, 0.002270971999999996, 0.0022710280000000083, 0.002271054999999994, 0.0022710560000000074, 0.0022710839999999927, 0.0022710410000000014, 0.0022711109999999923, 0.002271042000000001, 0.0022710840000000065, 0.0022711390000000053, 0.0022711390000000053, 0.0022710829999999793, 0.002271124999999985, 0.002271152999999998, 0.002271042000000001]</msg>
<status status="PASS" starttime="20201029 12:43:28.566" endtime="20201029 12:43:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.557" endtime="20201029 12:43:28.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.085" endtime="20201029 12:43:28.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.062" endtime="20201029 12:43:28.575"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.580" endtime="20201029 12:43:28.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.577" endtime="20201029 12:43:28.603"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.620" endtime="20201029 12:43:28.756"></status>
</kw>
<msg timestamp="20201029 12:43:28.757" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.617" endtime="20201029 12:43:28.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.759" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.758" endtime="20201029 12:43:28.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.760" endtime="20201029 12:43:28.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.611" endtime="20201029 12:43:28.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.607" endtime="20201029 12:43:28.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.769" endtime="20201029 12:43:29.061"></status>
</kw>
<msg timestamp="20201029 12:43:29.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030768958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033152181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.768" endtime="20201029 12:43:29.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030768958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033152181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.065" endtime="20201029 12:43:29.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.073" endtime="20201029 12:43:29.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.765" endtime="20201029 12:43:29.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.763" endtime="20201029 12:43:29.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.080" level="INFO">${PHILIP_RES} = [{'diff': 0.0023832230000000038}, {'diff': 0.0023804590000000014}, {'diff': 0.002380583999999998}, {'diff': 0.0023805140000000002}, {'diff': 0.002380486000000001}, {'diff': 0.0023806250000000043}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:29.076" endtime="20201029 12:43:29.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.084" level="INFO">${RESULT} = {'diff': [0.0023832230000000038, 0.0023804590000000014, 0.002380583999999998, 0.0023805140000000002, 0.002380486000000001, 0.0023806250000000043, 0.002380430000000003, 0.002380568999999999, 0.00238051...</msg>
<status status="PASS" starttime="20201029 12:43:29.080" endtime="20201029 12:43:29.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.089" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.088" endtime="20201029 12:43:29.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.091" level="INFO">VALUE: [0.0023832230000000038, 0.0023804590000000014, 0.002380583999999998, 0.0023805140000000002, 0.002380486000000001, 0.0023806250000000043, 0.002380430000000003, 0.002380568999999999, 0.0023805140000000002, 0.0023806109999999978, 0.002380556000000006, 0.002380638999999997, 0.002380485999999994, 0.002380584000000005, 0.002380568999999999, 0.0023804999999999937, 0.002380375000000004, 0.0023803059999999987, 0.0023804999999999937, 0.0023805419999999994, 0.002380375000000004, 0.0023803889999999966, 0.002380416999999996, 0.0023804439999999955, 0.0023804999999999937, 0.0023805140000000002, 0.0023804439999999955, 0.0023805699999999985, 0.002380416999999996, 0.0023805550000000064, 0.002380444999999995, 0.0023804719999999946, 0.0023803190000000057, 0.002380458000000002, 0.0023805419999999994, 0.0023805419999999994, 0.002380556000000006, 0.0023805420000000133, 0.0023804719999999946, 0.00238037499999999, 0.0023802219999999874, 0.0023803609999999975, 0.002380320000000019, 0.002380263999999993, 0.0023801390000000033, 0.002380318999999992, 0.0023804440000000093, 0.0023804869999999867, 0.0023805140000000002, 0.0023805140000000002]</msg>
<status status="PASS" starttime="20201029 12:43:29.090" endtime="20201029 12:43:29.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.085" endtime="20201029 12:43:29.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.604" endtime="20201029 12:43:29.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.576" endtime="20201029 12:43:29.093"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.095" endtime="20201029 12:43:29.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.094" endtime="20201029 12:43:29.115"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.124" endtime="20201029 12:43:29.264"></status>
</kw>
<msg timestamp="20201029 12:43:29.264" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.122" endtime="20201029 12:43:29.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.267" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.265" endtime="20201029 12:43:29.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.268" endtime="20201029 12:43:29.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.120" endtime="20201029 12:43:29.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.117" endtime="20201029 12:43:29.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.277" endtime="20201029 12:43:29.579"></status>
</kw>
<msg timestamp="20201029 12:43:29.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018044625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.275" endtime="20201029 12:43:29.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018044625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.583" endtime="20201029 12:43:29.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.591" endtime="20201029 12:43:29.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.273" endtime="20201029 12:43:29.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.271" endtime="20201029 12:43:29.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.597" level="INFO">${PHILIP_RES} = [{'diff': 0.002495138999999997}, {'diff': 0.002492361000000002}, {'diff': 0.002492444}, {'diff': 0.002492374999999998}, {'diff': 0.0024923889999999976}, {'diff': 0.0024924170000000037}, {'diff': 0.002...</msg>
<status status="PASS" starttime="20201029 12:43:29.594" endtime="20201029 12:43:29.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.601" level="INFO">${RESULT} = {'diff': [0.002495138999999997, 0.002492361000000002, 0.002492444, 0.002492374999999998, 0.0024923889999999976, 0.0024924170000000037, 0.0024926250000000053, 0.0024926249999999983, 0.00249244499999999...</msg>
<status status="PASS" starttime="20201029 12:43:29.598" endtime="20201029 12:43:29.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.605" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.604" endtime="20201029 12:43:29.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.608" level="INFO">VALUE: [0.002495138999999997, 0.002492361000000002, 0.002492444, 0.002492374999999998, 0.0024923889999999976, 0.0024924170000000037, 0.0024926250000000053, 0.0024926249999999983, 0.002492444999999996, 0.0024925000000000017, 0.002492638999999998, 0.002492638999999998, 0.0024923890000000046, 0.0024924440000000034, 0.002492429999999997, 0.0024925000000000017, 0.002492486000000002, 0.0024925280000000077, 0.0024925550000000074, 0.0024924720000000095, 0.0024922230000000017, 0.002492374999999991, 0.0024923610000000124, 0.002492375000000005, 0.002492194000000003, 0.0024920689999999995, 0.0024921390000000043, 0.0024920280000000072, 0.002492124999999998, 0.0024921109999999913, 0.002492138000000005, 0.0024922500000000014, 0.0024922079999999958, 0.002492264000000008, 0.002492124999999998, 0.002492235999999995, 0.002492263999999994, 0.002492346999999992, 0.0024923059999999997, 0.002492194000000003, 0.002492264000000022, 0.0024923480000000053, 0.00249242999999999, 0.002492292000000007, 0.0024923609999999985, 0.0024923609999999985, 0.002492361999999998, 0.0024923199999999923, 0.002492318999999993, 0.0024924029999999764]</msg>
<status status="PASS" starttime="20201029 12:43:29.607" endtime="20201029 12:43:29.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.602" endtime="20201029 12:43:29.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.116" endtime="20201029 12:43:29.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.093" endtime="20201029 12:43:29.610"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.612" endtime="20201029 12:43:29.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.611" endtime="20201029 12:43:29.632"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.640" endtime="20201029 12:43:29.786"></status>
</kw>
<msg timestamp="20201029 12:43:29.787" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.639" endtime="20201029 12:43:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.789" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.788" endtime="20201029 12:43:29.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.790" endtime="20201029 12:43:29.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.636" endtime="20201029 12:43:29.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.634" endtime="20201029 12:43:29.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.800" endtime="20201029 12:43:30.090"></status>
</kw>
<msg timestamp="20201029 12:43:30.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017803458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.799" endtime="20201029 12:43:30.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017803458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.094" endtime="20201029 12:43:30.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.102" endtime="20201029 12:43:30.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.796" endtime="20201029 12:43:30.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.794" endtime="20201029 12:43:30.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.109" level="INFO">${PHILIP_RES} = [{'diff': 0.002609528}, {'diff': 0.0026067359999999984}, {'diff': 0.002606792}, {'diff': 0.002606931}, {'diff': 0.0026067359999999984}, {'diff': 0.0026070280000000043}, {'diff': 0.0026067639999999975}...</msg>
<status status="PASS" starttime="20201029 12:43:30.105" endtime="20201029 12:43:30.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.112" level="INFO">${RESULT} = {'diff': [0.002609528, 0.0026067359999999984, 0.002606792, 0.002606931, 0.0026067359999999984, 0.0026070280000000043, 0.0026067639999999975, 0.0026066939999999997, 0.002606861000000002, 0.002606862000...</msg>
<status status="PASS" starttime="20201029 12:43:30.110" endtime="20201029 12:43:30.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.117" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.116" endtime="20201029 12:43:30.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.119" level="INFO">VALUE: [0.002609528, 0.0026067359999999984, 0.002606792, 0.002606931, 0.0026067359999999984, 0.0026070280000000043, 0.0026067639999999975, 0.0026066939999999997, 0.002606861000000002, 0.0026068620000000015, 0.002606749999999998, 0.0026068049999999968, 0.0026067639999999975, 0.0026065830000000026, 0.002606584000000002, 0.0026066250000000013, 0.0026064029999999933, 0.0026065139999999903, 0.0026064160000000003, 0.002606527999999997, 0.0026068050000000037, 0.002606750000000005, 0.0026064590000000054, 0.0026064439999999994, 0.0026065830000000095, 0.0026066110000000087, 0.0026064719999999986, 0.0026065549999999965, 0.002606639000000008, 0.002606485999999991, 0.0026064589999999915, 0.0026064160000000003, 0.0026064719999999986, 0.002606486000000005, 0.0026065139999999903, 0.002606610999999995, 0.0026065830000000095, 0.0026065549999999965, 0.002606429999999993, 0.0026063060000000027, 0.0026064719999999986, 0.0026063199999999953, 0.0026062500000000044, 0.002606485999999991, 0.0026064169999999998, 0.0026066110000000087, 0.0026067220000000058, 0.0026065829999999957, 0.0026065419999999895, 0.0026063890000000145]</msg>
<status status="PASS" starttime="20201029 12:43:30.118" endtime="20201029 12:43:30.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.113" endtime="20201029 12:43:30.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.633" endtime="20201029 12:43:30.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.610" endtime="20201029 12:43:30.122"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.124" endtime="20201029 12:43:30.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.123" endtime="20201029 12:43:30.144"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.152" endtime="20201029 12:43:30.306"></status>
</kw>
<msg timestamp="20201029 12:43:30.308" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.151" endtime="20201029 12:43:30.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.313" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.310" endtime="20201029 12:43:30.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.315" endtime="20201029 12:43:30.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.148" endtime="20201029 12:43:30.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.146" endtime="20201029 12:43:30.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.334" endtime="20201029 12:43:30.633"></status>
</kw>
<msg timestamp="20201029 12:43:30.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.331" endtime="20201029 12:43:30.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017738458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.637" endtime="20201029 12:43:30.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.645" endtime="20201029 12:43:30.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.326" endtime="20201029 12:43:30.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.322" endtime="20201029 12:43:30.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.651" level="INFO">${PHILIP_RES} = [{'diff': 0.002726181000000001}, {'diff': 0.002723639}, {'diff': 0.0027235969999999977}, {'diff': 0.0027234029999999992}, {'diff': 0.002723611999999997}, {'diff': 0.0027236250000000004}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:30.648" endtime="20201029 12:43:30.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.656" level="INFO">${RESULT} = {'diff': [0.002726181000000001, 0.002723639, 0.0027235969999999977, 0.0027234029999999992, 0.002723611999999997, 0.0027236250000000004, 0.002723512999999997, 0.002723639, 0.002723486000000004, 0.00272...</msg>
<status status="PASS" starttime="20201029 12:43:30.652" endtime="20201029 12:43:30.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.660" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.659" endtime="20201029 12:43:30.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.663" level="INFO">VALUE: [0.002726181000000001, 0.002723639, 0.0027235969999999977, 0.0027234029999999992, 0.002723611999999997, 0.0027236250000000004, 0.002723512999999997, 0.002723639, 0.002723486000000004, 0.0027233610000000005, 0.002723416999999999, 0.0027234159999999993, 0.002723527999999996, 0.002723472999999997, 0.0027234719999999976, 0.0027234159999999924, 0.0027233329999999945, 0.002723236000000004, 0.0027233329999999945, 0.002723347000000001, 0.002723485999999997, 0.002723457999999998, 0.0027232779999999956, 0.0027234309999999984, 0.0027235139999999963, 0.0027234170000000057, 0.002723486000000011, 0.002723264000000003, 0.0027234029999999992, 0.002723236000000004, 0.0027233610000000075, 0.002723124999999993, 0.0027233200000000013, 0.0027234309999999984, 0.002723457999999998, 0.002723319000000002, 0.002723457999999998, 0.002723375, 0.002723429999999999, 0.002723375, 0.002723429999999999, 0.0027234720000000046, 0.0027235139999999824, 0.00272323599999999, 0.002723028000000016, 0.0027232779999999956, 0.0027234309999999984, 0.0027234439999999915, 0.002723458000000012, 0.0027232910000000166]</msg>
<status status="PASS" starttime="20201029 12:43:30.662" endtime="20201029 12:43:30.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.657" endtime="20201029 12:43:30.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.145" endtime="20201029 12:43:30.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.122" endtime="20201029 12:43:30.665"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.667" endtime="20201029 12:43:30.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.666" endtime="20201029 12:43:30.687"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.696" endtime="20201029 12:43:30.854"></status>
</kw>
<msg timestamp="20201029 12:43:30.855" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.694" endtime="20201029 12:43:30.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.857" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.856" endtime="20201029 12:43:30.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.858" endtime="20201029 12:43:30.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.691" endtime="20201029 12:43:30.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.689" endtime="20201029 12:43:30.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.867" endtime="20201029 12:43:31.181"></status>
</kw>
<msg timestamp="20201029 12:43:31.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018154264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020999972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.866" endtime="20201029 12:43:31.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018154264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020999972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.192" endtime="20201029 12:43:31.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.211" endtime="20201029 12:43:31.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.863" endtime="20201029 12:43:31.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.861" endtime="20201029 12:43:31.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:31.222" level="INFO">${PHILIP_RES} = [{'diff': 0.002845707999999999}, {'diff': 0.0028426950000000027}, {'diff': 0.0028428329999999995}, {'diff': 0.002842667}, {'diff': 0.002842846999999999}, {'diff': 0.002842944}, {'diff': 0.002842972999...</msg>
<status status="PASS" starttime="20201029 12:43:31.218" endtime="20201029 12:43:31.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.226" level="INFO">${RESULT} = {'diff': [0.002845707999999999, 0.0028426950000000027, 0.0028428329999999995, 0.002842667, 0.002842846999999999, 0.002842944, 0.0028429729999999986, 0.002842861000000002, 0.0028429020000000013, 0.0028...</msg>
<status status="PASS" starttime="20201029 12:43:31.223" endtime="20201029 12:43:31.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.230" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:31.229" endtime="20201029 12:43:31.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.232" level="INFO">VALUE: [0.002845707999999999, 0.0028426950000000027, 0.0028428329999999995, 0.002842667, 0.002842846999999999, 0.002842944, 0.0028429729999999986, 0.002842861000000002, 0.0028429020000000013, 0.0028429300000000005, 0.0028429170000000004, 0.0028430280000000044, 0.0028432779999999977, 0.002843290999999998, 0.0028432219999999925, 0.0028431389999999945, 0.0028433329999999896, 0.0028432630000000125, 0.002843153000000001, 0.002843070000000003, 0.002843055000000011, 0.00284308300000001, 0.0028431670000000075, 0.002843014000000005, 0.002843138000000009, 0.002843334000000003, 0.0028430980000000022, 0.002843165999999994, 0.0028430559999999966, 0.0028430690000000036, 0.002843125000000002, 0.0028430689999999897, 0.002843153000000001, 0.002843290999999998, 0.002843208, 0.0028431939999999933, 0.0028429999999999844, 0.0028429580000000065, 0.002842861000000002, 0.0028429589999999783, 0.0028429030000000077, 0.0028428749999999947, 0.002842861000000002, 0.0028427639999999976, 0.0028429170000000004, 0.0028429589999999783, 0.0028431390000000223, 0.0028431800000000007, 0.0028431389999999945, 0.002843000000000012]</msg>
<status status="PASS" starttime="20201029 12:43:31.231" endtime="20201029 12:43:31.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.227" endtime="20201029 12:43:31.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.688" endtime="20201029 12:43:31.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.665" endtime="20201029 12:43:31.234"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.237" endtime="20201029 12:43:31.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.235" endtime="20201029 12:43:31.257"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.265" endtime="20201029 12:43:31.430"></status>
</kw>
<msg timestamp="20201029 12:43:31.430" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.263" endtime="20201029 12:43:31.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.433" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.431" endtime="20201029 12:43:31.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.434" endtime="20201029 12:43:31.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.261" endtime="20201029 12:43:31.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.259" endtime="20201029 12:43:31.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.444" endtime="20201029 12:43:31.734"></status>
</kw>
<msg timestamp="20201029 12:43:31.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020772181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.442" endtime="20201029 12:43:31.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020772181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.738" endtime="20201029 12:43:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.746" endtime="20201029 12:43:31.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.439" endtime="20201029 12:43:31.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.438" endtime="20201029 12:43:31.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:31.753" level="INFO">${PHILIP_RES} = [{'diff': 0.0029672640000000007}, {'diff': 0.002964750000000002}, {'diff': 0.002964735999999999}, {'diff': 0.0029646390000000016}, {'diff': 0.0029644720000000027}, {'diff': 0.0029646949999999964}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:31.749" endtime="20201029 12:43:31.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.756" level="INFO">${RESULT} = {'diff': [0.0029672640000000007, 0.002964750000000002, 0.002964735999999999, 0.0029646390000000016, 0.0029644720000000027, 0.0029646949999999964, 0.0029646249999999985, 0.0029646380000000055, 0.002964...</msg>
<status status="PASS" starttime="20201029 12:43:31.754" endtime="20201029 12:43:31.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.761" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:31.760" endtime="20201029 12:43:31.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.763" level="INFO">VALUE: [0.0029672640000000007, 0.002964750000000002, 0.002964735999999999, 0.0029646390000000016, 0.0029644720000000027, 0.0029646949999999964, 0.0029646249999999985, 0.0029646380000000055, 0.0029645420000000006, 0.002964610999999999, 0.0029645550000000007, 0.0029645699999999997, 0.0029646659999999977, 0.002964499999999995, 0.002964556, 0.002964500000000009, 0.0029644439999999966, 0.002964597999999999, 0.002964639000000005, 0.0029646249999999985, 0.00296469399999999, 0.002964722000000003, 0.0029647359999999956, 0.002964639000000005, 0.002964680999999997, 0.0029647780000000012, 0.002964820000000007, 0.0029647780000000012, 0.0029647230000000024, 0.002964610999999992, 0.002964722000000003, 0.0029645969999999994, 0.0029646950000000033, 0.0029647499999999882, 0.0029649170000000113, 0.0029647640000000086, 0.00296469399999999, 0.002964680999999997, 0.0029644729999999953, 0.0029648190000000074, 0.0029645970000000132, 0.0029644449999999822, 0.00296455499999998, 0.0029647359999999956, 0.0029646530000000115, 0.002964527999999994, 0.0029647080000000103, 0.0029647780000000012, 0.0029643330000000134, 0.0029646799999999973]</msg>
<status status="PASS" starttime="20201029 12:43:31.762" endtime="20201029 12:43:31.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.757" endtime="20201029 12:43:31.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.258" endtime="20201029 12:43:31.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.235" endtime="20201029 12:43:31.766"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.768" endtime="20201029 12:43:31.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.767" endtime="20201029 12:43:31.788"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.796" endtime="20201029 12:43:31.969"></status>
</kw>
<msg timestamp="20201029 12:43:31.970" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.795" endtime="20201029 12:43:31.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.976" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.973" endtime="20201029 12:43:31.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.978" endtime="20201029 12:43:31.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.792" endtime="20201029 12:43:31.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.790" endtime="20201029 12:43:31.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.997" endtime="20201029 12:43:32.293"></status>
</kw>
<msg timestamp="20201029 12:43:32.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020888736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.994" endtime="20201029 12:43:32.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020888736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.296" endtime="20201029 12:43:32.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.304" endtime="20201029 12:43:32.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.988" endtime="20201029 12:43:32.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.985" endtime="20201029 12:43:32.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.311" level="INFO">${PHILIP_RES} = [{'diff': 0.003091903}, {'diff': 0.003089042}, {'diff': 0.003089221999999999}, {'diff': 0.003088999999999998}, {'diff': 0.0030890420000000036}, {'diff': 0.003089208000000003}, {'diff': 0.0030888329999...</msg>
<status status="PASS" starttime="20201029 12:43:32.308" endtime="20201029 12:43:32.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.315" level="INFO">${RESULT} = {'diff': [0.003091903, 0.003089042, 0.003089221999999999, 0.003088999999999998, 0.0030890420000000036, 0.003089208000000003, 0.003088832999999999, 0.003088874999999998, 0.0030889450000000027, 0.003089...</msg>
<status status="PASS" starttime="20201029 12:43:32.312" endtime="20201029 12:43:32.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.320" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.319" endtime="20201029 12:43:32.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.322" level="INFO">VALUE: [0.003091903, 0.003089042, 0.003089221999999999, 0.003088999999999998, 0.0030890420000000036, 0.003089208000000003, 0.003088832999999999, 0.003088874999999998, 0.0030889450000000027, 0.0030890000000000015, 0.0030888890000000044, 0.0030889169999999966, 0.003088986000000002, 0.0030890979999999985, 0.003088875000000005, 0.003088985999999988, 0.003088903000000004, 0.003088986000000002, 0.0030888609999999983, 0.003088722000000002, 0.0030886950000000024, 0.003088986000000002, 0.003089083999999992, 0.003089096999999999, 0.003089124999999998, 0.0030891809999999964, 0.0030891110000000055, 0.003089179999999997, 0.00308894400000001, 0.0030888889999999974, 0.0030889719999999954, 0.0030890830000000064, 0.0030890549999999933, 0.0030890279999999937, 0.0030888890000000113, 0.0030889450000000096, 0.003088944999999982, 0.0030889170000000243, 0.003088846999999978, 0.0030888609999999983, 0.0030888889999999836, 0.0030888059999999995, 0.003088750000000001, 0.0030889719999999954, 0.003088903000000004, 0.0030888329999999853, 0.0030890829999999925, 0.0030890840000000197, 0.0030890279999999937, 0.003089014000000001]</msg>
<status status="PASS" starttime="20201029 12:43:32.321" endtime="20201029 12:43:32.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.316" endtime="20201029 12:43:32.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.789" endtime="20201029 12:43:32.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.766" endtime="20201029 12:43:32.324"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.326" endtime="20201029 12:43:32.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.325" endtime="20201029 12:43:32.347"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.355" endtime="20201029 12:43:32.532"></status>
</kw>
<msg timestamp="20201029 12:43:32.533" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.353" endtime="20201029 12:43:32.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.535" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.534" endtime="20201029 12:43:32.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.536" endtime="20201029 12:43:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.351" endtime="20201029 12:43:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.349" endtime="20201029 12:43:32.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.545" endtime="20201029 12:43:32.854"></status>
</kw>
<msg timestamp="20201029 12:43:32.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017664069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:32.544" endtime="20201029 12:43:32.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017664069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0208825, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:32.858" endtime="20201029 12:43:32.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.865" endtime="20201029 12:43:32.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.541" endtime="20201029 12:43:32.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.539" endtime="20201029 12:43:32.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.872" level="INFO">${PHILIP_RES} = [{'diff': 0.0032184309999999973}, {'diff': 0.003215875}, {'diff': 0.003215875}, {'diff': 0.003215611}, {'diff': 0.0032156799999999985}, {'diff': 0.003215792000000002}, {'diff': 0.003215847000000001}, ...</msg>
<status status="PASS" starttime="20201029 12:43:32.869" endtime="20201029 12:43:32.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.876" level="INFO">${RESULT} = {'diff': [0.0032184309999999973, 0.003215875, 0.003215875, 0.003215611, 0.0032156799999999985, 0.003215792000000002, 0.003215847000000001, 0.0032157780000000025, 0.003215931000000005, 0.00321583300000...</msg>
<status status="PASS" starttime="20201029 12:43:32.873" endtime="20201029 12:43:32.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.880" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.879" endtime="20201029 12:43:32.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.883" level="INFO">VALUE: [0.0032184309999999973, 0.003215875, 0.003215875, 0.003215611, 0.0032156799999999985, 0.003215792000000002, 0.003215847000000001, 0.0032157780000000025, 0.003215931000000005, 0.0032158330000000013, 0.003215764000000003, 0.003215693999999998, 0.0032155559999999944, 0.0032157079999999977, 0.003215986000000004, 0.0032158889999999996, 0.003215805000000002, 0.0032156799999999985, 0.0032154860000000035, 0.0032155690000000015, 0.0032155839999999936, 0.003215763999999996, 0.0032158340000000007, 0.003216290999999996, 0.0032159999999999966, 0.003215957999999991, 0.003215931000000005, 0.003215777000000003, 0.0032158060000000016, 0.003215611000000007, 0.0032154030000000056, 0.003215583000000008, 0.0032156799999999985, 0.0032158060000000155, 0.0032158059999999877, 0.003215722000000004, 0.0032158330000000013, 0.0032157080000000116, 0.003215680999999998, 0.0032154999999999823, 0.0032156670000000054, 0.003215666000000006, 0.0032158060000000155, 0.0032155690000000015, 0.0032155969999999867, 0.0032155140000000026, 0.003215735999999997, 0.0032156810000000258, 0.0032157080000000116, 0.0032153749999999925]</msg>
<status status="PASS" starttime="20201029 12:43:32.881" endtime="20201029 12:43:32.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.877" endtime="20201029 12:43:32.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.347" endtime="20201029 12:43:32.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.324" endtime="20201029 12:43:32.885"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.887" endtime="20201029 12:43:32.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.886" endtime="20201029 12:43:32.907"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.915" endtime="20201029 12:43:33.100"></status>
</kw>
<msg timestamp="20201029 12:43:33.100" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.914" endtime="20201029 12:43:33.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.103" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.101" endtime="20201029 12:43:33.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.104" endtime="20201029 12:43:33.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.911" endtime="20201029 12:43:33.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.909" endtime="20201029 12:43:33.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.117" endtime="20201029 12:43:33.408"></status>
</kw>
<msg timestamp="20201029 12:43:33.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021042611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.115" endtime="20201029 12:43:33.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017694986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021042611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.412" endtime="20201029 12:43:33.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.420" endtime="20201029 12:43:33.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.112" endtime="20201029 12:43:33.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.110" endtime="20201029 12:43:33.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.426" level="INFO">${PHILIP_RES} = [{'diff': 0.003347625}, {'diff': 0.0033447079999999983}, {'diff': 0.003344930999999999}, {'diff': 0.0033450140000000003}, {'diff': 0.0033449439999999955}, {'diff': 0.0033450000000000008}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:33.423" endtime="20201029 12:43:33.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.430" level="INFO">${RESULT} = {'diff': [0.003347625, 0.0033447079999999983, 0.003344930999999999, 0.0033450140000000003, 0.0033449439999999955, 0.0033450000000000008, 0.003344874999999997, 0.0033449720000000016, 0.0033450559999999...</msg>
<status status="PASS" starttime="20201029 12:43:33.427" endtime="20201029 12:43:33.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.435" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.434" endtime="20201029 12:43:33.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.437" level="INFO">VALUE: [0.003347625, 0.0033447079999999983, 0.003344930999999999, 0.0033450140000000003, 0.0033449439999999955, 0.0033450000000000008, 0.003344874999999997, 0.0033449720000000016, 0.003345055999999999, 0.0033449720000000016, 0.003345110999999998, 0.0033450419999999995, 0.0033449030000000032, 0.003345069000000006, 0.003345180000000003, 0.003345055999999999, 0.0033452640000000006, 0.003345138999999997, 0.0033450969999999913, 0.003344901999999997, 0.0033448890000000037, 0.003345068999999992, 0.003344973000000001, 0.003344973000000001, 0.0033448050000000062, 0.0033449720000000016, 0.003345028, 0.003344917000000003, 0.003345028, 0.003345097000000005, 0.003344929999999996, 0.003344764, 0.003344944999999988, 0.0033448329999999915, 0.0033448610000000045, 0.003344847000000012, 0.003345028, 0.0033448609999999768, 0.003344931000000023, 0.0033451110000000117, 0.0033451669999999822, 0.0033451110000000117, 0.003345138999999997, 0.0033450420000000203, 0.003345028, 0.003344945000000016, 0.003345263000000015, 0.0033449439999999886, 0.0033450419999999925, 0.0033449029999999824]</msg>
<status status="PASS" starttime="20201029 12:43:33.436" endtime="20201029 12:43:33.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.431" endtime="20201029 12:43:33.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.908" endtime="20201029 12:43:33.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.885" endtime="20201029 12:43:33.440"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.442" endtime="20201029 12:43:33.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.441" endtime="20201029 12:43:33.462"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.470" endtime="20201029 12:43:33.663"></status>
</kw>
<msg timestamp="20201029 12:43:33.664" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.469" endtime="20201029 12:43:33.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.670" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.666" endtime="20201029 12:43:33.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.672" endtime="20201029 12:43:33.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.466" endtime="20201029 12:43:33.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.464" endtime="20201029 12:43:33.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.691" endtime="20201029 12:43:33.990"></status>
</kw>
<msg timestamp="20201029 12:43:33.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017851514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.688" endtime="20201029 12:43:33.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017851514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.994" endtime="20201029 12:43:34.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.002" endtime="20201029 12:43:34.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.682" endtime="20201029 12:43:34.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.679" endtime="20201029 12:43:34.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.009" level="INFO">${PHILIP_RES} = [{'diff': 0.0034798050000000025}, {'diff': 0.003476901999999997}, {'diff': 0.0034768470000000017}, {'diff': 0.0034769030000000034}, {'diff': 0.0034770549999999997}, {'diff': 0.0034770140000000005}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:34.006" endtime="20201029 12:43:34.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.013" level="INFO">${RESULT} = {'diff': [0.0034798050000000025, 0.003476901999999997, 0.0034768470000000017, 0.0034769030000000034, 0.0034770549999999997, 0.0034770140000000005, 0.003477292, 0.003477082999999999, 0.0034769860000000...</msg>
<status status="PASS" starttime="20201029 12:43:34.010" endtime="20201029 12:43:34.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.018" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.017" endtime="20201029 12:43:34.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.020" level="INFO">VALUE: [0.0034798050000000025, 0.003476901999999997, 0.0034768470000000017, 0.0034769030000000034, 0.0034770549999999997, 0.0034770140000000005, 0.003477292, 0.003477082999999999, 0.0034769860000000014, 0.0034769030000000034, 0.0034769440000000026, 0.0034768609999999978, 0.003476971999999995, 0.003476930000000003, 0.003476999999999994, 0.0034769310000000025, 0.0034767220000000015, 0.0034766939999999885, 0.0034769310000000025, 0.00347691700000001, 0.003476999999999994, 0.0034770419999999996, 0.0034768750000000043, 0.0034770689999999993, 0.003477110999999991, 0.0034770419999999996, 0.0034771799999999964, 0.0034771249999999976, 0.0034769860000000014, 0.003477000000000008, 0.0034769030000000034, 0.0034771950000000162, 0.0034769590000000017, 0.0034767639999999933, 0.003476929999999989, 0.003476971999999995, 0.003477028000000021, 0.0034770140000000005, 0.0034768609999999978, 0.0034771660000000038, 0.00347713899999999, 0.0034771249999999976, 0.003477098000000012, 0.003477180999999996, 0.003476958999999974, 0.003476986999999987, 0.0034770970000000123, 0.0034772780000000003, 0.0034769160000000243, 0.003477098000000012]</msg>
<status status="PASS" starttime="20201029 12:43:34.019" endtime="20201029 12:43:34.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.014" endtime="20201029 12:43:34.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.463" endtime="20201029 12:43:34.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.440" endtime="20201029 12:43:34.022"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.024" endtime="20201029 12:43:34.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.023" endtime="20201029 12:43:34.044"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.053" endtime="20201029 12:43:34.251"></status>
</kw>
<msg timestamp="20201029 12:43:34.251" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.051" endtime="20201029 12:43:34.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.254" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.252" endtime="20201029 12:43:34.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.255" endtime="20201029 12:43:34.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.048" endtime="20201029 12:43:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.046" endtime="20201029 12:43:34.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.264" endtime="20201029 12:43:34.572"></status>
</kw>
<msg timestamp="20201029 12:43:34.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017798514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.262" endtime="20201029 12:43:34.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017798514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021412319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.576" endtime="20201029 12:43:34.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.584" endtime="20201029 12:43:34.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.260" endtime="20201029 12:43:34.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.258" endtime="20201029 12:43:34.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.591" level="INFO">${PHILIP_RES} = [{'diff': 0.0036138049999999977}, {'diff': 0.0036111249999999998}, {'diff': 0.0036109999999999996}, {'diff': 0.003611152000000003}, {'diff': 0.003611083000000001}, {'diff': 0.0036111669999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:34.588" endtime="20201029 12:43:34.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.595" level="INFO">${RESULT} = {'diff': [0.0036138049999999977, 0.0036111249999999998, 0.0036109999999999996, 0.003611152000000003, 0.003611083000000001, 0.0036111669999999985, 0.003611209000000004, 0.0036110560000000014, 0.0036111...</msg>
<status status="PASS" starttime="20201029 12:43:34.592" endtime="20201029 12:43:34.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.599" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.598" endtime="20201029 12:43:34.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.601" level="INFO">VALUE: [0.0036138049999999977, 0.0036111249999999998, 0.0036109999999999996, 0.003611152000000003, 0.003611083000000001, 0.0036111669999999985, 0.003611209000000004, 0.0036110560000000014, 0.003611193999999998, 0.003611402999999999, 0.003611235999999997, 0.003611055000000002, 0.003610944000000005, 0.0036111250000000067, 0.0036110560000000014, 0.0036109580000000113, 0.0036112219999999973, 0.003611264000000003, 0.003611124999999993, 0.003611486000000011, 0.003611375, 0.0036113060000000086, 0.003611041999999995, 0.0036110409999999954, 0.0036110969999999937, 0.0036113480000000003, 0.00361123599999999, 0.003611082999999987, 0.0036110410000000093, 0.0036110560000000014, 0.0036110140000000235, 0.003611000000000003, 0.0036110139999999957, 0.0036111669999999985, 0.0036112219999999973, 0.0036114590000000113, 0.0036112219999999973, 0.003611194000000012, 0.003611444000000019, 0.0036115280000000027, 0.0036114999999999897, 0.0036112630000000034, 0.0036112360000000177, 0.003611264000000003, 0.003611375, 0.0036114450000000187, 0.0036113470000000147, 0.003611111, 0.003611194000000012, 0.0036113889999999926]</msg>
<status status="PASS" starttime="20201029 12:43:34.600" endtime="20201029 12:43:34.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.595" endtime="20201029 12:43:34.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.045" endtime="20201029 12:43:34.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.022" endtime="20201029 12:43:34.603"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.606" endtime="20201029 12:43:34.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.604" endtime="20201029 12:43:34.626"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.634" endtime="20201029 12:43:34.839"></status>
</kw>
<msg timestamp="20201029 12:43:34.840" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.632" endtime="20201029 12:43:34.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.842" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.841" endtime="20201029 12:43:34.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.843" endtime="20201029 12:43:34.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.630" endtime="20201029 12:43:34.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.628" endtime="20201029 12:43:34.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.853" endtime="20201029 12:43:35.145"></status>
</kw>
<msg timestamp="20201029 12:43:35.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.852" endtime="20201029 12:43:35.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.149" endtime="20201029 12:43:35.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.157" endtime="20201029 12:43:35.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.849" endtime="20201029 12:43:35.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.847" endtime="20201029 12:43:35.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.163" level="INFO">${PHILIP_RES} = [{'diff': 0.003751000000000001}, {'diff': 0.003748264000000001}, {'diff': 0.003748152000000001}, {'diff': 0.003748445000000003}, {'diff': 0.003748528000000001}, {'diff': 0.003748388999999998}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:43:35.160" endtime="20201029 12:43:35.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.167" level="INFO">${RESULT} = {'diff': [0.003751000000000001, 0.003748264000000001, 0.003748152000000001, 0.003748445000000003, 0.003748528000000001, 0.003748388999999998, 0.003748264000000001, 0.0037482780000000007, 0.00374815200...</msg>
<status status="PASS" starttime="20201029 12:43:35.164" endtime="20201029 12:43:35.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.171" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.170" endtime="20201029 12:43:35.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.174" level="INFO">VALUE: [0.003751000000000001, 0.003748264000000001, 0.003748152000000001, 0.003748445000000003, 0.003748528000000001, 0.003748388999999998, 0.003748264000000001, 0.0037482780000000007, 0.0037481520000000046, 0.003748444999999996, 0.0037479999999999944, 0.0037481390000000045, 0.0037479170000000034, 0.003748208000000003, 0.0037482219999999955, 0.003748236000000002, 0.003748264000000001, 0.003748097000000006, 0.0037482780000000077, 0.0037484160000000044, 0.003748264000000001, 0.003748153000000004, 0.003748401999999998, 0.0037482920000000003, 0.0037481109999999984, 0.0037481659999999972, 0.0037482500000000085, 0.003748181000000017, 0.003748236000000016, 0.003748153000000004, 0.003748207999999975, 0.0037482499999999808, 0.0037481390000000114, 0.003748042000000007, 0.0037480980000000053, 0.0037481390000000114, 0.003748097000000006, 0.003748388999999991, 0.0037481659999999972, 0.0037482499999999808, 0.003748208000000003, 0.0037482919999999864, 0.003748417000000004, 0.0037484440000000174, 0.0037482500000000085, 0.0037481109999999984, 0.003748430000000025, 0.003748417000000004, 0.003748125000000019, 0.0037484020000000118]</msg>
<status status="PASS" starttime="20201029 12:43:35.172" endtime="20201029 12:43:35.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.168" endtime="20201029 12:43:35.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.626" endtime="20201029 12:43:35.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.604" endtime="20201029 12:43:35.176"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.179" endtime="20201029 12:43:35.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.177" endtime="20201029 12:43:35.199"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.207" endtime="20201029 12:43:35.421"></status>
</kw>
<msg timestamp="20201029 12:43:35.422" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.205" endtime="20201029 12:43:35.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.428" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.424" endtime="20201029 12:43:35.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.430" endtime="20201029 12:43:35.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.203" endtime="20201029 12:43:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.201" endtime="20201029 12:43:35.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.450" endtime="20201029 12:43:35.746"></status>
</kw>
<msg timestamp="20201029 12:43:35.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.446" endtime="20201029 12:43:35.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.750" endtime="20201029 12:43:35.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.758" endtime="20201029 12:43:35.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.441" endtime="20201029 12:43:35.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.437" endtime="20201029 12:43:35.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.764" level="INFO">${PHILIP_RES} = [{'diff': 0.003890207999999999}, {'diff': 0.003887485999999999}, {'diff': 0.003887610999999999}, {'diff': 0.003887597000000003}, {'diff': 0.003887847}, {'diff': 0.0038876799999999975}, {'diff': 0.0038...</msg>
<status status="PASS" starttime="20201029 12:43:35.761" endtime="20201029 12:43:35.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.769" level="INFO">${RESULT} = {'diff': [0.003890207999999999, 0.003887485999999999, 0.003887610999999999, 0.003887597000000003, 0.003887847, 0.0038876799999999975, 0.0038875969999999996, 0.0038877499999999954, 0.003887583999999999...</msg>
<status status="PASS" starttime="20201029 12:43:35.765" endtime="20201029 12:43:35.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.773" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.772" endtime="20201029 12:43:35.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.776" level="INFO">VALUE: [0.003890207999999999, 0.003887485999999999, 0.003887610999999999, 0.003887597000000003, 0.003887847, 0.0038876799999999975, 0.0038875969999999996, 0.0038877499999999954, 0.0038875839999999995, 0.003887360999999999, 0.003887666000000005, 0.003887681000000004, 0.003887681000000004, 0.0038878059999999937, 0.003887792000000001, 0.0038876669999999974, 0.003887360999999992, 0.003887444000000004, 0.003887389000000005, 0.0038874309999999968, 0.0038874450000000033, 0.003887401999999998, 0.0038874579999999964, 0.0038873469999999993, 0.003887208000000003, 0.00388744399999999, 0.003887319, 0.0038872640000000014, 0.0038872920000000144, 0.003887332999999993, 0.0038874029999999837, 0.0038872640000000014, 0.003887222999999995, 0.0038871809999999896, 0.00388693100000001, 0.003887125000000019, 0.0038871530000000043, 0.0038871530000000043, 0.0038871390000000117, 0.0038872359999999884, 0.003886986000000009, 0.0038871379999999844, 0.0038872500000000088, 0.0038871390000000117, 0.003887306000000007, 0.003887083999999985, 0.003887056, 0.0038874309999999968, 0.003887277999999994, 0.0038873480000000127]</msg>
<status status="PASS" starttime="20201029 12:43:35.774" endtime="20201029 12:43:35.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.770" endtime="20201029 12:43:35.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.199" endtime="20201029 12:43:35.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.177" endtime="20201029 12:43:35.778"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.780" endtime="20201029 12:43:35.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.778" endtime="20201029 12:43:35.800"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.808" endtime="20201029 12:43:36.028"></status>
</kw>
<msg timestamp="20201029 12:43:36.029" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.807" endtime="20201029 12:43:36.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.031" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.030" endtime="20201029 12:43:36.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.032" endtime="20201029 12:43:36.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.804" endtime="20201029 12:43:36.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.802" endtime="20201029 12:43:36.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.041" endtime="20201029 12:43:36.354"></status>
</kw>
<msg timestamp="20201029 12:43:36.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.040" endtime="20201029 12:43:36.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.359" endtime="20201029 12:43:36.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.366" endtime="20201029 12:43:36.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.037" endtime="20201029 12:43:36.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.036" endtime="20201029 12:43:36.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.373" level="INFO">${PHILIP_RES} = [{'diff': 0.0040315}, {'diff': 0.004028972000000002}, {'diff': 0.004028986000000002}, {'diff': 0.004029097000000002}, {'diff': 0.0040288199999999955}, {'diff': 0.004029084000000002}, {'diff': 0.004029...</msg>
<status status="PASS" starttime="20201029 12:43:36.370" endtime="20201029 12:43:36.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.377" level="INFO">${RESULT} = {'diff': [0.0040315, 0.004028972000000002, 0.004028986000000002, 0.004029097000000002, 0.0040288199999999955, 0.004029084000000002, 0.004029110999999995, 0.004029027999999997, 0.004029208999999999, 0....</msg>
<status status="PASS" starttime="20201029 12:43:36.374" endtime="20201029 12:43:36.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.381" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.380" endtime="20201029 12:43:36.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.383" level="INFO">VALUE: [0.0040315, 0.004028972000000002, 0.004028986000000002, 0.004029097000000002, 0.0040288199999999955, 0.004029084000000002, 0.004029110999999995, 0.004029027999999997, 0.004029208999999999, 0.004029111000000002, 0.004029263999999998, 0.004029458, 0.004029180999999993, 0.004029277000000012, 0.004029237000000005, 0.004029111000000002, 0.004029041999999997, 0.004028985999999998, 0.0040291249999999945, 0.0040293620000000085, 0.0040292360000000055, 0.004029249999999998, 0.004029097000000009, 0.004029471999999992, 0.004029305999999996, 0.004029332999999982, 0.004029179999999993, 0.004029249999999984, 0.004029278000000025, 0.004029568999999983, 0.004029555000000018, 0.004029361000000009, 0.004029292000000018, 0.004029332999999996, 0.00402941599999998, 0.004029444999999993, 0.004029388999999994, 0.0040295280000000044, 0.004029443999999993, 0.004029569999999982, 0.004029499999999991, 0.004029402000000015, 0.004029472000000006, 0.004029651999999995, 0.004029681000000007, 0.004029597999999995, 0.004029916999999994, 0.004029777999999984, 0.004029417000000007, 0.00402981899999999]</msg>
<status status="PASS" starttime="20201029 12:43:36.382" endtime="20201029 12:43:36.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.377" endtime="20201029 12:43:36.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.801" endtime="20201029 12:43:36.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.778" endtime="20201029 12:43:36.385"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.388" endtime="20201029 12:43:36.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.386" endtime="20201029 12:43:36.408"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.416" endtime="20201029 12:43:36.643"></status>
</kw>
<msg timestamp="20201029 12:43:36.644" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.414" endtime="20201029 12:43:36.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.646" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.645" endtime="20201029 12:43:36.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.647" endtime="20201029 12:43:36.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.412" endtime="20201029 12:43:36.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.410" endtime="20201029 12:43:36.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.657" endtime="20201029 12:43:36.962"></status>
</kw>
<msg timestamp="20201029 12:43:36.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:36.656" endtime="20201029 12:43:36.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017784569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:36.966" endtime="20201029 12:43:36.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.974" endtime="20201029 12:43:36.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.653" endtime="20201029 12:43:36.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.652" endtime="20201029 12:43:36.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.980" level="INFO">${PHILIP_RES} = [{'diff': 0.004176431000000001}, {'diff': 0.004173582999999998}, {'diff': 0.004173457999999998}, {'diff': 0.004173417000000002}, {'diff': 0.004173514000000003}, {'diff': 0.004173723000000004}, {'diff'...</msg>
<status status="PASS" starttime="20201029 12:43:36.977" endtime="20201029 12:43:36.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.984" level="INFO">${RESULT} = {'diff': [0.004176431000000001, 0.004173582999999998, 0.004173457999999998, 0.004173417000000002, 0.004173514000000003, 0.004173723000000004, 0.004173639, 0.004173889, 0.004173805999999995, 0.00417365...</msg>
<status status="PASS" starttime="20201029 12:43:36.981" endtime="20201029 12:43:36.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.989" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.988" endtime="20201029 12:43:36.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.991" level="INFO">VALUE: [0.004176431000000001, 0.004173582999999998, 0.004173457999999998, 0.004173417000000002, 0.004173514000000003, 0.004173723000000004, 0.004173639, 0.004173889, 0.004173805999999995, 0.004173652, 0.004173485999999997, 0.0041732499999999895, 0.004173610999999994, 0.004173846999999994, 0.004173722000000005, 0.00417348599999999, 0.0041735700000000014, 0.004173834000000001, 0.004173610999999994, 0.0041738750000000074, 0.004173625, 0.004173818999999995, 0.004173707999999998, 0.004173778000000003, 0.004173777999999989, 0.0041737639999999965, 0.004173833000000016, 0.0041735830000000085, 0.004173639000000007, 0.004173499999999997, 0.004173929999999992, 0.004173736000000011, 0.004173625000000014, 0.004173833000000016, 0.004173750000000004, 0.004173736000000011, 0.004173819999999995, 0.00417352800000001, 0.004173375000000007, 0.004173431000000005, 0.004173361000000014, 0.004173486000000004, 0.0041734589999999905, 0.004173457999999991, 0.004173707999999998, 0.004173666999999992, 0.004173681000000012, 0.00417352800000001, 0.004173652, 0.004173541000000003]</msg>
<status status="PASS" starttime="20201029 12:43:36.990" endtime="20201029 12:43:36.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.985" endtime="20201029 12:43:36.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.408" endtime="20201029 12:43:36.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.386" endtime="20201029 12:43:36.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.474" endtime="20201029 12:43:36.994"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:12.145" endtime="20201029 12:43:36.994" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:49.777" endtime="20201029 12:43:37.012"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.130" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:37.139" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:38.263" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:37.129" endtime="20201029 12:43:38.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.266" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:43:38.265" endtime="20201029 12:43:38.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.128" endtime="20201029 12:43:38.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.269" endtime="20201029 12:43:38.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.268" endtime="20201029 12:43:38.457"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.470" endtime="20201029 12:43:38.482"></status>
</kw>
<msg timestamp="20201029 12:43:38.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.468" endtime="20201029 12:43:38.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.484" endtime="20201029 12:43:38.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.489" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:38.487" endtime="20201029 12:43:38.489"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:38.466" endtime="20201029 12:43:38.490"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:38.464" endtime="20201029 12:43:38.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.462" endtime="20201029 12:43:38.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:38.496" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:38.495" endtime="20201029 12:43:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.492" endtime="20201029 12:43:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.462" endtime="20201029 12:43:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.461" endtime="20201029 12:43:38.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.497" endtime="20201029 12:43:38.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.460" endtime="20201029 12:43:38.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.500" endtime="20201029 12:43:38.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.458" endtime="20201029 12:43:38.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.126" endtime="20201029 12:43:38.503"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.508" endtime="20201029 12:43:38.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.507" endtime="20201029 12:43:38.531"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.559" endtime="20201029 12:43:38.579"></status>
</kw>
<msg timestamp="20201029 12:43:38.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.556" endtime="20201029 12:43:38.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.582" endtime="20201029 12:43:38.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:38.587" endtime="20201029 12:43:38.592"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:38.551" endtime="20201029 12:43:38.593"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:38.545" endtime="20201029 12:43:38.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.543" endtime="20201029 12:43:38.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:38.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:38.602" endtime="20201029 12:43:38.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.597" endtime="20201029 12:43:38.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.541" endtime="20201029 12:43:38.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.540" endtime="20201029 12:43:38.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.607" endtime="20201029 12:43:38.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.537" endtime="20201029 12:43:38.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.533" endtime="20201029 12:43:38.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.506" endtime="20201029 12:43:38.612"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.626" endtime="20201029 12:43:38.640"></status>
</kw>
<msg timestamp="20201029 12:43:38.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.625" endtime="20201029 12:43:38.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:38.642" endtime="20201029 12:43:38.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.644" endtime="20201029 12:43:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.621" endtime="20201029 12:43:38.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.619" endtime="20201029 12:43:38.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.653" endtime="20201029 12:43:38.950"></status>
</kw>
<msg timestamp="20201029 12:43:38.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.110169125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.110188333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.652" endtime="20201029 12:43:38.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.110169125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.110188333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:38.955" endtime="20201029 12:43:38.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.964" endtime="20201029 12:43:38.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.649" endtime="20201029 12:43:38.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.648" endtime="20201029 12:43:38.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.970" level="INFO">${RESULT} = [{'diff': 1.9207999999992786e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8415999999993327e-05}, {'diff': 1.8417000000006678e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.843099999999931e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:38.967" endtime="20201029 12:43:38.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:38.974" level="INFO">${ACCURACY} = {'diff': [1.9207999999992786e-05, 1.843099999999931e-05, 1.8415999999993327e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8443999999992466e-05, 1.843099999999931e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:38.971" endtime="20201029 12:43:38.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.980" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:38.979" endtime="20201029 12:43:38.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.982" level="INFO">VALUE: [1.9207999999992786e-05, 1.843099999999931e-05, 1.8415999999993327e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8443999999992466e-05, 1.843099999999931e-05, 1.8415999999993327e-05, 1.8457999999998975e-05, 1.8445000000005818e-05, 1.843099999999931e-05, 1.8417000000006678e-05, 1.84169999999928e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8444000000006344e-05, 1.8417000000006678e-05, 1.8499999999990746e-05, 1.8417000000006678e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8417000000006678e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.84169999999928e-05, 1.8429999999999835e-05, 1.84169999999928e-05, 1.8444000000006344e-05, 1.840300000000017e-05, 1.8416000000007204e-05, 1.8389000000007538e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.845899999999845e-05, 1.843099999999931e-05, 1.837500000000103e-05, 1.8485999999998115e-05, 1.843099999999931e-05, 1.8500000000004624e-05, 1.8417000000006678e-05, 1.840300000000017e-05, 1.8457999999998975e-05, 1.8402000000000696e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8473000000004958e-05, 1.843099999999931e-05]</msg>
<status status="PASS" starttime="20201029 12:43:38.981" endtime="20201029 12:43:38.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.975" endtime="20201029 12:43:38.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:38.987" endtime="20201029 12:43:39.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.985" endtime="20201029 12:43:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.984" endtime="20201029 12:43:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.616" endtime="20201029 12:43:39.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.615" endtime="20201029 12:43:39.008"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.016" endtime="20201029 12:43:39.030"></status>
</kw>
<msg timestamp="20201029 12:43:39.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.015" endtime="20201029 12:43:39.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.032" endtime="20201029 12:43:39.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.034" endtime="20201029 12:43:39.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.012" endtime="20201029 12:43:39.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.010" endtime="20201029 12:43:39.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.044" endtime="20201029 12:43:39.328"></status>
</kw>
<msg timestamp="20201029 12:43:39.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.042" endtime="20201029 12:43:39.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.333" endtime="20201029 12:43:39.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.341" endtime="20201029 12:43:39.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.039" endtime="20201029 12:43:39.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.037" endtime="20201029 12:43:39.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.348" level="INFO">${RESULT} = [{'diff': 1.9221999999999295e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.8402000000000696e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.833300000000232e-05}, {'diff': 1.841699999999974e-05...</msg>
<status status="PASS" starttime="20201029 12:43:39.344" endtime="20201029 12:43:39.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.353" level="INFO">${ACCURACY} = {'diff': [1.9221999999999295e-05, 1.8486000000001584e-05, 1.8402000000000696e-05, 1.8429999999999835e-05, 1.833300000000232e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8430000000003305e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:39.349" endtime="20201029 12:43:39.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.357" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.356" endtime="20201029 12:43:39.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.360" level="INFO">VALUE: [1.9221999999999295e-05, 1.8486000000001584e-05, 1.8402000000000696e-05, 1.8429999999999835e-05, 1.833300000000232e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8430000000003305e-05, 1.837500000000103e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.844500000000235e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8402000000000696e-05, 1.8500000000001154e-05, 1.844500000000235e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.843100000000278e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.840300000000017e-05, 1.843100000000278e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8415999999996796e-05, 1.844499999999888e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.844500000000235e-05, 1.841699999999974e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.8402000000000696e-05, 1.840300000000017e-05, 1.844500000000235e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.83890000000006e-05, 1.8402000000000696e-05, 1.8443999999999405e-05, 1.840300000000017e-05, 1.836100000000146e-05, 1.840300000000017e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8485999999998115e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.359" endtime="20201029 12:43:39.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.354" endtime="20201029 12:43:39.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.364" endtime="20201029 12:43:39.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.363" endtime="20201029 12:43:39.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.362" endtime="20201029 12:43:39.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.009" endtime="20201029 12:43:39.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.008" endtime="20201029 12:43:39.385"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.394" endtime="20201029 12:43:39.408"></status>
</kw>
<msg timestamp="20201029 12:43:39.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.392" endtime="20201029 12:43:39.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.409" endtime="20201029 12:43:39.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.412" endtime="20201029 12:43:39.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.390" endtime="20201029 12:43:39.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.388" endtime="20201029 12:43:39.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.421" endtime="20201029 12:43:39.708"></status>
</kw>
<msg timestamp="20201029 12:43:39.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.420" endtime="20201029 12:43:39.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.713" endtime="20201029 12:43:39.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.721" endtime="20201029 12:43:39.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.417" endtime="20201029 12:43:39.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.415" endtime="20201029 12:43:39.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:39.728" level="INFO">${RESULT} = [{'diff': 1.9235999999998865e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8458000000002445e-05}, {'diff': 1.8430000000003305e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8430000000003305e-0...</msg>
<status status="PASS" starttime="20201029 12:43:39.724" endtime="20201029 12:43:39.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:39.732" level="INFO">${ACCURACY} = {'diff': [1.9235999999998865e-05, 1.8429999999999835e-05, 1.8458000000002445e-05, 1.8430000000003305e-05, 1.843099999999931e-05, 1.8430000000003305e-05, 1.843099999999931e-05, 1.8472000000002015e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:39.729" endtime="20201029 12:43:39.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.736" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:39.735" endtime="20201029 12:43:39.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.739" level="INFO">VALUE: [1.9235999999998865e-05, 1.8429999999999835e-05, 1.8458000000002445e-05, 1.8430000000003305e-05, 1.843099999999931e-05, 1.8430000000003305e-05, 1.843099999999931e-05, 1.8472000000002015e-05, 1.8429999999999835e-05, 1.83890000000006e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.845899999999845e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.843100000000278e-05, 1.8500000000001154e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.844500000000235e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.844500000000235e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.837499999999756e-05, 1.8429999999999835e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.844499999999888e-05, 1.8500000000001154e-05, 1.8499999999997685e-05, 1.8429999999999835e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.838899999999713e-05, 1.83890000000006e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.840300000000017e-05, 1.8416000000000265e-05, 1.8416000000000265e-05, 1.8429999999999835e-05]</msg>
<status status="PASS" starttime="20201029 12:43:39.737" endtime="20201029 12:43:39.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.733" endtime="20201029 12:43:39.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:39.743" endtime="20201029 12:43:39.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.742" endtime="20201029 12:43:39.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.741" endtime="20201029 12:43:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.386" endtime="20201029 12:43:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.385" endtime="20201029 12:43:39.764"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.773" endtime="20201029 12:43:39.787"></status>
</kw>
<msg timestamp="20201029 12:43:39.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.771" endtime="20201029 12:43:39.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:39.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:39.789" endtime="20201029 12:43:39.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.792" endtime="20201029 12:43:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.769" endtime="20201029 12:43:39.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.766" endtime="20201029 12:43:39.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:39.801" endtime="20201029 12:43:40.088"></status>
</kw>
<msg timestamp="20201029 12:43:40.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:39.799" endtime="20201029 12:43:40.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022251931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.092" endtime="20201029 12:43:40.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.101" endtime="20201029 12:43:40.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.797" endtime="20201029 12:43:40.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.795" endtime="20201029 12:43:40.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.108" level="INFO">${RESULT} = [{'diff': 1.9221999999999295e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8444000000002875e-05}, {'diff': 1.844499999999888e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.8429999999999835e-05...</msg>
<status status="PASS" starttime="20201029 12:43:40.104" endtime="20201029 12:43:40.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.112" level="INFO">${ACCURACY} = {'diff': [1.9221999999999295e-05, 1.843099999999931e-05, 1.8444000000002875e-05, 1.844499999999888e-05, 1.8486000000001584e-05, 1.8429999999999835e-05, 1.843100000000278e-05, 1.843099999999931e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:40.109" endtime="20201029 12:43:40.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.116" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.115" endtime="20201029 12:43:40.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.119" level="INFO">VALUE: [1.9221999999999295e-05, 1.843099999999931e-05, 1.8444000000002875e-05, 1.844499999999888e-05, 1.8486000000001584e-05, 1.8429999999999835e-05, 1.843100000000278e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.843100000000278e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8486000000001584e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8486000000001584e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.843100000000278e-05, 1.845900000000192e-05, 1.843099999999931e-05, 1.8471999999998545e-05, 1.843100000000278e-05, 1.83890000000006e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.844499999999888e-05, 1.8348000000001363e-05, 1.843099999999931e-05, 1.8499999999997685e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8471999999998545e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.117" endtime="20201029 12:43:40.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.113" endtime="20201029 12:43:40.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.124" endtime="20201029 12:43:40.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.123" endtime="20201029 12:43:40.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.121" endtime="20201029 12:43:40.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.765" endtime="20201029 12:43:40.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:39.764" endtime="20201029 12:43:40.145"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.154" endtime="20201029 12:43:40.168"></status>
</kw>
<msg timestamp="20201029 12:43:40.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.152" endtime="20201029 12:43:40.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.169" endtime="20201029 12:43:40.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.172" endtime="20201029 12:43:40.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.149" endtime="20201029 12:43:40.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.147" endtime="20201029 12:43:40.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.182" endtime="20201029 12:43:40.469"></status>
</kw>
<msg timestamp="20201029 12:43:40.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.180" endtime="20201029 12:43:40.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021926403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.473" endtime="20201029 12:43:40.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.481" endtime="20201029 12:43:40.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.177" endtime="20201029 12:43:40.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.175" endtime="20201029 12:43:40.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.488" level="INFO">${RESULT} = [{'diff': 1.9235999999998865e-05}, {'diff': 1.843100000000278e-05}, {'diff': 1.8402000000000696e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.844499999999888e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:40.485" endtime="20201029 12:43:40.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.493" level="INFO">${ACCURACY} = {'diff': [1.9235999999998865e-05, 1.843100000000278e-05, 1.8402000000000696e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:43:40.489" endtime="20201029 12:43:40.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.498" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.497" endtime="20201029 12:43:40.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.500" level="INFO">VALUE: [1.9235999999998865e-05, 1.843100000000278e-05, 1.8402000000000696e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.834700000000189e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.840300000000017e-05, 1.8443999999999405e-05, 1.845899999999845e-05, 1.8362000000000933e-05, 1.836100000000146e-05, 1.8401999999997226e-05, 1.843099999999931e-05, 1.841700000000321e-05, 1.8443999999999405e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8499999999997685e-05, 1.8443999999999405e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.836099999999799e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.8485999999998115e-05, 1.8429999999999835e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.843100000000278e-05, 1.8472000000002015e-05, 1.8485999999998115e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.499" endtime="20201029 12:43:40.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.494" endtime="20201029 12:43:40.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.505" endtime="20201029 12:43:40.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.503" endtime="20201029 12:43:40.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.502" endtime="20201029 12:43:40.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.146" endtime="20201029 12:43:40.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.145" endtime="20201029 12:43:40.526"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.539" endtime="20201029 12:43:40.554"></status>
</kw>
<msg timestamp="20201029 12:43:40.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.537" endtime="20201029 12:43:40.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.556" endtime="20201029 12:43:40.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.558" endtime="20201029 12:43:40.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.534" endtime="20201029 12:43:40.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.531" endtime="20201029 12:43:40.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.567" endtime="20201029 12:43:40.855"></status>
</kw>
<msg timestamp="20201029 12:43:40.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027683417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027702639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.566" endtime="20201029 12:43:40.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027683417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027702639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.860" endtime="20201029 12:43:40.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.869" endtime="20201029 12:43:40.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.563" endtime="20201029 12:43:40.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.562" endtime="20201029 12:43:40.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:40.876" level="INFO">${RESULT} = [{'diff': 1.9222000000002765e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3486000000003115e-05}, {'diff': 2.341700000000127e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 1.844499999999888e-05...</msg>
<status status="PASS" starttime="20201029 12:43:40.873" endtime="20201029 12:43:40.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:40.880" level="INFO">${ACCURACY} = {'diff': [1.9222000000002765e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.341700000000127e-05, 2.3458000000000506e-05, 1.844499999999888e-05, 1.837499999999756e-05, 2.3499999999999216e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:40.877" endtime="20201029 12:43:40.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.884" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:40.883" endtime="20201029 12:43:40.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.887" level="INFO">VALUE: [1.9222000000002765e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.341700000000127e-05, 2.3458000000000506e-05, 1.844499999999888e-05, 1.837499999999756e-05, 2.3499999999999216e-05, 2.345899999999998e-05, 2.3499999999999216e-05, 1.8429999999999835e-05, 2.341700000000127e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.347299999999955e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3415999999998327e-05, 1.841699999999974e-05, 2.3527999999998356e-05, 2.3458000000000506e-05, 1.8443999999999405e-05, 2.345899999999998e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 1.8429999999999835e-05, 2.3472000000000076e-05, 1.8429999999999835e-05, 1.843099999999931e-05, 2.3472000000000076e-05, 2.3514000000002255e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.351300000000278e-05, 2.3457999999997037e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 1.841699999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:43:40.886" endtime="20201029 12:43:40.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.881" endtime="20201029 12:43:40.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:40.892" endtime="20201029 12:43:40.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.890" endtime="20201029 12:43:40.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.889" endtime="20201029 12:43:40.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.528" endtime="20201029 12:43:40.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.527" endtime="20201029 12:43:40.913"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.925" endtime="20201029 12:43:40.941"></status>
</kw>
<msg timestamp="20201029 12:43:40.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.923" endtime="20201029 12:43:40.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:40.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:40.943" endtime="20201029 12:43:40.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.946" endtime="20201029 12:43:40.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.919" endtime="20201029 12:43:40.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.916" endtime="20201029 12:43:40.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:40.956" endtime="20201029 12:43:41.243"></status>
</kw>
<msg timestamp="20201029 12:43:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026370917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:40.955" endtime="20201029 12:43:41.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026346639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026370917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.247" endtime="20201029 12:43:41.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.255" endtime="20201029 12:43:41.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.952" endtime="20201029 12:43:41.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.951" endtime="20201029 12:43:41.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.262" level="INFO">${RESULT} = [{'diff': 2.4277999999999106e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3486000000003115e-05}, {'diff': 2.3444000000000936e-...</msg>
<status status="PASS" starttime="20201029 12:43:41.259" endtime="20201029 12:43:41.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.266" level="INFO">${ACCURACY} = {'diff': [2.4277999999999106e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.3444000000000936e-05, 2.3486000000003115e-05, 2.3472000000000076e-05...</msg>
<status status="PASS" starttime="20201029 12:43:41.263" endtime="20201029 12:43:41.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.271" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.270" endtime="20201029 12:43:41.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.273" level="INFO">VALUE: [2.4277999999999106e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3486000000003115e-05, 2.3444000000000936e-05, 2.3486000000003115e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.348699999999912e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.343100000000084e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3472000000000076e-05, 2.348700000000259e-05, 2.347299999999955e-05, 2.347300000000302e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3457999999997037e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.344500000000041e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.272" endtime="20201029 12:43:41.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.267" endtime="20201029 12:43:41.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.279" endtime="20201029 12:43:41.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.278" endtime="20201029 12:43:41.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.276" endtime="20201029 12:43:41.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.914" endtime="20201029 12:43:41.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:40.913" endtime="20201029 12:43:41.300"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.308" endtime="20201029 12:43:41.322"></status>
</kw>
<msg timestamp="20201029 12:43:41.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.307" endtime="20201029 12:43:41.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.324" endtime="20201029 12:43:41.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.326" endtime="20201029 12:43:41.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.304" endtime="20201029 12:43:41.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.302" endtime="20201029 12:43:41.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.336" endtime="20201029 12:43:41.622"></status>
</kw>
<msg timestamp="20201029 12:43:41.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:41.334" endtime="20201029 12:43:41.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02146375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021488028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:41.626" endtime="20201029 12:43:41.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.634" endtime="20201029 12:43:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.331" endtime="20201029 12:43:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.330" endtime="20201029 12:43:41.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:41.641" level="INFO">${RESULT} = [{'diff': 2.4277999999999106e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3444000000000936e-05}, {'diff': 2.3499999999999216e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3514000000002255e-...</msg>
<status status="PASS" starttime="20201029 12:43:41.638" endtime="20201029 12:43:41.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:41.646" level="INFO">${ACCURACY} = {'diff': [2.4277999999999106e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.3514000000002255e-05, 2.345899999999998e-05, 2.3458000000000506e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:41.642" endtime="20201029 12:43:41.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.651" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:41.650" endtime="20201029 12:43:41.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.653" level="INFO">VALUE: [2.4277999999999106e-05, 2.3472000000000076e-05, 2.3444000000000936e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.3514000000002255e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.343100000000084e-05, 2.3542000000001395e-05, 2.3457999999997037e-05, 2.34030000000017e-05, 2.347299999999955e-05, 2.3444000000000936e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.345899999999998e-05, 2.3499999999999216e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3443999999997467e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3443999999997467e-05, 2.3513999999998786e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.34030000000017e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.345899999999998e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201029 12:43:41.652" endtime="20201029 12:43:41.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.647" endtime="20201029 12:43:41.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:41.658" endtime="20201029 12:43:41.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.657" endtime="20201029 12:43:41.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.655" endtime="20201029 12:43:41.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.301" endtime="20201029 12:43:41.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.300" endtime="20201029 12:43:41.679"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.688" endtime="20201029 12:43:41.701"></status>
</kw>
<msg timestamp="20201029 12:43:41.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.686" endtime="20201029 12:43:41.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:41.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:41.703" endtime="20201029 12:43:41.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.705" endtime="20201029 12:43:41.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.683" endtime="20201029 12:43:41.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.681" endtime="20201029 12:43:41.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:41.715" endtime="20201029 12:43:42.007"></status>
</kw>
<msg timestamp="20201029 12:43:42.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:41.713" endtime="20201029 12:43:42.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.011" endtime="20201029 12:43:42.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.019" endtime="20201029 12:43:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.710" endtime="20201029 12:43:42.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.709" endtime="20201029 12:43:42.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.026" level="INFO">${RESULT} = [{'diff': 2.4291999999998676e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.3472000000000076e-...</msg>
<status status="PASS" starttime="20201029 12:43:42.023" endtime="20201029 12:43:42.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.030" level="INFO">${ACCURACY} = {'diff': [2.4291999999998676e-05, 2.3485999999999646e-05, 2.3513999999998786e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.345899999999998e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:42.027" endtime="20201029 12:43:42.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.034" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.033" endtime="20201029 12:43:42.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.037" level="INFO">VALUE: [2.4291999999998676e-05, 2.3485999999999646e-05, 2.3513999999998786e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.343100000000084e-05, 2.343100000000084e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.338900000000213e-05, 2.3430000000001366e-05, 2.3458000000000506e-05, 2.347299999999955e-05, 2.3458000000000506e-05, 2.3444000000000936e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3430000000001366e-05, 2.3458000000000506e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.345899999999998e-05, 2.347299999999955e-05, 2.338900000000213e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.3430000000001366e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3444000000000936e-05, 2.3485999999999646e-05, 2.347299999999955e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.3457999999997037e-05, 2.348699999999912e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.344500000000041e-05, 2.3458000000000506e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.035" endtime="20201029 12:43:42.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.031" endtime="20201029 12:43:42.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.042" endtime="20201029 12:43:42.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.040" endtime="20201029 12:43:42.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.039" endtime="20201029 12:43:42.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.680" endtime="20201029 12:43:42.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:41.679" endtime="20201029 12:43:42.062"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.071" endtime="20201029 12:43:42.086"></status>
</kw>
<msg timestamp="20201029 12:43:42.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.070" endtime="20201029 12:43:42.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.088" endtime="20201029 12:43:42.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.090" endtime="20201029 12:43:42.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.067" endtime="20201029 12:43:42.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.065" endtime="20201029 12:43:42.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.099" endtime="20201029 12:43:42.385"></status>
</kw>
<msg timestamp="20201029 12:43:42.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.098" endtime="20201029 12:43:42.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022463431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.389" endtime="20201029 12:43:42.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.398" endtime="20201029 12:43:42.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.095" endtime="20201029 12:43:42.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.093" endtime="20201029 12:43:42.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.404" level="INFO">${RESULT} = [{'diff': 2.4276999999999632e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3472000000000076e-05}, {'diff': 2.3458000000000506e-...</msg>
<status status="PASS" starttime="20201029 12:43:42.401" endtime="20201029 12:43:42.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.409" level="INFO">${ACCURACY} = {'diff': [2.4276999999999632e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3513999999998786e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:42.405" endtime="20201029 12:43:42.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.413" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.412" endtime="20201029 12:43:42.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.415" level="INFO">VALUE: [2.4276999999999632e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3458000000000506e-05, 2.345899999999998e-05, 2.3513999999998786e-05, 2.3443999999997467e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3513999999998786e-05, 2.348699999999912e-05, 2.344500000000041e-05, 2.3416000000001796e-05, 2.347299999999955e-05, 2.3472000000000076e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.345899999999998e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.348700000000259e-05, 2.3527999999998356e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3416000000001796e-05, 2.3472000000000076e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3457999999997037e-05, 2.347300000000302e-05, 2.345899999999998e-05, 2.3457999999997037e-05, 2.340299999999823e-05, 2.345899999999998e-05, 2.345900000000345e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.3472000000000076e-05, 2.347299999999955e-05, 2.3429999999997897e-05, 2.3472000000000076e-05, 2.3485999999999646e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.414" endtime="20201029 12:43:42.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.409" endtime="20201029 12:43:42.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.421" endtime="20201029 12:43:42.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.420" endtime="20201029 12:43:42.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.419" endtime="20201029 12:43:42.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.063" endtime="20201029 12:43:42.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.063" endtime="20201029 12:43:42.442"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.451" endtime="20201029 12:43:42.465"></status>
</kw>
<msg timestamp="20201029 12:43:42.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.449" endtime="20201029 12:43:42.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.467" endtime="20201029 12:43:42.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.469" endtime="20201029 12:43:42.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.447" endtime="20201029 12:43:42.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.444" endtime="20201029 12:43:42.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.478" endtime="20201029 12:43:42.765"></status>
</kw>
<msg timestamp="20201029 12:43:42.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.477" endtime="20201029 12:43:42.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.769" endtime="20201029 12:43:42.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.778" endtime="20201029 12:43:42.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.474" endtime="20201029 12:43:42.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.473" endtime="20201029 12:43:42.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:42.784" level="INFO">${RESULT} = [{'diff': 2.9346999999999013e-05}, {'diff': 2.8526999999996944e-05}, {'diff': 2.3485999999999646e-05}, {'diff': 2.8541999999999457e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.3472000000000076e-...</msg>
<status status="PASS" starttime="20201029 12:43:42.781" endtime="20201029 12:43:42.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:42.789" level="INFO">${ACCURACY} = {'diff': [2.9346999999999013e-05, 2.8526999999996944e-05, 2.3485999999999646e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.3472000000000076e-05, 2.8500000000000747e-05, 2.8500000000000747e-05...</msg>
<status status="PASS" starttime="20201029 12:43:42.785" endtime="20201029 12:43:42.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.794" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:42.793" endtime="20201029 12:43:42.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.796" level="INFO">VALUE: [2.9346999999999013e-05, 2.8526999999996944e-05, 2.3485999999999646e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.3472000000000076e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8512999999997374e-05, 2.3472000000000076e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8527999999999887e-05, 2.8569999999998597e-05, 2.3472000000000076e-05, 2.8500000000000747e-05, 2.8540999999999983e-05, 2.8528000000003356e-05, 2.8597000000001732e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.3472000000000076e-05, 2.8513999999996847e-05, 2.8500000000000747e-05, 2.3471999999996607e-05, 2.8554999999999553e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.844499999999847e-05, 2.8527999999999887e-05, 2.8457999999998568e-05, 2.8527999999999887e-05, 2.8554999999999553e-05, 2.8570000000002066e-05, 2.8527999999999887e-05, 2.8499999999997278e-05, 2.8486000000001177e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8527000000000413e-05, 2.345899999999998e-05, 2.3458000000000506e-05, 2.3415999999998327e-05]</msg>
<status status="PASS" starttime="20201029 12:43:42.795" endtime="20201029 12:43:42.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.790" endtime="20201029 12:43:42.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.801" endtime="20201029 12:43:42.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.800" endtime="20201029 12:43:42.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.799" endtime="20201029 12:43:42.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.443" endtime="20201029 12:43:42.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.442" endtime="20201029 12:43:42.822"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.831" endtime="20201029 12:43:42.845"></status>
</kw>
<msg timestamp="20201029 12:43:42.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.829" endtime="20201029 12:43:42.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.847" endtime="20201029 12:43:42.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.850" endtime="20201029 12:43:42.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.827" endtime="20201029 12:43:42.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.825" endtime="20201029 12:43:42.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.859" endtime="20201029 12:43:43.145"></status>
</kw>
<msg timestamp="20201029 12:43:43.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:42.857" endtime="20201029 12:43:43.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.149" endtime="20201029 12:43:43.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.157" endtime="20201029 12:43:43.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.855" endtime="20201029 12:43:43.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.853" endtime="20201029 12:43:43.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.164" level="INFO">${RESULT} = [{'diff': 2.9333999999998916e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8555999999999027e-05}, {'diff': 2.8514000000000317e-...</msg>
<status status="PASS" starttime="20201029 12:43:43.161" endtime="20201029 12:43:43.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.168" level="INFO">${ACCURACY} = {'diff': [2.9333999999998916e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8486000000001177e-05...</msg>
<status status="PASS" starttime="20201029 12:43:43.165" endtime="20201029 12:43:43.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.173" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.172" endtime="20201029 12:43:43.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.175" level="INFO">VALUE: [2.9333999999998916e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8540999999999983e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8514000000000317e-05, 2.8513999999996847e-05, 2.8584000000001636e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8569000000002592e-05, 2.8458000000002037e-05, 2.8513999999996847e-05, 2.8513999999996847e-05, 2.8568999999999123e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8512999999997374e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8555000000003022e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.8555999999999027e-05, 2.8499999999997278e-05, 2.8540999999999983e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8514000000000317e-05, 2.8513999999996847e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8569000000002592e-05, 2.8500000000000747e-05, 2.8486000000001177e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.174" endtime="20201029 12:43:43.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.169" endtime="20201029 12:43:43.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.180" endtime="20201029 12:43:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.179" endtime="20201029 12:43:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.177" endtime="20201029 12:43:43.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.823" endtime="20201029 12:43:43.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.823" endtime="20201029 12:43:43.201"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.210" endtime="20201029 12:43:43.225"></status>
</kw>
<msg timestamp="20201029 12:43:43.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.208" endtime="20201029 12:43:43.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.227" endtime="20201029 12:43:43.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.229" endtime="20201029 12:43:43.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.205" endtime="20201029 12:43:43.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.203" endtime="20201029 12:43:43.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.238" endtime="20201029 12:43:43.525"></status>
</kw>
<msg timestamp="20201029 12:43:43.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.236" endtime="20201029 12:43:43.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022608431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.529" endtime="20201029 12:43:43.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.538" endtime="20201029 12:43:43.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.234" endtime="20201029 12:43:43.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.232" endtime="20201029 12:43:43.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.544" level="INFO">${RESULT} = [{'diff': 2.9319999999999347e-05}, {'diff': 2.8458000000002037e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.8500000000000747e-...</msg>
<status status="PASS" starttime="20201029 12:43:43.541" endtime="20201029 12:43:43.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.549" level="INFO">${ACCURACY} = {'diff': [2.9319999999999347e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8584000000001636e-05...</msg>
<status status="PASS" starttime="20201029 12:43:43.545" endtime="20201029 12:43:43.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.553" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.552" endtime="20201029 12:43:43.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.556" level="INFO">VALUE: [2.9319999999999347e-05, 2.8458000000002037e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8584000000001636e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8485999999997708e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8513999999996847e-05, 2.8514000000000317e-05, 2.8554999999999553e-05, 2.8486000000001177e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8485999999997708e-05, 2.8514000000000317e-05, 2.8471999999998138e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8596999999998263e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8527999999999887e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8499999999997278e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.554" endtime="20201029 12:43:43.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.550" endtime="20201029 12:43:43.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.567" endtime="20201029 12:43:43.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.565" endtime="20201029 12:43:43.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.564" endtime="20201029 12:43:43.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.202" endtime="20201029 12:43:43.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.201" endtime="20201029 12:43:43.587"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.596" endtime="20201029 12:43:43.611"></status>
</kw>
<msg timestamp="20201029 12:43:43.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.594" endtime="20201029 12:43:43.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.612" endtime="20201029 12:43:43.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.615" endtime="20201029 12:43:43.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.592" endtime="20201029 12:43:43.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.590" endtime="20201029 12:43:43.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.624" endtime="20201029 12:43:43.909"></status>
</kw>
<msg timestamp="20201029 12:43:43.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.622" endtime="20201029 12:43:43.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.914" endtime="20201029 12:43:43.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.922" endtime="20201029 12:43:43.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.619" endtime="20201029 12:43:43.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.618" endtime="20201029 12:43:43.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.929" level="INFO">${RESULT} = [{'diff': 2.9333999999998916e-05}, {'diff': 2.8570000000002066e-05}, {'diff': 2.8499999999997278e-05}, {'diff': 2.8513999999996847e-05}, {'diff': 2.8500000000000747e-05}, {'diff': 2.8514000000000317e-...</msg>
<status status="PASS" starttime="20201029 12:43:43.926" endtime="20201029 12:43:43.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.934" level="INFO">${ACCURACY} = {'diff': [2.9333999999998916e-05, 2.8570000000002066e-05, 2.8499999999997278e-05, 2.8513999999996847e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.844500000000194e-05, 2.8556000000002496e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:43.930" endtime="20201029 12:43:43.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.939" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.938" endtime="20201029 12:43:43.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.941" level="INFO">VALUE: [2.9333999999998916e-05, 2.8570000000002066e-05, 2.8499999999997278e-05, 2.8513999999996847e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.844500000000194e-05, 2.8556000000002496e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8512999999997374e-05, 2.8514000000000317e-05, 2.8541999999999457e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.8513999999996847e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8513999999996847e-05, 2.8458000000002037e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8527000000000413e-05, 2.8514000000000317e-05, 2.845899999999804e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.847299999999761e-05, 2.845900000000151e-05, 2.8500000000000747e-05, 2.8500000000000747e-05, 2.8443999999998998e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8554999999999553e-05, 2.8541999999999457e-05, 2.8499999999997278e-05, 2.8485999999997708e-05, 2.8514000000000317e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201029 12:43:43.940" endtime="20201029 12:43:43.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.935" endtime="20201029 12:43:43.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.946" endtime="20201029 12:43:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.945" endtime="20201029 12:43:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.943" endtime="20201029 12:43:43.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.588" endtime="20201029 12:43:43.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.588" endtime="20201029 12:43:43.967"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.976" endtime="20201029 12:43:43.990"></status>
</kw>
<msg timestamp="20201029 12:43:43.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.974" endtime="20201029 12:43:43.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.992" endtime="20201029 12:43:43.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.994" endtime="20201029 12:43:43.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.971" endtime="20201029 12:43:43.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.969" endtime="20201029 12:43:43.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.003" endtime="20201029 12:43:44.291"></status>
</kw>
<msg timestamp="20201029 12:43:44.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.002" endtime="20201029 12:43:44.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.297" endtime="20201029 12:43:44.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.306" endtime="20201029 12:43:44.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.999" endtime="20201029 12:43:44.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.997" endtime="20201029 12:43:44.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.314" level="INFO">${RESULT} = [{'diff': 2.9305999999999777e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8540999999999983e-05}, {'diff': 2.8569000000002592e-05}, {'diff': 2.848700000000065e-05}, {'diff': 2.8499999999997278e-0...</msg>
<status status="PASS" starttime="20201029 12:43:44.310" endtime="20201029 12:43:44.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.319" level="INFO">${ACCURACY} = {'diff': [2.9305999999999777e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.8569000000002592e-05, 2.848700000000065e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8514000000000317e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:44.316" endtime="20201029 12:43:44.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.325" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.324" endtime="20201029 12:43:44.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.328" level="INFO">VALUE: [2.9305999999999777e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.8569000000002592e-05, 2.848700000000065e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8527999999999887e-05, 2.8569000000002592e-05, 2.8527999999999887e-05, 2.8569000000002592e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.8514000000000317e-05, 2.8486000000001177e-05, 2.8540999999999983e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8458000000002037e-05, 2.8541999999999457e-05, 2.8541999999999457e-05, 2.8500000000000747e-05, 2.8499999999997278e-05, 2.8514000000000317e-05, 2.8555000000003022e-05, 2.8514000000000317e-05, 2.8513000000000843e-05, 2.8500000000000747e-05, 2.8568999999999123e-05, 2.8513999999996847e-05, 2.8457999999998568e-05, 2.8514000000000317e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8499999999997278e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.8555999999999027e-05, 2.8514000000000317e-05, 2.8500000000000747e-05, 2.8499999999997278e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.327" endtime="20201029 12:43:44.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.320" endtime="20201029 12:43:44.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.335" endtime="20201029 12:43:44.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.333" endtime="20201029 12:43:44.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.332" endtime="20201029 12:43:44.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.968" endtime="20201029 12:43:44.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.967" endtime="20201029 12:43:44.357"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.366" endtime="20201029 12:43:44.382"></status>
</kw>
<msg timestamp="20201029 12:43:44.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.364" endtime="20201029 12:43:44.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.383" endtime="20201029 12:43:44.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.386" endtime="20201029 12:43:44.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.362" endtime="20201029 12:43:44.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.360" endtime="20201029 12:43:44.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.395" endtime="20201029 12:43:44.681"></status>
</kw>
<msg timestamp="20201029 12:43:44.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023610514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.393" endtime="20201029 12:43:44.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023610514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023639819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.685" endtime="20201029 12:43:44.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.694" endtime="20201029 12:43:44.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.391" endtime="20201029 12:43:44.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.389" endtime="20201029 12:43:44.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.701" level="INFO">${RESULT} = [{'diff': 2.9305000000000303e-05}, {'diff': 3.359799999999927e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.3541000000001514e-05}, {'diff': 3.3555000000001084e-0...</msg>
<status status="PASS" starttime="20201029 12:43:44.697" endtime="20201029 12:43:44.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.705" level="INFO">${ACCURACY} = {'diff': [2.9305000000000303e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 2.8486000000001177e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:44.702" endtime="20201029 12:43:44.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.709" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.708" endtime="20201029 12:43:44.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.712" level="INFO">VALUE: [2.9305000000000303e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 2.8486000000001177e-05, 3.3568999999997184e-05, 3.35839999999997e-05, 3.3569000000000654e-05, 2.8514000000000317e-05, 3.357000000000013e-05, 3.354200000000099e-05, 2.8500000000000747e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.3554999999997615e-05, 3.355599999999709e-05, 2.8514000000000317e-05, 3.3527000000001944e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3568999999997184e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.348599999999924e-05, 3.354200000000099e-05, 3.357000000000013e-05, 3.352799999999795e-05, 2.8500000000000747e-05, 3.349999999999881e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.355600000000056e-05, 2.8500000000000747e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.355599999999709e-05, 3.355600000000056e-05, 2.8513000000000843e-05, 3.354200000000099e-05, 3.355599999999709e-05, 3.359800000000274e-05, 3.355600000000056e-05, 2.8500000000000747e-05]</msg>
<status status="PASS" starttime="20201029 12:43:44.710" endtime="20201029 12:43:44.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.705" endtime="20201029 12:43:44.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.718" endtime="20201029 12:43:44.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.716" endtime="20201029 12:43:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.715" endtime="20201029 12:43:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.358" endtime="20201029 12:43:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.357" endtime="20201029 12:43:44.738"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.747" endtime="20201029 12:43:44.762"></status>
</kw>
<msg timestamp="20201029 12:43:44.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.745" endtime="20201029 12:43:44.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.763" endtime="20201029 12:43:44.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.766" endtime="20201029 12:43:44.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.743" endtime="20201029 12:43:44.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.741" endtime="20201029 12:43:44.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.775" endtime="20201029 12:43:45.061"></status>
</kw>
<msg timestamp="20201029 12:43:45.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.773" endtime="20201029 12:43:45.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.066" endtime="20201029 12:43:45.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.074" endtime="20201029 12:43:45.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.771" endtime="20201029 12:43:45.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.769" endtime="20201029 12:43:45.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.081" level="INFO">${RESULT} = [{'diff': 3.4361000000000114e-05}, {'diff': 3.355599999999709e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.351399999999838e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3540999999998045e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:45.078" endtime="20201029 12:43:45.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.086" level="INFO">${ACCURACY} = {'diff': [3.4361000000000114e-05, 3.355599999999709e-05, 3.355600000000056e-05, 3.351399999999838e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 12:43:45.082" endtime="20201029 12:43:45.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.090" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.089" endtime="20201029 12:43:45.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.093" level="INFO">VALUE: [3.4361000000000114e-05, 3.355599999999709e-05, 3.355600000000056e-05, 3.351399999999838e-05, 3.354200000000099e-05, 3.3540999999998045e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.3596999999999794e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354199999999752e-05, 3.354199999999752e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.3527000000001944e-05, 3.3569000000000654e-05, 3.3554999999997615e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.3540999999998045e-05, 3.355600000000056e-05, 3.347199999999967e-05, 3.359799999999927e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.350000000000228e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.349999999999881e-05, 3.354200000000099e-05, 3.3554999999997615e-05, 3.352799999999795e-05, 3.357000000000013e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.3540999999998045e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3.34580000000001e-05, 3.3555000000001084e-05, 3.3540999999998045e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.091" endtime="20201029 12:43:45.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.087" endtime="20201029 12:43:45.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.098" endtime="20201029 12:43:45.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.096" endtime="20201029 12:43:45.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.095" endtime="20201029 12:43:45.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.739" endtime="20201029 12:43:45.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.739" endtime="20201029 12:43:45.119"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.127" endtime="20201029 12:43:45.142"></status>
</kw>
<msg timestamp="20201029 12:43:45.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.126" endtime="20201029 12:43:45.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.144" endtime="20201029 12:43:45.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.146" endtime="20201029 12:43:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.123" endtime="20201029 12:43:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.121" endtime="20201029 12:43:45.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.155" endtime="20201029 12:43:45.445"></status>
</kw>
<msg timestamp="20201029 12:43:45.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.154" endtime="20201029 12:43:45.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.450" endtime="20201029 12:43:45.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.458" endtime="20201029 12:43:45.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.151" endtime="20201029 12:43:45.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.149" endtime="20201029 12:43:45.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.465" level="INFO">${RESULT} = [{'diff': 3.4402999999998823e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.349999999999881e-05}, {'diff': 3.351400000000185e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:45.462" endtime="20201029 12:43:45.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.469" level="INFO">${ACCURACY} = {'diff': [3.4402999999998823e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.349999999999881e-05, 3.351400000000185e-05, 3.355599999999709e-05, 3.3526999999998475e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 12:43:45.466" endtime="20201029 12:43:45.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.473" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.472" endtime="20201029 12:43:45.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.476" level="INFO">VALUE: [3.4402999999998823e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.349999999999881e-05, 3.351400000000185e-05, 3.355599999999709e-05, 3.3526999999998475e-05, 3.357000000000013e-05, 3.3554999999997615e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.354200000000099e-05, 3.3568999999997184e-05, 3.354200000000099e-05, 3.355599999999709e-05, 3.3555000000001084e-05, 3.352799999999795e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3540999999998045e-05, 3.3583000000000224e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.35839999999997e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.352799999999795e-05, 3.352799999999795e-05, 3.3541000000001514e-05, 3.349999999999881e-05, 3.352800000000142e-05, 3.3540999999998045e-05, 3.3540999999998045e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.355600000000056e-05, 3.3540999999998045e-05, 3.3541000000001514e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.354200000000099e-05, 3.35839999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.474" endtime="20201029 12:43:45.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.470" endtime="20201029 12:43:45.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.481" endtime="20201029 12:43:45.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.479" endtime="20201029 12:43:45.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.478" endtime="20201029 12:43:45.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.120" endtime="20201029 12:43:45.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.119" endtime="20201029 12:43:45.502"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.510" endtime="20201029 12:43:45.526"></status>
</kw>
<msg timestamp="20201029 12:43:45.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.509" endtime="20201029 12:43:45.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.528" endtime="20201029 12:43:45.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.530" endtime="20201029 12:43:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.506" endtime="20201029 12:43:45.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.504" endtime="20201029 12:43:45.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.539" endtime="20201029 12:43:45.825"></status>
</kw>
<msg timestamp="20201029 12:43:45.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.538" endtime="20201029 12:43:45.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022694069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.829" endtime="20201029 12:43:45.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.838" endtime="20201029 12:43:45.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.535" endtime="20201029 12:43:45.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.533" endtime="20201029 12:43:45.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.844" level="INFO">${RESULT} = [{'diff': 3.4347000000000544e-05}, {'diff': 3.359800000000274e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.355600000000056e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:45.841" endtime="20201029 12:43:45.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.848" level="INFO">${ACCURACY} = {'diff': [3.4347000000000544e-05, 3.359800000000274e-05, 3.355600000000056e-05, 3.357000000000013e-05, 3.3569000000000654e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.3527000000001944e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:43:45.845" endtime="20201029 12:43:45.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.853" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.852" endtime="20201029 12:43:45.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.855" level="INFO">VALUE: [3.4347000000000544e-05, 3.359800000000274e-05, 3.355600000000056e-05, 3.357000000000013e-05, 3.3569000000000654e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.3527000000001944e-05, 3.355600000000056e-05, 3.3569000000000654e-05, 3.351400000000185e-05, 3.352800000000142e-05, 3.354199999999752e-05, 3.355600000000056e-05, 3.3527000000001944e-05, 3.354199999999752e-05, 3.352800000000142e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.352800000000142e-05, 3.354200000000099e-05, 3.3610999999999364e-05, 3.352799999999795e-05, 3.357000000000013e-05, 3.351400000000185e-05, 3.352799999999795e-05, 3.352800000000142e-05, 3.3554999999997615e-05, 3.357000000000013e-05, 3.355600000000056e-05, 3.355600000000056e-05, 3.351399999999838e-05, 3.3541000000001514e-05, 3.3555000000001084e-05, 3.352800000000142e-05, 3.352800000000142e-05, 3.357000000000013e-05, 3.3554999999997615e-05, 3.352800000000142e-05, 3.3555000000001084e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3568999999997184e-05, 3.3540999999998045e-05, 3.3527000000001944e-05, 3.352800000000142e-05]</msg>
<status status="PASS" starttime="20201029 12:43:45.854" endtime="20201029 12:43:45.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.849" endtime="20201029 12:43:45.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.861" endtime="20201029 12:43:45.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.860" endtime="20201029 12:43:45.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.859" endtime="20201029 12:43:45.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.503" endtime="20201029 12:43:45.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.502" endtime="20201029 12:43:45.882"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.891" endtime="20201029 12:43:45.905"></status>
</kw>
<msg timestamp="20201029 12:43:45.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.889" endtime="20201029 12:43:45.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.907" endtime="20201029 12:43:45.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.910" endtime="20201029 12:43:45.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.886" endtime="20201029 12:43:45.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.884" endtime="20201029 12:43:45.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.919" endtime="20201029 12:43:46.205"></status>
</kw>
<msg timestamp="20201029 12:43:46.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.917" endtime="20201029 12:43:46.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.210" endtime="20201029 12:43:46.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.218" endtime="20201029 12:43:46.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.915" endtime="20201029 12:43:46.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.913" endtime="20201029 12:43:46.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.224" level="INFO">${RESULT} = [{'diff': 3.4361000000000114e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.354200000000099e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.3555000000001084e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:46.221" endtime="20201029 12:43:46.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.229" level="INFO">${ACCURACY} = {'diff': [3.4361000000000114e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.354199999999752e-05, 3.355600000000056e-05, 3.3...</msg>
<status status="PASS" starttime="20201029 12:43:46.225" endtime="20201029 12:43:46.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.234" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.233" endtime="20201029 12:43:46.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.236" level="INFO">VALUE: [3.4361000000000114e-05, 3.355600000000056e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.354199999999752e-05, 3.355600000000056e-05, 3.3596999999999794e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.3541000000001514e-05, 3.3568999999997184e-05, 3.354200000000099e-05, 3.3527000000001944e-05, 3.349999999999881e-05, 3.355600000000056e-05, 3.3540999999998045e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.3555000000001084e-05, 3.352800000000142e-05, 3.357000000000013e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.3569000000000654e-05, 3.354200000000099e-05, 3.3555000000001084e-05, 3.354199999999752e-05, 3.3555000000001084e-05, 3.355600000000056e-05, 3.3555000000001084e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.3555000000001084e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.355600000000056e-05, 3.354199999999752e-05, 3.3555000000001084e-05, 3.3582999999996754e-05, 3.3569000000000654e-05, 3.349999999999881e-05, 3.351400000000185e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.3555000000001084e-05, 3.3526999999998475e-05, 3.355600000000056e-05, 3.3555000000001084e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.235" endtime="20201029 12:43:46.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.230" endtime="20201029 12:43:46.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.241" endtime="20201029 12:43:46.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.240" endtime="20201029 12:43:46.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.239" endtime="20201029 12:43:46.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.883" endtime="20201029 12:43:46.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.882" endtime="20201029 12:43:46.262"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.271" endtime="20201029 12:43:46.286"></status>
</kw>
<msg timestamp="20201029 12:43:46.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.269" endtime="20201029 12:43:46.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.287" endtime="20201029 12:43:46.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.290" endtime="20201029 12:43:46.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.267" endtime="20201029 12:43:46.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.265" endtime="20201029 12:43:46.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.299" endtime="20201029 12:43:46.586"></status>
</kw>
<msg timestamp="20201029 12:43:46.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.297" endtime="20201029 12:43:46.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.590" endtime="20201029 12:43:46.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.599" endtime="20201029 12:43:46.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.295" endtime="20201029 12:43:46.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.293" endtime="20201029 12:43:46.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.605" level="INFO">${RESULT} = [{'diff': 3.4347000000000544e-05}, {'diff': 3.3554999999997615e-05}, {'diff': 3.352800000000142e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.8596999999997855e-05}, {'diff': 3.352800000000142e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:46.602" endtime="20201029 12:43:46.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.610" level="INFO">${ACCURACY} = {'diff': [3.4347000000000544e-05, 3.3554999999997615e-05, 3.352800000000142e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.352800000000142e-05, 3.8611000000000895e-05, 3.8527000000000006e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:43:46.606" endtime="20201029 12:43:46.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.615" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.614" endtime="20201029 12:43:46.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.617" level="INFO">VALUE: [3.4347000000000544e-05, 3.3554999999997615e-05, 3.352800000000142e-05, 3.85980000000008e-05, 3.8596999999997855e-05, 3.352800000000142e-05, 3.8611000000000895e-05, 3.8527000000000006e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8569000000002185e-05, 3.355600000000056e-05, 3.85980000000008e-05, 3.8610999999997425e-05, 3.352800000000142e-05, 3.855600000000209e-05, 3.8597000000001325e-05, 3.355600000000056e-05, 3.357000000000013e-05, 3.8610999999997425e-05, 3.8666999999999174e-05, 3.858399999999776e-05, 3.8555000000002615e-05, 3.8639000000000034e-05, 3.855600000000209e-05, 3.8597000000001325e-05, 3.855599999999862e-05, 3.8597000000001325e-05, 3.34580000000001e-05, 3.86119999999969e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.8681000000002214e-05, 3.354199999999752e-05, 3.8583000000001755e-05, 3.8554999999999146e-05, 3.8582999999998285e-05, 3.3554999999997615e-05, 3.8582999999998285e-05, 3.357000000000013e-05, 3.8610999999997425e-05, 3.8625000000000465e-05, 3.859799999999733e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.3583000000000224e-05, 3.85980000000008e-05, 3.3540999999998045e-05, 3.856999999999819e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.616" endtime="20201029 12:43:46.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.611" endtime="20201029 12:43:46.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.622" endtime="20201029 12:43:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.621" endtime="20201029 12:43:46.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.619" endtime="20201029 12:43:46.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.263" endtime="20201029 12:43:46.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.263" endtime="20201029 12:43:46.643"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.652" endtime="20201029 12:43:46.667"></status>
</kw>
<msg timestamp="20201029 12:43:46.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.650" endtime="20201029 12:43:46.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.669" endtime="20201029 12:43:46.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.671" endtime="20201029 12:43:46.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.647" endtime="20201029 12:43:46.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.645" endtime="20201029 12:43:46.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.680" endtime="20201029 12:43:46.966"></status>
</kw>
<msg timestamp="20201029 12:43:46.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.679" endtime="20201029 12:43:46.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.971" endtime="20201029 12:43:46.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.979" endtime="20201029 12:43:46.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.676" endtime="20201029 12:43:46.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.674" endtime="20201029 12:43:46.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.986" level="INFO">${RESULT} = [{'diff': 3.9430999999999494e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.8582999999998285e-05}, {'diff': 3.8582999999998285e-05}, {'diff': 3.8597000000001325e-...</msg>
<status status="PASS" starttime="20201029 12:43:46.982" endtime="20201029 12:43:46.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.990" level="INFO">${ACCURACY} = {'diff': [3.9430999999999494e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.851399999999991e-05, 3.8582999999998285e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:46.987" endtime="20201029 12:43:46.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.994" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.993" endtime="20201029 12:43:46.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.997" level="INFO">VALUE: [3.9430999999999494e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.851399999999991e-05, 3.8582999999998285e-05, 3.8596999999997855e-05, 3.8583000000001755e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.8639000000000034e-05, 3.858400000000123e-05, 3.858399999999776e-05, 3.8639000000000034e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.8582999999998285e-05, 3.858399999999776e-05, 3.8583000000001755e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.858400000000123e-05, 3.8569000000002185e-05, 3.852799999999948e-05, 3.8554999999999146e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8568999999998715e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8568999999998715e-05, 3.8596999999997855e-05, 3.8540999999999576e-05, 3.8597000000001325e-05, 3.854199999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:43:46.995" endtime="20201029 12:43:46.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.991" endtime="20201029 12:43:46.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.003" endtime="20201029 12:43:47.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.001" endtime="20201029 12:43:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.000" endtime="20201029 12:43:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.644" endtime="20201029 12:43:47.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.643" endtime="20201029 12:43:47.024"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.032" endtime="20201029 12:43:47.047"></status>
</kw>
<msg timestamp="20201029 12:43:47.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.031" endtime="20201029 12:43:47.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.049" endtime="20201029 12:43:47.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.051" endtime="20201029 12:43:47.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.028" endtime="20201029 12:43:47.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.026" endtime="20201029 12:43:47.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.060" endtime="20201029 12:43:47.346"></status>
</kw>
<msg timestamp="20201029 12:43:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.059" endtime="20201029 12:43:47.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021674903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.351" endtime="20201029 12:43:47.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.359" endtime="20201029 12:43:47.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.056" endtime="20201029 12:43:47.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.054" endtime="20201029 12:43:47.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.366" level="INFO">${RESULT} = [{'diff': 3.943000000000002e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.8596999999997855e-05}, {'diff': 3.858399999999776e-05}, {'diff': 3.858399999999776e-05}, {'diff': 3.859799999999733e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:47.363" endtime="20201029 12:43:47.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.371" level="INFO">${ACCURACY} = {'diff': [3.943000000000002e-05, 3.8652999999999604e-05, 3.8596999999997855e-05, 3.858399999999776e-05, 3.858399999999776e-05, 3.859799999999733e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.86...</msg>
<status status="PASS" starttime="20201029 12:43:47.367" endtime="20201029 12:43:47.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.375" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.374" endtime="20201029 12:43:47.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.378" level="INFO">VALUE: [3.943000000000002e-05, 3.8652999999999604e-05, 3.8596999999997855e-05, 3.858399999999776e-05, 3.858399999999776e-05, 3.859799999999733e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.8610999999997425e-05, 3.8596999999997855e-05, 3.8583000000001755e-05, 3.8610999999997425e-05, 3.852799999999948e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.8611000000000895e-05, 3.854199999999905e-05, 3.8652999999999604e-05, 3.855599999999862e-05, 3.8583000000001755e-05, 3.8611000000000895e-05, 3.8596999999997855e-05, 3.8611000000000895e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.858400000000123e-05, 3.8624999999996995e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8540999999999576e-05, 3.8540999999999576e-05, 3.8625000000000465e-05, 3.8611000000000895e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.858400000000123e-05, 3.8597000000001325e-05, 3.8583000000001755e-05, 3.8653000000003074e-05, 3.8569000000002185e-05, 3.8554999999999146e-05, 3.857000000000166e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.376" endtime="20201029 12:43:47.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.372" endtime="20201029 12:43:47.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.383" endtime="20201029 12:43:47.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.381" endtime="20201029 12:43:47.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.380" endtime="20201029 12:43:47.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.024" endtime="20201029 12:43:47.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.024" endtime="20201029 12:43:47.404"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.413" endtime="20201029 12:43:47.428"></status>
</kw>
<msg timestamp="20201029 12:43:47.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.411" endtime="20201029 12:43:47.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.429" endtime="20201029 12:43:47.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.432" endtime="20201029 12:43:47.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.408" endtime="20201029 12:43:47.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.406" endtime="20201029 12:43:47.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.441" endtime="20201029 12:43:47.726"></status>
</kw>
<msg timestamp="20201029 12:43:47.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.439" endtime="20201029 12:43:47.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021846625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021886014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.731" endtime="20201029 12:43:47.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.739" endtime="20201029 12:43:47.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.436" endtime="20201029 12:43:47.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.435" endtime="20201029 12:43:47.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.746" level="INFO">${RESULT} = [{'diff': 3.9388999999997315e-05}, {'diff': 3.861200000000037e-05}, {'diff': 3.8611000000000895e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.856999999999819e-05}, {'diff': 3.8611000000000895e-05...</msg>
<status status="PASS" starttime="20201029 12:43:47.742" endtime="20201029 12:43:47.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.750" level="INFO">${ACCURACY} = {'diff': [3.9388999999997315e-05, 3.861200000000037e-05, 3.8611000000000895e-05, 3.8652999999999604e-05, 3.856999999999819e-05, 3.8611000000000895e-05, 3.854199999999905e-05, 3.8582999999998285e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:43:47.747" endtime="20201029 12:43:47.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.754" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.753" endtime="20201029 12:43:47.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.757" level="INFO">VALUE: [3.9388999999997315e-05, 3.861200000000037e-05, 3.8611000000000895e-05, 3.8652999999999604e-05, 3.856999999999819e-05, 3.8611000000000895e-05, 3.854199999999905e-05, 3.8582999999998285e-05, 3.858399999999776e-05, 3.8624999999996995e-05, 3.8597000000001325e-05, 3.861200000000037e-05, 3.8582999999998285e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.857000000000166e-05, 3.857000000000166e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.858399999999776e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8596999999997855e-05, 3.857000000000166e-05, 3.8596999999997855e-05, 3.8568999999998715e-05, 3.8596999999997855e-05, 3.858399999999776e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.852800000000295e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.852799999999948e-05, 3.8625000000000465e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8582999999998285e-05, 3.861200000000037e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8568999999998715e-05, 3.8610999999997425e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8596999999997855e-05, 3.85980000000008e-05, 3.8582999999998285e-05, 3.858400000000123e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.755" endtime="20201029 12:43:47.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.751" endtime="20201029 12:43:47.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.762" endtime="20201029 12:43:47.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.760" endtime="20201029 12:43:47.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.759" endtime="20201029 12:43:47.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.404" endtime="20201029 12:43:47.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.404" endtime="20201029 12:43:47.783"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.791" endtime="20201029 12:43:47.807"></status>
</kw>
<msg timestamp="20201029 12:43:47.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.790" endtime="20201029 12:43:47.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.809" endtime="20201029 12:43:47.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.811" endtime="20201029 12:43:47.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.787" endtime="20201029 12:43:47.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.785" endtime="20201029 12:43:47.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.820" endtime="20201029 12:43:48.106"></status>
</kw>
<msg timestamp="20201029 12:43:48.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.819" endtime="20201029 12:43:48.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022484139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022523556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.110" endtime="20201029 12:43:48.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.119" endtime="20201029 12:43:48.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.816" endtime="20201029 12:43:48.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.815" endtime="20201029 12:43:48.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.125" level="INFO">${RESULT} = [{'diff': 3.9416999999999924e-05}, {'diff': 3.85980000000008e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.8582999999998285e-05}, {'diff': 3.8597000000001325e-05}, {'diff': 3.8597000000001325e-05...</msg>
<status status="PASS" starttime="20201029 12:43:48.122" endtime="20201029 12:43:48.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.129" level="INFO">${ACCURACY} = {'diff': [3.9416999999999924e-05, 3.85980000000008e-05, 3.8652999999999604e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:48.126" endtime="20201029 12:43:48.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.134" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.133" endtime="20201029 12:43:48.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.136" level="INFO">VALUE: [3.9416999999999924e-05, 3.85980000000008e-05, 3.8652999999999604e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8611000000000895e-05, 3.85980000000008e-05, 3.8583000000001755e-05, 3.85980000000008e-05, 3.8625000000000465e-05, 3.858400000000123e-05, 3.8582999999998285e-05, 3.8610999999997425e-05, 3.861200000000037e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.8583000000001755e-05, 3.858400000000123e-05, 3.8582999999998285e-05, 3.8582999999998285e-05, 3.8597000000001325e-05, 3.8540999999999576e-05, 3.858400000000123e-05, 3.855600000000209e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.8611000000000895e-05, 3.8596999999997855e-05, 3.8666999999999174e-05, 3.8569000000002185e-05, 3.8597000000001325e-05, 3.859799999999733e-05, 3.8582999999998285e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.8582999999998285e-05, 3.8554999999999146e-05, 3.8666999999999174e-05, 3.8582999999998285e-05, 3.855600000000209e-05, 3.8582999999998285e-05, 3.8596999999997855e-05, 3.855600000000209e-05, 3.8540999999999576e-05, 3.8568999999998715e-05, 3.8568999999998715e-05, 3.8582999999998285e-05, 3.8583000000001755e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.135" endtime="20201029 12:43:48.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.130" endtime="20201029 12:43:48.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.142" endtime="20201029 12:43:48.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.141" endtime="20201029 12:43:48.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.140" endtime="20201029 12:43:48.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.784" endtime="20201029 12:43:48.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.783" endtime="20201029 12:43:48.163"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.172" endtime="20201029 12:43:48.187"></status>
</kw>
<msg timestamp="20201029 12:43:48.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.170" endtime="20201029 12:43:48.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.188" endtime="20201029 12:43:48.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.191" endtime="20201029 12:43:48.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.168" endtime="20201029 12:43:48.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.166" endtime="20201029 12:43:48.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.200" endtime="20201029 12:43:48.493"></status>
</kw>
<msg timestamp="20201029 12:43:48.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021666069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.198" endtime="20201029 12:43:48.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021626653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021666069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.497" endtime="20201029 12:43:48.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.506" endtime="20201029 12:43:48.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.196" endtime="20201029 12:43:48.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.194" endtime="20201029 12:43:48.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.513" level="INFO">${RESULT} = [{'diff': 3.941600000000045e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 3.8582999999998285e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3667000000000705e-05}, {'diff': 3.8597000000001325e-0...</msg>
<status status="PASS" starttime="20201029 12:43:48.509" endtime="20201029 12:43:48.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.522" level="INFO">${ACCURACY} = {'diff': [3.941600000000045e-05, 4.3610999999998956e-05, 3.8582999999998285e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 3.8597000000001325e-05, 4.355600000000015e-05, 4.3639000000001565e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:48.516" endtime="20201029 12:43:48.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.531" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.529" endtime="20201029 12:43:48.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.535" level="INFO">VALUE: [3.941600000000045e-05, 4.3610999999998956e-05, 3.8582999999998285e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 3.8597000000001325e-05, 4.355600000000015e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 3.85980000000008e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.3624999999998526e-05, 4.372199999999951e-05, 3.8568999999998715e-05, 4.3639000000001565e-05, 3.8582999999998285e-05, 4.3611000000002426e-05, 4.3638999999998096e-05, 4.363799999999862e-05, 4.3653000000001135e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3611000000002426e-05, 4.3667000000000705e-05, 3.854199999999905e-05, 3.8596999999997855e-05, 3.8597000000001325e-05, 3.8597000000001325e-05, 4.3624999999998526e-05, 3.858400000000123e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 3.8611000000000895e-05, 3.85980000000008e-05, 3.8582999999998285e-05, 3.8569000000002185e-05, 4.365199999999819e-05, 4.3625000000001996e-05, 3.861200000000037e-05, 3.858399999999776e-05, 4.3624999999998526e-05, 3.8652999999999604e-05, 3.8583000000001755e-05, 4.366600000000123e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 3.8611000000000895e-05, 4.3652999999997666e-05, 3.8610999999997425e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.533" endtime="20201029 12:43:48.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.524" endtime="20201029 12:43:48.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.545" endtime="20201029 12:43:48.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.542" endtime="20201029 12:43:48.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.540" endtime="20201029 12:43:48.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.164" endtime="20201029 12:43:48.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.163" endtime="20201029 12:43:48.568"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.583" endtime="20201029 12:43:48.599"></status>
</kw>
<msg timestamp="20201029 12:43:48.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.580" endtime="20201029 12:43:48.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.601" endtime="20201029 12:43:48.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.603" endtime="20201029 12:43:48.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.576" endtime="20201029 12:43:48.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.572" endtime="20201029 12:43:48.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.615" endtime="20201029 12:43:48.903"></status>
</kw>
<msg timestamp="20201029 12:43:48.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030543972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030588403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.613" endtime="20201029 12:43:48.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030543972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030588403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.908" endtime="20201029 12:43:48.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.916" endtime="20201029 12:43:48.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.610" endtime="20201029 12:43:48.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.607" endtime="20201029 12:43:48.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.923" level="INFO">${RESULT} = [{'diff': 4.4431000000001025e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.3624999999998526e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.358399999999929e-0...</msg>
<status status="PASS" starttime="20201029 12:43:48.920" endtime="20201029 12:43:48.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.927" level="INFO">${ACCURACY} = {'diff': [4.4431000000001025e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.358399999999929e-05, 4.3638999999998096e-05, 4.3624999999998526e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:48.924" endtime="20201029 12:43:48.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.931" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.930" endtime="20201029 12:43:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.934" level="INFO">VALUE: [4.4431000000001025e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.358399999999929e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3569000000000246e-05, 4.361200000000537e-05, 4.3610999999998956e-05, 4.3582999999999816e-05, 4.3638999999998096e-05, 4.3582999999999816e-05, 4.3610999999998956e-05, 4.358399999999929e-05, 4.3625000000005465e-05, 4.3639000000005035e-05, 4.3625000000005465e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3639000000005035e-05, 4.3611000000005895e-05, 4.3652999999997666e-05, 4.3638999999998096e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.367999999999733e-05, 4.3639000000005035e-05, 4.3596999999999386e-05, 4.3625000000005465e-05, 4.3625000000005465e-05, 4.3638999999998096e-05, 4.3611000000005895e-05, 4.363799999999862e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3555000000000677e-05, 4.3652999999997666e-05, 4.365199999999819e-05, 4.3624999999998526e-05, 4.3653000000004605e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.932" endtime="20201029 12:43:48.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.928" endtime="20201029 12:43:48.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.943" endtime="20201029 12:43:48.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.942" endtime="20201029 12:43:48.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.941" endtime="20201029 12:43:48.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.570" endtime="20201029 12:43:48.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.569" endtime="20201029 12:43:48.964"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.973" endtime="20201029 12:43:48.989"></status>
</kw>
<msg timestamp="20201029 12:43:48.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.971" endtime="20201029 12:43:48.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.991" endtime="20201029 12:43:48.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.993" endtime="20201029 12:43:48.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.969" endtime="20201029 12:43:48.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.966" endtime="20201029 12:43:48.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.002" endtime="20201029 12:43:49.288"></status>
</kw>
<msg timestamp="20201029 12:43:49.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:49.001" endtime="20201029 12:43:49.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0227115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022755958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:49.292" endtime="20201029 12:43:49.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.301" endtime="20201029 12:43:49.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.998" endtime="20201029 12:43:49.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.996" endtime="20201029 12:43:49.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.307" level="INFO">${RESULT} = [{'diff': 4.445800000000069e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.365199999999819e-05}, {'diff': 4.3639000000001565e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3624999999998526e-05...</msg>
<status status="PASS" starttime="20201029 12:43:49.304" endtime="20201029 12:43:49.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.312" level="INFO">${ACCURACY} = {'diff': [4.445800000000069e-05, 4.3596999999999386e-05, 4.365199999999819e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.367999999999733e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:43:49.308" endtime="20201029 12:43:49.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.316" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.315" endtime="20201029 12:43:49.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.319" level="INFO">VALUE: [4.445800000000069e-05, 4.3596999999999386e-05, 4.365199999999819e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.367999999999733e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3596999999999386e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3610999999998956e-05, 4.3611000000002426e-05, 4.3624999999998526e-05, 4.3653000000001135e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.365199999999819e-05, 4.3624999999998526e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3610999999998956e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3610999999998956e-05, 4.365200000000166e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.363800000000209e-05, 4.3638999999998096e-05, 4.355600000000015e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3610999999998956e-05, 4.3638999999998096e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.317" endtime="20201029 12:43:49.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.312" endtime="20201029 12:43:49.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.324" endtime="20201029 12:43:49.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.323" endtime="20201029 12:43:49.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.322" endtime="20201029 12:43:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.965" endtime="20201029 12:43:49.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.964" endtime="20201029 12:43:49.345"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.354" endtime="20201029 12:43:49.369"></status>
</kw>
<msg timestamp="20201029 12:43:49.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.352" endtime="20201029 12:43:49.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.371" endtime="20201029 12:43:49.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.373" endtime="20201029 12:43:49.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.350" endtime="20201029 12:43:49.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.348" endtime="20201029 12:43:49.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.382" endtime="20201029 12:43:49.667"></status>
</kw>
<msg timestamp="20201029 12:43:49.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.380" endtime="20201029 12:43:49.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021712833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021757292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.671" endtime="20201029 12:43:49.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.679" endtime="20201029 12:43:49.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.378" endtime="20201029 12:43:49.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.376" endtime="20201029 12:43:49.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.686" level="INFO">${RESULT} = [{'diff': 4.4459000000000165e-05}, {'diff': 4.3611000000002426e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.361199999999843e-05}, {'diff': 4.3639000000001565e-0...</msg>
<status status="PASS" starttime="20201029 12:43:49.683" endtime="20201029 12:43:49.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.691" level="INFO">${ACCURACY} = {'diff': [4.4459000000000165e-05, 4.3611000000002426e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.361199999999843e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3582999999999816e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:49.687" endtime="20201029 12:43:49.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.695" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.694" endtime="20201029 12:43:49.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.698" level="INFO">VALUE: [4.4459000000000165e-05, 4.3611000000002426e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.361199999999843e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3582999999999816e-05, 4.3611000000002426e-05, 4.363800000000209e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3596999999999386e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3624999999998526e-05, 4.3653000000001135e-05, 4.3610999999998956e-05, 4.3681000000000275e-05, 4.363799999999862e-05, 4.3681000000000275e-05, 4.3653000000001135e-05, 4.3624999999998526e-05, 4.3653000000001135e-05, 4.3610999999998956e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3610999999998956e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3666999999997236e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.356999999999972e-05, 4.363799999999862e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.3610999999998956e-05, 4.3639000000001565e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.697" endtime="20201029 12:43:49.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.692" endtime="20201029 12:43:49.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.703" endtime="20201029 12:43:49.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.702" endtime="20201029 12:43:49.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.700" endtime="20201029 12:43:49.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.346" endtime="20201029 12:43:49.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.345" endtime="20201029 12:43:49.724"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.733" endtime="20201029 12:43:49.748"></status>
</kw>
<msg timestamp="20201029 12:43:49.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.731" endtime="20201029 12:43:49.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.749" endtime="20201029 12:43:49.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.752" endtime="20201029 12:43:49.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.728" endtime="20201029 12:43:49.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.726" endtime="20201029 12:43:49.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.761" endtime="20201029 12:43:50.047"></status>
</kw>
<msg timestamp="20201029 12:43:50.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.759" endtime="20201029 12:43:50.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.052" endtime="20201029 12:43:50.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.060" endtime="20201029 12:43:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.757" endtime="20201029 12:43:50.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.755" endtime="20201029 12:43:50.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.067" level="INFO">${RESULT} = [{'diff': 4.444399999999765e-05}, {'diff': 4.3625000000001996e-05}, {'diff': 4.369400000000037e-05}, {'diff': 4.36800000000008e-05}, {'diff': 4.3610999999998956e-05}, {'diff': 4.3625000000001996e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:50.064" endtime="20201029 12:43:50.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.071" level="INFO">${ACCURACY} = {'diff': [4.444399999999765e-05, 4.3625000000001996e-05, 4.369400000000037e-05, 4.36800000000008e-05, 4.3610999999998956e-05, 4.3625000000001996e-05, 4.3639000000001565e-05, 4.3596999999999386e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:43:50.068" endtime="20201029 12:43:50.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.075" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.074" endtime="20201029 12:43:50.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.078" level="INFO">VALUE: [4.444399999999765e-05, 4.3625000000001996e-05, 4.369400000000037e-05, 4.36800000000008e-05, 4.3610999999998956e-05, 4.3625000000001996e-05, 4.3639000000001565e-05, 4.3596999999999386e-05, 4.3624999999998526e-05, 4.3611000000002426e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.3638999999998096e-05, 4.363799999999862e-05, 4.3625000000001996e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4.3596999999999386e-05, 4.3638999999998096e-05, 4.3610999999998956e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3611000000002426e-05, 4.3610999999998956e-05, 4.363799999999862e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.3569000000000246e-05, 4.3625000000001996e-05, 4.361199999999843e-05, 4.3624999999998526e-05, 4.3625000000001996e-05, 4.355600000000015e-05, 4.3625000000001996e-05, 4.3611000000002426e-05, 4.3624999999998526e-05, 4.3681000000000275e-05, 4.3638999999998096e-05, 4.363799999999862e-05, 4.3638999999998096e-05, 4.3624999999998526e-05, 4.363799999999862e-05, 4.3625000000001996e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.077" endtime="20201029 12:43:50.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.072" endtime="20201029 12:43:50.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.083" endtime="20201029 12:43:50.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.082" endtime="20201029 12:43:50.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.080" endtime="20201029 12:43:50.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.725" endtime="20201029 12:43:50.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.724" endtime="20201029 12:43:50.104"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.113" endtime="20201029 12:43:50.129"></status>
</kw>
<msg timestamp="20201029 12:43:50.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.111" endtime="20201029 12:43:50.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.131" endtime="20201029 12:43:50.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.133" endtime="20201029 12:43:50.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.108" endtime="20201029 12:43:50.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.106" endtime="20201029 12:43:50.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.142" endtime="20201029 12:43:50.428"></status>
</kw>
<msg timestamp="20201029 12:43:50.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.141" endtime="20201029 12:43:50.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022792292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.433" endtime="20201029 12:43:50.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.441" endtime="20201029 12:43:50.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.138" endtime="20201029 12:43:50.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.136" endtime="20201029 12:43:50.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.447" level="INFO">${RESULT} = [{'diff': 4.443000000000155e-05}, {'diff': 4.8708999999997477e-05}, {'diff': 4.86940000000019e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.3709000000002884e-05}, {'diff': 4.869499999999791e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:50.444" endtime="20201029 12:43:50.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.451" level="INFO">${ACCURACY} = {'diff': [4.443000000000155e-05, 4.8708999999997477e-05, 4.86940000000019e-05, 4.86529999999992e-05, 4.3709000000002884e-05, 4.869499999999791e-05, 4.869499999999791e-05, 4.3639000000001565e-05, 4.363...</msg>
<status status="PASS" starttime="20201029 12:43:50.448" endtime="20201029 12:43:50.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.456" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.455" endtime="20201029 12:43:50.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.458" level="INFO">VALUE: [4.443000000000155e-05, 4.8708999999997477e-05, 4.86940000000019e-05, 4.86529999999992e-05, 4.3709000000002884e-05, 4.869499999999791e-05, 4.869499999999791e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3694999999999845e-05, 4.86529999999992e-05, 4.873600000000061e-05, 4.366600000000123e-05, 4.365199999999819e-05, 4.867999999999886e-05, 4.3624999999998526e-05, 4.3639000000001565e-05, 4.3639000000001565e-05, 4.3638999999998096e-05, 4.3639000000001565e-05, 4.866699999999877e-05, 4.86529999999992e-05, 4.86940000000019e-05, 4.863899999999963e-05, 4.869399999999843e-05, 4.86940000000019e-05, 4.8681000000001806e-05, 4.869399999999843e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.8653000000002666e-05, 4.3638999999998096e-05, 4.3625000000001996e-05, 4.3625000000001996e-05, 4.3582999999999816e-05, 4.867999999999886e-05, 4.8695000000001376e-05, 4.863899999999963e-05, 4.8695000000001376e-05, 4.3625000000001996e-05, 4.365200000000166e-05, 4.866699999999877e-05, 4.3653000000001135e-05, 4.868099999999834e-05, 4.8695000000001376e-05, 4.3625000000001996e-05, 4.3624999999998526e-05, 4.3667000000000705e-05, 4.3639000000001565e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.457" endtime="20201029 12:43:50.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.452" endtime="20201029 12:43:50.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.464" endtime="20201029 12:43:50.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.462" endtime="20201029 12:43:50.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.461" endtime="20201029 12:43:50.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.105" endtime="20201029 12:43:50.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.104" endtime="20201029 12:43:50.485"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.493" endtime="20201029 12:43:50.509"></status>
</kw>
<msg timestamp="20201029 12:43:50.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.492" endtime="20201029 12:43:50.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.510" endtime="20201029 12:43:50.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.513" endtime="20201029 12:43:50.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.489" endtime="20201029 12:43:50.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.487" endtime="20201029 12:43:50.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.521" endtime="20201029 12:43:50.822"></status>
</kw>
<msg timestamp="20201029 12:43:50.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.520" endtime="20201029 12:43:50.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021347875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021397347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.826" endtime="20201029 12:43:50.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.834" endtime="20201029 12:43:50.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.517" endtime="20201029 12:43:50.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.516" endtime="20201029 12:43:50.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.841" level="INFO">${RESULT} = [{'diff': 4.947200000000179e-05}, {'diff': 4.865199999999972e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.866599999999929e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.8709000000000946e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:50.838" endtime="20201029 12:43:50.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.846" level="INFO">${ACCURACY} = {'diff': [4.947200000000179e-05, 4.865199999999972e-05, 4.863899999999963e-05, 4.866599999999929e-05, 4.86529999999992e-05, 4.8709000000000946e-05, 4.866599999999929e-05, 4.861100000000049e-05, 4.8638...</msg>
<status status="PASS" starttime="20201029 12:43:50.842" endtime="20201029 12:43:50.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.850" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.849" endtime="20201029 12:43:50.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.853" level="INFO">VALUE: [4.947200000000179e-05, 4.865199999999972e-05, 4.863899999999963e-05, 4.866599999999929e-05, 4.86529999999992e-05, 4.8709000000000946e-05, 4.866599999999929e-05, 4.861100000000049e-05, 4.863899999999963e-05, 4.866699999999877e-05, 4.865200000000319e-05, 4.868099999999834e-05, 4.863899999999963e-05, 4.866699999999877e-05, 4.8681000000001806e-05, 4.8707999999998e-05, 4.86529999999992e-05, 4.8653000000002666e-05, 4.86529999999992e-05, 4.866699999999877e-05, 4.868000000000233e-05, 4.862500000000006e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.866600000000276e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.865199999999972e-05, 4.8667000000002236e-05, 4.868000000000233e-05, 4.859700000000092e-05, 4.86529999999992e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.869399999999843e-05, 4.861100000000049e-05, 4.863899999999963e-05, 4.8667000000002236e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.86529999999992e-05, 4.862500000000006e-05, 4.866599999999929e-05, 4.8708999999997477e-05, 4.866699999999877e-05, 4.867999999999886e-05, 4.869399999999843e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.851" endtime="20201029 12:43:50.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.847" endtime="20201029 12:43:50.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.858" endtime="20201029 12:43:50.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.856" endtime="20201029 12:43:50.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.855" endtime="20201029 12:43:50.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.486" endtime="20201029 12:43:50.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.485" endtime="20201029 12:43:50.878"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.887" endtime="20201029 12:43:50.902"></status>
</kw>
<msg timestamp="20201029 12:43:50.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.885" endtime="20201029 12:43:50.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.904" endtime="20201029 12:43:50.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.906" endtime="20201029 12:43:50.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.883" endtime="20201029 12:43:50.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.881" endtime="20201029 12:43:50.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.915" endtime="20201029 12:43:51.202"></status>
</kw>
<msg timestamp="20201029 12:43:51.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.914" endtime="20201029 12:43:51.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021550694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021600181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.206" endtime="20201029 12:43:51.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.214" endtime="20201029 12:43:51.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.911" endtime="20201029 12:43:51.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.910" endtime="20201029 12:43:51.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.221" level="INFO">${RESULT} = [{'diff': 4.9487000000000836e-05}, {'diff': 4.867999999999886e-05}, {'diff': 4.872200000000104e-05}, {'diff': 4.867999999999886e-05}, {'diff': 4.870800000000147e-05}, {'diff': 4.870800000000147e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:51.217" endtime="20201029 12:43:51.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.225" level="INFO">${ACCURACY} = {'diff': [4.9487000000000836e-05, 4.867999999999886e-05, 4.872200000000104e-05, 4.867999999999886e-05, 4.870800000000147e-05, 4.870800000000147e-05, 4.8695000000001376e-05, 4.868099999999834e-05, 4.86...</msg>
<status status="PASS" starttime="20201029 12:43:51.222" endtime="20201029 12:43:51.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.229" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.228" endtime="20201029 12:43:51.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.231" level="INFO">VALUE: [4.9487000000000836e-05, 4.867999999999886e-05, 4.872200000000104e-05, 4.867999999999886e-05, 4.870800000000147e-05, 4.870800000000147e-05, 4.8695000000001376e-05, 4.868099999999834e-05, 4.866599999999929e-05, 4.868099999999834e-05, 4.86940000000019e-05, 4.8695000000001376e-05, 4.8681000000001806e-05, 4.866699999999877e-05, 4.8653000000002666e-05, 4.8681000000001806e-05, 4.867999999999886e-05, 4.8681000000001806e-05, 4.868099999999834e-05, 4.870800000000147e-05, 4.866599999999929e-05, 4.872200000000104e-05, 4.868099999999834e-05, 4.869399999999843e-05, 4.869399999999843e-05, 4.8707999999998e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.869399999999843e-05, 4.866699999999877e-05, 4.867999999999886e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.8681000000001806e-05, 4.872200000000104e-05, 4.8723000000000516e-05, 4.8695000000001376e-05, 4.86529999999992e-05, 4.867999999999886e-05, 4.863899999999963e-05, 4.8695000000001376e-05, 4.869399999999843e-05, 4.8695000000001376e-05, 4.866599999999929e-05, 4.863899999999963e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.230" endtime="20201029 12:43:51.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.225" endtime="20201029 12:43:51.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.236" endtime="20201029 12:43:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.235" endtime="20201029 12:43:51.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.234" endtime="20201029 12:43:51.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.879" endtime="20201029 12:43:51.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.879" endtime="20201029 12:43:51.257"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.266" endtime="20201029 12:43:51.282"></status>
</kw>
<msg timestamp="20201029 12:43:51.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.264" endtime="20201029 12:43:51.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.284" endtime="20201029 12:43:51.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.286" endtime="20201029 12:43:51.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.262" endtime="20201029 12:43:51.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.260" endtime="20201029 12:43:51.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.295" endtime="20201029 12:43:51.580"></status>
</kw>
<msg timestamp="20201029 12:43:51.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.293" endtime="20201029 12:43:51.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.585" endtime="20201029 12:43:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.593" endtime="20201029 12:43:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.291" endtime="20201029 12:43:51.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.289" endtime="20201029 12:43:51.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.599" level="INFO">${RESULT} = [{'diff': 4.945800000000222e-05}, {'diff': 4.867999999999886e-05}, {'diff': 4.859700000000092e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.866599999999929e-05}, {'diff': 4.866699999999877e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:51.596" endtime="20201029 12:43:51.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.603" level="INFO">${ACCURACY} = {'diff': [4.945800000000222e-05, 4.867999999999886e-05, 4.859700000000092e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.86799...</msg>
<status status="PASS" starttime="20201029 12:43:51.600" endtime="20201029 12:43:51.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.608" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.607" endtime="20201029 12:43:51.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.610" level="INFO">VALUE: [4.945800000000222e-05, 4.867999999999886e-05, 4.859700000000092e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.866599999999929e-05, 4.867999999999886e-05, 4.8667000000002236e-05, 4.872200000000104e-05, 4.866699999999877e-05, 4.869499999999791e-05, 4.868099999999834e-05, 4.866599999999929e-05, 4.861199999999996e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.866699999999877e-05, 4.863899999999963e-05, 4.868000000000233e-05, 4.866599999999929e-05, 4.866699999999877e-05, 4.8667000000002236e-05, 4.862500000000006e-05, 4.869399999999843e-05, 4.862500000000006e-05, 4.8681000000001806e-05, 4.866599999999929e-05, 4.869499999999791e-05, 4.868099999999834e-05, 4.8681000000001806e-05, 4.86529999999992e-05, 4.869399999999843e-05, 4.868000000000233e-05, 4.869499999999791e-05, 4.861100000000049e-05, 4.869399999999843e-05, 4.863899999999963e-05, 4.8667000000002236e-05, 4.868099999999834e-05, 4.868099999999834e-05, 4.8667000000002236e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.8667000000002236e-05, 4.867999999999886e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.609" endtime="20201029 12:43:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.604" endtime="20201029 12:43:51.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.616" endtime="20201029 12:43:51.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.615" endtime="20201029 12:43:51.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.613" endtime="20201029 12:43:51.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.258" endtime="20201029 12:43:51.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.258" endtime="20201029 12:43:51.637"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.645" endtime="20201029 12:43:51.661"></status>
</kw>
<msg timestamp="20201029 12:43:51.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.644" endtime="20201029 12:43:51.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.662" endtime="20201029 12:43:51.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.665" endtime="20201029 12:43:51.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.641" endtime="20201029 12:43:51.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.639" endtime="20201029 12:43:51.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.674" endtime="20201029 12:43:51.958"></status>
</kw>
<msg timestamp="20201029 12:43:51.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021338444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.672" endtime="20201029 12:43:51.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021338444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.963" endtime="20201029 12:43:51.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.971" endtime="20201029 12:43:51.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.670" endtime="20201029 12:43:51.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.668" endtime="20201029 12:43:51.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.977" level="INFO">${RESULT} = [{'diff': 4.949999999999746e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.875000000000018e-05}, {'diff': 4.8707999999998e-05}, {'diff': 4.869499999999791e-05}, {'diff': 4.866699999999877e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:51.974" endtime="20201029 12:43:51.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.982" level="INFO">${ACCURACY} = {'diff': [4.949999999999746e-05, 4.862500000000006e-05, 4.875000000000018e-05, 4.8707999999998e-05, 4.869499999999791e-05, 4.866699999999877e-05, 4.869399999999843e-05, 4.866599999999929e-05, 4.869399...</msg>
<status status="PASS" starttime="20201029 12:43:51.978" endtime="20201029 12:43:51.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.987" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.986" endtime="20201029 12:43:51.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.989" level="INFO">VALUE: [4.949999999999746e-05, 4.862500000000006e-05, 4.875000000000018e-05, 4.8707999999998e-05, 4.869499999999791e-05, 4.866699999999877e-05, 4.869399999999843e-05, 4.866599999999929e-05, 4.869399999999843e-05, 4.873600000000061e-05, 4.867999999999886e-05, 4.86940000000019e-05, 4.8681000000001806e-05, 4.868099999999834e-05, 4.86940000000019e-05, 4.867999999999886e-05, 4.866699999999877e-05, 4.868000000000233e-05, 4.8695000000001376e-05, 4.86940000000019e-05, 4.86529999999992e-05, 4.866699999999877e-05, 4.868099999999834e-05, 4.867999999999886e-05, 4.868099999999834e-05, 4.8695000000001376e-05, 4.86940000000019e-05, 4.86940000000019e-05, 4.863899999999963e-05, 4.866599999999929e-05, 4.868099999999834e-05, 4.866599999999929e-05, 4.866599999999929e-05, 4.8707999999998e-05, 4.86529999999992e-05, 4.869399999999843e-05, 4.8653000000002666e-05, 4.863899999999963e-05, 4.869399999999843e-05, 4.8653000000002666e-05, 4.8681000000001806e-05, 4.868099999999834e-05, 4.8681000000001806e-05, 4.868000000000233e-05, 4.867999999999886e-05, 4.8681000000001806e-05, 4.8667000000002236e-05, 4.868099999999834e-05, 4.868000000000233e-05, 4.8681000000001806e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.988" endtime="20201029 12:43:51.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.983" endtime="20201029 12:43:51.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.994" endtime="20201029 12:43:52.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.992" endtime="20201029 12:43:52.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.991" endtime="20201029 12:43:52.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.638" endtime="20201029 12:43:52.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.637" endtime="20201029 12:43:52.015"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.024" endtime="20201029 12:43:52.040"></status>
</kw>
<msg timestamp="20201029 12:43:52.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.022" endtime="20201029 12:43:52.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.041" endtime="20201029 12:43:52.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.044" endtime="20201029 12:43:52.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.020" endtime="20201029 12:43:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.017" endtime="20201029 12:43:52.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.053" endtime="20201029 12:43:52.341"></status>
</kw>
<msg timestamp="20201029 12:43:52.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.051" endtime="20201029 12:43:52.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022574181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022623667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.345" endtime="20201029 12:43:52.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.354" endtime="20201029 12:43:52.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.049" endtime="20201029 12:43:52.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.047" endtime="20201029 12:43:52.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.360" level="INFO">${RESULT} = [{'diff': 4.948600000000136e-05}, {'diff': 5.372200000000257e-05}, {'diff': 4.866699999999877e-05}, {'diff': 5.3763999999997814e-05}, {'diff': 4.8667000000002236e-05}, {'diff': 5.3721999999999104e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:52.357" endtime="20201029 12:43:52.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.364" level="INFO">${ACCURACY} = {'diff': [4.948600000000136e-05, 5.372200000000257e-05, 4.866699999999877e-05, 5.3763999999997814e-05, 4.8667000000002236e-05, 5.3721999999999104e-05, 5.368099999999987e-05, 5.370900000000248e-05, 4.8...</msg>
<status status="PASS" starttime="20201029 12:43:52.361" endtime="20201029 12:43:52.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.369" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.368" endtime="20201029 12:43:52.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.371" level="INFO">VALUE: [4.948600000000136e-05, 5.372200000000257e-05, 4.866699999999877e-05, 5.3763999999997814e-05, 4.8667000000002236e-05, 5.3721999999999104e-05, 5.368099999999987e-05, 5.370900000000248e-05, 4.86940000000019e-05, 4.866699999999877e-05, 4.863899999999963e-05, 5.3735999999998674e-05, 4.872199999999757e-05, 5.3679999999996925e-05, 5.3708000000003e-05, 4.869399999999843e-05, 5.3735999999998674e-05, 5.36670000000003e-05, 4.862500000000006e-05, 5.3749999999998244e-05, 5.3707999999999534e-05, 4.867999999999886e-05, 4.867999999999886e-05, 5.372299999999858e-05, 5.3735999999998674e-05, 4.868000000000233e-05, 5.372200000000257e-05, 4.863899999999963e-05, 4.867999999999886e-05, 5.3735999999998674e-05, 4.868099999999834e-05, 4.8653000000002666e-05, 4.866699999999877e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 4.869399999999843e-05, 4.868099999999834e-05, 4.866699999999877e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.869399999999843e-05, 4.8667000000002236e-05, 4.870800000000147e-05, 5.373600000000214e-05, 5.373600000000214e-05, 4.8695000000001376e-05, 5.3721999999999104e-05, 4.866599999999929e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.370" endtime="20201029 12:43:52.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.365" endtime="20201029 12:43:52.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.376" endtime="20201029 12:43:52.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.374" endtime="20201029 12:43:52.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.373" endtime="20201029 12:43:52.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.016" endtime="20201029 12:43:52.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.015" endtime="20201029 12:43:52.397"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.405" endtime="20201029 12:43:52.422"></status>
</kw>
<msg timestamp="20201029 12:43:52.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.404" endtime="20201029 12:43:52.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.423" endtime="20201029 12:43:52.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.426" endtime="20201029 12:43:52.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.401" endtime="20201029 12:43:52.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.399" endtime="20201029 12:43:52.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.434" endtime="20201029 12:43:52.721"></status>
</kw>
<msg timestamp="20201029 12:43:52.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.433" endtime="20201029 12:43:52.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.725" endtime="20201029 12:43:52.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.733" endtime="20201029 12:43:52.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.430" endtime="20201029 12:43:52.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.429" endtime="20201029 12:43:52.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.740" level="INFO">${RESULT} = [{'diff': 5.4527999999998134e-05}, {'diff': 5.375000000000171e-05}, {'diff': 5.368099999999987e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3721999999999104e-05...</msg>
<status status="PASS" starttime="20201029 12:43:52.737" endtime="20201029 12:43:52.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.744" level="INFO">${ACCURACY} = {'diff': [5.4527999999998134e-05, 5.375000000000171e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.373700000000162e-05, 5.3735999999998674e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:43:52.741" endtime="20201029 12:43:52.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.748" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.747" endtime="20201029 12:43:52.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.751" level="INFO">VALUE: [5.4527999999998134e-05, 5.375000000000171e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.373700000000162e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.373600000000214e-05, 5.379199999999695e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.372300000000205e-05, 5.368099999999987e-05, 5.36670000000003e-05, 5.373600000000214e-05, 5.375000000000171e-05, 5.372200000000257e-05, 5.3749999999998244e-05, 5.3749999999998244e-05, 5.3707999999999534e-05, 5.36670000000003e-05, 5.373600000000214e-05, 5.365299999999726e-05, 5.381900000000009e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.377700000000138e-05, 5.372200000000257e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 5.3735999999998674e-05, 5.376400000000128e-05, 5.373699999999815e-05, 5.373600000000214e-05, 5.373700000000162e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.368099999999987e-05, 5.3693999999999964e-05, 5.377699999999791e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.372300000000205e-05, 5.3735999999998674e-05, 5.373699999999815e-05, 5.3721999999999104e-05, 5.3735999999998674e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.749" endtime="20201029 12:43:52.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.745" endtime="20201029 12:43:52.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.756" endtime="20201029 12:43:52.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.755" endtime="20201029 12:43:52.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.754" endtime="20201029 12:43:52.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.398" endtime="20201029 12:43:52.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.397" endtime="20201029 12:43:52.777"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.786" endtime="20201029 12:43:52.801"></status>
</kw>
<msg timestamp="20201029 12:43:52.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.784" endtime="20201029 12:43:52.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.803" endtime="20201029 12:43:52.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.805" endtime="20201029 12:43:52.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.782" endtime="20201029 12:43:52.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.780" endtime="20201029 12:43:52.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.814" endtime="20201029 12:43:53.100"></status>
</kw>
<msg timestamp="20201029 12:43:53.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021438111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.813" endtime="20201029 12:43:53.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021383653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021438111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.105" endtime="20201029 12:43:53.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.113" endtime="20201029 12:43:53.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.810" endtime="20201029 12:43:53.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.809" endtime="20201029 12:43:53.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.120" level="INFO">${RESULT} = [{'diff': 5.4458000000000284e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.370900000000248e-05}, {'diff': 5.3763999999997814e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3721999999999104e-0...</msg>
<status status="PASS" starttime="20201029 12:43:53.117" endtime="20201029 12:43:53.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.125" level="INFO">${ACCURACY} = {'diff': [5.4458000000000284e-05, 5.3721999999999104e-05, 5.370900000000248e-05, 5.3763999999997814e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3749999999998244e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:53.121" endtime="20201029 12:43:53.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.129" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.128" endtime="20201029 12:43:53.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.132" level="INFO">VALUE: [5.4458000000000284e-05, 5.3721999999999104e-05, 5.370900000000248e-05, 5.3763999999997814e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.372299999999858e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.368099999999987e-05, 5.375000000000171e-05, 5.373699999999815e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.373600000000214e-05, 5.369499999999944e-05, 5.373600000000214e-05, 5.372300000000205e-05, 5.3693999999999964e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.370899999999901e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.370899999999901e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.372200000000257e-05, 5.372200000000257e-05, 5.372200000000257e-05, 5.365300000000073e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.370899999999901e-05, 5.3721999999999104e-05, 5.376299999999834e-05, 5.3721999999999104e-05, 5.377800000000085e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.36670000000003e-05, 5.3707999999999534e-05, 5.373600000000214e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.130" endtime="20201029 12:43:53.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.126" endtime="20201029 12:43:53.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.137" endtime="20201029 12:43:53.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.135" endtime="20201029 12:43:53.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.134" endtime="20201029 12:43:53.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.778" endtime="20201029 12:43:53.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.778" endtime="20201029 12:43:53.157"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.166" endtime="20201029 12:43:53.182"></status>
</kw>
<msg timestamp="20201029 12:43:53.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.164" endtime="20201029 12:43:53.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.183" endtime="20201029 12:43:53.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.186" endtime="20201029 12:43:53.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.162" endtime="20201029 12:43:53.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.160" endtime="20201029 12:43:53.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.194" endtime="20201029 12:43:53.482"></status>
</kw>
<msg timestamp="20201029 12:43:53.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214525, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 12:43:53.193" endtime="20201029 12:43:53.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021398, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214525, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201029 12:43:53.486" endtime="20201029 12:43:53.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.495" endtime="20201029 12:43:53.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.190" endtime="20201029 12:43:53.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.189" endtime="20201029 12:43:53.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.501" level="INFO">${RESULT} = [{'diff': 5.4499999999998994e-05}, {'diff': 5.3666000000000824e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.370900000000248e-05}, {'diff': 5.3721999999999104e-0...</msg>
<status status="PASS" starttime="20201029 12:43:53.498" endtime="20201029 12:43:53.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.505" level="INFO">${ACCURACY} = {'diff': [5.4499999999998994e-05, 5.3666000000000824e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.370900000000248e-05, 5.3721999999999104e-05, 5.3708000000003e-05, 5.372300000000205e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 12:43:53.502" endtime="20201029 12:43:53.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.510" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.509" endtime="20201029 12:43:53.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.512" level="INFO">VALUE: [5.4499999999998994e-05, 5.3666000000000824e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.370900000000248e-05, 5.3721999999999104e-05, 5.3708000000003e-05, 5.372300000000205e-05, 5.3707999999999534e-05, 5.372299999999858e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.372300000000205e-05, 5.3666000000000824e-05, 5.365300000000073e-05, 5.3707999999999534e-05, 5.3680000000000394e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.372300000000205e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.372300000000205e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.369500000000291e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.372300000000205e-05, 5.373699999999815e-05, 5.3721999999999104e-05, 5.3693999999999964e-05, 5.3707999999999534e-05, 5.373600000000214e-05, 5.376299999999834e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 5.3708000000003e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 5.3707999999999534e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.511" endtime="20201029 12:43:53.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.506" endtime="20201029 12:43:53.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.517" endtime="20201029 12:43:53.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.515" endtime="20201029 12:43:53.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.514" endtime="20201029 12:43:53.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.158" endtime="20201029 12:43:53.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.158" endtime="20201029 12:43:53.538"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.546" endtime="20201029 12:43:53.565"></status>
</kw>
<msg timestamp="20201029 12:43:53.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.545" endtime="20201029 12:43:53.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.567" endtime="20201029 12:43:53.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.569" endtime="20201029 12:43:53.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.542" endtime="20201029 12:43:53.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.540" endtime="20201029 12:43:53.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.578" endtime="20201029 12:43:53.864"></status>
</kw>
<msg timestamp="20201029 12:43:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.577" endtime="20201029 12:43:53.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022341486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.868" endtime="20201029 12:43:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.876" endtime="20201029 12:43:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.574" endtime="20201029 12:43:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.572" endtime="20201029 12:43:53.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.882" level="INFO">${RESULT} = [{'diff': 7.06109999999982e-05}, {'diff': 7.011100000000117e-05}, {'diff': 7.009800000000108e-05}, {'diff': 6.969499999999809e-05}, {'diff': 6.988900000000006e-05}, {'diff': 6.972199999999776e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:53.879" endtime="20201029 12:43:53.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.886" level="INFO">${ACCURACY} = {'diff': [7.06109999999982e-05, 7.011100000000117e-05, 7.009800000000108e-05, 6.969499999999809e-05, 6.988900000000006e-05, 6.972199999999776e-05, 7.038900000000056e-05, 7.031900000000271e-05, 6.99579...</msg>
<status status="PASS" starttime="20201029 12:43:53.883" endtime="20201029 12:43:53.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.891" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.890" endtime="20201029 12:43:53.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.893" level="INFO">VALUE: [7.06109999999982e-05, 7.011100000000117e-05, 7.009800000000108e-05, 6.969499999999809e-05, 6.988900000000006e-05, 6.972199999999776e-05, 7.038900000000056e-05, 7.031900000000271e-05, 6.995799999999844e-05, 7.034700000000185e-05, 6.990299999999963e-05, 6.954099999999935e-05, 7.004199999999933e-05, 7.002799999999976e-05, 6.952799999999926e-05, 6.990200000000016e-05, 7.009800000000108e-05, 7.026400000000044e-05, 7.009699999999813e-05, 6.994399999999887e-05, 7.004199999999933e-05, 6.970799999999819e-05, 6.979200000000255e-05, 7.045799999999894e-05, 7.009800000000108e-05, 6.994500000000181e-05, 7.040300000000013e-05, 6.99299999999993e-05, 6.961200000000015e-05, 7.009800000000108e-05, 7.020899999999816e-05, 7.015299999999988e-05, 6.965299999999938e-05, 7.045799999999894e-05, 6.969499999999809e-05, 7.038900000000056e-05, 7.034799999999786e-05, 6.961100000000067e-05, 6.966699999999895e-05, 6.986099999999745e-05, 6.956900000000196e-05, 7.001400000000019e-05, 6.97909999999996e-05, 6.972299999999723e-05, 6.952799999999926e-05, 6.99160000000032e-05, 6.984699999999788e-05, 7.047200000000198e-05, 7.008299999999856e-05, 6.977799999999951e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.892" endtime="20201029 12:43:53.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.887" endtime="20201029 12:43:53.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.899" endtime="20201029 12:43:53.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.898" endtime="20201029 12:43:53.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.896" endtime="20201029 12:43:53.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.539" endtime="20201029 12:43:53.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.538" endtime="20201029 12:43:53.920"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.928" endtime="20201029 12:43:53.946"></status>
</kw>
<msg timestamp="20201029 12:43:53.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.927" endtime="20201029 12:43:53.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.948" endtime="20201029 12:43:53.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.950" endtime="20201029 12:43:53.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.924" endtime="20201029 12:43:53.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.922" endtime="20201029 12:43:53.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.959" endtime="20201029 12:43:54.244"></status>
</kw>
<msg timestamp="20201029 12:43:54.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.958" endtime="20201029 12:43:54.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021541042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.249" endtime="20201029 12:43:54.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.257" endtime="20201029 12:43:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.955" endtime="20201029 12:43:54.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.954" endtime="20201029 12:43:54.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.263" level="INFO">${RESULT} = [{'diff': 7.108299999999956e-05}, {'diff': 7.083299999999931e-05}, {'diff': 7.099999999999815e-05}, {'diff': 7.083300000000278e-05}, {'diff': 7.072200000000223e-05}, {'diff': 7.126400000000144e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:54.260" endtime="20201029 12:43:54.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.268" level="INFO">${ACCURACY} = {'diff': [7.108299999999956e-05, 7.083299999999931e-05, 7.099999999999815e-05, 7.083300000000278e-05, 7.072200000000223e-05, 7.126400000000144e-05, 7.0584000000002e-05, 7.097300000000195e-05, 7.150000...</msg>
<status status="PASS" starttime="20201029 12:43:54.264" endtime="20201029 12:43:54.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.273" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.272" endtime="20201029 12:43:54.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.275" level="INFO">VALUE: [7.108299999999956e-05, 7.083299999999931e-05, 7.099999999999815e-05, 7.083300000000278e-05, 7.072200000000223e-05, 7.126400000000144e-05, 7.0584000000002e-05, 7.097300000000195e-05, 7.150000000000212e-05, 7.104100000000085e-05, 7.077800000000051e-05, 7.095799999999944e-05, 7.127800000000101e-05, 7.145799999999994e-05, 7.090300000000063e-05, 7.059699999999863e-05, 7.07360000000018e-05, 7.12910000000011e-05, 7.084800000000183e-05, 7.102800000000076e-05, 7.115300000000088e-05, 7.05970000000021e-05, 7.118000000000055e-05, 7.133299999999981e-05, 7.081899999999974e-05, 7.101400000000119e-05, 7.052800000000026e-05, 7.126400000000144e-05, 7.104200000000033e-05, 7.084700000000235e-05, 7.138900000000156e-05, 7.144499999999984e-05, 7.122299999999873e-05, 7.059699999999863e-05, 7.140300000000113e-05, 7.147200000000298e-05, 7.054199999999983e-05, 7.058399999999854e-05, 7.138899999999809e-05, 7.077800000000051e-05, 7.097199999999901e-05, 7.145799999999994e-05, 7.144400000000037e-05, 7.116699999999698e-05, 7.113799999999837e-05, 7.052700000000078e-05, 7.084699999999888e-05, 7.052700000000078e-05, 7.133399999999929e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.274" endtime="20201029 12:43:54.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.269" endtime="20201029 12:43:54.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.284" endtime="20201029 12:43:54.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.283" endtime="20201029 12:43:54.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.282" endtime="20201029 12:43:54.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.921" endtime="20201029 12:43:54.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.920" endtime="20201029 12:43:54.305"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.314" endtime="20201029 12:43:54.332"></status>
</kw>
<msg timestamp="20201029 12:43:54.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.312" endtime="20201029 12:43:54.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.333" endtime="20201029 12:43:54.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.336" endtime="20201029 12:43:54.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.310" endtime="20201029 12:43:54.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.308" endtime="20201029 12:43:54.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.345" endtime="20201029 12:43:54.631"></status>
</kw>
<msg timestamp="20201029 12:43:54.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.343" endtime="20201029 12:43:54.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.635" endtime="20201029 12:43:54.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.644" endtime="20201029 12:43:54.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.341" endtime="20201029 12:43:54.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.339" endtime="20201029 12:43:54.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.650" level="INFO">${RESULT} = [{'diff': 7.201400000000219e-05}, {'diff': 7.213899999999884e-05}, {'diff': 7.154200000000083e-05}, {'diff': 7.154199999999736e-05}, {'diff': 7.215300000000188e-05}, {'diff': 7.156999999999997e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:54.647" endtime="20201029 12:43:54.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.654" level="INFO">${ACCURACY} = {'diff': [7.201400000000219e-05, 7.213899999999884e-05, 7.154200000000083e-05, 7.154199999999736e-05, 7.215300000000188e-05, 7.156999999999997e-05, 7.245799999999747e-05, 7.177799999999804e-05, 7.2013...</msg>
<status status="PASS" starttime="20201029 12:43:54.651" endtime="20201029 12:43:54.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.659" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.658" endtime="20201029 12:43:54.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.661" level="INFO">VALUE: [7.201400000000219e-05, 7.213899999999884e-05, 7.154200000000083e-05, 7.154199999999736e-05, 7.215300000000188e-05, 7.156999999999997e-05, 7.245799999999747e-05, 7.177799999999804e-05, 7.201399999999872e-05, 7.169500000000009e-05, 7.155500000000092e-05, 7.240300000000213e-05, 7.188899999999859e-05, 7.151400000000169e-05, 7.158300000000006e-05, 7.237499999999952e-05, 7.232000000000072e-05, 7.216699999999798e-05, 7.156999999999997e-05, 7.155599999999693e-05, 7.181900000000074e-05, 7.219399999999765e-05, 7.183399999999979e-05, 7.220800000000069e-05, 7.227799999999854e-05, 7.24309999999978e-05, 7.151399999999822e-05, 7.205499999999795e-05, 7.183399999999979e-05, 7.219500000000059e-05, 7.169500000000009e-05, 7.163900000000181e-05, 7.231899999999777e-05, 7.195800000000044e-05, 7.16109999999992e-05, 7.195800000000044e-05, 7.2069999999997e-05, 7.188899999999859e-05, 7.244500000000084e-05, 7.190299999999816e-05, 7.165199999999844e-05, 7.188899999999859e-05, 7.165300000000138e-05, 7.233300000000081e-05, 7.202800000000176e-05, 7.215299999999841e-05, 7.179200000000108e-05, 7.177799999999804e-05, 7.227700000000253e-05, 7.208300000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.660" endtime="20201029 12:43:54.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.655" endtime="20201029 12:43:54.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.666" endtime="20201029 12:43:54.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.664" endtime="20201029 12:43:54.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.663" endtime="20201029 12:43:54.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.306" endtime="20201029 12:43:54.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.305" endtime="20201029 12:43:54.687"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.695" endtime="20201029 12:43:54.714"></status>
</kw>
<msg timestamp="20201029 12:43:54.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.694" endtime="20201029 12:43:54.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.716" endtime="20201029 12:43:54.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.718" endtime="20201029 12:43:54.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.691" endtime="20201029 12:43:54.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.689" endtime="20201029 12:43:54.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.727" endtime="20201029 12:43:55.012"></status>
</kw>
<msg timestamp="20201029 12:43:55.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:54.726" endtime="20201029 12:43:55.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022487958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:55.016" endtime="20201029 12:43:55.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.025" endtime="20201029 12:43:55.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.723" endtime="20201029 12:43:55.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.721" endtime="20201029 12:43:55.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.031" level="INFO">${RESULT} = [{'diff': 7.295799999999797e-05}, {'diff': 7.286100000000045e-05}, {'diff': 7.319399999999865e-05}, {'diff': 7.301300000000024e-05}, {'diff': 7.288899999999959e-05}, {'diff': 7.277800000000251e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:55.028" endtime="20201029 12:43:55.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.035" level="INFO">${ACCURACY} = {'diff': [7.295799999999797e-05, 7.286100000000045e-05, 7.319399999999865e-05, 7.301300000000024e-05, 7.288899999999959e-05, 7.277800000000251e-05, 7.251399999999922e-05, 7.333299999999834e-05, 7.3222...</msg>
<status status="PASS" starttime="20201029 12:43:55.032" endtime="20201029 12:43:55.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.040" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.039" endtime="20201029 12:43:55.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.042" level="INFO">VALUE: [7.295799999999797e-05, 7.286100000000045e-05, 7.319399999999865e-05, 7.301300000000024e-05, 7.288899999999959e-05, 7.277800000000251e-05, 7.251399999999922e-05, 7.333299999999834e-05, 7.322200000000126e-05, 7.254100000000235e-05, 7.313899999999984e-05, 7.333300000000181e-05, 7.345799999999847e-05, 7.305499999999895e-05, 7.290299999999916e-05, 7.251400000000269e-05, 7.322199999999779e-05, 7.333299999999834e-05, 7.290199999999969e-05, 7.284700000000088e-05, 7.336099999999748e-05, 7.333299999999834e-05, 7.338900000000009e-05, 7.301399999999972e-05, 7.269500000000109e-05, 7.254199999999836e-05, 7.270799999999772e-05, 7.330599999999868e-05, 7.290199999999969e-05, 7.332000000000172e-05, 7.265299999999891e-05, 7.300000000000015e-05, 7.283299999999784e-05, 7.313899999999984e-05, 7.270900000000066e-05, 7.251399999999922e-05, 7.32500000000004e-05, 7.326399999999997e-05, 7.320900000000116e-05, 7.322199999999779e-05, 7.301399999999972e-05, 7.34439999999989e-05, 7.3069000000002e-05, 7.329199999999911e-05, 7.269399999999815e-05, 7.34300000000028e-05, 7.323600000000083e-05, 7.34439999999989e-05, 7.326399999999997e-05, 7.333299999999834e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.041" endtime="20201029 12:43:55.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.036" endtime="20201029 12:43:55.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.048" endtime="20201029 12:43:55.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.046" endtime="20201029 12:43:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.045" endtime="20201029 12:43:55.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.687" endtime="20201029 12:43:55.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.687" endtime="20201029 12:43:55.069"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.078" endtime="20201029 12:43:55.096"></status>
</kw>
<msg timestamp="20201029 12:43:55.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.076" endtime="20201029 12:43:55.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.098" endtime="20201029 12:43:55.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.100" endtime="20201029 12:43:55.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.074" endtime="20201029 12:43:55.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.072" endtime="20201029 12:43:55.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.109" endtime="20201029 12:43:55.394"></status>
</kw>
<msg timestamp="20201029 12:43:55.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.108" endtime="20201029 12:43:55.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022446056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.399" endtime="20201029 12:43:55.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.407" endtime="20201029 12:43:55.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.105" endtime="20201029 12:43:55.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.103" endtime="20201029 12:43:55.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.413" level="INFO">${RESULT} = [{'diff': 7.39309999999993e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.402799999999682e-05}, {'diff': 7.363900000000034e-05}, {'diff': 7.384700000000188e-05}, {'diff': 7.436099999999848e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:55.410" endtime="20201029 12:43:55.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.418" level="INFO">${ACCURACY} = {'diff': [7.39309999999993e-05, 7.388900000000059e-05, 7.402799999999682e-05, 7.363900000000034e-05, 7.384700000000188e-05, 7.436099999999848e-05, 7.416699999999998e-05, 7.438900000000109e-05, 7.44030...</msg>
<status status="PASS" starttime="20201029 12:43:55.414" endtime="20201029 12:43:55.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.423" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.422" endtime="20201029 12:43:55.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.425" level="INFO">VALUE: [7.39309999999993e-05, 7.388900000000059e-05, 7.402799999999682e-05, 7.363900000000034e-05, 7.384700000000188e-05, 7.436099999999848e-05, 7.416699999999998e-05, 7.438900000000109e-05, 7.440300000000066e-05, 7.412500000000127e-05, 7.418099999999955e-05, 7.395799999999897e-05, 7.40829999999991e-05, 7.438900000000109e-05, 7.413899999999737e-05, 7.409699999999866e-05, 7.408300000000256e-05, 7.438900000000109e-05, 7.390300000000016e-05, 7.397200000000201e-05, 7.402800000000029e-05, 7.398600000000158e-05, 7.427700000000106e-05, 7.370799999999872e-05, 7.404199999999986e-05, 7.401400000000072e-05, 7.359700000000163e-05, 7.426299999999803e-05, 7.438900000000109e-05, 7.444499999999937e-05, 7.376400000000047e-05, 7.408300000000256e-05, 7.406899999999952e-05, 7.420799999999922e-05, 7.416699999999998e-05, 7.358300000000206e-05, 7.429200000000011e-05, 7.436100000000195e-05, 7.420899999999869e-05, 7.377800000000004e-05, 7.447200000000251e-05, 7.366699999999948e-05, 7.420799999999922e-05, 7.445800000000294e-05, 7.359700000000163e-05, 7.391699999999973e-05, 7.401399999999725e-05, 7.416600000000051e-05, 7.418000000000008e-05, 7.426400000000097e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.424" endtime="20201029 12:43:55.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.419" endtime="20201029 12:43:55.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.430" endtime="20201029 12:43:55.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.429" endtime="20201029 12:43:55.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.427" endtime="20201029 12:43:55.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.070" endtime="20201029 12:43:55.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.069" endtime="20201029 12:43:55.451"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.459" endtime="20201029 12:43:55.478"></status>
</kw>
<msg timestamp="20201029 12:43:55.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.458" endtime="20201029 12:43:55.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.479" endtime="20201029 12:43:55.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.482" endtime="20201029 12:43:55.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.455" endtime="20201029 12:43:55.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.453" endtime="20201029 12:43:55.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.490" endtime="20201029 12:43:55.780"></status>
</kw>
<msg timestamp="20201029 12:43:55.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:55.489" endtime="20201029 12:43:55.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214925, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:55.784" endtime="20201029 12:43:55.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.792" endtime="20201029 12:43:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.486" endtime="20201029 12:43:55.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.485" endtime="20201029 12:43:55.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.799" level="INFO">${RESULT} = [{'diff': 7.533300000000034e-05}, {'diff': 7.483299999999984e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.502800000000129e-05}, {'diff': 7.506899999999705e-05}, {'diff': 7.54440000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:55.795" endtime="20201029 12:43:55.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.803" level="INFO">${ACCURACY} = {'diff': [7.533300000000034e-05, 7.483299999999984e-05, 7.498599999999911e-05, 7.502800000000129e-05, 7.506899999999705e-05, 7.54440000000009e-05, 7.466700000000048e-05, 7.49310000000003e-05, 7.463899...</msg>
<status status="PASS" starttime="20201029 12:43:55.799" endtime="20201029 12:43:55.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.807" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.806" endtime="20201029 12:43:55.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.809" level="INFO">VALUE: [7.533300000000034e-05, 7.483299999999984e-05, 7.498599999999911e-05, 7.502800000000129e-05, 7.506899999999705e-05, 7.54440000000009e-05, 7.466700000000048e-05, 7.49310000000003e-05, 7.463899999999787e-05, 7.477800000000104e-05, 7.524999999999893e-05, 7.542999999999786e-05, 7.534699999999991e-05, 7.519500000000012e-05, 7.470799999999972e-05, 7.540300000000166e-05, 7.488900000000159e-05, 7.502799999999782e-05, 7.495799999999997e-05, 7.536099999999948e-05, 7.466700000000048e-05, 7.49440000000004e-05, 7.532000000000025e-05, 7.483399999999932e-05, 7.486099999999898e-05, 7.469400000000015e-05, 7.512500000000227e-05, 7.495799999999997e-05, 7.461200000000168e-05, 7.513899999999837e-05, 7.511099999999923e-05, 7.547200000000004e-05, 7.451299999999828e-05, 7.522199999999979e-05, 7.540300000000166e-05, 7.541699999999776e-05, 7.505600000000043e-05, 7.480600000000018e-05, 7.470799999999972e-05, 7.472199999999929e-05, 7.474999999999843e-05, 7.45829999999996e-05, 7.474999999999843e-05, 7.516600000000151e-05, 7.505600000000043e-05, 7.477800000000104e-05, 7.543000000000133e-05, 7.491700000000073e-05, 7.543000000000133e-05, 7.531900000000077e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.808" endtime="20201029 12:43:55.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.803" endtime="20201029 12:43:55.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.814" endtime="20201029 12:43:55.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.813" endtime="20201029 12:43:55.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.812" endtime="20201029 12:43:55.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.452" endtime="20201029 12:43:55.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.451" endtime="20201029 12:43:55.835"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.843" endtime="20201029 12:43:55.863"></status>
</kw>
<msg timestamp="20201029 12:43:55.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.842" endtime="20201029 12:43:55.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.864" endtime="20201029 12:43:55.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.866" endtime="20201029 12:43:55.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.839" endtime="20201029 12:43:55.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.837" endtime="20201029 12:43:55.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.875" endtime="20201029 12:43:56.161"></status>
</kw>
<msg timestamp="20201029 12:43:56.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.874" endtime="20201029 12:43:56.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.165" endtime="20201029 12:43:56.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.173" endtime="20201029 12:43:56.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.871" endtime="20201029 12:43:56.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.870" endtime="20201029 12:43:56.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.180" level="INFO">${RESULT} = [{'diff': 7.618100000000155e-05}, {'diff': 7.594500000000087e-05}, {'diff': 7.549999999999918e-05}, {'diff': 7.562500000000277e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.588799999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:56.177" endtime="20201029 12:43:56.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.184" level="INFO">${ACCURACY} = {'diff': [7.618100000000155e-05, 7.594500000000087e-05, 7.549999999999918e-05, 7.562500000000277e-05, 7.61249999999998e-05, 7.588799999999965e-05, 7.555599999999746e-05, 7.601399999999925e-05, 7.59999...</msg>
<status status="PASS" starttime="20201029 12:43:56.181" endtime="20201029 12:43:56.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.188" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.187" endtime="20201029 12:43:56.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.191" level="INFO">VALUE: [7.618100000000155e-05, 7.594500000000087e-05, 7.549999999999918e-05, 7.562500000000277e-05, 7.61249999999998e-05, 7.588799999999965e-05, 7.555599999999746e-05, 7.601399999999925e-05, 7.599999999999968e-05, 7.556900000000102e-05, 7.582000000000075e-05, 7.631900000000177e-05, 7.555500000000145e-05, 7.623600000000036e-05, 7.637500000000005e-05, 7.638899999999962e-05, 7.619399999999818e-05, 7.588899999999912e-05, 7.562500000000277e-05, 7.592999999999836e-05, 7.570900000000019e-05, 7.632000000000125e-05, 7.622200000000079e-05, 7.640199999999972e-05, 7.619500000000112e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.565300000000191e-05, 7.586099999999998e-05, 7.549999999999918e-05, 7.626300000000003e-05, 7.62639999999995e-05, 7.626400000000297e-05, 7.552699999999885e-05, 7.562500000000277e-05, 7.565199999999897e-05, 7.580499999999823e-05, 7.623600000000036e-05, 7.599999999999968e-05, 7.619499999999765e-05, 7.594500000000087e-05, 7.599999999999968e-05, 7.618100000000155e-05, 7.588899999999912e-05, 7.559799999999964e-05, 7.606900000000152e-05, 7.608400000000057e-05, 7.633299999999787e-05, 7.577799999999857e-05, 7.615299999999894e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.189" endtime="20201029 12:43:56.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.185" endtime="20201029 12:43:56.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.196" endtime="20201029 12:43:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.195" endtime="20201029 12:43:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.194" endtime="20201029 12:43:56.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.836" endtime="20201029 12:43:56.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.835" endtime="20201029 12:43:56.217"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.226" endtime="20201029 12:43:56.244"></status>
</kw>
<msg timestamp="20201029 12:43:56.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.224" endtime="20201029 12:43:56.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.246" endtime="20201029 12:43:56.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.248" endtime="20201029 12:43:56.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.222" endtime="20201029 12:43:56.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.220" endtime="20201029 12:43:56.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.257" endtime="20201029 12:43:56.542"></status>
</kw>
<msg timestamp="20201029 12:43:56.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02157475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:56.255" endtime="20201029 12:43:56.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02157475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:56.546" endtime="20201029 12:43:56.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.554" endtime="20201029 12:43:56.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.253" endtime="20201029 12:43:56.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.251" endtime="20201029 12:43:56.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.560" level="INFO">${RESULT} = [{'diff': 7.701400000000025e-05}, {'diff': 7.670800000000172e-05}, {'diff': 7.745800000000247e-05}, {'diff': 7.684700000000141e-05}, {'diff': 7.748599999999814e-05}, {'diff': 7.686100000000098e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:56.557" endtime="20201029 12:43:56.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.565" level="INFO">${ACCURACY} = {'diff': [7.701400000000025e-05, 7.670800000000172e-05, 7.745800000000247e-05, 7.684700000000141e-05, 7.748599999999814e-05, 7.686100000000098e-05, 7.66250000000003e-05, 7.734799999999792e-05, 7.72500...</msg>
<status status="PASS" starttime="20201029 12:43:56.561" endtime="20201029 12:43:56.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.570" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.569" endtime="20201029 12:43:56.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.572" level="INFO">VALUE: [7.701400000000025e-05, 7.670800000000172e-05, 7.745800000000247e-05, 7.684700000000141e-05, 7.748599999999814e-05, 7.686100000000098e-05, 7.66250000000003e-05, 7.734799999999792e-05, 7.725000000000093e-05, 7.68050000000027e-05, 7.665300000000291e-05, 7.663899999999987e-05, 7.715299999999994e-05, 7.747200000000204e-05, 7.719499999999865e-05, 7.658400000000107e-05, 7.727800000000007e-05, 7.744399999999943e-05, 7.718099999999908e-05, 7.668000000000258e-05, 7.744399999999943e-05, 7.667999999999911e-05, 7.702799999999982e-05, 7.7070000000002e-05, 7.706899999999905e-05, 7.741699999999976e-05, 7.68189999999988e-05, 7.711099999999776e-05, 7.683300000000184e-05, 7.677799999999957e-05, 7.687500000000055e-05, 7.7457999999999e-05, 7.732000000000225e-05, 7.651399999999975e-05, 7.730499999999974e-05, 7.731999999999878e-05, 7.66250000000003e-05, 7.650000000000018e-05, 7.720800000000222e-05, 7.744399999999943e-05, 7.729100000000017e-05, 7.695899999999797e-05, 7.730599999999921e-05, 7.720799999999875e-05, 7.74440000000029e-05, 7.680599999999871e-05, 7.676300000000053e-05, 7.744500000000237e-05, 7.705499999999949e-05, 7.670799999999825e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.571" endtime="20201029 12:43:56.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.566" endtime="20201029 12:43:56.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.577" endtime="20201029 12:43:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.576" endtime="20201029 12:43:56.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.575" endtime="20201029 12:43:56.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.218" endtime="20201029 12:43:56.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.218" endtime="20201029 12:43:56.598"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.606" endtime="20201029 12:43:56.625"></status>
</kw>
<msg timestamp="20201029 12:43:56.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.605" endtime="20201029 12:43:56.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.626" endtime="20201029 12:43:56.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.629" endtime="20201029 12:43:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.602" endtime="20201029 12:43:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.600" endtime="20201029 12:43:56.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.638" endtime="20201029 12:43:56.922"></status>
</kw>
<msg timestamp="20201029 12:43:56.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.636" endtime="20201029 12:43:56.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021397833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021475972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.926" endtime="20201029 12:43:56.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.935" endtime="20201029 12:43:56.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.634" endtime="20201029 12:43:56.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.632" endtime="20201029 12:43:56.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.941" level="INFO">${RESULT} = [{'diff': 7.81389999999979e-05}, {'diff': 7.793099999999983e-05}, {'diff': 7.838900000000162e-05}, {'diff': 7.788899999999765e-05}, {'diff': 7.7764000000001e-05}, {'diff': 7.818000000000061e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:56.938" endtime="20201029 12:43:56.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.945" level="INFO">${ACCURACY} = {'diff': [7.81389999999979e-05, 7.793099999999983e-05, 7.838900000000162e-05, 7.788899999999765e-05, 7.7764000000001e-05, 7.818000000000061e-05, 7.798599999999864e-05, 7.755599999999946e-05, 7.7625000...</msg>
<status status="PASS" starttime="20201029 12:43:56.942" endtime="20201029 12:43:56.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.949" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.948" endtime="20201029 12:43:56.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.952" level="INFO">VALUE: [7.81389999999979e-05, 7.793099999999983e-05, 7.838900000000162e-05, 7.788899999999765e-05, 7.7764000000001e-05, 7.818000000000061e-05, 7.798599999999864e-05, 7.755599999999946e-05, 7.76250000000013e-05, 7.84449999999999e-05, 7.776399999999753e-05, 7.756899999999955e-05, 7.774999999999796e-05, 7.793099999999983e-05, 7.806900000000006e-05, 7.779200000000014e-05, 7.809700000000266e-05, 7.841599999999782e-05, 7.847199999999957e-05, 7.830600000000021e-05, 7.838899999999815e-05, 7.798599999999864e-05, 7.751400000000075e-05, 7.791600000000079e-05, 7.779100000000067e-05, 7.770799999999925e-05, 7.823600000000236e-05, 7.784699999999894e-05, 7.79169999999968e-05, 7.81250000000018e-05, 7.744500000000237e-05, 7.784699999999894e-05, 7.793099999999983e-05, 7.76250000000013e-05, 7.806999999999953e-05, 7.81389999999979e-05, 7.745899999999847e-05, 7.794399999999993e-05, 7.773599999999839e-05, 7.819400000000018e-05, 7.815300000000094e-05, 7.787500000000155e-05, 7.837499999999858e-05, 7.76250000000013e-05, 7.818100000000008e-05, 7.826399999999803e-05, 7.809799999999867e-05, 7.833299999999987e-05, 7.766700000000001e-05, 7.842999999999739e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.950" endtime="20201029 12:43:56.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.946" endtime="20201029 12:43:56.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.957" endtime="20201029 12:43:56.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.955" endtime="20201029 12:43:56.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.954" endtime="20201029 12:43:56.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.599" endtime="20201029 12:43:56.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.598" endtime="20201029 12:43:56.978"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.986" endtime="20201029 12:43:57.006"></status>
</kw>
<msg timestamp="20201029 12:43:57.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.984" endtime="20201029 12:43:57.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.007" endtime="20201029 12:43:57.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.010" endtime="20201029 12:43:57.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.982" endtime="20201029 12:43:57.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.980" endtime="20201029 12:43:57.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.018" endtime="20201029 12:43:57.304"></status>
</kw>
<msg timestamp="20201029 12:43:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.017" endtime="20201029 12:43:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022448403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.308" endtime="20201029 12:43:57.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.316" endtime="20201029 12:43:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.014" endtime="20201029 12:43:57.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.013" endtime="20201029 12:43:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.323" level="INFO">${RESULT} = [{'diff': 7.918099999999761e-05}, {'diff': 7.920800000000075e-05}, {'diff': 7.944399999999796e-05}, {'diff': 7.897200000000007e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.91389999999989e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:57.320" endtime="20201029 12:43:57.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.327" level="INFO">${ACCURACY} = {'diff': [7.918099999999761e-05, 7.920800000000075e-05, 7.944399999999796e-05, 7.897200000000007e-05, 7.899999999999921e-05, 7.91389999999989e-05, 7.880600000000071e-05, 7.897200000000007e-05, 7.90410...</msg>
<status status="PASS" starttime="20201029 12:43:57.324" endtime="20201029 12:43:57.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.331" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.330" endtime="20201029 12:43:57.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.334" level="INFO">VALUE: [7.918099999999761e-05, 7.920800000000075e-05, 7.944399999999796e-05, 7.897200000000007e-05, 7.899999999999921e-05, 7.91389999999989e-05, 7.880600000000071e-05, 7.897200000000007e-05, 7.904100000000192e-05, 7.89169999999978e-05, 7.884699999999994e-05, 7.868100000000058e-05, 7.908300000000063e-05, 7.848599999999914e-05, 7.918100000000108e-05, 7.866600000000154e-05, 7.888899999999865e-05, 7.891600000000179e-05, 7.905600000000096e-05, 7.865300000000144e-05, 7.869500000000015e-05, 7.874999999999896e-05, 7.868099999999711e-05, 7.861099999999926e-05, 7.923599999999989e-05, 7.930499999999827e-05, 7.897200000000007e-05, 7.855499999999752e-05, 7.943099999999786e-05, 7.847199999999957e-05, 7.89450000000004e-05, 7.868100000000058e-05, 7.90970000000002e-05, 7.874999999999896e-05, 7.866699999999754e-05, 7.912499999999933e-05, 7.866699999999754e-05, 7.930500000000174e-05, 7.91389999999989e-05, 7.851400000000175e-05, 7.93190000000013e-05, 7.912499999999933e-05, 7.94169999999983e-05, 7.923599999999989e-05, 7.912499999999933e-05, 7.924999999999946e-05, 7.883300000000037e-05, 7.916600000000204e-05, 7.894399999999746e-05, 7.858300000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.333" endtime="20201029 12:43:57.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.328" endtime="20201029 12:43:57.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.340" endtime="20201029 12:43:57.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.338" endtime="20201029 12:43:57.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.337" endtime="20201029 12:43:57.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.978" endtime="20201029 12:43:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.978" endtime="20201029 12:43:57.361"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.369" endtime="20201029 12:43:57.388"></status>
</kw>
<msg timestamp="20201029 12:43:57.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.368" endtime="20201029 12:43:57.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.389" endtime="20201029 12:43:57.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.392" endtime="20201029 12:43:57.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.365" endtime="20201029 12:43:57.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.363" endtime="20201029 12:43:57.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.401" endtime="20201029 12:43:57.687"></status>
</kw>
<msg timestamp="20201029 12:43:57.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.399" endtime="20201029 12:43:57.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021355361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.691" endtime="20201029 12:43:57.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.699" endtime="20201029 12:43:57.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.397" endtime="20201029 12:43:57.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.395" endtime="20201029 12:43:57.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.705" level="INFO">${RESULT} = [{'diff': 8.069499999999868e-05}, {'diff': 7.988899999999965e-05}, {'diff': 8.043099999999886e-05}, {'diff': 7.988800000000018e-05}, {'diff': 8.033399999999788e-05}, {'diff': 7.973600000000039e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:57.702" endtime="20201029 12:43:57.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.710" level="INFO">${ACCURACY} = {'diff': [8.069499999999868e-05, 7.988899999999965e-05, 8.043099999999886e-05, 7.988800000000018e-05, 8.033399999999788e-05, 7.973600000000039e-05, 7.949999999999971e-05, 7.95840000000006e-05, 8.03329...</msg>
<status status="PASS" starttime="20201029 12:43:57.706" endtime="20201029 12:43:57.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.715" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.714" endtime="20201029 12:43:57.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.717" level="INFO">VALUE: [8.069499999999868e-05, 7.988899999999965e-05, 8.043099999999886e-05, 7.988800000000018e-05, 8.033399999999788e-05, 7.973600000000039e-05, 7.949999999999971e-05, 7.95840000000006e-05, 8.03329999999984e-05, 7.952799999999885e-05, 8.030499999999927e-05, 7.974999999999996e-05, 8.020799999999828e-05, 8.023600000000089e-05, 7.98190000000018e-05, 7.969500000000115e-05, 8.037500000000058e-05, 7.980499999999877e-05, 8.011100000000076e-05, 8.04169999999993e-05, 8.049999999999724e-05, 8.006899999999859e-05, 8.018099999999861e-05, 7.966699999999854e-05, 8.012500000000033e-05, 7.967999999999864e-05, 7.948600000000014e-05, 7.95970000000007e-05, 7.955600000000146e-05, 7.952799999999885e-05, 7.974999999999996e-05, 7.962499999999983e-05, 8.005499999999902e-05, 8.018099999999861e-05, 8.012500000000033e-05, 7.974999999999996e-05, 8.017999999999914e-05, 8.001399999999978e-05, 7.99719999999976e-05, 7.957000000000103e-05, 8.037500000000058e-05, 8.011100000000076e-05, 8.011100000000076e-05, 7.973600000000039e-05, 8.004100000000292e-05, 8.016700000000251e-05, 7.973600000000039e-05, 8.037500000000058e-05, 8.017999999999914e-05, 8.009800000000067e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.716" endtime="20201029 12:43:57.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.711" endtime="20201029 12:43:57.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.722" endtime="20201029 12:43:57.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.721" endtime="20201029 12:43:57.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.720" endtime="20201029 12:43:57.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.362" endtime="20201029 12:43:57.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.361" endtime="20201029 12:43:57.743"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.751" endtime="20201029 12:43:57.770"></status>
</kw>
<msg timestamp="20201029 12:43:57.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.750" endtime="20201029 12:43:57.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.772" endtime="20201029 12:43:57.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.774" endtime="20201029 12:43:57.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.747" endtime="20201029 12:43:57.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.745" endtime="20201029 12:43:57.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.783" endtime="20201029 12:43:58.070"></status>
</kw>
<msg timestamp="20201029 12:43:58.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.781" endtime="20201029 12:43:58.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021496458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.075" endtime="20201029 12:43:58.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.083" endtime="20201029 12:43:58.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.779" endtime="20201029 12:43:58.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.777" endtime="20201029 12:43:58.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.089" level="INFO">${RESULT} = [{'diff': 8.137499999999812e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.055600000000246e-05}, {'diff': 8.068099999999911e-05}, {'diff': 8.048600000000114e-05}, {'diff': 8.051400000000028e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:58.086" endtime="20201029 12:43:58.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.093" level="INFO">${ACCURACY} = {'diff': [8.137499999999812e-05, 8.125000000000146e-05, 8.055600000000246e-05, 8.068099999999911e-05, 8.048600000000114e-05, 8.051400000000028e-05, 8.123700000000136e-05, 8.125000000000146e-05, 8.1222...</msg>
<status status="PASS" starttime="20201029 12:43:58.090" endtime="20201029 12:43:58.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.098" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.097" endtime="20201029 12:43:58.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.100" level="INFO">VALUE: [8.137499999999812e-05, 8.125000000000146e-05, 8.055600000000246e-05, 8.068099999999911e-05, 8.048600000000114e-05, 8.051400000000028e-05, 8.123700000000136e-05, 8.125000000000146e-05, 8.122200000000232e-05, 8.055599999999899e-05, 8.048600000000114e-05, 8.087499999999762e-05, 8.092999999999989e-05, 8.136099999999855e-05, 8.06109999999978e-05, 8.095900000000197e-05, 8.081899999999934e-05, 8.130500000000027e-05, 8.062500000000083e-05, 8.057000000000203e-05, 8.056899999999909e-05, 8.07910000000002e-05, 8.084800000000142e-05, 8.100000000000121e-05, 8.108299999999916e-05, 8.061100000000126e-05, 8.06390000000004e-05, 8.075000000000096e-05, 8.125000000000146e-05, 8.098600000000164e-05, 8.144399999999996e-05, 8.102700000000088e-05, 8.06390000000004e-05, 8.050000000000071e-05, 8.069499999999868e-05, 8.143099999999986e-05, 8.100000000000121e-05, 8.062500000000083e-05, 8.112499999999787e-05, 8.123600000000189e-05, 8.075000000000096e-05, 8.143000000000039e-05, 8.094399999999946e-05, 8.131899999999984e-05, 8.11109999999983e-05, 8.137500000000158e-05, 8.067999999999964e-05, 8.134800000000192e-05, 8.074999999999749e-05, 8.130599999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.099" endtime="20201029 12:43:58.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.094" endtime="20201029 12:43:58.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.106" endtime="20201029 12:43:58.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.104" endtime="20201029 12:43:58.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.103" endtime="20201029 12:43:58.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.744" endtime="20201029 12:43:58.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.743" endtime="20201029 12:43:58.127"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.135" endtime="20201029 12:43:58.155"></status>
</kw>
<msg timestamp="20201029 12:43:58.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.134" endtime="20201029 12:43:58.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.156" endtime="20201029 12:43:58.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.159" endtime="20201029 12:43:58.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.131" endtime="20201029 12:43:58.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.129" endtime="20201029 12:43:58.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.168" endtime="20201029 12:43:58.454"></status>
</kw>
<msg timestamp="20201029 12:43:58.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.166" endtime="20201029 12:43:58.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.458" endtime="20201029 12:43:58.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.466" endtime="20201029 12:43:58.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.164" endtime="20201029 12:43:58.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.162" endtime="20201029 12:43:58.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.472" level="INFO">${RESULT} = [{'diff': 8.28049999999983e-05}, {'diff': 8.181999999999981e-05}, {'diff': 8.205600000000049e-05}, {'diff': 8.158299999999966e-05}, {'diff': 8.230500000000127e-05}, {'diff': 8.230500000000127e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:58.469" endtime="20201029 12:43:58.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.477" level="INFO">${ACCURACY} = {'diff': [8.28049999999983e-05, 8.181999999999981e-05, 8.205600000000049e-05, 8.158299999999966e-05, 8.230500000000127e-05, 8.230500000000127e-05, 8.194499999999993e-05, 8.174999999999849e-05, 8.21809...</msg>
<status status="PASS" starttime="20201029 12:43:58.473" endtime="20201029 12:43:58.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.481" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.480" endtime="20201029 12:43:58.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.483" level="INFO">VALUE: [8.28049999999983e-05, 8.181999999999981e-05, 8.205600000000049e-05, 8.158299999999966e-05, 8.230500000000127e-05, 8.230500000000127e-05, 8.194499999999993e-05, 8.174999999999849e-05, 8.218099999999715e-05, 8.156900000000009e-05, 8.212499999999887e-05, 8.201399999999831e-05, 8.204200000000092e-05, 8.169400000000021e-05, 8.183399999999938e-05, 8.187499999999862e-05, 8.227799999999813e-05, 8.230500000000127e-05, 8.217999999999767e-05, 8.212499999999887e-05, 8.173599999999892e-05, 8.165300000000097e-05, 8.243000000000139e-05, 8.162499999999837e-05, 8.168100000000011e-05, 8.174999999999849e-05, 8.156999999999956e-05, 8.167999999999717e-05, 8.206900000000059e-05, 8.243100000000086e-05, 8.208300000000016e-05, 8.199999999999874e-05, 8.173600000000239e-05, 8.205600000000049e-05, 8.218000000000114e-05, 8.162499999999837e-05, 8.18329999999999e-05, 8.169499999999968e-05, 8.176399999999806e-05, 8.207000000000006e-05, 8.216699999999758e-05, 8.223599999999942e-05, 8.150000000000171e-05, 8.181900000000034e-05, 8.238899999999869e-05, 8.19719999999996e-05, 8.174999999999849e-05, 8.198599999999917e-05, 8.172299999999882e-05, 8.186099999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.482" endtime="20201029 12:43:58.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.477" endtime="20201029 12:43:58.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.489" endtime="20201029 12:43:58.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.488" endtime="20201029 12:43:58.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.486" endtime="20201029 12:43:58.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.128" endtime="20201029 12:43:58.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.127" endtime="20201029 12:43:58.510"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.518" endtime="20201029 12:43:58.537"></status>
</kw>
<msg timestamp="20201029 12:43:58.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.517" endtime="20201029 12:43:58.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.539" endtime="20201029 12:43:58.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.541" endtime="20201029 12:43:58.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.514" endtime="20201029 12:43:58.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.512" endtime="20201029 12:43:58.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.550" endtime="20201029 12:43:58.836"></status>
</kw>
<msg timestamp="20201029 12:43:58.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021384222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.548" endtime="20201029 12:43:58.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021384222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.841" endtime="20201029 12:43:58.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.849" endtime="20201029 12:43:58.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.546" endtime="20201029 12:43:58.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.544" endtime="20201029 12:43:58.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.855" level="INFO">${RESULT} = [{'diff': 8.361099999999733e-05}, {'diff': 8.337500000000012e-05}, {'diff': 8.269500000000068e-05}, {'diff': 8.281900000000134e-05}, {'diff': 8.28330000000009e-05}, {'diff': 8.309700000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:58.852" endtime="20201029 12:43:58.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.860" level="INFO">${ACCURACY} = {'diff': [8.361099999999733e-05, 8.337500000000012e-05, 8.269500000000068e-05, 8.281900000000134e-05, 8.28330000000009e-05, 8.309700000000073e-05, 8.290299999999876e-05, 8.255600000000099e-05, 8.34309...</msg>
<status status="PASS" starttime="20201029 12:43:58.856" endtime="20201029 12:43:58.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.864" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.863" endtime="20201029 12:43:58.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.867" level="INFO">VALUE: [8.361099999999733e-05, 8.337500000000012e-05, 8.269500000000068e-05, 8.281900000000134e-05, 8.28330000000009e-05, 8.309700000000073e-05, 8.290299999999876e-05, 8.255600000000099e-05, 8.34309999999984e-05, 8.324999999999999e-05, 8.319399999999824e-05, 8.336100000000055e-05, 8.262499999999937e-05, 8.24720000000001e-05, 8.26520000000025e-05, 8.336200000000002e-05, 8.32919999999987e-05, 8.291699999999833e-05, 8.340299999999926e-05, 8.323600000000042e-05, 8.330600000000174e-05, 8.304200000000192e-05, 8.279200000000167e-05, 8.312499999999987e-05, 8.322200000000085e-05, 8.304200000000192e-05, 8.320799999999781e-05, 8.316699999999858e-05, 8.313899999999944e-05, 8.316699999999858e-05, 8.305500000000202e-05, 8.284700000000048e-05, 8.323600000000042e-05, 8.252799999999838e-05, 8.318000000000214e-05, 8.249999999999924e-05, 8.343100000000186e-05, 8.344500000000143e-05, 8.282000000000081e-05, 8.306999999999759e-05, 8.262500000000284e-05, 8.323600000000042e-05, 8.293100000000136e-05, 8.273599999999992e-05, 8.254099999999848e-05, 8.34170000000023e-05, 8.26109999999998e-05, 8.32369999999999e-05, 8.312499999999987e-05, 8.34309999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.865" endtime="20201029 12:43:58.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.861" endtime="20201029 12:43:58.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.872" endtime="20201029 12:43:58.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.870" endtime="20201029 12:43:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.869" endtime="20201029 12:43:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.511" endtime="20201029 12:43:58.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.510" endtime="20201029 12:43:58.892"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.901" endtime="20201029 12:43:58.920"></status>
</kw>
<msg timestamp="20201029 12:43:58.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.899" endtime="20201029 12:43:58.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.921" endtime="20201029 12:43:58.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.924" endtime="20201029 12:43:58.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.897" endtime="20201029 12:43:58.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.895" endtime="20201029 12:43:58.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.933" endtime="20201029 12:43:59.222"></status>
</kw>
<msg timestamp="20201029 12:43:59.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021438972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.931" endtime="20201029 12:43:59.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021438972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.226" endtime="20201029 12:43:59.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.234" endtime="20201029 12:43:59.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.929" endtime="20201029 12:43:59.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.927" endtime="20201029 12:43:59.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.241" level="INFO">${RESULT} = [{'diff': 8.470899999999879e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.383399999999791e-05}, {'diff': 8.355599999999852e-05}, {'diff': 8.443100000000286e-05}, {'diff': 8.408399999999816e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:59.237" endtime="20201029 12:43:59.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.245" level="INFO">${ACCURACY} = {'diff': [8.470899999999879e-05, 8.436099999999808e-05, 8.383399999999791e-05, 8.355599999999852e-05, 8.443100000000286e-05, 8.408399999999816e-05, 8.375000000000049e-05, 8.406999999999859e-05, 8.4041...</msg>
<status status="PASS" starttime="20201029 12:43:59.242" endtime="20201029 12:43:59.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.249" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.248" endtime="20201029 12:43:59.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.251" level="INFO">VALUE: [8.470899999999879e-05, 8.436099999999808e-05, 8.383399999999791e-05, 8.355599999999852e-05, 8.443100000000286e-05, 8.408399999999816e-05, 8.375000000000049e-05, 8.406999999999859e-05, 8.404199999999945e-05, 8.437499999999765e-05, 8.42919999999997e-05, 8.417999999999967e-05, 8.422299999999786e-05, 8.376400000000006e-05, 8.43469999999985e-05, 8.355499999999905e-05, 8.422200000000185e-05, 8.404099999999998e-05, 8.391699999999933e-05, 8.441699999999983e-05, 8.379200000000267e-05, 8.408299999999869e-05, 8.368100000000211e-05, 8.387500000000062e-05, 8.429100000000023e-05, 8.418099999999915e-05, 8.416699999999958e-05, 8.398600000000117e-05, 8.433299999999894e-05, 8.404199999999945e-05, 8.400000000000074e-05, 8.348600000000067e-05, 8.400000000000074e-05, 8.43049999999998e-05, 8.418099999999915e-05, 8.401400000000031e-05, 8.370799999999831e-05, 8.430599999999927e-05, 8.367999999999917e-05, 8.373599999999745e-05, 8.373600000000092e-05, 8.423599999999795e-05, 8.362500000000037e-05, 8.417999999999967e-05, 8.382000000000181e-05, 8.425000000000099e-05, 8.380599999999877e-05, 8.355500000000252e-05, 8.347199999999763e-05, 8.368100000000211e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.250" endtime="20201029 12:43:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.245" endtime="20201029 12:43:59.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.256" endtime="20201029 12:43:59.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.255" endtime="20201029 12:43:59.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.254" endtime="20201029 12:43:59.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.893" endtime="20201029 12:43:59.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.893" endtime="20201029 12:43:59.277"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.286" endtime="20201029 12:43:59.305"></status>
</kw>
<msg timestamp="20201029 12:43:59.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.284" endtime="20201029 12:43:59.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.307" endtime="20201029 12:43:59.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.309" endtime="20201029 12:43:59.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.282" endtime="20201029 12:43:59.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.279" endtime="20201029 12:43:59.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.318" endtime="20201029 12:43:59.604"></status>
</kw>
<msg timestamp="20201029 12:43:59.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.317" endtime="20201029 12:43:59.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022418653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.608" endtime="20201029 12:43:59.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.617" endtime="20201029 12:43:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.314" endtime="20201029 12:43:59.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.312" endtime="20201029 12:43:59.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.623" level="INFO">${RESULT} = [{'diff': 8.570899999999979e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.458399999999866e-05}, {'diff': 8.540300000000126e-05}, {'diff': 8.452700000000091e-05}, {'diff': 8.459699999999876e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:59.620" endtime="20201029 12:43:59.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.627" level="INFO">${ACCURACY} = {'diff': [8.570899999999979e-05, 8.461099999999833e-05, 8.458399999999866e-05, 8.540300000000126e-05, 8.452700000000091e-05, 8.459699999999876e-05, 8.490199999999781e-05, 8.448600000000167e-05, 8.5403...</msg>
<status status="PASS" starttime="20201029 12:43:59.624" endtime="20201029 12:43:59.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.631" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.630" endtime="20201029 12:43:59.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.634" level="INFO">VALUE: [8.570899999999979e-05, 8.461099999999833e-05, 8.458399999999866e-05, 8.540300000000126e-05, 8.452700000000091e-05, 8.459699999999876e-05, 8.490199999999781e-05, 8.448600000000167e-05, 8.540300000000126e-05, 8.53469999999995e-05, 8.46530000000005e-05, 8.468000000000017e-05, 8.540199999999831e-05, 8.538899999999822e-05, 8.454100000000048e-05, 8.533399999999941e-05, 8.516700000000058e-05, 8.526399999999809e-05, 8.49729999999986e-05, 8.505499999999708e-05, 8.538900000000169e-05, 8.473599999999845e-05, 8.533299999999994e-05, 8.468000000000017e-05, 8.486099999999858e-05, 8.53469999999995e-05, 8.466700000000008e-05, 8.523599999999895e-05, 8.497199999999913e-05, 8.477800000000063e-05, 8.523599999999895e-05, 8.468099999999965e-05, 8.511099999999883e-05, 8.504099999999751e-05, 8.52370000000019e-05, 8.522199999999938e-05, 8.461099999999833e-05, 8.52920000000007e-05, 8.463900000000094e-05, 8.541699999999736e-05, 8.483399999999891e-05, 8.461099999999833e-05, 8.512500000000187e-05, 8.488900000000119e-05, 8.524999999999852e-05, 8.5153000000001e-05, 8.513899999999797e-05, 8.448600000000167e-05, 8.504200000000045e-05, 8.505600000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.633" endtime="20201029 12:43:59.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.628" endtime="20201029 12:43:59.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.644" endtime="20201029 12:43:59.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.642" endtime="20201029 12:43:59.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.641" endtime="20201029 12:43:59.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.278" endtime="20201029 12:43:59.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.277" endtime="20201029 12:43:59.665"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.673" endtime="20201029 12:43:59.692"></status>
</kw>
<msg timestamp="20201029 12:43:59.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.672" endtime="20201029 12:43:59.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.693" endtime="20201029 12:43:59.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.696" endtime="20201029 12:43:59.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.669" endtime="20201029 12:43:59.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.667" endtime="20201029 12:43:59.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.705" endtime="20201029 12:43:59.991"></status>
</kw>
<msg timestamp="20201029 12:43:59.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021460139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.703" endtime="20201029 12:43:59.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021373403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021460139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.995" endtime="20201029 12:44:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.003" endtime="20201029 12:44:00.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.701" endtime="20201029 12:44:00.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.699" endtime="20201029 12:44:00.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.010" level="INFO">${RESULT} = [{'diff': 8.673600000000045e-05}, {'diff': 8.55980000000027e-05}, {'diff': 8.641699999999836e-05}, {'diff': 8.598600000000317e-05}, {'diff': 8.608300000000069e-05}, {'diff': 8.579100000000173e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:00.006" endtime="20201029 12:44:00.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.014" level="INFO">${ACCURACY} = {'diff': [8.673600000000045e-05, 8.55980000000027e-05, 8.641699999999836e-05, 8.598600000000317e-05, 8.608300000000069e-05, 8.579100000000173e-05, 8.572199999999988e-05, 8.594400000000099e-05, 8.63470...</msg>
<status status="PASS" starttime="20201029 12:44:00.011" endtime="20201029 12:44:00.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.019" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.018" endtime="20201029 12:44:00.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.021" level="INFO">VALUE: [8.673600000000045e-05, 8.55980000000027e-05, 8.641699999999836e-05, 8.598600000000317e-05, 8.608300000000069e-05, 8.579100000000173e-05, 8.572199999999988e-05, 8.594400000000099e-05, 8.63470000000005e-05, 8.602699999999894e-05, 8.6153000000002e-05, 8.604099999999851e-05, 8.574999999999902e-05, 8.615299999999854e-05, 8.579199999999773e-05, 8.568000000000117e-05, 8.63050000000018e-05, 8.5847e-05, 8.606900000000112e-05, 8.611099999999983e-05, 8.576399999999859e-05, 8.577799999999816e-05, 8.629099999999876e-05, 8.552800000000138e-05, 8.59729999999996e-05, 8.641599999999888e-05, 8.63470000000005e-05, 8.5847e-05, 8.577700000000216e-05, 8.59310000000009e-05, 8.641700000000183e-05, 8.570800000000031e-05, 8.570799999999684e-05, 8.583399999999991e-05, 8.602700000000241e-05, 8.62920000000017e-05, 8.599999999999927e-05, 8.641700000000183e-05, 8.579099999999826e-05, 8.572199999999988e-05, 8.591700000000133e-05, 8.611099999999983e-05, 8.640299999999879e-05, 8.645900000000054e-05, 8.602799999999841e-05, 8.644400000000149e-05, 8.605600000000102e-05, 8.629099999999876e-05, 8.56110000000028e-05, 8.633299999999747e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.020" endtime="20201029 12:44:00.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.015" endtime="20201029 12:44:00.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.026" endtime="20201029 12:44:00.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.025" endtime="20201029 12:44:00.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.024" endtime="20201029 12:44:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.665" endtime="20201029 12:44:00.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.665" endtime="20201029 12:44:00.047"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.055" endtime="20201029 12:44:00.074"></status>
</kw>
<msg timestamp="20201029 12:44:00.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.054" endtime="20201029 12:44:00.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.076" endtime="20201029 12:44:00.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.078" endtime="20201029 12:44:00.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.051" endtime="20201029 12:44:00.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.049" endtime="20201029 12:44:00.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.087" endtime="20201029 12:44:00.375"></status>
</kw>
<msg timestamp="20201029 12:44:00.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021448569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.086" endtime="20201029 12:44:00.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021360972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021448569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.379" endtime="20201029 12:44:00.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.387" endtime="20201029 12:44:00.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.083" endtime="20201029 12:44:00.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.082" endtime="20201029 12:44:00.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.394" level="INFO">${RESULT} = [{'diff': 8.759700000000176e-05}, {'diff': 8.727700000000019e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.675000000000002e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.727800000000313e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:00.390" endtime="20201029 12:44:00.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.398" level="INFO">${ACCURACY} = {'diff': [8.759700000000176e-05, 8.727700000000019e-05, 8.673600000000045e-05, 8.675000000000002e-05, 8.673600000000045e-05, 8.727800000000313e-05, 8.695900000000104e-05, 8.663899999999947e-05, 8.6944...</msg>
<status status="PASS" starttime="20201029 12:44:00.395" endtime="20201029 12:44:00.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.402" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.401" endtime="20201029 12:44:00.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.405" level="INFO">VALUE: [8.759700000000176e-05, 8.727700000000019e-05, 8.673600000000045e-05, 8.675000000000002e-05, 8.673600000000045e-05, 8.727800000000313e-05, 8.695900000000104e-05, 8.663899999999947e-05, 8.694400000000199e-05, 8.680499999999883e-05, 8.670799999999784e-05, 8.647199999999716e-05, 8.706999999999812e-05, 8.679199999999873e-05, 8.651399999999934e-05, 8.705599999999855e-05, 8.679199999999873e-05, 8.690199999999981e-05, 8.701399999999984e-05, 8.677799999999916e-05, 8.669499999999775e-05, 8.722200000000138e-05, 8.683300000000144e-05, 8.695899999999757e-05, 8.670799999999784e-05, 8.659700000000076e-05, 8.652799999999891e-05, 8.722199999999791e-05, 8.705499999999908e-05, 8.704199999999898e-05, 8.69730000000006e-05, 8.64860000000002e-05, 8.736100000000108e-05, 8.727799999999966e-05, 8.645900000000054e-05, 8.738900000000022e-05, 8.663900000000294e-05, 8.742999999999945e-05, 8.677800000000263e-05, 8.727700000000019e-05, 8.688899999999972e-05, 8.654099999999901e-05, 8.71669999999991e-05, 8.704199999999898e-05, 8.64860000000002e-05, 8.726400000000009e-05, 8.736100000000108e-05, 8.715299999999954e-05, 8.738900000000022e-05, 8.6944999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.403" endtime="20201029 12:44:00.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.399" endtime="20201029 12:44:00.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.409" endtime="20201029 12:44:00.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.408" endtime="20201029 12:44:00.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.407" endtime="20201029 12:44:00.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.048" endtime="20201029 12:44:00.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.047" endtime="20201029 12:44:00.430"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.439" endtime="20201029 12:44:00.459"></status>
</kw>
<msg timestamp="20201029 12:44:00.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.437" endtime="20201029 12:44:00.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.460" endtime="20201029 12:44:00.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.463" endtime="20201029 12:44:00.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.435" endtime="20201029 12:44:00.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.433" endtime="20201029 12:44:00.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.471" endtime="20201029 12:44:00.757"></status>
</kw>
<msg timestamp="20201029 12:44:00.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.470" endtime="20201029 12:44:00.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022406333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.761" endtime="20201029 12:44:00.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.769" endtime="20201029 12:44:00.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.467" endtime="20201029 12:44:00.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.466" endtime="20201029 12:44:00.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.776" level="INFO">${RESULT} = [{'diff': 8.826400000000109e-05}, {'diff': 8.78189999999994e-05}, {'diff': 8.779199999999973e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.825000000000152e-05}, {'diff': 8.744400000000249e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:00.772" endtime="20201029 12:44:00.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.780" level="INFO">${ACCURACY} = {'diff': [8.826400000000109e-05, 8.78189999999994e-05, 8.779199999999973e-05, 8.791699999999986e-05, 8.825000000000152e-05, 8.744400000000249e-05, 8.770800000000231e-05, 8.769399999999927e-05, 8.82780...</msg>
<status status="PASS" starttime="20201029 12:44:00.777" endtime="20201029 12:44:00.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.784" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.783" endtime="20201029 12:44:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.787" level="INFO">VALUE: [8.826400000000109e-05, 8.78189999999994e-05, 8.779199999999973e-05, 8.791699999999986e-05, 8.825000000000152e-05, 8.744400000000249e-05, 8.770800000000231e-05, 8.769399999999927e-05, 8.827800000000066e-05, 8.74860000000012e-05, 8.790200000000081e-05, 8.822199999999891e-05, 8.840300000000079e-05, 8.840200000000131e-05, 8.791600000000038e-05, 8.833299999999947e-05, 8.777800000000016e-05, 8.820800000000281e-05, 8.833399999999894e-05, 8.820799999999934e-05, 8.761100000000133e-05, 8.833299999999947e-05, 8.759700000000176e-05, 8.822200000000238e-05, 8.808400000000216e-05, 8.822299999999839e-05, 8.786100000000158e-05, 8.806999999999912e-05, 8.797200000000213e-05, 8.829199999999676e-05, 8.776400000000059e-05, 8.768000000000317e-05, 8.804199999999998e-05, 8.779100000000026e-05, 8.81670000000001e-05, 8.815200000000106e-05, 8.838899999999775e-05, 8.822200000000238e-05, 8.802800000000041e-05, 8.740299999999979e-05, 8.78059999999993e-05, 8.745800000000206e-05, 8.775000000000102e-05, 8.820800000000281e-05, 8.833300000000294e-05, 8.805599999999955e-05, 8.765300000000004e-05, 8.802800000000041e-05, 8.772199999999841e-05, 8.774999999999755e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.785" endtime="20201029 12:44:00.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.781" endtime="20201029 12:44:00.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.792" endtime="20201029 12:44:00.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.791" endtime="20201029 12:44:00.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.790" endtime="20201029 12:44:00.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.431" endtime="20201029 12:44:00.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.431" endtime="20201029 12:44:00.813"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.822" endtime="20201029 12:44:00.841"></status>
</kw>
<msg timestamp="20201029 12:44:00.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.820" endtime="20201029 12:44:00.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.842" endtime="20201029 12:44:00.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.844" endtime="20201029 12:44:00.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.818" endtime="20201029 12:44:00.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.815" endtime="20201029 12:44:00.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.853" endtime="20201029 12:44:01.138"></status>
</kw>
<msg timestamp="20201029 12:44:01.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.852" endtime="20201029 12:44:01.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.143" endtime="20201029 12:44:01.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.151" endtime="20201029 12:44:01.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.849" endtime="20201029 12:44:01.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.848" endtime="20201029 12:44:01.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.158" level="INFO">${RESULT} = [{'diff': 8.920800000000034e-05}, {'diff': 8.856900000000015e-05}, {'diff': 8.938900000000222e-05}, {'diff': 8.884799999999901e-05}, {'diff': 8.84730000000021e-05}, {'diff': 8.902799999999794e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:01.155" endtime="20201029 12:44:01.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.163" level="INFO">${ACCURACY} = {'diff': [8.920800000000034e-05, 8.856900000000015e-05, 8.938900000000222e-05, 8.884799999999901e-05, 8.84730000000021e-05, 8.902799999999794e-05, 8.920899999999982e-05, 8.908300000000022e-05, 8.93889...</msg>
<status status="PASS" starttime="20201029 12:44:01.159" endtime="20201029 12:44:01.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.168" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.167" endtime="20201029 12:44:01.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.170" level="INFO">VALUE: [8.920800000000034e-05, 8.856900000000015e-05, 8.938900000000222e-05, 8.884799999999901e-05, 8.84730000000021e-05, 8.902799999999794e-05, 8.920899999999982e-05, 8.908300000000022e-05, 8.938899999999875e-05, 8.929200000000123e-05, 8.927799999999819e-05, 8.845799999999959e-05, 8.891599999999791e-05, 8.895800000000009e-05, 8.869400000000027e-05, 8.894400000000052e-05, 8.876400000000159e-05, 8.908300000000022e-05, 8.902799999999794e-05, 8.852799999999744e-05, 8.89999999999988e-05, 8.91389999999985e-05, 8.876400000000159e-05, 8.877800000000116e-05, 8.880499999999736e-05, 8.906900000000065e-05, 8.891600000000138e-05, 8.902799999999794e-05, 8.890300000000129e-05, 8.906900000000065e-05, 8.938899999999875e-05, 8.86939999999968e-05, 8.870799999999984e-05, 8.890299999999782e-05, 8.86519999999981e-05, 8.845799999999959e-05, 8.913900000000197e-05, 8.934700000000004e-05, 8.859699999999929e-05, 8.93190000000009e-05, 8.8638999999998e-05, 8.923600000000295e-05, 8.933399999999994e-05, 8.869499999999975e-05, 8.91250000000024e-05, 8.924999999999905e-05, 8.929100000000176e-05, 8.851399999999787e-05, 8.920899999999982e-05, 8.911100000000283e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.169" endtime="20201029 12:44:01.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.164" endtime="20201029 12:44:01.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.175" endtime="20201029 12:44:01.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.174" endtime="20201029 12:44:01.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.172" endtime="20201029 12:44:01.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.814" endtime="20201029 12:44:01.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.813" endtime="20201029 12:44:01.196"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.204" endtime="20201029 12:44:01.223"></status>
</kw>
<msg timestamp="20201029 12:44:01.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.203" endtime="20201029 12:44:01.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.225" endtime="20201029 12:44:01.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.227" endtime="20201029 12:44:01.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.200" endtime="20201029 12:44:01.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.198" endtime="20201029 12:44:01.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.236" endtime="20201029 12:44:01.523"></status>
</kw>
<msg timestamp="20201029 12:44:01.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.235" endtime="20201029 12:44:01.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021561417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.528" endtime="20201029 12:44:01.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.536" endtime="20201029 12:44:01.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.232" endtime="20201029 12:44:01.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.230" endtime="20201029 12:44:01.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.543" level="INFO">${RESULT} = [{'diff': 9.036100000000061e-05}, {'diff': 8.956899999999768e-05}, {'diff': 8.96519999999991e-05}, {'diff': 8.944399999999755e-05}, {'diff': 8.974999999999955e-05}, {'diff': 8.988899999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:01.539" endtime="20201029 12:44:01.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.547" level="INFO">${ACCURACY} = {'diff': [9.036100000000061e-05, 8.956899999999768e-05, 8.96519999999991e-05, 8.944399999999755e-05, 8.974999999999955e-05, 8.988899999999925e-05, 8.993000000000195e-05, 8.944400000000102e-05, 9.03889...</msg>
<status status="PASS" starttime="20201029 12:44:01.544" endtime="20201029 12:44:01.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.551" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.550" endtime="20201029 12:44:01.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.554" level="INFO">VALUE: [9.036100000000061e-05, 8.956899999999768e-05, 8.96519999999991e-05, 8.944399999999755e-05, 8.974999999999955e-05, 8.988899999999925e-05, 8.993000000000195e-05, 8.944400000000102e-05, 9.038899999999975e-05, 9.012499999999993e-05, 9.001399999999937e-05, 9.037500000000018e-05, 9.027799999999919e-05, 9.032000000000137e-05, 9.033400000000094e-05, 8.994399999999805e-05, 8.954200000000148e-05, 8.976399999999912e-05, 9.025000000000005e-05, 8.972200000000041e-05, 9.01389999999995e-05, 9.019499999999778e-05, 8.990200000000281e-05, 8.958300000000072e-05, 8.944399999999755e-05, 8.98190000000014e-05, 8.955500000000158e-05, 9.019499999999778e-05, 8.94450000000005e-05, 8.997300000000014e-05, 8.957000000000062e-05, 8.952800000000191e-05, 8.959699999999682e-05, 9.001399999999937e-05, 8.99999999999998e-05, 8.98190000000014e-05, 8.976399999999912e-05, 8.993100000000143e-05, 8.990299999999882e-05, 9.034700000000104e-05, 8.987499999999968e-05, 8.973699999999946e-05, 8.958300000000072e-05, 8.99999999999998e-05, 8.973599999999998e-05, 8.961099999999986e-05, 8.952800000000191e-05, 8.987499999999968e-05, 8.988900000000272e-05, 9.01939999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.552" endtime="20201029 12:44:01.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.548" endtime="20201029 12:44:01.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.559" endtime="20201029 12:44:01.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.557" endtime="20201029 12:44:01.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.556" endtime="20201029 12:44:01.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.197" endtime="20201029 12:44:01.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.196" endtime="20201029 12:44:01.580"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.589" endtime="20201029 12:44:01.609"></status>
</kw>
<msg timestamp="20201029 12:44:01.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.587" endtime="20201029 12:44:01.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.610" endtime="20201029 12:44:01.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.613" endtime="20201029 12:44:01.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.584" endtime="20201029 12:44:01.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.582" endtime="20201029 12:44:01.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.622" endtime="20201029 12:44:01.907"></status>
</kw>
<msg timestamp="20201029 12:44:01.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.620" endtime="20201029 12:44:01.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022874375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.911" endtime="20201029 12:44:01.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.919" endtime="20201029 12:44:01.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.618" endtime="20201029 12:44:01.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.616" endtime="20201029 12:44:01.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.926" level="INFO">${RESULT} = [{'diff': 9.15139999999974e-05}, {'diff': 9.065299999999957e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.094399999999905e-05}, {'diff': 9.079099999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:01.922" endtime="20201029 12:44:01.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.930" level="INFO">${ACCURACY} = {'diff': [9.15139999999974e-05, 9.065299999999957e-05, 9.090299999999982e-05, 9.115300000000007e-05, 9.094399999999905e-05, 9.079099999999979e-05, 9.090299999999982e-05, 9.1332999999999e-05, 9.0666999...</msg>
<status status="PASS" starttime="20201029 12:44:01.927" endtime="20201029 12:44:01.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.934" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.933" endtime="20201029 12:44:01.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.936" level="INFO">VALUE: [9.15139999999974e-05, 9.065299999999957e-05, 9.090299999999982e-05, 9.115300000000007e-05, 9.094399999999905e-05, 9.079099999999979e-05, 9.090299999999982e-05, 9.1332999999999e-05, 9.066699999999914e-05, 9.094499999999853e-05, 9.070900000000132e-05, 9.077700000000022e-05, 9.052799999999944e-05, 9.094499999999853e-05, 9.069400000000227e-05, 9.127800000000019e-05, 9.051399999999987e-05, 9.072300000000089e-05, 9.056900000000215e-05, 9.090299999999982e-05, 9.133300000000247e-05, 9.090299999999982e-05, 9.040299999999932e-05, 9.074999999999708e-05, 9.0945000000002e-05, 9.097199999999819e-05, 9.055600000000205e-05, 9.06520000000001e-05, 9.045800000000159e-05, 9.0639e-05, 9.065299999999957e-05, 9.047300000000064e-05, 9.091599999999991e-05, 9.123600000000148e-05, 9.072300000000089e-05, 9.10000000000008e-05, 9.075000000000055e-05, 9.051399999999987e-05, 9.088800000000077e-05, 9.120799999999887e-05, 9.079199999999926e-05, 9.051399999999987e-05, 9.08199999999984e-05, 9.045799999999812e-05, 9.08329999999985e-05, 9.102799999999994e-05, 9.06939999999988e-05, 9.072199999999794e-05, 9.10000000000008e-05, 9.055599999999858e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.935" endtime="20201029 12:44:01.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.931" endtime="20201029 12:44:01.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.942" endtime="20201029 12:44:01.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.941" endtime="20201029 12:44:01.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.940" endtime="20201029 12:44:01.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.581" endtime="20201029 12:44:01.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.580" endtime="20201029 12:44:01.963"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.971" endtime="20201029 12:44:01.991"></status>
</kw>
<msg timestamp="20201029 12:44:01.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.970" endtime="20201029 12:44:01.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.992" endtime="20201029 12:44:01.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.995" endtime="20201029 12:44:01.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.967" endtime="20201029 12:44:01.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.965" endtime="20201029 12:44:01.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.004" endtime="20201029 12:44:02.307"></status>
</kw>
<msg timestamp="20201029 12:44:02.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.002" endtime="20201029 12:44:02.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021382778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021474861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.311" endtime="20201029 12:44:02.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.319" endtime="20201029 12:44:02.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.000" endtime="20201029 12:44:02.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.998" endtime="20201029 12:44:02.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.325" level="INFO">${RESULT} = [{'diff': 9.208299999999975e-05}, {'diff': 9.195900000000257e-05}, {'diff': 9.195799999999962e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.194400000000005e-05}, {'diff': 9.194499999999953e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:02.322" endtime="20201029 12:44:02.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.330" level="INFO">${ACCURACY} = {'diff': [9.208299999999975e-05, 9.195900000000257e-05, 9.195799999999962e-05, 9.177799999999722e-05, 9.194400000000005e-05, 9.194499999999953e-05, 9.158399999999872e-05, 9.151400000000087e-05, 9.1735...</msg>
<status status="PASS" starttime="20201029 12:44:02.326" endtime="20201029 12:44:02.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.335" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.334" endtime="20201029 12:44:02.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.337" level="INFO">VALUE: [9.208299999999975e-05, 9.195900000000257e-05, 9.195799999999962e-05, 9.177799999999722e-05, 9.194400000000005e-05, 9.194499999999953e-05, 9.158399999999872e-05, 9.151400000000087e-05, 9.173599999999851e-05, 9.20139999999979e-05, 9.237499999999871e-05, 9.215199999999812e-05, 9.155599999999958e-05, 9.14450000000025e-05, 9.195799999999962e-05, 9.219499999999978e-05, 9.220799999999987e-05, 9.151400000000087e-05, 9.206900000000018e-05, 9.216700000000064e-05, 9.226300000000215e-05, 9.208299999999975e-05, 9.188900000000125e-05, 9.1639000000001e-05, 9.1639000000001e-05, 9.158300000000272e-05, 9.204199999999704e-05, 9.142999999999998e-05, 9.15130000000014e-05, 9.163899999999753e-05, 9.143099999999946e-05, 9.156999999999915e-05, 9.15000000000013e-05, 9.176400000000112e-05, 9.198599999999876e-05, 9.1639000000001e-05, 9.205500000000061e-05, 9.205500000000061e-05, 9.230500000000086e-05, 9.194400000000005e-05, 9.194400000000005e-05, 9.16529999999971e-05, 9.19589999999991e-05, 9.224999999999858e-05, 9.19719999999992e-05, 9.173600000000198e-05, 9.174999999999808e-05, 9.177800000000069e-05, 9.14589999999986e-05, 9.148599999999826e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.336" endtime="20201029 12:44:02.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.331" endtime="20201029 12:44:02.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.343" endtime="20201029 12:44:02.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.341" endtime="20201029 12:44:02.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.340" endtime="20201029 12:44:02.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.964" endtime="20201029 12:44:02.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.963" endtime="20201029 12:44:02.363"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.372" endtime="20201029 12:44:02.391"></status>
</kw>
<msg timestamp="20201029 12:44:02.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.370" endtime="20201029 12:44:02.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.392" endtime="20201029 12:44:02.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.395" endtime="20201029 12:44:02.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.368" endtime="20201029 12:44:02.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.366" endtime="20201029 12:44:02.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.404" endtime="20201029 12:44:02.693"></status>
</kw>
<msg timestamp="20201029 12:44:02.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.402" endtime="20201029 12:44:02.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021422569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.698" endtime="20201029 12:44:02.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.707" endtime="20201029 12:44:02.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.400" endtime="20201029 12:44:02.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.398" endtime="20201029 12:44:02.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.715" level="INFO">${RESULT} = [{'diff': 9.292999999999801e-05}, {'diff': 9.258399999999972e-05}, {'diff': 9.291599999999844e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.281900000000093e-05}, {'diff': 9.245800000000012e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:02.711" endtime="20201029 12:44:02.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.720" level="INFO">${ACCURACY} = {'diff': [9.292999999999801e-05, 9.258399999999972e-05, 9.291599999999844e-05, 9.295800000000062e-05, 9.281900000000093e-05, 9.245800000000012e-05, 9.333299999999753e-05, 9.341700000000189e-05, 9.2958...</msg>
<status status="PASS" starttime="20201029 12:44:02.716" endtime="20201029 12:44:02.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.724" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.723" endtime="20201029 12:44:02.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.726" level="INFO">VALUE: [9.292999999999801e-05, 9.258399999999972e-05, 9.291599999999844e-05, 9.295800000000062e-05, 9.281900000000093e-05, 9.245800000000012e-05, 9.333299999999753e-05, 9.341700000000189e-05, 9.295800000000062e-05, 9.3333000000001e-05, 9.257000000000015e-05, 9.324999999999958e-05, 9.261100000000286e-05, 9.338899999999928e-05, 9.276399999999865e-05, 9.320800000000087e-05, 9.245800000000012e-05, 9.294500000000053e-05, 9.276399999999865e-05, 9.287499999999921e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.29720000000002e-05, 9.326399999999915e-05, 9.338899999999928e-05, 9.338899999999928e-05, 9.305500000000161e-05, 9.258300000000025e-05, 9.288899999999878e-05, 9.283399999999997e-05, 9.261099999999939e-05, 9.308400000000022e-05, 9.336100000000014e-05, 9.324999999999958e-05, 9.261100000000286e-05, 9.331900000000143e-05, 9.262499999999896e-05, 9.265199999999862e-05, 9.280499999999789e-05, 9.305600000000108e-05, 9.268100000000071e-05, 9.286099999999964e-05, 9.323600000000001e-05, 9.243100000000046e-05, 9.318000000000173e-05, 9.312499999999946e-05, 9.275000000000255e-05, 9.280499999999789e-05, 9.268100000000071e-05, 9.336100000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.725" endtime="20201029 12:44:02.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.721" endtime="20201029 12:44:02.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.731" endtime="20201029 12:44:02.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.730" endtime="20201029 12:44:02.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.729" endtime="20201029 12:44:02.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.364" endtime="20201029 12:44:02.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.364" endtime="20201029 12:44:02.752"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.761" endtime="20201029 12:44:02.781"></status>
</kw>
<msg timestamp="20201029 12:44:02.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.759" endtime="20201029 12:44:02.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.782" endtime="20201029 12:44:02.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.785" endtime="20201029 12:44:02.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.756" endtime="20201029 12:44:02.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.754" endtime="20201029 12:44:02.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.794" endtime="20201029 12:44:03.079"></status>
</kw>
<msg timestamp="20201029 12:44:03.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.792" endtime="20201029 12:44:03.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022395139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.083" endtime="20201029 12:44:03.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.091" endtime="20201029 12:44:03.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.790" endtime="20201029 12:44:03.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.788" endtime="20201029 12:44:03.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.098" level="INFO">${RESULT} = [{'diff': 9.44720000000017e-05}, {'diff': 9.442999999999951e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.375000000000008e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.395899999999763e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:03.094" endtime="20201029 12:44:03.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.102" level="INFO">${ACCURACY} = {'diff': [9.44720000000017e-05, 9.442999999999951e-05, 9.387500000000021e-05, 9.375000000000008e-05, 9.356900000000168e-05, 9.395899999999763e-05, 9.420900000000135e-05, 9.393099999999849e-05, 9.35280...</msg>
<status status="PASS" starttime="20201029 12:44:03.099" endtime="20201029 12:44:03.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.106" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.105" endtime="20201029 12:44:03.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.108" level="INFO">VALUE: [9.44720000000017e-05, 9.442999999999951e-05, 9.387500000000021e-05, 9.375000000000008e-05, 9.356900000000168e-05, 9.395899999999763e-05, 9.420900000000135e-05, 9.393099999999849e-05, 9.352800000000244e-05, 9.430600000000233e-05, 9.437500000000071e-05, 9.393000000000248e-05, 9.417999999999926e-05, 9.375000000000008e-05, 9.376399999999965e-05, 9.39720000000012e-05, 9.373600000000051e-05, 9.391700000000239e-05, 9.345799999999765e-05, 9.412500000000046e-05, 9.376399999999965e-05, 9.405600000000208e-05, 9.400000000000033e-05, 9.418099999999874e-05, 9.398600000000076e-05, 9.437500000000071e-05, 9.356999999999768e-05, 9.423599999999754e-05, 9.427799999999972e-05, 9.375000000000008e-05, 9.393099999999849e-05, 9.375000000000008e-05, 9.38200000000014e-05, 9.40139999999999e-05, 9.375000000000008e-05, 9.404200000000251e-05, 9.363899999999953e-05, 9.430599999999886e-05, 9.363899999999953e-05, 9.430599999999886e-05, 9.391700000000239e-05, 9.344499999999756e-05, 9.379200000000226e-05, 9.425000000000058e-05, 9.381900000000193e-05, 9.418100000000221e-05, 9.425000000000058e-05, 9.425000000000058e-05, 9.387500000000021e-05, 9.400000000000033e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.107" endtime="20201029 12:44:03.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.102" endtime="20201029 12:44:03.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.114" endtime="20201029 12:44:03.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.113" endtime="20201029 12:44:03.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.112" endtime="20201029 12:44:03.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.753" endtime="20201029 12:44:03.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.752" endtime="20201029 12:44:03.135"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.143" endtime="20201029 12:44:03.162"></status>
</kw>
<msg timestamp="20201029 12:44:03.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.142" endtime="20201029 12:44:03.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.164" endtime="20201029 12:44:03.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.166" endtime="20201029 12:44:03.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.139" endtime="20201029 12:44:03.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.137" endtime="20201029 12:44:03.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.176" endtime="20201029 12:44:03.462"></status>
</kw>
<msg timestamp="20201029 12:44:03.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021411056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.174" endtime="20201029 12:44:03.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021411056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.466" endtime="20201029 12:44:03.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.474" endtime="20201029 12:44:03.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.171" endtime="20201029 12:44:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.170" endtime="20201029 12:44:03.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.480" level="INFO">${RESULT} = [{'diff': 9.540300000000085e-05}, {'diff': 9.49859999999983e-05}, {'diff': 9.445899999999813e-05}, {'diff': 9.448600000000126e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.486100000000164e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:03.477" endtime="20201029 12:44:03.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.485" level="INFO">${ACCURACY} = {'diff': [9.540300000000085e-05, 9.49859999999983e-05, 9.445899999999813e-05, 9.448600000000126e-05, 9.491699999999992e-05, 9.486100000000164e-05, 9.449999999999736e-05, 9.519499999999931e-05, 9.51390...</msg>
<status status="PASS" starttime="20201029 12:44:03.481" endtime="20201029 12:44:03.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.490" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.489" endtime="20201029 12:44:03.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.492" level="INFO">VALUE: [9.540300000000085e-05, 9.49859999999983e-05, 9.445899999999813e-05, 9.448600000000126e-05, 9.491699999999992e-05, 9.486100000000164e-05, 9.449999999999736e-05, 9.519499999999931e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.462500000000096e-05, 9.505599999999961e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.463900000000053e-05, 9.469399999999933e-05, 9.509799999999832e-05, 9.526400000000115e-05, 9.487500000000121e-05, 9.480499999999989e-05, 9.505600000000308e-05, 9.519399999999983e-05, 9.454199999999954e-05, 9.436100000000114e-05, 9.534700000000257e-05, 9.48339999999985e-05, 9.462500000000096e-05, 9.488899999999731e-05, 9.455599999999911e-05, 9.529199999999682e-05, 9.537500000000171e-05, 9.526400000000115e-05, 9.493099999999949e-05, 9.538900000000128e-05, 9.48339999999985e-05, 9.48330000000025e-05, 9.462499999999749e-05, 9.518100000000321e-05, 9.476400000000065e-05, 9.530500000000039e-05, 9.47079999999989e-05, 9.49590000000021e-05, 9.448600000000126e-05, 9.475000000000108e-05, 9.519499999999931e-05, 9.53469999999991e-05, 9.470899999999838e-05, 9.469399999999933e-05, 9.491600000000044e-05, 9.522300000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.491" endtime="20201029 12:44:03.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.486" endtime="20201029 12:44:03.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.497" endtime="20201029 12:44:03.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.496" endtime="20201029 12:44:03.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.495" endtime="20201029 12:44:03.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.136" endtime="20201029 12:44:03.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.135" endtime="20201029 12:44:03.518"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.526" endtime="20201029 12:44:03.546"></status>
</kw>
<msg timestamp="20201029 12:44:03.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.525" endtime="20201029 12:44:03.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.547" endtime="20201029 12:44:03.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.550" endtime="20201029 12:44:03.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.522" endtime="20201029 12:44:03.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.520" endtime="20201029 12:44:03.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.559" endtime="20201029 12:44:03.845"></status>
</kw>
<msg timestamp="20201029 12:44:03.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.557" endtime="20201029 12:44:03.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021559236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.849" endtime="20201029 12:44:03.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.857" endtime="20201029 12:44:03.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.555" endtime="20201029 12:44:03.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.553" endtime="20201029 12:44:03.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.864" level="INFO">${RESULT} = [{'diff': 9.644399999999761e-05}, {'diff': 9.605600000000061e-05}, {'diff': 9.556999999999968e-05}, {'diff': 9.562500000000196e-05}, {'diff': 9.629199999999782e-05}, {'diff': 9.587500000000221e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.861" endtime="20201029 12:44:03.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.868" level="INFO">${ACCURACY} = {'diff': [9.644399999999761e-05, 9.605600000000061e-05, 9.556999999999968e-05, 9.562500000000196e-05, 9.629199999999782e-05, 9.587500000000221e-05, 9.580500000000089e-05, 9.576299999999871e-05, 9.6179...</msg>
<status status="PASS" starttime="20201029 12:44:03.865" endtime="20201029 12:44:03.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.872" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.871" endtime="20201029 12:44:03.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.875" level="INFO">VALUE: [9.644399999999761e-05, 9.605600000000061e-05, 9.556999999999968e-05, 9.562500000000196e-05, 9.629199999999782e-05, 9.587500000000221e-05, 9.580500000000089e-05, 9.576299999999871e-05, 9.61799999999978e-05, 9.632000000000043e-05, 9.563900000000153e-05, 9.595800000000015e-05, 9.613900000000203e-05, 9.576299999999871e-05, 9.611100000000289e-05, 9.62080000000004e-05, 9.587499999999874e-05, 9.599999999999886e-05, 9.622299999999945e-05, 9.637499999999924e-05, 9.544400000000008e-05, 9.605599999999714e-05, 9.543099999999999e-05, 9.630500000000139e-05, 9.636100000000314e-05, 9.547199999999922e-05, 9.637499999999924e-05, 9.56799999999973e-05, 9.579200000000079e-05, 9.563900000000153e-05, 9.611099999999942e-05, 9.624999999999911e-05, 9.569400000000033e-05, 9.574999999999861e-05, 9.562499999999849e-05, 9.604199999999757e-05, 9.586099999999917e-05, 9.549999999999836e-05, 9.561100000000239e-05, 9.606900000000071e-05, 9.637500000000271e-05, 9.62920000000013e-05, 9.61799999999978e-05, 9.591599999999798e-05, 9.543099999999999e-05, 9.558299999999978e-05, 9.590300000000135e-05, 9.60140000000019e-05, 9.556999999999968e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.873" endtime="20201029 12:44:03.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.869" endtime="20201029 12:44:03.876"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.880" endtime="20201029 12:44:03.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.878" endtime="20201029 12:44:03.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.877" endtime="20201029 12:44:03.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.519" endtime="20201029 12:44:03.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.518" endtime="20201029 12:44:03.900"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.909" endtime="20201029 12:44:03.929"></status>
</kw>
<msg timestamp="20201029 12:44:03.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.907" endtime="20201029 12:44:03.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.931" endtime="20201029 12:44:03.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.933" endtime="20201029 12:44:03.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.905" endtime="20201029 12:44:03.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.903" endtime="20201029 12:44:03.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.942" endtime="20201029 12:44:04.228"></status>
</kw>
<msg timestamp="20201029 12:44:04.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:03.941" endtime="20201029 12:44:04.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022318389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0224155, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:04.232" endtime="20201029 12:44:04.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.240" endtime="20201029 12:44:04.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.938" endtime="20201029 12:44:04.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.936" endtime="20201029 12:44:04.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.247" level="INFO">${RESULT} = [{'diff': 9.711100000000042e-05}, {'diff': 9.730499999999892e-05}, {'diff': 9.695799999999768e-05}, {'diff': 9.68059999999979e-05}, {'diff': 9.672200000000047e-05}, {'diff': 9.719500000000131e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:04.244" endtime="20201029 12:44:04.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.251" level="INFO">${ACCURACY} = {'diff': [9.711100000000042e-05, 9.730499999999892e-05, 9.695799999999768e-05, 9.68059999999979e-05, 9.672200000000047e-05, 9.719500000000131e-05, 9.668100000000124e-05, 9.693099999999802e-05, 9.71119...</msg>
<status status="PASS" starttime="20201029 12:44:04.248" endtime="20201029 12:44:04.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.256" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.255" endtime="20201029 12:44:04.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.258" level="INFO">VALUE: [9.711100000000042e-05, 9.730499999999892e-05, 9.695799999999768e-05, 9.68059999999979e-05, 9.672200000000047e-05, 9.719500000000131e-05, 9.668100000000124e-05, 9.693099999999802e-05, 9.711199999999989e-05, 9.713800000000009e-05, 9.679099999999885e-05, 9.711100000000042e-05, 9.67920000000018e-05, 9.687499999999974e-05, 9.670799999999743e-05, 9.658300000000078e-05, 9.734699999999763e-05, 9.644400000000108e-05, 9.725000000000011e-05, 9.665200000000262e-05, 9.684800000000007e-05, 9.71530000000026e-05, 9.731899999999849e-05, 9.658300000000078e-05, 9.641700000000142e-05, 9.690299999999888e-05, 9.682000000000093e-05, 9.715299999999913e-05, 9.737500000000024e-05, 9.705499999999867e-05, 9.701399999999943e-05, 9.711100000000042e-05, 9.65140000000024e-05, 9.716599999999923e-05, 9.716700000000217e-05, 9.677799999999875e-05, 9.73470000000011e-05, 9.64859999999998e-05, 9.687499999999974e-05, 9.7027999999999e-05, 9.661199999999939e-05, 9.737499999999677e-05, 9.69860000000003e-05, 9.643000000000151e-05, 9.730499999999892e-05, 9.687499999999974e-05, 9.673600000000004e-05, 9.73470000000011e-05, 9.66799999999983e-05, 9.658300000000078e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.257" endtime="20201029 12:44:04.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.252" endtime="20201029 12:44:04.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.264" endtime="20201029 12:44:04.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.263" endtime="20201029 12:44:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.261" endtime="20201029 12:44:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.901" endtime="20201029 12:44:04.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.901" endtime="20201029 12:44:04.285"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.293" endtime="20201029 12:44:04.313"></status>
</kw>
<msg timestamp="20201029 12:44:04.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.292" endtime="20201029 12:44:04.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.314" endtime="20201029 12:44:04.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.317" endtime="20201029 12:44:04.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.289" endtime="20201029 12:44:04.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.287" endtime="20201029 12:44:04.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.326" endtime="20201029 12:44:04.612"></status>
</kw>
<msg timestamp="20201029 12:44:04.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.324" endtime="20201029 12:44:04.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.617" endtime="20201029 12:44:04.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.625" endtime="20201029 12:44:04.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.322" endtime="20201029 12:44:04.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.320" endtime="20201029 12:44:04.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.631" level="INFO">${RESULT} = [{'diff': 9.88059999999999e-05}, {'diff': 9.745900000000113e-05}, {'diff': 9.786100000000117e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.81669999999997e-05}, {'diff': 9.836100000000167e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:04.628" endtime="20201029 12:44:04.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.636" level="INFO">${ACCURACY} = {'diff': [9.88059999999999e-05, 9.745900000000113e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.81669999999997e-05, 9.836100000000167e-05, 9.83470000000021e-05, 9.74730000000007e-05, 9.80420000...</msg>
<status status="PASS" starttime="20201029 12:44:04.632" endtime="20201029 12:44:04.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.641" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.640" endtime="20201029 12:44:04.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.643" level="INFO">VALUE: [9.88059999999999e-05, 9.745900000000113e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.81669999999997e-05, 9.836100000000167e-05, 9.83470000000021e-05, 9.74730000000007e-05, 9.804200000000304e-05, 9.791599999999998e-05, 9.811100000000142e-05, 9.81669999999997e-05, 9.818099999999927e-05, 9.797199999999825e-05, 9.777799999999975e-05, 9.811100000000142e-05, 9.745899999999766e-05, 9.804199999999957e-05, 9.761200000000039e-05, 9.783399999999803e-05, 9.823600000000154e-05, 9.822200000000197e-05, 9.83059999999994e-05, 9.741699999999895e-05, 9.808300000000228e-05, 9.74730000000007e-05, 9.792999999999955e-05, 9.741599999999948e-05, 9.820799999999894e-05, 9.805499999999967e-05, 9.784800000000107e-05, 9.747200000000122e-05, 9.747199999999775e-05, 9.76660000000032e-05, 9.83609999999982e-05, 9.822200000000197e-05, 9.752700000000003e-05, 9.81799999999998e-05, 9.811099999999795e-05, 9.788900000000031e-05, 9.783299999999856e-05, 9.798599999999782e-05, 9.7721999999998e-05, 9.768099999999877e-05, 9.823600000000154e-05, 9.787500000000074e-05, 9.822200000000197e-05, 9.805600000000261e-05, 9.806999999999871e-05, 9.761100000000092e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.642" endtime="20201029 12:44:04.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.637" endtime="20201029 12:44:04.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.655" endtime="20201029 12:44:04.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.654" endtime="20201029 12:44:04.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.652" endtime="20201029 12:44:04.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.286" endtime="20201029 12:44:04.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.285" endtime="20201029 12:44:04.676"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.684" endtime="20201029 12:44:04.704"></status>
</kw>
<msg timestamp="20201029 12:44:04.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.683" endtime="20201029 12:44:04.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.706" endtime="20201029 12:44:04.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.708" endtime="20201029 12:44:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.680" endtime="20201029 12:44:04.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.678" endtime="20201029 12:44:04.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.717" endtime="20201029 12:44:05.004"></status>
</kw>
<msg timestamp="20201029 12:44:05.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.715" endtime="20201029 12:44:05.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021406806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021505792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.008" endtime="20201029 12:44:05.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.016" endtime="20201029 12:44:05.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.713" endtime="20201029 12:44:05.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.711" endtime="20201029 12:44:05.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.023" level="INFO">${RESULT} = [{'diff': 9.898599999999882e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.859699999999888e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.884699999999913e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:05.020" endtime="20201029 12:44:05.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.027" level="INFO">${ACCURACY} = {'diff': [9.898599999999882e-05, 9.934699999999963e-05, 9.859699999999888e-05, 9.879200000000032e-05, 9.8721999999999e-05, 9.884699999999913e-05, 9.905500000000067e-05, 9.908299999999981e-05, 9.923599...</msg>
<status status="PASS" starttime="20201029 12:44:05.024" endtime="20201029 12:44:05.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.031" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.030" endtime="20201029 12:44:05.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.034" level="INFO">VALUE: [9.898599999999882e-05, 9.934699999999963e-05, 9.859699999999888e-05, 9.879200000000032e-05, 9.8721999999999e-05, 9.884699999999913e-05, 9.905500000000067e-05, 9.908299999999981e-05, 9.923599999999907e-05, 9.904200000000057e-05, 9.861099999999845e-05, 9.894400000000012e-05, 9.883300000000303e-05, 9.855599999999964e-05, 9.909700000000285e-05, 9.85280000000005e-05, 9.863899999999759e-05, 9.916600000000123e-05, 9.884699999999913e-05, 9.893000000000055e-05, 9.88609999999987e-05, 9.906900000000024e-05, 9.927700000000178e-05, 9.879199999999685e-05, 9.923600000000254e-05, 9.858299999999931e-05, 9.923599999999907e-05, 9.920899999999941e-05, 9.915299999999766e-05, 9.86670000000002e-05, 9.923599999999907e-05, 9.886100000000217e-05, 9.92219999999995e-05, 9.868099999999977e-05, 9.847199999999875e-05, 9.861099999999845e-05, 9.844399999999962e-05, 9.90410000000011e-05, 9.934699999999963e-05, 9.873599999999857e-05, 9.929200000000082e-05, 9.905500000000067e-05, 9.92219999999995e-05, 9.87080000000029e-05, 9.897299999999873e-05, 9.929100000000135e-05, 9.859699999999888e-05, 9.930500000000092e-05, 9.895899999999916e-05, 9.891600000000098e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.032" endtime="20201029 12:44:05.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.028" endtime="20201029 12:44:05.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.039" endtime="20201029 12:44:05.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.037" endtime="20201029 12:44:05.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.036" endtime="20201029 12:44:05.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.677" endtime="20201029 12:44:05.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.676" endtime="20201029 12:44:05.059"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.068" endtime="20201029 12:44:05.088"></status>
</kw>
<msg timestamp="20201029 12:44:05.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.066" endtime="20201029 12:44:05.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.090" endtime="20201029 12:44:05.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.092" endtime="20201029 12:44:05.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.064" endtime="20201029 12:44:05.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.062" endtime="20201029 12:44:05.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.101" endtime="20201029 12:44:05.386"></status>
</kw>
<msg timestamp="20201029 12:44:05.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.100" endtime="20201029 12:44:05.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.390" endtime="20201029 12:44:05.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.399" endtime="20201029 12:44:05.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.097" endtime="20201029 12:44:05.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.095" endtime="20201029 12:44:05.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.405" level="INFO">${RESULT} = [{'diff': 0.00010011099999999995}, {'diff': 0.00010006899999999777}, {'diff': 9.954200000000107e-05}, {'diff': 9.965300000000163e-05}, {'diff': 9.993100000000102e-05}, {'diff': 9.966599999999826e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:05.402" endtime="20201029 12:44:05.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.409" level="INFO">${ACCURACY} = {'diff': [0.00010011099999999995, 0.00010006899999999777, 9.954200000000107e-05, 9.965300000000163e-05, 9.993100000000102e-05, 9.966599999999826e-05, 9.998599999999983e-05, 9.959699999999988e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 12:44:05.406" endtime="20201029 12:44:05.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.413" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.412" endtime="20201029 12:44:05.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.416" level="INFO">VALUE: [0.00010011099999999995, 0.00010006899999999777, 9.954200000000107e-05, 9.965300000000163e-05, 9.993100000000102e-05, 9.966599999999826e-05, 9.998599999999983e-05, 9.959699999999988e-05, 0.00010004200000000157, 0.00010023600000000008, 0.00010020900000000041, 0.00010034700000000063, 9.947199999999976e-05, 9.992999999999808e-05, 0.00010016599999999876, 9.98479999999996e-05, 9.983300000000056e-05, 9.981900000000099e-05, 9.962499999999902e-05, 0.00010017999999999833, 9.995800000000069e-05, 0.00010018100000000127, 0.0001001670000000017, 9.94730000000027e-05, 0.00010011099999999995, 9.9722e-05, 9.947199999999976e-05, 0.00010033399999999706, 0.00010034700000000063, 0.00010006900000000124, 9.96670000000012e-05, 0.00010022199999999704, 9.951400000000193e-05, 9.984700000000013e-05, 0.00010027799999999878, 0.00010005599999999767, 0.00010019499999999737, 9.943100000000052e-05, 0.00010024999999999964, 9.990300000000188e-05, 0.00010027800000000225, 9.997299999999973e-05, 9.95419999999976e-05, 9.947199999999976e-05, 9.933399999999953e-05, 0.000100028000000002, 9.993100000000102e-05, 9.984700000000013e-05, 0.00010034700000000063, 9.95280000000015e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.414" endtime="20201029 12:44:05.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.410" endtime="20201029 12:44:05.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.422" endtime="20201029 12:44:05.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.420" endtime="20201029 12:44:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.419" endtime="20201029 12:44:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.060" endtime="20201029 12:44:05.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.060" endtime="20201029 12:44:05.442"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.451" endtime="20201029 12:44:05.470"></status>
</kw>
<msg timestamp="20201029 12:44:05.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.449" endtime="20201029 12:44:05.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.472" endtime="20201029 12:44:05.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.474" endtime="20201029 12:44:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.447" endtime="20201029 12:44:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.445" endtime="20201029 12:44:05.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.483" endtime="20201029 12:44:05.769"></status>
</kw>
<msg timestamp="20201029 12:44:05.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.482" endtime="20201029 12:44:05.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021564361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.773" endtime="20201029 12:44:05.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.781" endtime="20201029 12:44:05.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.479" endtime="20201029 12:44:05.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.478" endtime="20201029 12:44:05.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.787" level="INFO">${RESULT} = [{'diff': 0.00010165300000000016}, {'diff': 0.00010125000000000065}, {'diff': 0.00010045800000000119}, {'diff': 0.00010129199999999935}, {'diff': 0.00010070800000000144}, {'diff': 0.000100708999999997...</msg>
<status status="PASS" starttime="20201029 12:44:05.784" endtime="20201029 12:44:05.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.792" level="INFO">${ACCURACY} = {'diff': [0.00010165300000000016, 0.00010125000000000065, 0.00010045800000000119, 0.00010129199999999935, 0.00010070800000000144, 0.00010070899999999744, 0.00010077799999999928, 0.00010041700000000195...</msg>
<status status="PASS" starttime="20201029 12:44:05.788" endtime="20201029 12:44:05.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.796" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.795" endtime="20201029 12:44:05.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.799" level="INFO">VALUE: [0.00010165300000000016, 0.00010125000000000065, 0.00010045800000000119, 0.00010129199999999935, 0.00010070800000000144, 0.00010070899999999744, 0.00010077799999999928, 0.00010041700000000195, 0.00010122199999999804, 0.00010098600000000083, 0.00010043100000000152, 0.00010122199999999804, 0.0001012220000000015, 0.000100722000000001, 0.00010090299999999941, 0.00010061100000000045, 0.00010101399999999996, 0.00010055600000000164, 0.0001012220000000015, 0.00010065199999999969, 0.00010059800000000035, 0.00010102799999999953, 0.00010047200000000076, 0.00010047200000000076, 0.00010077799999999928, 0.00010094399999999865, 0.00010077799999999928, 0.00010095800000000169, 0.00010056899999999827, 0.00010095799999999822, 0.00010062500000000002, 0.00010084700000000113, 0.00010077799999999928, 0.00010058400000000078, 0.00010119400000000237, 0.00010129199999999935, 0.00010084700000000113, 0.00010077799999999928, 0.00010088899999999984, 0.00010072300000000048, 0.00010076399999999971, 0.00010122199999999804, 0.00010104099999999963, 0.00010062500000000002, 0.00010108299999999834, 0.00010101399999999996, 0.00010105600000000214, 0.00010090299999999941, 0.00010045899999999719, 0.00010070900000000091]</msg>
<status status="PASS" starttime="20201029 12:44:05.797" endtime="20201029 12:44:05.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.793" endtime="20201029 12:44:05.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.804" endtime="20201029 12:44:05.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.802" endtime="20201029 12:44:05.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.801" endtime="20201029 12:44:05.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.443" endtime="20201029 12:44:05.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.443" endtime="20201029 12:44:05.824"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.833" endtime="20201029 12:44:05.852"></status>
</kw>
<msg timestamp="20201029 12:44:05.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.831" endtime="20201029 12:44:05.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.854" endtime="20201029 12:44:05.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.856" endtime="20201029 12:44:05.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.829" endtime="20201029 12:44:05.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.827" endtime="20201029 12:44:05.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.865" endtime="20201029 12:44:06.155"></status>
</kw>
<msg timestamp="20201029 12:44:06.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.864" endtime="20201029 12:44:06.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021544181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.159" endtime="20201029 12:44:06.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.167" endtime="20201029 12:44:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.861" endtime="20201029 12:44:06.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.860" endtime="20201029 12:44:06.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.174" level="INFO">${RESULT} = [{'diff': 0.00010229200000000035}, {'diff': 0.00010177800000000028}, {'diff': 0.00010201400000000097}, {'diff': 0.00010194499999999912}, {'diff': 0.00010202799999999707}, {'diff': 0.000102180999999999...</msg>
<status status="PASS" starttime="20201029 12:44:06.171" endtime="20201029 12:44:06.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.178" level="INFO">${ACCURACY} = {'diff': [0.00010229200000000035, 0.00010177800000000028, 0.00010201400000000097, 0.00010194499999999912, 0.00010202799999999707, 0.0001021809999999998, 0.00010138899999999687, 0.00010163899999999712,...</msg>
<status status="PASS" starttime="20201029 12:44:06.175" endtime="20201029 12:44:06.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.182" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.181" endtime="20201029 12:44:06.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.184" level="INFO">VALUE: [0.00010229200000000035, 0.00010177800000000028, 0.00010201400000000097, 0.00010194499999999912, 0.00010202799999999707, 0.0001021809999999998, 0.00010138899999999687, 0.00010163899999999712, 0.00010227699999999784, 0.00010206899999999977, 0.00010177800000000028, 0.00010220899999999894, 0.0001020139999999975, 0.00010226399999999775, 0.00010158300000000231, 0.00010161100000000145, 0.00010138800000000087, 0.0001022359999999986, 0.00010145800000000219, 0.00010142999999999958, 0.00010152800000000003, 0.00010188899999999737, 0.00010144500000000209, 0.00010226400000000122, 0.00010190300000000041, 0.00010174999999999768, 0.00010227700000000131, 0.00010180499999999995, 0.00010151400000000046, 0.00010145800000000219, 0.0001015000000000009, 0.00010166699999999973, 0.00010166699999999973, 0.00010187500000000127, 0.00010140299999999991, 0.00010198600000000183, 0.00010230500000000045, 0.00010184700000000213, 0.00010202799999999707, 0.00010158399999999831, 0.00010145799999999872, 0.00010219500000000284, 0.00010208299999999934, 0.00010199999999999793, 0.00010175000000000115, 0.00010211099999999848, 0.00010137500000000077, 0.00010201400000000097, 0.0001021809999999998, 0.00010186099999999823]</msg>
<status status="PASS" starttime="20201029 12:44:06.183" endtime="20201029 12:44:06.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.178" endtime="20201029 12:44:06.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.189" endtime="20201029 12:44:06.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.188" endtime="20201029 12:44:06.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.187" endtime="20201029 12:44:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.825" endtime="20201029 12:44:06.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.825" endtime="20201029 12:44:06.210"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.219" endtime="20201029 12:44:06.240"></status>
</kw>
<msg timestamp="20201029 12:44:06.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.217" endtime="20201029 12:44:06.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.241" endtime="20201029 12:44:06.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.244" endtime="20201029 12:44:06.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.214" endtime="20201029 12:44:06.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.212" endtime="20201029 12:44:06.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.252" endtime="20201029 12:44:06.538"></status>
</kw>
<msg timestamp="20201029 12:44:06.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.251" endtime="20201029 12:44:06.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022767375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022870833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.542" endtime="20201029 12:44:06.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.550" endtime="20201029 12:44:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.248" endtime="20201029 12:44:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.247" endtime="20201029 12:44:06.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.556" level="INFO">${RESULT} = [{'diff': 0.00010345800000000072}, {'diff': 0.00010336099999999973}, {'diff': 0.00010316600000000176}, {'diff': 0.00010252800000000103}, {'diff': 0.00010274999999999868}, {'diff': 0.000103083999999999...</msg>
<status status="PASS" starttime="20201029 12:44:06.553" endtime="20201029 12:44:06.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.560" level="INFO">${ACCURACY} = {'diff': [0.00010345800000000072, 0.00010336099999999973, 0.00010316600000000176, 0.00010252800000000103, 0.00010274999999999868, 0.00010308399999999981, 0.00010312500000000252, 0.00010291599999999804...</msg>
<status status="PASS" starttime="20201029 12:44:06.557" endtime="20201029 12:44:06.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.565" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.564" endtime="20201029 12:44:06.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.567" level="INFO">VALUE: [0.00010345800000000072, 0.00010336099999999973, 0.00010316600000000176, 0.00010252800000000103, 0.00010274999999999868, 0.00010308399999999981, 0.00010312500000000252, 0.00010291599999999804, 0.00010283399999999956, 0.0001028610000000027, 0.00010252800000000103, 0.00010252699999999809, 0.0001030139999999985, 0.00010266700000000073, 0.00010299999999999893, 0.00010244400000000015, 0.00010311100000000295, 0.00010308300000000034, 0.0001030139999999985, 0.00010244400000000015, 0.00010324999999999918, 0.00010308300000000034, 0.0001031940000000009, 0.00010330600000000092, 0.00010256900000000027, 0.00010322200000000004, 0.00010288899999999837, 0.00010274999999999868, 0.0001024299999999971, 0.00010256999999999974, 0.00010295800000000022, 0.00010302699999999859, 0.00010288900000000184, 0.00010280600000000042, 0.0001033619999999992, 0.00010282, 0.0001032359999999996, 0.00010287500000000227, 0.00010315200000000219, 0.00010238899999999787, 0.00010256999999999974, 0.00010283300000000009, 0.00010299999999999893, 0.00010311199999999895, 0.00010270799999999997, 0.00010283300000000009, 0.00010237500000000177, 0.00010256900000000027, 0.00010265300000000116, 0.00010313900000000209]</msg>
<status status="PASS" starttime="20201029 12:44:06.566" endtime="20201029 12:44:06.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.561" endtime="20201029 12:44:06.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.573" endtime="20201029 12:44:06.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.571" endtime="20201029 12:44:06.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.570" endtime="20201029 12:44:06.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.211" endtime="20201029 12:44:06.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.210" endtime="20201029 12:44:06.594"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.602" endtime="20201029 12:44:06.622"></status>
</kw>
<msg timestamp="20201029 12:44:06.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.601" endtime="20201029 12:44:06.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.623" endtime="20201029 12:44:06.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.626" endtime="20201029 12:44:06.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.598" endtime="20201029 12:44:06.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.596" endtime="20201029 12:44:06.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.635" endtime="20201029 12:44:06.920"></status>
</kw>
<msg timestamp="20201029 12:44:06.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.633" endtime="20201029 12:44:06.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.924" endtime="20201029 12:44:06.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.932" endtime="20201029 12:44:06.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.631" endtime="20201029 12:44:06.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.629" endtime="20201029 12:44:06.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.939" level="INFO">${RESULT} = [{'diff': 0.00010457000000000174}, {'diff': 0.00010341699999999801}, {'diff': 0.0001041940000000019}, {'diff': 0.00010390299999999894}, {'diff': 0.00010363899999999912}, {'diff': 0.0001034579999999972...</msg>
<status status="PASS" starttime="20201029 12:44:06.935" endtime="20201029 12:44:06.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.943" level="INFO">${ACCURACY} = {'diff': [0.00010457000000000174, 0.00010341699999999801, 0.0001041940000000019, 0.00010390299999999894, 0.00010363899999999912, 0.00010345799999999725, 0.0001041940000000019, 0.00010416599999999929, ...</msg>
<status status="PASS" starttime="20201029 12:44:06.940" endtime="20201029 12:44:06.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.948" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.947" endtime="20201029 12:44:06.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.950" level="INFO">VALUE: [0.00010457000000000174, 0.00010341699999999801, 0.0001041940000000019, 0.00010390299999999894, 0.00010363899999999912, 0.00010345799999999725, 0.0001041940000000019, 0.00010416599999999929, 0.00010379199999999839, 0.00010431899999999855, 0.00010409700000000091, 0.00010379100000000238, 0.00010384700000000066, 0.00010408300000000134, 0.00010370800000000097, 0.00010402800000000254, 0.00010433300000000159, 0.00010366599999999879, 0.00010390199999999947, 0.00010427799999999932, 0.00010429199999999889, 0.00010413900000000309, 0.0001035420000000016, 0.00010429199999999889, 0.00010402800000000254, 0.00010434699999999769, 0.00010377800000000229, 0.00010340299999999844, 0.00010366599999999879, 0.00010352799999999857, 0.00010338900000000234, 0.00010412500000000005, 0.00010383400000000056, 0.00010399999999999993, 0.00010402699999999959, 0.0001040139999999995, 0.00010406900000000177, 0.00010431999999999803, 0.0001035689999999978, 0.00010384800000000013, 0.00010419399999999843, 0.00010366599999999879, 0.00010419399999999843, 0.00010384699999999719, 0.00010359700000000041, 0.00010408299999999787, 0.00010406900000000177, 0.00010388899999999937, 0.0001037079999999975, 0.00010383400000000056]</msg>
<status status="PASS" starttime="20201029 12:44:06.949" endtime="20201029 12:44:06.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.944" endtime="20201029 12:44:06.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.955" endtime="20201029 12:44:06.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.954" endtime="20201029 12:44:06.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.953" endtime="20201029 12:44:06.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.594" endtime="20201029 12:44:06.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.594" endtime="20201029 12:44:06.976"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.984" endtime="20201029 12:44:07.004"></status>
</kw>
<msg timestamp="20201029 12:44:07.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.983" endtime="20201029 12:44:07.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.006" endtime="20201029 12:44:07.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.008" endtime="20201029 12:44:07.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.980" endtime="20201029 12:44:07.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.978" endtime="20201029 12:44:07.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.017" endtime="20201029 12:44:07.304"></status>
</kw>
<msg timestamp="20201029 12:44:07.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.016" endtime="20201029 12:44:07.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021378361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021484083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.308" endtime="20201029 12:44:07.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.316" endtime="20201029 12:44:07.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.013" endtime="20201029 12:44:07.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.011" endtime="20201029 12:44:07.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.324" level="INFO">${RESULT} = [{'diff': 0.00010572200000000254}, {'diff': 0.00010445799999999825}, {'diff': 0.00010525000000000118}, {'diff': 0.00010529199999999989}, {'diff': 0.00010515199999999725}, {'diff': 0.000104514}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:44:07.320" endtime="20201029 12:44:07.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.329" level="INFO">${ACCURACY} = {'diff': [0.00010572200000000254, 0.00010445799999999825, 0.00010525000000000118, 0.00010529199999999989, 0.00010515199999999725, 0.000104514, 0.00010440299999999944, 0.00010536100000000173, 0.0001046...</msg>
<status status="PASS" starttime="20201029 12:44:07.325" endtime="20201029 12:44:07.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.336" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.335" endtime="20201029 12:44:07.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.340" level="INFO">VALUE: [0.00010572200000000254, 0.00010445799999999825, 0.00010525000000000118, 0.00010529199999999989, 0.00010515199999999725, 0.000104514, 0.00010440299999999944, 0.00010536100000000173, 0.00010465299999999969, 0.00010472199999999807, 0.00010515300000000019, 0.00010459800000000088, 0.00010495799999999875, 0.0001047360000000011, 0.00010516600000000029, 0.00010484700000000166, 0.00010534699999999869, 0.00010511099999999801, 0.00010534700000000216, 0.00010522200000000204, 0.00010502800000000007, 0.00010512500000000105, 0.00010441700000000248, 0.0001048339999999981, 0.00010509699999999844, 0.0001045420000000026, 0.00010472200000000154, 0.0001045420000000026, 0.00010484699999999819, 0.00010511100000000148, 0.00010445799999999825, 0.00010483299999999862, 0.00010504100000000016, 0.00010479199999999939, 0.00010459700000000141, 0.00010515300000000019, 0.00010515199999999725, 0.00010473599999999764, 0.00010466699999999926, 0.00010448700000000033, 0.00010445900000000119, 0.00010511100000000148, 0.00010465299999999969, 0.00010515200000000072, 0.00010483299999999862, 0.00010513899999999715, 0.000105207999999999, 0.00010495800000000222, 0.00010484699999999819, 0.00010452800000000304]</msg>
<status status="PASS" starttime="20201029 12:44:07.338" endtime="20201029 12:44:07.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.331" endtime="20201029 12:44:07.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.348" endtime="20201029 12:44:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.345" endtime="20201029 12:44:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.343" endtime="20201029 12:44:07.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.977" endtime="20201029 12:44:07.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.976" endtime="20201029 12:44:07.369"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.377" endtime="20201029 12:44:07.398"></status>
</kw>
<msg timestamp="20201029 12:44:07.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.376" endtime="20201029 12:44:07.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.400" endtime="20201029 12:44:07.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.402" endtime="20201029 12:44:07.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.373" endtime="20201029 12:44:07.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.371" endtime="20201029 12:44:07.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.411" endtime="20201029 12:44:07.697"></status>
</kw>
<msg timestamp="20201029 12:44:07.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.410" endtime="20201029 12:44:07.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.701" endtime="20201029 12:44:07.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.709" endtime="20201029 12:44:07.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.407" endtime="20201029 12:44:07.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.405" endtime="20201029 12:44:07.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.715" level="INFO">${RESULT} = [{'diff': 0.00010645800000000025}, {'diff': 0.00010572199999999907}, {'diff': 0.0001057079999999995}, {'diff': 0.00010583400000000256}, {'diff': 0.00010593100000000008}, {'diff': 0.0001061670000000007...</msg>
<status status="PASS" starttime="20201029 12:44:07.712" endtime="20201029 12:44:07.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.719" level="INFO">${ACCURACY} = {'diff': [0.00010645800000000025, 0.00010572199999999907, 0.0001057079999999995, 0.00010583400000000256, 0.00010593100000000008, 0.00010616700000000076, 0.00010640300000000144, 0.00010583299999999962,...</msg>
<status status="PASS" starttime="20201029 12:44:07.716" endtime="20201029 12:44:07.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.724" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.723" endtime="20201029 12:44:07.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.726" level="INFO">VALUE: [0.00010645800000000025, 0.00010572199999999907, 0.0001057079999999995, 0.00010583400000000256, 0.00010593100000000008, 0.00010616700000000076, 0.00010640300000000144, 0.00010583299999999962, 0.0001058339999999991, 0.00010565300000000069, 0.00010558399999999885, 0.00010615300000000119, 0.00010602800000000107, 0.0001056949999999994, 0.00010561100000000198, 0.00010541600000000054, 0.00010552699999999762, 0.00010615300000000119, 0.0001063750000000023, 0.00010611099999999901, 0.00010583300000000309, 0.00010568099999999983, 0.00010593000000000061, 0.00010622199999999957, 0.00010548599999999839, 0.00010576399999999778, 0.00010627699999999837, 0.00010613900000000162, 0.00010583299999999962, 0.00010597299999999879, 0.00010587499999999833, 0.00010601399999999803, 0.00010583299999999962, 0.0001058750000000018, 0.00010627800000000132, 0.00010568000000000036, 0.0001057360000000021, 0.00010577800000000082, 0.0001055689999999998, 0.00010538900000000087, 0.00010550000000000143, 0.00010593100000000008, 0.00010566700000000026, 0.00010615299999999772, 0.00010569399999999993, 0.00010570899999999897, 0.00010581999999999953, 0.00010618000000000086, 0.00010613900000000162, 0.00010595799999999975]</msg>
<status status="PASS" starttime="20201029 12:44:07.725" endtime="20201029 12:44:07.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.720" endtime="20201029 12:44:07.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.732" endtime="20201029 12:44:07.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.730" endtime="20201029 12:44:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.729" endtime="20201029 12:44:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.370" endtime="20201029 12:44:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.369" endtime="20201029 12:44:07.753"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.761" endtime="20201029 12:44:07.781"></status>
</kw>
<msg timestamp="20201029 12:44:07.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.760" endtime="20201029 12:44:07.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.782" endtime="20201029 12:44:07.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.785" endtime="20201029 12:44:07.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.757" endtime="20201029 12:44:07.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.755" endtime="20201029 12:44:07.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.794" endtime="20201029 12:44:08.080"></status>
</kw>
<msg timestamp="20201029 12:44:08.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:07.792" endtime="20201029 12:44:08.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021366931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0214745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:08.084" endtime="20201029 12:44:08.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.092" endtime="20201029 12:44:08.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.790" endtime="20201029 12:44:08.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.788" endtime="20201029 12:44:08.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.099" level="INFO">${RESULT} = [{'diff': 0.0001075690000000018}, {'diff': 0.000107208000000001}, {'diff': 0.00010726400000000275}, {'diff': 0.00010726399999999928}, {'diff': 0.00010677799999999835}, {'diff': 0.00010730599999999799}...</msg>
<status status="PASS" starttime="20201029 12:44:08.096" endtime="20201029 12:44:08.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.104" level="INFO">${ACCURACY} = {'diff': [0.0001075690000000018, 0.000107208000000001, 0.00010726400000000275, 0.00010726399999999928, 0.00010677799999999835, 0.00010730599999999799, 0.00010640299999999797, 0.00010716699999999829, 0...</msg>
<status status="PASS" starttime="20201029 12:44:08.100" endtime="20201029 12:44:08.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.108" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.107" endtime="20201029 12:44:08.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.110" level="INFO">VALUE: [0.0001075690000000018, 0.000107208000000001, 0.00010726400000000275, 0.00010726399999999928, 0.00010677799999999835, 0.00010730599999999799, 0.00010640299999999797, 0.00010716699999999829, 0.00010651399999999853, 0.00010666700000000126, 0.00010727800000000232, 0.00010713799999999968, 0.0001072499999999997, 0.0001070560000000012, 0.0001070279999999986, 0.00010727800000000232, 0.00010677799999999835, 0.00010652800000000157, 0.00010701399999999903, 0.00010726399999999928, 0.00010722200000000057, 0.0001073340000000006, 0.00010641700000000101, 0.00010645899999999972, 0.00010741599999999907, 0.0001066950000000004, 0.00010677800000000182, 0.00010647199999999982, 0.00010713900000000262, 0.00010663899999999865, 0.00010676399999999878, 0.00010681900000000105, 0.0001072629999999998, 0.00010705499999999826, 0.00010731900000000155, 0.00010713900000000262, 0.00010647199999999982, 0.00010702700000000259, 0.00010658300000000037, 0.00010695800000000075, 0.00010672200000000007, 0.00010733299999999765, 0.00010669399999999746, 0.00010709700000000044, 0.00010701399999999903, 0.00010691700000000151, 0.00010649999999999896, 0.00010711100000000001, 0.00010665300000000169, 0.00010640300000000144]</msg>
<status status="PASS" starttime="20201029 12:44:08.109" endtime="20201029 12:44:08.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.104" endtime="20201029 12:44:08.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.115" endtime="20201029 12:44:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.114" endtime="20201029 12:44:08.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.113" endtime="20201029 12:44:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.753" endtime="20201029 12:44:08.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.753" endtime="20201029 12:44:08.136"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.145" endtime="20201029 12:44:08.165"></status>
</kw>
<msg timestamp="20201029 12:44:08.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.143" endtime="20201029 12:44:08.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.166" endtime="20201029 12:44:08.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.169" endtime="20201029 12:44:08.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.141" endtime="20201029 12:44:08.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.139" endtime="20201029 12:44:08.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.178" endtime="20201029 12:44:08.465"></status>
</kw>
<msg timestamp="20201029 12:44:08.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02165575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.176" endtime="20201029 12:44:08.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02165575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021763944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:08.469" endtime="20201029 12:44:08.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.477" endtime="20201029 12:44:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.174" endtime="20201029 12:44:08.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.172" endtime="20201029 12:44:08.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.483" level="INFO">${RESULT} = [{'diff': 0.00010819399999999896}, {'diff': 0.00010766699999999879}, {'diff': 0.00010829099999999994}, {'diff': 0.0001078889999999999}, {'diff': 0.00010761099999999704}, {'diff': 0.0001081110000000010...</msg>
<status status="PASS" starttime="20201029 12:44:08.480" endtime="20201029 12:44:08.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.487" level="INFO">${ACCURACY} = {'diff': [0.00010819399999999896, 0.00010766699999999879, 0.00010829099999999994, 0.0001078889999999999, 0.00010761099999999704, 0.00010811100000000101, 0.00010832000000000203, 0.0001083340000000016, ...</msg>
<status status="PASS" starttime="20201029 12:44:08.484" endtime="20201029 12:44:08.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.492" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.491" endtime="20201029 12:44:08.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.494" level="INFO">VALUE: [0.00010819399999999896, 0.00010766699999999879, 0.00010829099999999994, 0.0001078889999999999, 0.00010761099999999704, 0.00010811100000000101, 0.00010832000000000203, 0.0001083340000000016, 0.00010763899999999965, 0.00010801400000000003, 0.00010782000000000153, 0.00010776399999999978, 0.00010830599999999899, 0.00010744500000000115, 0.00010758300000000137, 0.00010834800000000117, 0.00010734700000000069, 0.00010747199999999735, 0.00010823600000000114, 0.00010783299999999815, 0.00010779199999999892, 0.00010817999999999939, 0.00010805599999999874, 0.00010801400000000003, 0.00010811200000000049, 0.0001075279999999991, 0.00010783300000000162, 0.00010819400000000243, 0.00010755499999999876, 0.00010794500000000165, 0.00010833299999999865, 0.00010749999999999996, 0.00010826400000000028, 0.00010762500000000008, 0.00010740299999999897, 0.00010749999999999996, 0.00010813799999999721, 0.00010800000000000046, 0.0001073889999999994, 0.00010734700000000069, 0.00010776399999999978, 0.00010742999999999864, 0.00010780599999999849, 0.00010800000000000046, 0.00010798600000000089, 0.00010748599999999692, 0.00010831899999999908, 0.00010805499999999926, 0.00010757000000000128, 0.00010798599999999742]</msg>
<status status="PASS" starttime="20201029 12:44:08.493" endtime="20201029 12:44:08.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.488" endtime="20201029 12:44:08.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.499" endtime="20201029 12:44:08.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.498" endtime="20201029 12:44:08.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.496" endtime="20201029 12:44:08.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.137" endtime="20201029 12:44:08.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.136" endtime="20201029 12:44:08.520"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.528" endtime="20201029 12:44:08.549"></status>
</kw>
<msg timestamp="20201029 12:44:08.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.527" endtime="20201029 12:44:08.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.551" endtime="20201029 12:44:08.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.553" endtime="20201029 12:44:08.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.524" endtime="20201029 12:44:08.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.522" endtime="20201029 12:44:08.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.562" endtime="20201029 12:44:08.847"></status>
</kw>
<msg timestamp="20201029 12:44:08.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.561" endtime="20201029 12:44:08.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.852" endtime="20201029 12:44:08.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.860" endtime="20201029 12:44:08.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.558" endtime="20201029 12:44:08.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.556" endtime="20201029 12:44:08.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.866" level="INFO">${RESULT} = [{'diff': 0.00010924999999999824}, {'diff': 0.00010886100000000176}, {'diff': 0.00010844500000000215}, {'diff': 0.00010897199999999885}, {'diff': 0.0001090829999999994}, {'diff': 0.0001090559999999997...</msg>
<status status="PASS" starttime="20201029 12:44:08.863" endtime="20201029 12:44:08.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.870" level="INFO">${ACCURACY} = {'diff': [0.00010924999999999824, 0.00010886100000000176, 0.00010844500000000215, 0.00010897199999999885, 0.0001090829999999994, 0.00010905599999999974, 0.00010843099999999911, 0.00010879199999999992,...</msg>
<status status="PASS" starttime="20201029 12:44:08.867" endtime="20201029 12:44:08.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.874" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.873" endtime="20201029 12:44:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.877" level="INFO">VALUE: [0.00010924999999999824, 0.00010886100000000176, 0.00010844500000000215, 0.00010897199999999885, 0.0001090829999999994, 0.00010905599999999974, 0.00010843099999999911, 0.00010879199999999992, 0.00010840299999999997, 0.00010850000000000096, 0.00010855599999999924, 0.00010930599999999999, 0.00010862499999999761, 0.00010867999999999989, 0.00010895899999999875, 0.00010887500000000133, 0.00010887500000000133, 0.00010919499999999943, 0.00010911100000000201, 0.00010925000000000171, 0.00010851400000000053, 0.00010875000000000121, 0.00010875000000000121, 0.00010879199999999992, 0.00010847199999999835, 0.00010911099999999854, 0.00010861100000000151, 0.00010837500000000083, 0.00010862499999999761, 0.00010875000000000121, 0.00010850000000000096, 0.00010924999999999824, 0.00010893000000000014, 0.00010877800000000035, 0.00010911100000000201, 0.00010845800000000225, 0.00010901400000000103, 0.00010912500000000158, 0.00010850000000000096, 0.00010887499999999786, 0.00010873600000000164, 0.00010898599999999842, 0.00010854199999999967, 0.00010856899999999933, 0.00010887500000000133, 0.0001085829999999989, 0.00010844399999999921, 0.0001093890000000014, 0.00010916699999999682, 0.00010918099999999986]</msg>
<status status="PASS" starttime="20201029 12:44:08.875" endtime="20201029 12:44:08.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.871" endtime="20201029 12:44:08.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.882" endtime="20201029 12:44:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.881" endtime="20201029 12:44:08.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.880" endtime="20201029 12:44:08.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.521" endtime="20201029 12:44:08.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.520" endtime="20201029 12:44:08.903"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.912" endtime="20201029 12:44:08.932"></status>
</kw>
<msg timestamp="20201029 12:44:08.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.910" endtime="20201029 12:44:08.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.933" endtime="20201029 12:44:08.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.936" endtime="20201029 12:44:08.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.908" endtime="20201029 12:44:08.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.906" endtime="20201029 12:44:08.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.945" endtime="20201029 12:44:09.231"></status>
</kw>
<msg timestamp="20201029 12:44:09.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.943" endtime="20201029 12:44:09.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021441792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.235" endtime="20201029 12:44:09.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.243" endtime="20201029 12:44:09.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.941" endtime="20201029 12:44:09.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.939" endtime="20201029 12:44:09.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.249" level="INFO">${RESULT} = [{'diff': 0.00011023599999999967}, {'diff': 0.00010973600000000264}, {'diff': 0.00010981900000000058}, {'diff': 0.00010991700000000104}, {'diff': 0.00010974999999999874}, {'diff': 0.000110013999999998...</msg>
<status status="PASS" starttime="20201029 12:44:09.246" endtime="20201029 12:44:09.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.254" level="INFO">${ACCURACY} = {'diff': [0.00011023599999999967, 0.00010973600000000264, 0.00010981900000000058, 0.00010991700000000104, 0.00010974999999999874, 0.00011001399999999856, 0.00011031999999999709, 0.00010937500000000183...</msg>
<status status="PASS" starttime="20201029 12:44:09.250" endtime="20201029 12:44:09.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.259" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.258" endtime="20201029 12:44:09.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.261" level="INFO">VALUE: [0.00011023599999999967, 0.00010973600000000264, 0.00010981900000000058, 0.00010991700000000104, 0.00010974999999999874, 0.00011001399999999856, 0.00011031999999999709, 0.00010937500000000183, 0.00010959699999999947, 0.00010955600000000024, 0.00010965200000000175, 0.00011023599999999967, 0.00011027799999999838, 0.00010949999999999849, 0.00011023599999999967, 0.00010998699999999889, 0.00010948599999999892, 0.00011017999999999792, 0.00010999999999999899, 0.00011016600000000182, 0.00011030600000000099, 0.00010934699999999922, 0.00010962499999999861, 0.0001102220000000001, 0.00011015299999999825, 0.00010999999999999899, 0.00011004200000000117, 0.00011006900000000083, 0.00010969499999999993, 0.00011016699999999782, 0.00010966600000000132, 0.00011026299999999933, 0.00010965300000000122, 0.00010962499999999861, 0.00010937499999999836, 0.00011023599999999967, 0.00010980499999999754, 0.00011019399999999749, 0.00010994400000000071, 0.00010965299999999775, 0.00011023599999999967, 0.00010987500000000233, 0.00010962499999999861, 0.00011011099999999954, 0.00010951399999999806, 0.00011009699999999997, 0.00010980500000000101, 0.00010948600000000239, 0.00010973600000000264, 0.00010969499999999993]</msg>
<status status="PASS" starttime="20201029 12:44:09.260" endtime="20201029 12:44:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.255" endtime="20201029 12:44:09.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.267" endtime="20201029 12:44:09.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.265" endtime="20201029 12:44:09.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.264" endtime="20201029 12:44:09.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.904" endtime="20201029 12:44:09.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.904" endtime="20201029 12:44:09.288"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.296" endtime="20201029 12:44:09.316"></status>
</kw>
<msg timestamp="20201029 12:44:09.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.295" endtime="20201029 12:44:09.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.318" endtime="20201029 12:44:09.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.320" endtime="20201029 12:44:09.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.292" endtime="20201029 12:44:09.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.290" endtime="20201029 12:44:09.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.329" endtime="20201029 12:44:09.618"></status>
</kw>
<msg timestamp="20201029 12:44:09.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:09.328" endtime="20201029 12:44:09.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02162275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:09.622" endtime="20201029 12:44:09.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.630" endtime="20201029 12:44:09.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.325" endtime="20201029 12:44:09.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.323" endtime="20201029 12:44:09.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.636" level="INFO">${RESULT} = [{'diff': 0.00011087499999999986}, {'diff': 0.00011112500000000011}, {'diff': 0.00011093100000000161}, {'diff': 0.00011120799999999806}, {'diff': 0.00011061100000000004}, {'diff': 0.000110499999999999...</msg>
<status status="PASS" starttime="20201029 12:44:09.633" endtime="20201029 12:44:09.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.640" level="INFO">${ACCURACY} = {'diff': [0.00011087499999999986, 0.00011112500000000011, 0.00011093100000000161, 0.00011120799999999806, 0.00011061100000000004, 0.00011049999999999949, 0.00011112500000000011, 0.0001107220000000006,...</msg>
<status status="PASS" starttime="20201029 12:44:09.637" endtime="20201029 12:44:09.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.645" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.644" endtime="20201029 12:44:09.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.647" level="INFO">VALUE: [0.00011087499999999986, 0.00011112500000000011, 0.00011093100000000161, 0.00011120799999999806, 0.00011061100000000004, 0.00011049999999999949, 0.00011112500000000011, 0.0001107220000000006, 0.00011118100000000186, 0.0001107220000000006, 0.00011077799999999888, 0.00011091699999999857, 0.0001112220000000011, 0.00011087499999999986, 0.000110596999999997, 0.00011061100000000004, 0.00011111100000000054, 0.00011065299999999875, 0.00011037499999999936, 0.00011055599999999777, 0.00011074999999999974, 0.00011112500000000011, 0.00011073600000000017, 0.0001105549999999983, 0.00011097199999999738, 0.00011061100000000004, 0.00011061100000000004, 0.00011116700000000229, 0.00011066700000000179, 0.00011094400000000171, 0.00011112500000000011, 0.00011098600000000042, 0.00011086100000000029, 0.0001110419999999987, 0.0001112769999999999, 0.00011086100000000029, 0.00011099999999999999, 0.00011094399999999824, 0.00011037499999999936, 0.00011037499999999936, 0.00011044500000000068, 0.00011040199999999903, 0.00011115299999999925, 0.00011061199999999952, 0.0001104029999999985, 0.00011043099999999764, 0.00011111100000000054, 0.00011111100000000054, 0.00011073600000000017, 0.00011052799999999863]</msg>
<status status="PASS" starttime="20201029 12:44:09.646" endtime="20201029 12:44:09.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.641" endtime="20201029 12:44:09.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.657" endtime="20201029 12:44:09.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.655" endtime="20201029 12:44:09.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.654" endtime="20201029 12:44:09.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.289" endtime="20201029 12:44:09.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.288" endtime="20201029 12:44:09.678"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.686" endtime="20201029 12:44:09.707"></status>
</kw>
<msg timestamp="20201029 12:44:09.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.685" endtime="20201029 12:44:09.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.709" endtime="20201029 12:44:09.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.711" endtime="20201029 12:44:09.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.682" endtime="20201029 12:44:09.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.680" endtime="20201029 12:44:09.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.720" endtime="20201029 12:44:10.005"></status>
</kw>
<msg timestamp="20201029 12:44:10.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.719" endtime="20201029 12:44:10.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.009" endtime="20201029 12:44:10.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.017" endtime="20201029 12:44:10.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.716" endtime="20201029 12:44:10.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.714" endtime="20201029 12:44:10.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.024" level="INFO">${RESULT} = [{'diff': 0.00011184699999999825}, {'diff': 0.000111596999999998}, {'diff': 0.00011148600000000092}, {'diff': 0.000111596999999998}, {'diff': 0.00011169499999999846}, {'diff': 0.00011155599999999877},...</msg>
<status status="PASS" starttime="20201029 12:44:10.020" endtime="20201029 12:44:10.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.027" level="INFO">${ACCURACY} = {'diff': [0.00011184699999999825, 0.000111596999999998, 0.00011148600000000092, 0.000111596999999998, 0.00011169499999999846, 0.00011155599999999877, 0.00011187500000000086, 0.00011213899999999721, 0....</msg>
<status status="PASS" starttime="20201029 12:44:10.024" endtime="20201029 12:44:10.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.032" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.031" endtime="20201029 12:44:10.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.034" level="INFO">VALUE: [0.00011184699999999825, 0.000111596999999998, 0.00011148600000000092, 0.000111596999999998, 0.00011169499999999846, 0.00011155599999999877, 0.00011187500000000086, 0.00011213899999999721, 0.00011170799999999856, 0.0001114029999999995, 0.00011173600000000117, 0.00011195900000000175, 0.00011216599999999688, 0.00011186100000000129, 0.00011165200000000028, 0.00011138899999999993, 0.0001115419999999992, 0.0001122229999999981, 0.00011229199999999995, 0.00011148600000000092, 0.00011202800000000013, 0.0001120969999999985, 0.00011147299999999735, 0.00011148600000000092, 0.00011179099999999997, 0.00011211100000000154, 0.00011161100000000104, 0.00011134700000000122, 0.00011237500000000136, 0.00011179199999999945, 0.00011148600000000092, 0.00011211100000000154, 0.00011180499999999954, 0.00011184700000000172, 0.00011143000000000264, 0.0001120969999999985, 0.00011215300000000025, 0.00011151400000000006, 0.00011184700000000172, 0.00011217999999999992, 0.00011197199999999838, 0.00011152799999999963, 0.00011156999999999834, 0.00011165299999999975, 0.0001115419999999992, 0.00011143000000000264, 0.00011211200000000102, 0.0001117359999999977, 0.00011184799999999773, 0.00011201399999999709]</msg>
<status status="PASS" starttime="20201029 12:44:10.033" endtime="20201029 12:44:10.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.028" endtime="20201029 12:44:10.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.040" endtime="20201029 12:44:10.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.038" endtime="20201029 12:44:10.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.037" endtime="20201029 12:44:10.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.679" endtime="20201029 12:44:10.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.678" endtime="20201029 12:44:10.061"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.069" endtime="20201029 12:44:10.089"></status>
</kw>
<msg timestamp="20201029 12:44:10.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.068" endtime="20201029 12:44:10.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.091" endtime="20201029 12:44:10.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.093" endtime="20201029 12:44:10.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.065" endtime="20201029 12:44:10.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.063" endtime="20201029 12:44:10.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.102" endtime="20201029 12:44:10.388"></status>
</kw>
<msg timestamp="20201029 12:44:10.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02136325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:10.101" endtime="20201029 12:44:10.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02136325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021476264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:10.392" endtime="20201029 12:44:10.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.400" endtime="20201029 12:44:10.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.098" endtime="20201029 12:44:10.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.096" endtime="20201029 12:44:10.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.407" level="INFO">${RESULT} = [{'diff': 0.00011301399999999809}, {'diff': 0.00011288900000000143}, {'diff': 0.0001127359999999987}, {'diff': 0.00011331900000000061}, {'diff': 0.00011288899999999796}, {'diff': 0.0001126660000000008...</msg>
<status status="PASS" starttime="20201029 12:44:10.403" endtime="20201029 12:44:10.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.411" level="INFO">${ACCURACY} = {'diff': [0.00011301399999999809, 0.00011288900000000143, 0.0001127359999999987, 0.00011331900000000061, 0.00011288899999999796, 0.00011266600000000085, 0.00011286099999999882, 0.00011329199999999748,...</msg>
<status status="PASS" starttime="20201029 12:44:10.408" endtime="20201029 12:44:10.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.416" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.415" endtime="20201029 12:44:10.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.418" level="INFO">VALUE: [0.00011301399999999809, 0.00011288900000000143, 0.0001127359999999987, 0.00011331900000000061, 0.00011288899999999796, 0.00011266600000000085, 0.00011286099999999882, 0.00011329199999999748, 0.00011268099999999989, 0.00011279100000000097, 0.00011268099999999989, 0.00011259799999999848, 0.00011279100000000097, 0.00011293000000000067, 0.00011288899999999796, 0.0001124160000000006, 0.000113290999999998, 0.0001125550000000003, 0.00011243099999999964, 0.0001124160000000006, 0.00011308399999999941, 0.00011288900000000143, 0.000112596999999999, 0.00011330600000000052, 0.000112903000000001, 0.00011237500000000136, 0.00011280600000000002, 0.00011288899999999796, 0.0001125550000000003, 0.00011323600000000267, 0.00011305600000000027, 0.00011263900000000118, 0.00011274999999999827, 0.00011316700000000082, 0.00011301299999999861, 0.0001128749999999984, 0.00011298599999999895, 0.00011299999999999852, 0.00011241599999999713, 0.00011250000000000149, 0.00011329200000000095, 0.00011316700000000082, 0.00011281999999999959, 0.00011243099999999964, 0.00011329200000000095, 0.00011273600000000217, 0.00011319399999999702, 0.00011286099999999882, 0.00011316700000000082, 0.00011258399999999891]</msg>
<status status="PASS" starttime="20201029 12:44:10.417" endtime="20201029 12:44:10.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.412" endtime="20201029 12:44:10.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.423" endtime="20201029 12:44:10.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.422" endtime="20201029 12:44:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.420" endtime="20201029 12:44:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.061" endtime="20201029 12:44:10.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.061" endtime="20201029 12:44:10.444"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.452" endtime="20201029 12:44:10.472"></status>
</kw>
<msg timestamp="20201029 12:44:10.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.451" endtime="20201029 12:44:10.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.474" endtime="20201029 12:44:10.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.476" endtime="20201029 12:44:10.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.448" endtime="20201029 12:44:10.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.446" endtime="20201029 12:44:10.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.485" endtime="20201029 12:44:10.771"></status>
</kw>
<msg timestamp="20201029 12:44:10.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021553917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:10.484" endtime="20201029 12:44:10.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0214395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021553917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:10.775" endtime="20201029 12:44:10.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.783" endtime="20201029 12:44:10.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.481" endtime="20201029 12:44:10.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.480" endtime="20201029 12:44:10.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.790" level="INFO">${RESULT} = [{'diff': 0.0001144169999999986}, {'diff': 0.00011391599999999863}, {'diff': 0.00011395799999999734}, {'diff': 0.00011355600000000077}, {'diff': 0.00011409799999999998}, {'diff': 0.0001139590000000002...</msg>
<status status="PASS" starttime="20201029 12:44:10.787" endtime="20201029 12:44:10.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.794" level="INFO">${ACCURACY} = {'diff': [0.0001144169999999986, 0.00011391599999999863, 0.00011395799999999734, 0.00011355600000000077, 0.00011409799999999998, 0.00011395900000000028, 0.00011348600000000292, 0.00011347199999999988,...</msg>
<status status="PASS" starttime="20201029 12:44:10.791" endtime="20201029 12:44:10.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.798" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.797" endtime="20201029 12:44:10.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.801" level="INFO">VALUE: [0.0001144169999999986, 0.00011391599999999863, 0.00011395799999999734, 0.00011355600000000077, 0.00011409799999999998, 0.00011395900000000028, 0.00011348600000000292, 0.00011347199999999988, 0.00011347299999999935, 0.00011390299999999853, 0.00011344500000000021, 0.00011390299999999853, 0.00011390299999999853, 0.00011412499999999964, 0.00011405600000000127, 0.00011379100000000197, 0.00011404199999999823, 0.00011377699999999893, 0.00011358399999999991, 0.000114290999999999, 0.00011352799999999816, 0.0001140970000000005, 0.0001133619999999988, 0.00011365300000000175, 0.0001142360000000002, 0.00011384700000000025, 0.00011355600000000077, 0.0001134030000000015, 0.0001142360000000002, 0.00011361200000000252, 0.00011368100000000089, 0.0001135420000000012, 0.0001142770000000029, 0.00011411100000000007, 0.00011411100000000007, 0.00011362499999999914, 0.0001135420000000012, 0.00011327800000000138, 0.00011429100000000247, 0.00011372200000000013, 0.00011402799999999866, 0.00011391599999999863, 0.00011337500000000236, 0.0001133749999999989, 0.00011362499999999914, 0.00011397200000000038, 0.00011345899999999978, 0.0001140420000000017, 0.00011420800000000106, 0.00011402799999999866]</msg>
<status status="PASS" starttime="20201029 12:44:10.799" endtime="20201029 12:44:10.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.795" endtime="20201029 12:44:10.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.805" endtime="20201029 12:44:10.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.804" endtime="20201029 12:44:10.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.803" endtime="20201029 12:44:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.445" endtime="20201029 12:44:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.444" endtime="20201029 12:44:10.826"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.835" endtime="20201029 12:44:10.856"></status>
</kw>
<msg timestamp="20201029 12:44:10.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.833" endtime="20201029 12:44:10.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.857" endtime="20201029 12:44:10.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.860" endtime="20201029 12:44:10.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.831" endtime="20201029 12:44:10.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.829" endtime="20201029 12:44:10.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.869" endtime="20201029 12:44:11.154"></status>
</kw>
<msg timestamp="20201029 12:44:11.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.867" endtime="20201029 12:44:11.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.158" endtime="20201029 12:44:11.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.166" endtime="20201029 12:44:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.864" endtime="20201029 12:44:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.863" endtime="20201029 12:44:11.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.172" level="INFO">${RESULT} = [{'diff': 0.00011497300000000085}, {'diff': 0.00011466599999999938}, {'diff': 0.0001150970000000015}, {'diff': 0.0001149299999999992}, {'diff': 0.0001150689999999989}, {'diff': 0.00011502799999999966}...</msg>
<status status="PASS" starttime="20201029 12:44:11.169" endtime="20201029 12:44:11.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.176" level="INFO">${ACCURACY} = {'diff': [0.00011497300000000085, 0.00011466599999999938, 0.0001150970000000015, 0.0001149299999999992, 0.0001150689999999989, 0.00011502799999999966, 0.000115291, 0.00011477799999999941, 0.0001151250...</msg>
<status status="PASS" starttime="20201029 12:44:11.173" endtime="20201029 12:44:11.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.181" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.180" endtime="20201029 12:44:11.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.183" level="INFO">VALUE: [0.00011497300000000085, 0.00011466599999999938, 0.0001150970000000015, 0.0001149299999999992, 0.0001150689999999989, 0.00011502799999999966, 0.000115291, 0.00011477799999999941, 0.00011512500000000064, 0.0001144169999999986, 0.00011501299999999715, 0.00011497199999999791, 0.00011515200000000031, 0.00011513900000000021, 0.00011530599999999905, 0.00011508299999999846, 0.0001144160000000026, 0.00011477799999999941, 0.00011513900000000021, 0.00011522199999999816, 0.00011480500000000254, 0.00011497200000000138, 0.00011498600000000095, 0.00011452800000000263, 0.00011479199999999898, 0.0001150970000000015, 0.00011452699999999968, 0.0001152369999999972, 0.0001149169999999991, 0.00011484699999999778, 0.0001145559999999983, 0.00011438899999999946, 0.00011472199999999766, 0.00011529199999999948, 0.00011466599999999938, 0.00011504199999999923, 0.00011516599999999988, 0.00011477799999999941, 0.0001148750000000004, 0.00011483300000000168, 0.00011486100000000082, 0.00011508400000000141, 0.00011519399999999902, 0.00011522299999999763, 0.0001149169999999991, 0.00011498600000000095, 0.00011525000000000077, 0.00011505499999999932, 0.00011505600000000227, 0.0001145559999999983]</msg>
<status status="PASS" starttime="20201029 12:44:11.182" endtime="20201029 12:44:11.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.177" endtime="20201029 12:44:11.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.189" endtime="20201029 12:44:11.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.187" endtime="20201029 12:44:11.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.186" endtime="20201029 12:44:11.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.827" endtime="20201029 12:44:11.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.826" endtime="20201029 12:44:11.210"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.218" endtime="20201029 12:44:11.239"></status>
</kw>
<msg timestamp="20201029 12:44:11.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.217" endtime="20201029 12:44:11.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.240" endtime="20201029 12:44:11.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.243" endtime="20201029 12:44:11.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.214" endtime="20201029 12:44:11.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.212" endtime="20201029 12:44:11.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.251" endtime="20201029 12:44:11.537"></status>
</kw>
<msg timestamp="20201029 12:44:11.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.250" endtime="20201029 12:44:11.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021567764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.541" endtime="20201029 12:44:11.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.549" endtime="20201029 12:44:11.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.247" endtime="20201029 12:44:11.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.246" endtime="20201029 12:44:11.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.556" level="INFO">${RESULT} = [{'diff': 0.000116388999999998}, {'diff': 0.0001158750000000014}, {'diff': 0.00011567999999999995}, {'diff': 0.00011580500000000007}, {'diff': 0.0001155559999999993}, {'diff': 0.0001160559999999998}, ...</msg>
<status status="PASS" starttime="20201029 12:44:11.553" endtime="20201029 12:44:11.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.561" level="INFO">${ACCURACY} = {'diff': [0.000116388999999998, 0.0001158750000000014, 0.00011567999999999995, 0.00011580500000000007, 0.0001155559999999993, 0.0001160559999999998, 0.00011586100000000182, 0.0001159300000000002, 0.00...</msg>
<status status="PASS" starttime="20201029 12:44:11.557" endtime="20201029 12:44:11.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.565" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.564" endtime="20201029 12:44:11.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.567" level="INFO">VALUE: [0.000116388999999998, 0.0001158750000000014, 0.00011567999999999995, 0.00011580500000000007, 0.0001155559999999993, 0.0001160559999999998, 0.00011586100000000182, 0.0001159300000000002, 0.00011631900000000014, 0.00011570799999999909, 0.00011619499999999949, 0.00011599999999999805, 0.00011602800000000066, 0.00011566600000000038, 0.00011536100000000132, 0.0001161109999999986, 0.0001154299999999997, 0.00011618099999999992, 0.00011612500000000164, 0.00011573700000000117, 0.0001162499999999983, 0.00011569499999999899, 0.00011597199999999891, 0.00011570799999999909, 0.00011600000000000152, 0.00011620799999999959, 0.00011575000000000127, 0.00011563800000000124, 0.00011534700000000175, 0.00011608399999999894, 0.00011598600000000195, 0.00011551399999999712, 0.0001153750000000009, 0.00011552800000000016, 0.00011563900000000071, 0.00011613900000000121, 0.00011584699999999878, 0.00011580599999999955, 0.00011630500000000057, 0.00011580599999999955, 0.00011572199999999866, 0.00011562500000000114, 0.00011597200000000238, 0.00011604100000000075, 0.00011543099999999917, 0.0001153750000000009, 0.00011566600000000038, 0.00011612499999999817, 0.00011627799999999744, 0.00011629200000000048]</msg>
<status status="PASS" starttime="20201029 12:44:11.566" endtime="20201029 12:44:11.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.561" endtime="20201029 12:44:11.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.572" endtime="20201029 12:44:11.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.571" endtime="20201029 12:44:11.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.570" endtime="20201029 12:44:11.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.211" endtime="20201029 12:44:11.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.210" endtime="20201029 12:44:11.593"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.602" endtime="20201029 12:44:11.622"></status>
</kw>
<msg timestamp="20201029 12:44:11.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.600" endtime="20201029 12:44:11.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.623" endtime="20201029 12:44:11.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.626" endtime="20201029 12:44:11.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.598" endtime="20201029 12:44:11.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.595" endtime="20201029 12:44:11.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.635" endtime="20201029 12:44:11.921"></status>
</kw>
<msg timestamp="20201029 12:44:11.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:11.633" endtime="20201029 12:44:11.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662667, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:11.925" endtime="20201029 12:44:11.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.933" endtime="20201029 12:44:11.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.631" endtime="20201029 12:44:11.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.629" endtime="20201029 12:44:11.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.940" level="INFO">${RESULT} = [{'diff': 0.00011766699999999838}, {'diff': 0.00011634699999999928}, {'diff': 0.00011672199999999966}, {'diff': 0.00011631999999999962}, {'diff': 0.00011655500000000082}, {'diff': 0.000116417000000000...</msg>
<status status="PASS" starttime="20201029 12:44:11.936" endtime="20201029 12:44:11.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.943" level="INFO">${ACCURACY} = {'diff': [0.00011766699999999838, 0.00011634699999999928, 0.00011672199999999966, 0.00011631999999999962, 0.00011655500000000082, 0.0001164170000000006, 0.000117291000000002, 0.00011681900000000064, 0...</msg>
<status status="PASS" starttime="20201029 12:44:11.940" endtime="20201029 12:44:11.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.948" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.947" endtime="20201029 12:44:11.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.950" level="INFO">VALUE: [0.00011766699999999838, 0.00011634699999999928, 0.00011672199999999966, 0.00011631999999999962, 0.00011655500000000082, 0.0001164170000000006, 0.000117291000000002, 0.00011681900000000064, 0.00011727800000000191, 0.00011659699999999953, 0.00011638900000000146, 0.00011715200000000231, 0.0001168889999999985, 0.00011665200000000181, 0.00011684799999999926, 0.00011663900000000171, 0.00011665299999999781, 0.00011730500000000157, 0.00011695899999999981, 0.00011684699999999978, 0.00011702800000000166, 0.00011644499999999974, 0.00011679200000000098, 0.0001168889999999985, 0.00011711100000000307, 0.00011697199999999991, 0.00011658299999999996, 0.0001167910000000015, 0.00011698599999999948, 0.00011715200000000231, 0.00011684699999999978, 0.00011666700000000085, 0.00011651400000000159, 0.00011701399999999862, 0.00011695899999999981, 0.00011648599999999898, 0.00011686100000000282, 0.00011631999999999962, 0.00011634699999999928, 0.0001168049999999976, 0.00011697199999999991, 0.00011633399999999919, 0.00011720799999999712, 0.00011659799999999901, 0.00011713800000000274, 0.00011663899999999824, 0.00011716700000000135, 0.00011676400000000184, 0.0001166109999999991, 0.00011690199999999859]</msg>
<status status="PASS" starttime="20201029 12:44:11.949" endtime="20201029 12:44:11.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.944" endtime="20201029 12:44:11.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.955" endtime="20201029 12:44:11.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.954" endtime="20201029 12:44:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.952" endtime="20201029 12:44:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.594" endtime="20201029 12:44:11.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.593" endtime="20201029 12:44:11.976"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.984" endtime="20201029 12:44:12.006"></status>
</kw>
<msg timestamp="20201029 12:44:12.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.983" endtime="20201029 12:44:12.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.007" endtime="20201029 12:44:12.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.010" endtime="20201029 12:44:12.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.980" endtime="20201029 12:44:12.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.978" endtime="20201029 12:44:12.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.019" endtime="20201029 12:44:12.303"></status>
</kw>
<msg timestamp="20201029 12:44:12.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.017" endtime="20201029 12:44:12.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.308" endtime="20201029 12:44:12.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.316" endtime="20201029 12:44:12.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.015" endtime="20201029 12:44:12.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.013" endtime="20201029 12:44:12.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.323" level="INFO">${RESULT} = [{'diff': 0.00011841699999999913}, {'diff': 0.00011795799999999787}, {'diff': 0.00011808400000000094}, {'diff': 0.00011820799999999812}, {'diff': 0.0001179170000000021}, {'diff': 0.0001180139999999996...</msg>
<status status="PASS" starttime="20201029 12:44:12.320" endtime="20201029 12:44:12.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.327" level="INFO">${ACCURACY} = {'diff': [0.00011841699999999913, 0.00011795799999999787, 0.00011808400000000094, 0.00011820799999999812, 0.0001179170000000021, 0.00011801399999999962, 0.00011790300000000253, 0.00011809700000000103,...</msg>
<status status="PASS" starttime="20201029 12:44:12.324" endtime="20201029 12:44:12.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.331" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.330" endtime="20201029 12:44:12.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.333" level="INFO">VALUE: [0.00011841699999999913, 0.00011795799999999787, 0.00011808400000000094, 0.00011820799999999812, 0.0001179170000000021, 0.00011801399999999962, 0.00011790300000000253, 0.00011809700000000103, 0.00011790299999999906, 0.00011743100000000117, 0.00011804200000000223, 0.00011741699999999813, 0.00011795799999999787, 0.00011777799999999894, 0.00011826399999999987, 0.0001178889999999995, 0.00011772300000000013, 0.00011779099999999904, 0.00011773600000000023, 0.00011788900000000296, 0.00011784700000000078, 0.00011802699999999972, 0.00011797200000000091, 0.00011791599999999916, 0.00011822200000000116, 0.00011808400000000094, 0.00011830599999999858, 0.00011777800000000241, 0.0001174170000000016, 0.00011829200000000248, 0.00011776399999999937, 0.0001181950000000015, 0.00011737499999999942, 0.00011772200000000066, 0.00011809700000000103, 0.00011815299999999931, 0.00011734799999999976, 0.00011797200000000091, 0.00011801399999999962, 0.00011791699999999863, 0.0001182500000000003, 0.00011830600000000205, 0.00011779200000000198, 0.00011751399999999912, 0.00011755500000000182, 0.00011807000000000137, 0.00011797200000000091, 0.00011776399999999937, 0.0001178889999999995, 0.00011734799999999976]</msg>
<status status="PASS" starttime="20201029 12:44:12.332" endtime="20201029 12:44:12.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.327" endtime="20201029 12:44:12.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.339" endtime="20201029 12:44:12.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.338" endtime="20201029 12:44:12.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.336" endtime="20201029 12:44:12.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.977" endtime="20201029 12:44:12.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.976" endtime="20201029 12:44:12.360"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.368" endtime="20201029 12:44:12.389"></status>
</kw>
<msg timestamp="20201029 12:44:12.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.367" endtime="20201029 12:44:12.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.390" endtime="20201029 12:44:12.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.393" endtime="20201029 12:44:12.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.364" endtime="20201029 12:44:12.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.362" endtime="20201029 12:44:12.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.402" endtime="20201029 12:44:12.687"></status>
</kw>
<msg timestamp="20201029 12:44:12.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.400" endtime="20201029 12:44:12.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021495361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.691" endtime="20201029 12:44:12.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.699" endtime="20201029 12:44:12.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.398" endtime="20201029 12:44:12.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.396" endtime="20201029 12:44:12.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.706" level="INFO">${RESULT} = [{'diff': 0.00011899999999999758}, {'diff': 0.00011841699999999913}, {'diff': 0.0001191249999999977}, {'diff': 0.00011907000000000237}, {'diff': 0.00011907000000000237}, {'diff': 0.0001186529999999998...</msg>
<status status="PASS" starttime="20201029 12:44:12.703" endtime="20201029 12:44:12.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.711" level="INFO">${ACCURACY} = {'diff': [0.00011899999999999758, 0.00011841699999999913, 0.0001191249999999977, 0.00011907000000000237, 0.00011907000000000237, 0.00011865299999999981, 0.00011844400000000227, 0.00011895900000000181,...</msg>
<status status="PASS" starttime="20201029 12:44:12.707" endtime="20201029 12:44:12.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.715" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.714" endtime="20201029 12:44:12.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.717" level="INFO">VALUE: [0.00011899999999999758, 0.00011841699999999913, 0.0001191249999999977, 0.00011907000000000237, 0.00011907000000000237, 0.00011865299999999981, 0.00011844400000000227, 0.00011895900000000181, 0.00011901400000000062, 0.00011916699999999988, 0.00011897199999999844, 0.0001192500000000013, 0.0001189309999999992, 0.00011915200000000084, 0.00011851400000000012, 0.00011866699999999938, 0.00011863900000000024, 0.00011883299999999875, 0.0001192500000000013, 0.0001192500000000013, 0.00011900000000000105, 0.00011884700000000178, 0.00011833400000000119, 0.00011897199999999844, 0.00011891699999999963, 0.00011863900000000024, 0.00011909699999999857, 0.00011842999999999923, 0.00011919399999999955, 0.000118389, 0.00011909799999999804, 0.0001185829999999985, 0.00011850000000000055, 0.0001188890000000005, 0.00011852799999999969, 0.00011919499999999902, 0.00011863900000000024, 0.00011888800000000102, 0.00011899999999999758, 0.0001185829999999985, 0.00011845900000000131, 0.00011870799999999862, 0.00011895800000000234, 0.00011831999999999815, 0.00011850000000000055, 0.00011831899999999868, 0.00011874999999999733, 0.00011866699999999938, 0.00011862500000000067, 0.00011890300000000006]</msg>
<status status="PASS" starttime="20201029 12:44:12.716" endtime="20201029 12:44:12.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.711" endtime="20201029 12:44:12.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.722" endtime="20201029 12:44:12.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.721" endtime="20201029 12:44:12.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.720" endtime="20201029 12:44:12.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.361" endtime="20201029 12:44:12.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.360" endtime="20201029 12:44:12.743"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.751" endtime="20201029 12:44:12.772"></status>
</kw>
<msg timestamp="20201029 12:44:12.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.750" endtime="20201029 12:44:12.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.773" endtime="20201029 12:44:12.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.776" endtime="20201029 12:44:12.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.747" endtime="20201029 12:44:12.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.745" endtime="20201029 12:44:12.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.785" endtime="20201029 12:44:13.073"></status>
</kw>
<msg timestamp="20201029 12:44:13.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021351125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.783" endtime="20201029 12:44:13.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021351125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.077" endtime="20201029 12:44:13.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.085" endtime="20201029 12:44:13.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.781" endtime="20201029 12:44:13.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.779" endtime="20201029 12:44:13.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.093" level="INFO">${RESULT} = [{'diff': 0.00012070800000000062}, {'diff': 0.00011934700000000228}, {'diff': 0.00011970799999999962}, {'diff': 0.0001202639999999984}, {'diff': 0.00011977700000000147}, {'diff': 0.0001194029999999971...</msg>
<status status="PASS" starttime="20201029 12:44:13.089" endtime="20201029 12:44:13.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.097" level="INFO">${ACCURACY} = {'diff': [0.00012070800000000062, 0.00011934700000000228, 0.00011970799999999962, 0.0001202639999999984, 0.00011977700000000147, 0.0001194029999999971, 0.00011998599999999901, 0.00011940300000000056, ...</msg>
<status status="PASS" starttime="20201029 12:44:13.094" endtime="20201029 12:44:13.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.102" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.101" endtime="20201029 12:44:13.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.105" level="INFO">VALUE: [0.00012070800000000062, 0.00011934700000000228, 0.00011970799999999962, 0.0001202639999999984, 0.00011977700000000147, 0.0001194029999999971, 0.00011998599999999901, 0.00011940300000000056, 0.00011995799999999987, 0.00011945800000000284, 0.00012027800000000144, 0.00011969499999999952, 0.00011997199999999944, 0.00011951400000000112, 0.00011984699999999932, 0.00011984800000000226, 0.00011983299999999975, 0.00011951400000000112, 0.00012013899999999827, 0.0001201249999999987, 0.00012027799999999797, 0.00011999999999999858, 0.00011995799999999987, 0.00011994499999999977, 0.00011941600000000066, 0.00011976400000000137, 0.00011970799999999962, 0.00011947199999999894, 0.00011947300000000188, 0.00012029200000000101, 0.00011998599999999901, 0.0001201249999999987, 0.00011972199999999919, 0.00011944499999999927, 0.00011940200000000109, 0.00011995799999999987, 0.00011984699999999932, 0.00011983299999999975, 0.00011945899999999884, 0.00011972199999999919, 0.00012002800000000119, 0.00012009699999999957, 0.00011970800000000309, 0.00012009699999999957, 0.0001195699999999994, 0.00011945800000000284, 0.00011977800000000094, 0.00011963899999999777, 0.0001202639999999984, 0.00011997200000000291]</msg>
<status status="PASS" starttime="20201029 12:44:13.103" endtime="20201029 12:44:13.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.098" endtime="20201029 12:44:13.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.123" endtime="20201029 12:44:13.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.122" endtime="20201029 12:44:13.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.120" endtime="20201029 12:44:13.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.744" endtime="20201029 12:44:13.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.743" endtime="20201029 12:44:13.144"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.153" endtime="20201029 12:44:13.174"></status>
</kw>
<msg timestamp="20201029 12:44:13.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.151" endtime="20201029 12:44:13.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.176" endtime="20201029 12:44:13.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.178" endtime="20201029 12:44:13.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.149" endtime="20201029 12:44:13.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.147" endtime="20201029 12:44:13.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.187" endtime="20201029 12:44:13.474"></status>
</kw>
<msg timestamp="20201029 12:44:13.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:13.186" endtime="20201029 12:44:13.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022436917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022558, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:13.478" endtime="20201029 12:44:13.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.486" endtime="20201029 12:44:13.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.183" endtime="20201029 12:44:13.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.181" endtime="20201029 12:44:13.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.492" level="INFO">${RESULT} = [{'diff': 0.000121083000000001}, {'diff': 0.00012058399999999997}, {'diff': 0.00012056899999999746}, {'diff': 0.00012052700000000222}, {'diff': 0.00012061099999999964}, {'diff': 0.00012088799999999955...</msg>
<status status="PASS" starttime="20201029 12:44:13.489" endtime="20201029 12:44:13.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.496" level="INFO">${ACCURACY} = {'diff': [0.000121083000000001, 0.00012058399999999997, 0.00012056899999999746, 0.00012052700000000222, 0.00012061099999999964, 0.00012088799999999955, 0.00012045800000000037, 0.00012051399999999865, ...</msg>
<status status="PASS" starttime="20201029 12:44:13.493" endtime="20201029 12:44:13.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.500" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.499" endtime="20201029 12:44:13.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.503" level="INFO">VALUE: [0.000121083000000001, 0.00012058399999999997, 0.00012056899999999746, 0.00012052700000000222, 0.00012061099999999964, 0.00012088799999999955, 0.00012045800000000037, 0.00012051399999999865, 0.00012033299999999678, 0.00012066699999999791, 0.00012113899999999928, 0.0001209449999999973, 0.0001205830000000005, 0.00012077799999999847, 0.00012034699999999982, 0.00012106900000000143, 0.0001211379999999998, 0.00012070800000000062, 0.00012099999999999958, 0.00012043000000000123, 0.00012127800000000244, 0.00012101400000000262, 0.00012077799999999847, 0.00012054100000000179, 0.00012049999999999908, 0.00012115299999999884, 0.00012113900000000274, 0.00012030600000000058, 0.00012048599999999951, 0.00012082000000000065, 0.00012047299999999941, 0.00012100000000000305, 0.00012054199999999779, 0.00012102800000000219, 0.00012088899999999903, 0.00012049999999999908, 0.00012058399999999997, 0.00012111100000000014, 0.00012113899999999928, 0.00012095800000000087, 0.0001207639999999989, 0.0001211249999999997, 0.000120776999999999, 0.00012036199999999886, 0.00012047199999999994, 0.0001212639999999994, 0.00012088899999999903, 0.00012077700000000247, 0.00012068100000000095, 0.00012083300000000075]</msg>
<status status="PASS" starttime="20201029 12:44:13.501" endtime="20201029 12:44:13.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.497" endtime="20201029 12:44:13.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.509" endtime="20201029 12:44:13.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.507" endtime="20201029 12:44:13.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.506" endtime="20201029 12:44:13.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.145" endtime="20201029 12:44:13.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.145" endtime="20201029 12:44:13.529"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.538" endtime="20201029 12:44:13.558"></status>
</kw>
<msg timestamp="20201029 12:44:13.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.536" endtime="20201029 12:44:13.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.560" endtime="20201029 12:44:13.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.562" endtime="20201029 12:44:13.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.534" endtime="20201029 12:44:13.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.532" endtime="20201029 12:44:13.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.571" endtime="20201029 12:44:13.857"></status>
</kw>
<msg timestamp="20201029 12:44:13.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.570" endtime="20201029 12:44:13.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021467583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.861" endtime="20201029 12:44:13.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.869" endtime="20201029 12:44:13.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.567" endtime="20201029 12:44:13.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.565" endtime="20201029 12:44:13.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.876" level="INFO">${RESULT} = [{'diff': 0.00012262499999999774}, {'diff': 0.0001221250000000007}, {'diff': 0.00012151399999999965}, {'diff': 0.00012191600000000316}, {'diff': 0.00012131900000000168}, {'diff': 0.0001218890000000000...</msg>
<status status="PASS" starttime="20201029 12:44:13.872" endtime="20201029 12:44:13.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.880" level="INFO">${ACCURACY} = {'diff': [0.00012262499999999774, 0.0001221250000000007, 0.00012151399999999965, 0.00012191600000000316, 0.00012131900000000168, 0.00012188900000000003, 0.0001221799999999995, 0.0001222640000000004, 0...</msg>
<status status="PASS" starttime="20201029 12:44:13.877" endtime="20201029 12:44:13.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.885" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.884" endtime="20201029 12:44:13.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.887" level="INFO">VALUE: [0.00012262499999999774, 0.0001221250000000007, 0.00012151399999999965, 0.00012191600000000316, 0.00012131900000000168, 0.00012188900000000003, 0.0001221799999999995, 0.0001222640000000004, 0.00012151399999999965, 0.00012224999999999736, 0.00012224999999999736, 0.00012175000000000033, 0.00012200000000000058, 0.00012141699999999866, 0.0001213189999999982, 0.00012169500000000152, 0.00012132000000000115, 0.00012169500000000152, 0.00012138899999999953, 0.00012183299999999828, 0.00012188900000000003, 0.00012163899999999978, 0.00012227799999999997, 0.000121777, 0.00012138899999999953, 0.0001216250000000002, 0.00012175000000000033, 0.00012195800000000187, 0.00012150000000000008, 0.00012130599999999811, 0.0001220700000000019, 0.00012191600000000316, 0.00012188900000000003, 0.00012158400000000097, 0.00012152799999999922, 0.00012138899999999953, 0.00012165300000000281, 0.00012163899999999978, 0.00012159700000000107, 0.00012188900000000003, 0.00012144399999999833, 0.00012169500000000152, 0.00012141699999999866, 0.00012163899999999978, 0.00012183399999999775, 0.00012215200000000037, 0.00012218099999999898, 0.00012165299999999934, 0.00012147200000000094, 0.00012220800000000212]</msg>
<status status="PASS" starttime="20201029 12:44:13.886" endtime="20201029 12:44:13.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.881" endtime="20201029 12:44:13.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.892" endtime="20201029 12:44:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.891" endtime="20201029 12:44:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.890" endtime="20201029 12:44:13.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.530" endtime="20201029 12:44:13.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.530" endtime="20201029 12:44:13.913"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.921" endtime="20201029 12:44:13.942"></status>
</kw>
<msg timestamp="20201029 12:44:13.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.920" endtime="20201029 12:44:13.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.944" endtime="20201029 12:44:13.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.946" endtime="20201029 12:44:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.917" endtime="20201029 12:44:13.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.915" endtime="20201029 12:44:13.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.955" endtime="20201029 12:44:14.242"></status>
</kw>
<msg timestamp="20201029 12:44:14.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.953" endtime="20201029 12:44:14.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021380167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021503014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.246" endtime="20201029 12:44:14.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.254" endtime="20201029 12:44:14.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.951" endtime="20201029 12:44:14.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.949" endtime="20201029 12:44:14.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.261" level="INFO">${RESULT} = [{'diff': 0.00012284700000000232}, {'diff': 0.00012284699999999885}, {'diff': 0.00012244399999999933}, {'diff': 0.0001223480000000013}, {'diff': 0.00012316700000000042}, {'diff': 0.0001227089999999986...</msg>
<status status="PASS" starttime="20201029 12:44:14.257" endtime="20201029 12:44:14.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.264" level="INFO">${ACCURACY} = {'diff': [0.00012284700000000232, 0.00012284699999999885, 0.00012244399999999933, 0.0001223480000000013, 0.00012316700000000042, 0.00012270899999999862, 0.0001232220000000027, 0.00012279100000000057, ...</msg>
<status status="PASS" starttime="20201029 12:44:14.261" endtime="20201029 12:44:14.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.269" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.268" endtime="20201029 12:44:14.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.271" level="INFO">VALUE: [0.00012284700000000232, 0.00012284699999999885, 0.00012244399999999933, 0.0001223480000000013, 0.00012316700000000042, 0.00012270899999999862, 0.0001232220000000027, 0.00012279100000000057, 0.00012233300000000225, 0.00012247200000000194, 0.00012272199999999872, 0.00012297199999999897, 0.0001229030000000006, 0.0001230420000000003, 0.00012240200000000062, 0.0001228189999999997, 0.0001224999999999976, 0.00012305599999999986, 0.00012259700000000207, 0.0001225700000000024, 0.00012313900000000128, 0.00012320799999999965, 0.00012308299999999953, 0.00012259800000000154, 0.00012230600000000258, 0.0001232640000000014, 0.0001228189999999997, 0.00012266699999999991, 0.00012269399999999958, 0.00012306999999999943, 0.00012261100000000164, 0.0001227640000000009, 0.00012270799999999915, 0.00012244399999999933, 0.00012237500000000096, 0.00012276300000000143, 0.00012308299999999953, 0.00012279100000000057, 0.00012311100000000214, 0.00012233300000000225, 0.0001229449999999993, 0.0001227220000000022, 0.0001231800000000005, 0.0001230969999999991, 0.00012233299999999878, 0.00012238900000000053, 0.00012270800000000262, 0.0001229030000000006, 0.00012240200000000062, 0.0001225830000000025]</msg>
<status status="PASS" starttime="20201029 12:44:14.270" endtime="20201029 12:44:14.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.265" endtime="20201029 12:44:14.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.276" endtime="20201029 12:44:14.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.275" endtime="20201029 12:44:14.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.273" endtime="20201029 12:44:14.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.914" endtime="20201029 12:44:14.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.913" endtime="20201029 12:44:14.297"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.305" endtime="20201029 12:44:14.327"></status>
</kw>
<msg timestamp="20201029 12:44:14.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.304" endtime="20201029 12:44:14.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.329" endtime="20201029 12:44:14.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.331" endtime="20201029 12:44:14.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.301" endtime="20201029 12:44:14.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.299" endtime="20201029 12:44:14.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.341" endtime="20201029 12:44:14.626"></status>
</kw>
<msg timestamp="20201029 12:44:14.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.339" endtime="20201029 12:44:14.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022382167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.630" endtime="20201029 12:44:14.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.638" endtime="20201029 12:44:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.336" endtime="20201029 12:44:14.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.334" endtime="20201029 12:44:14.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.645" level="INFO">${RESULT} = [{'diff': 0.00012427699999999903}, {'diff': 0.00012365299999999788}, {'diff': 0.00012390200000000212}, {'diff': 0.00012388899999999856}, {'diff': 0.0001234999999999986}, {'diff': 0.0001235550000000008...</msg>
<status status="PASS" starttime="20201029 12:44:14.642" endtime="20201029 12:44:14.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.649" level="INFO">${ACCURACY} = {'diff': [0.00012427699999999903, 0.00012365299999999788, 0.00012390200000000212, 0.00012388899999999856, 0.0001234999999999986, 0.00012355500000000089, 0.0001236250000000022, 0.00012333299999999978, ...</msg>
<status status="PASS" starttime="20201029 12:44:14.646" endtime="20201029 12:44:14.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.653" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.652" endtime="20201029 12:44:14.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.655" level="INFO">VALUE: [0.00012427699999999903, 0.00012365299999999788, 0.00012390200000000212, 0.00012388899999999856, 0.0001234999999999986, 0.00012355500000000089, 0.0001236250000000022, 0.00012333299999999978, 0.00012394400000000083, 0.00012359799999999907, 0.0001240689999999975, 0.00012334699999999935, 0.00012405600000000086, 0.00012394400000000083, 0.00012347199999999947, 0.00012420800000000065, 0.00012419499999999709, 0.00012406900000000096, 0.00012406900000000096, 0.00012340299999999763, 0.0001234999999999986, 0.00012351400000000165, 0.00012405500000000139, 0.000124084, 0.00012383300000000028, 0.00012424999999999936, 0.00012387500000000246, 0.00012376399999999843, 0.0001239999999999991, 0.00012387500000000246, 0.0001234449999999998, 0.00012370800000000015, 0.00012426299999999946, 0.00012383300000000028, 0.0001236389999999983, 0.00012420800000000065, 0.00012377699999999853, 0.00012376399999999843, 0.0001239580000000004, 0.0001234030000000011, 0.0001239580000000004, 0.00012422200000000022, 0.0001237640000000019, 0.00012388900000000203, 0.00012362499999999874, 0.00012352699999999828, 0.00012384699999999985, 0.0001242779999999985, 0.00012429199999999807, 0.00012334699999999588]</msg>
<status status="PASS" starttime="20201029 12:44:14.654" endtime="20201029 12:44:14.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.649" endtime="20201029 12:44:14.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.667" endtime="20201029 12:44:14.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.665" endtime="20201029 12:44:14.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.664" endtime="20201029 12:44:14.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.298" endtime="20201029 12:44:14.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.297" endtime="20201029 12:44:14.688"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.696" endtime="20201029 12:44:14.717"></status>
</kw>
<msg timestamp="20201029 12:44:14.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.694" endtime="20201029 12:44:14.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.718" endtime="20201029 12:44:14.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.721" endtime="20201029 12:44:14.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.692" endtime="20201029 12:44:14.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.690" endtime="20201029 12:44:14.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.730" endtime="20201029 12:44:15.015"></status>
</kw>
<msg timestamp="20201029 12:44:15.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.728" endtime="20201029 12:44:15.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021545861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.019" endtime="20201029 12:44:15.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.027" endtime="20201029 12:44:15.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.726" endtime="20201029 12:44:15.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.724" endtime="20201029 12:44:15.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.034" level="INFO">${RESULT} = [{'diff': 0.00012487499999999999}, {'diff': 0.00012430499999999817}, {'diff': 0.00012434700000000035}, {'diff': 0.0001252360000000008}, {'diff': 0.00012479199999999857}, {'diff': 0.0001251939999999986...</msg>
<status status="PASS" starttime="20201029 12:44:15.031" endtime="20201029 12:44:15.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.039" level="INFO">${ACCURACY} = {'diff': [0.00012487499999999999, 0.00012430499999999817, 0.00012434700000000035, 0.0001252360000000008, 0.00012479199999999857, 0.0001251939999999986, 0.00012443099999999777, 0.00012443100000000124, ...</msg>
<status status="PASS" starttime="20201029 12:44:15.035" endtime="20201029 12:44:15.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.043" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.042" endtime="20201029 12:44:15.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.045" level="INFO">VALUE: [0.00012487499999999999, 0.00012430499999999817, 0.00012434700000000035, 0.0001252360000000008, 0.00012479199999999857, 0.0001251939999999986, 0.00012443099999999777, 0.00012443100000000124, 0.00012486100000000042, 0.00012467999999999854, 0.0001248060000000016, 0.00012454199999999832, 0.0001245840000000005, 0.0001246939999999981, 0.0001250000000000001, 0.00012456900000000146, 0.0001250689999999985, 0.0001245420000000018, 0.00012507000000000143, 0.00012525000000000036, 0.00012452799999999875, 0.00012477699999999953, 0.00012493000000000226, 0.00012436099999999992, 0.00012436099999999992, 0.00012520900000000112, 0.00012525000000000036, 0.00012519400000000208, 0.00012469400000000158, 0.00012505499999999892, 0.0001251939999999986, 0.00012494499999999784, 0.0001247909999999991, 0.00012515300000000285, 0.00012436099999999992, 0.00012457000000000093, 0.00012511200000000014, 0.00012519500000000156, 0.00012493100000000174, 0.00012452799999999875, 0.00012482000000000118, 0.00012486100000000042, 0.00012444400000000133, 0.00012462499999999974, 0.00012470900000000062, 0.00012497300000000044, 0.00012486100000000042, 0.00012487499999999999, 0.0001245840000000005, 0.0001244999999999996]</msg>
<status status="PASS" starttime="20201029 12:44:15.044" endtime="20201029 12:44:15.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.039" endtime="20201029 12:44:15.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.050" endtime="20201029 12:44:15.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.049" endtime="20201029 12:44:15.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.048" endtime="20201029 12:44:15.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.688" endtime="20201029 12:44:15.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.688" endtime="20201029 12:44:15.071"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.079" endtime="20201029 12:44:15.100"></status>
</kw>
<msg timestamp="20201029 12:44:15.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.078" endtime="20201029 12:44:15.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.102" endtime="20201029 12:44:15.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.105" endtime="20201029 12:44:15.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.075" endtime="20201029 12:44:15.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.073" endtime="20201029 12:44:15.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.113" endtime="20201029 12:44:15.400"></status>
</kw>
<msg timestamp="20201029 12:44:15.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.112" endtime="20201029 12:44:15.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021447167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.404" endtime="20201029 12:44:15.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.412" endtime="20201029 12:44:15.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.109" endtime="20201029 12:44:15.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.108" endtime="20201029 12:44:15.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.418" level="INFO">${RESULT} = [{'diff': 0.00012581899999999924}, {'diff': 0.00012558300000000203}, {'diff': 0.0001255130000000007}, {'diff': 0.00012531899999999874}, {'diff': 0.00012543100000000224}, {'diff': 0.0001256110000000011...</msg>
<status status="PASS" starttime="20201029 12:44:15.415" endtime="20201029 12:44:15.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.422" level="INFO">${ACCURACY} = {'diff': [0.00012581899999999924, 0.00012558300000000203, 0.0001255130000000007, 0.00012531899999999874, 0.00012543100000000224, 0.00012561100000000117, 0.00012611100000000167, 0.00012588900000000056,...</msg>
<status status="PASS" starttime="20201029 12:44:15.419" endtime="20201029 12:44:15.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.426" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.425" endtime="20201029 12:44:15.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.429" level="INFO">VALUE: [0.00012581899999999924, 0.00012558300000000203, 0.0001255130000000007, 0.00012531899999999874, 0.00012543100000000224, 0.00012561100000000117, 0.00012611100000000167, 0.00012588900000000056, 0.00012544400000000233, 0.00012538900000000006, 0.00012612499999999777, 0.00012565299999999988, 0.00012545900000000137, 0.00012601400000000068, 0.00012576399999999696, 0.0001261390000000008, 0.00012572200000000172, 0.00012541599999999972, 0.00012595799999999893, 0.0001256390000000003, 0.00012562500000000074, 0.00012577700000000053, 0.0001261939999999996, 0.0001258199999999987, 0.0001261939999999996, 0.00012576400000000043, 0.00012534800000000082, 0.00012544400000000233, 0.00012570899999999816, 0.00012593099999999927, 0.00012552799999999975, 0.0001258060000000026, 0.00012581899999999924, 0.0001254580000000019, 0.00012593099999999927, 0.00012581899999999924, 0.0001256939999999991, 0.00012606999999999896, 0.0001261390000000008, 0.00012579199999999957, 0.0001258329999999988, 0.00012534699999999788, 0.00012566599999999997, 0.00012548599999999757, 0.00012548600000000104, 0.0001258329999999988, 0.00012626400000000093, 0.00012612500000000124, 0.0001253329999999983, 0.00012590300000000013]</msg>
<status status="PASS" starttime="20201029 12:44:15.428" endtime="20201029 12:44:15.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.423" endtime="20201029 12:44:15.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.434" endtime="20201029 12:44:15.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.432" endtime="20201029 12:44:15.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.431" endtime="20201029 12:44:15.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.072" endtime="20201029 12:44:15.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.071" endtime="20201029 12:44:15.454"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.463" endtime="20201029 12:44:15.485"></status>
</kw>
<msg timestamp="20201029 12:44:15.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.462" endtime="20201029 12:44:15.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.486" endtime="20201029 12:44:15.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.489" endtime="20201029 12:44:15.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.459" endtime="20201029 12:44:15.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.457" endtime="20201029 12:44:15.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.498" endtime="20201029 12:44:15.784"></status>
</kw>
<msg timestamp="20201029 12:44:15.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.496" endtime="20201029 12:44:15.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.788" endtime="20201029 12:44:15.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.796" endtime="20201029 12:44:15.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.494" endtime="20201029 12:44:15.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.492" endtime="20201029 12:44:15.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.802" level="INFO">${RESULT} = [{'diff': 0.00012731899999999727}, {'diff': 0.00012667999999999707}, {'diff': 0.00012658399999999903}, {'diff': 0.0001269300000000008}, {'diff': 0.0001266529999999974}, {'diff': 0.00012631899999999974...</msg>
<status status="PASS" starttime="20201029 12:44:15.799" endtime="20201029 12:44:15.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.806" level="INFO">${ACCURACY} = {'diff': [0.00012731899999999727, 0.00012667999999999707, 0.00012658399999999903, 0.0001269300000000008, 0.0001266529999999974, 0.00012631899999999974, 0.00012670800000000315, 0.0001268199999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:44:15.803" endtime="20201029 12:44:15.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.811" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.810" endtime="20201029 12:44:15.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.813" level="INFO">VALUE: [0.00012731899999999727, 0.00012667999999999707, 0.00012658399999999903, 0.0001269300000000008, 0.0001266529999999974, 0.00012631899999999974, 0.00012670800000000315, 0.0001268199999999997, 0.00012694400000000036, 0.0001263329999999993, 0.00012712500000000224, 0.00012637499999999802, 0.00012663899999999784, 0.00012675000000000186, 0.00012676300000000196, 0.00012688900000000156, 0.00012719500000000009, 0.00012701400000000168, 0.00012670899999999916, 0.00012694499999999984, 0.00012687500000000199, 0.00012634699999999888, 0.00012645900000000238, 0.00012655500000000042, 0.0001270139999999982, 0.00012701400000000168, 0.00012719500000000009, 0.00012666700000000045, 0.00012726400000000193, 0.0001262780000000005, 0.00012662500000000174, 0.00012706999999999996, 0.00012726400000000193, 0.0001263329999999993, 0.00012631899999999974, 0.0001266390000000013, 0.0001265970000000026, 0.00012683399999999928, 0.0001270690000000005, 0.0001268329999999998, 0.00012649999999999814, 0.00012676400000000143, 0.00012679200000000057, 0.0001265000000000016, 0.00012676400000000143, 0.00012652800000000075, 0.00012656999999999946, 0.00012630500000000017, 0.0001269300000000008, 0.00012651400000000118]</msg>
<status status="PASS" starttime="20201029 12:44:15.812" endtime="20201029 12:44:15.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.807" endtime="20201029 12:44:15.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.819" endtime="20201029 12:44:15.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.818" endtime="20201029 12:44:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.816" endtime="20201029 12:44:15.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.455" endtime="20201029 12:44:15.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.455" endtime="20201029 12:44:15.840"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.848" endtime="20201029 12:44:15.869"></status>
</kw>
<msg timestamp="20201029 12:44:15.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.847" endtime="20201029 12:44:15.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.871" endtime="20201029 12:44:15.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.873" endtime="20201029 12:44:15.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.844" endtime="20201029 12:44:15.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.842" endtime="20201029 12:44:15.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.882" endtime="20201029 12:44:16.168"></status>
</kw>
<msg timestamp="20201029 12:44:16.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021370375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.881" endtime="20201029 12:44:16.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021370375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021498569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.172" endtime="20201029 12:44:16.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.180" endtime="20201029 12:44:16.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.878" endtime="20201029 12:44:16.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.876" endtime="20201029 12:44:16.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.187" level="INFO">${RESULT} = [{'diff': 0.00012819399999999814}, {'diff': 0.0001275000000000026}, {'diff': 0.0001280829999999976}, {'diff': 0.0001277499999999994}, {'diff': 0.00012823600000000032}, {'diff': 0.0001282499999999999},...</msg>
<status status="PASS" starttime="20201029 12:44:16.184" endtime="20201029 12:44:16.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.192" level="INFO">${ACCURACY} = {'diff': [0.00012819399999999814, 0.0001275000000000026, 0.0001280829999999976, 0.0001277499999999994, 0.00012823600000000032, 0.0001282499999999999, 0.00012799999999999964, 0.00012819500000000109, 0....</msg>
<status status="PASS" starttime="20201029 12:44:16.188" endtime="20201029 12:44:16.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.196" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.195" endtime="20201029 12:44:16.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.199" level="INFO">VALUE: [0.00012819399999999814, 0.0001275000000000026, 0.0001280829999999976, 0.0001277499999999994, 0.00012823600000000032, 0.0001282499999999999, 0.00012799999999999964, 0.00012819500000000109, 0.000127472, 0.0001280690000000015, 0.0001282499999999999, 0.00012761100000000317, 0.00012747299999999948, 0.00012768000000000154, 0.0001278049999999982, 0.0001274170000000012, 0.00012805499999999845, 0.00012799999999999964, 0.00012775000000000286, 0.00012748599999999957, 0.00012737499999999902, 0.0001278049999999982, 0.00012762500000000274, 0.0001281110000000002, 0.00012780600000000114, 0.00012784700000000038, 0.00012755500000000142, 0.00012762499999999927, 0.00012823600000000032, 0.00012806899999999802, 0.0001281390000000028, 0.00012834700000000088, 0.00012758300000000056, 0.00012733399999999978, 0.00012769399999999764, 0.0001276390000000023, 0.0001282499999999999, 0.00012799999999999964, 0.0001276659999999985, 0.00012769399999999764, 0.00012763800000000283, 0.00012754199999999785, 0.00012780600000000114, 0.0001280000000000031, 0.00012802799999999878, 0.0001279590000000004, 0.00012787500000000299, 0.0001277079999999972, 0.0001278889999999991, 0.0001282499999999999]</msg>
<status status="PASS" starttime="20201029 12:44:16.197" endtime="20201029 12:44:16.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.192" endtime="20201029 12:44:16.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.203" endtime="20201029 12:44:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.202" endtime="20201029 12:44:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.201" endtime="20201029 12:44:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.841" endtime="20201029 12:44:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.840" endtime="20201029 12:44:16.224"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.233" endtime="20201029 12:44:16.254"></status>
</kw>
<msg timestamp="20201029 12:44:16.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.231" endtime="20201029 12:44:16.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.255" endtime="20201029 12:44:16.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.258" endtime="20201029 12:44:16.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.229" endtime="20201029 12:44:16.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.226" endtime="20201029 12:44:16.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.266" endtime="20201029 12:44:16.556"></status>
</kw>
<msg timestamp="20201029 12:44:16.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.265" endtime="20201029 12:44:16.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021563514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.560" endtime="20201029 12:44:16.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.568" endtime="20201029 12:44:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.262" endtime="20201029 12:44:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.261" endtime="20201029 12:44:16.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.575" level="INFO">${RESULT} = [{'diff': 0.00012905599999999892}, {'diff': 0.00012833400000000078}, {'diff': 0.00012855599999999842}, {'diff': 0.00012850000000000014}, {'diff': 0.00012904099999999988}, {'diff': 0.000129027999999999...</msg>
<status status="PASS" starttime="20201029 12:44:16.572" endtime="20201029 12:44:16.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.579" level="INFO">${ACCURACY} = {'diff': [0.00012905599999999892, 0.00012833400000000078, 0.00012855599999999842, 0.00012850000000000014, 0.00012904099999999988, 0.00012902799999999978, 0.00012919499999999862, 0.0001290140000000002,...</msg>
<status status="PASS" starttime="20201029 12:44:16.576" endtime="20201029 12:44:16.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.583" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.582" endtime="20201029 12:44:16.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.585" level="INFO">VALUE: [0.00012905599999999892, 0.00012833400000000078, 0.00012855599999999842, 0.00012850000000000014, 0.00012904099999999988, 0.00012902799999999978, 0.00012919499999999862, 0.0001290140000000002, 0.0001287919999999991, 0.00012842999999999882, 0.0001284859999999971, 0.0001286110000000007, 0.00012893100000000227, 0.00012862500000000027, 0.00012894499999999837, 0.0001285560000000019, 0.0001292079999999987, 0.00012872200000000125, 0.00012850000000000014, 0.0001286659999999995, 0.00012848600000000057, 0.00012844500000000134, 0.00012902799999999978, 0.00012895800000000193, 0.00012876399999999996, 0.00012873600000000082, 0.00012842999999999882, 0.00012837500000000002, 0.00012876399999999996, 0.00012894500000000184, 0.00012886100000000095, 0.00012894499999999837, 0.00012833299999999784, 0.00012869500000000159, 0.00012862500000000027, 0.00012881999999999824, 0.0001292500000000009, 0.00012887500000000052, 0.00012850000000000014, 0.00012895799999999846, 0.00012850000000000014, 0.0001289720000000015, 0.00012920800000000218, 0.00012927800000000003, 0.00012924999999999742, 0.00012867999999999907, 0.000128472000000001, 0.0001283330000000013, 0.00012872200000000125, 0.00012829200000000207]</msg>
<status status="PASS" starttime="20201029 12:44:16.584" endtime="20201029 12:44:16.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.579" endtime="20201029 12:44:16.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.590" endtime="20201029 12:44:16.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.589" endtime="20201029 12:44:16.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.588" endtime="20201029 12:44:16.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.225" endtime="20201029 12:44:16.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.224" endtime="20201029 12:44:16.611"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.620" endtime="20201029 12:44:16.642"></status>
</kw>
<msg timestamp="20201029 12:44:16.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.618" endtime="20201029 12:44:16.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.643" endtime="20201029 12:44:16.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.645" endtime="20201029 12:44:16.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.615" endtime="20201029 12:44:16.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.613" endtime="20201029 12:44:16.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.654" endtime="20201029 12:44:16.939"></status>
</kw>
<msg timestamp="20201029 12:44:16.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.653" endtime="20201029 12:44:16.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.943" endtime="20201029 12:44:16.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.951" endtime="20201029 12:44:16.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.650" endtime="20201029 12:44:16.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.649" endtime="20201029 12:44:16.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.958" level="INFO">${RESULT} = [{'diff': 0.00012979100000000063}, {'diff': 0.0001293469999999984}, {'diff': 0.00012986100000000195}, {'diff': 0.00012948600000000157}, {'diff': 0.00012952800000000028}, {'diff': 0.0001293049999999997...</msg>
<status status="PASS" starttime="20201029 12:44:16.954" endtime="20201029 12:44:16.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.962" level="INFO">${ACCURACY} = {'diff': [0.00012979100000000063, 0.0001293469999999984, 0.00012986100000000195, 0.00012948600000000157, 0.00012952800000000028, 0.0001293049999999997, 0.0001297920000000001, 0.00012943100000000277, 0...</msg>
<status status="PASS" starttime="20201029 12:44:16.959" endtime="20201029 12:44:16.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.966" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.965" endtime="20201029 12:44:16.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.968" level="INFO">VALUE: [0.00012979100000000063, 0.0001293469999999984, 0.00012986100000000195, 0.00012948600000000157, 0.00012952800000000028, 0.0001293049999999997, 0.0001297920000000001, 0.00012943100000000277, 0.00013018100000000005, 0.00012995799999999946, 0.00013019499999999962, 0.00013023600000000232, 0.00012986100000000195, 0.0001297500000000014, 0.0001295980000000016, 0.00013015299999999744, 0.00012987500000000152, 0.00012956899999999952, 0.00012998600000000207, 0.00013013899999999787, 0.00012983299999999934, 0.00012962500000000127, 0.00012991700000000023, 0.00012977800000000053, 0.000129472999999998, 0.00012942999999999982, 0.00012959799999999813, 0.00013023600000000232, 0.00012986100000000195, 0.00012970800000000268, 0.00012999999999999817, 0.00013005599999999992, 0.00012949999999999767, 0.00012937499999999755, 0.00013000000000000164, 0.00012941699999999973, 0.00013000000000000164, 0.00012927800000000003, 0.0001295140000000007, 0.00013005599999999992, 0.0001292919999999996, 0.00013022299999999876, 0.0001292919999999996, 0.00012986100000000195, 0.00012941600000000025, 0.00012998600000000207, 0.00012983400000000228, 0.00012979100000000063, 0.00012994400000000336, 0.0001295980000000016]</msg>
<status status="PASS" starttime="20201029 12:44:16.967" endtime="20201029 12:44:16.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.962" endtime="20201029 12:44:16.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.974" endtime="20201029 12:44:16.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.973" endtime="20201029 12:44:16.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.971" endtime="20201029 12:44:16.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.612" endtime="20201029 12:44:16.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.611" endtime="20201029 12:44:16.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.613" endtime="20201029 12:44:16.995"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:38.503" endtime="20201029 12:44:16.995" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.002" endtime="20201029 12:44:17.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.001" endtime="20201029 12:44:17.022"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.035" endtime="20201029 12:44:17.047"></status>
</kw>
<msg timestamp="20201029 12:44:17.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.033" endtime="20201029 12:44:17.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.049" endtime="20201029 12:44:17.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.053" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:17.051" endtime="20201029 12:44:17.053"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:17.031" endtime="20201029 12:44:17.054"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:17.029" endtime="20201029 12:44:17.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.027" endtime="20201029 12:44:17.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:17.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:17.058" endtime="20201029 12:44:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.056" endtime="20201029 12:44:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.026" endtime="20201029 12:44:17.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.026" endtime="20201029 12:44:17.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.060" endtime="20201029 12:44:17.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.024" endtime="20201029 12:44:17.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.023" endtime="20201029 12:44:17.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.999" endtime="20201029 12:44:17.063"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.073" endtime="20201029 12:44:17.088"></status>
</kw>
<msg timestamp="20201029 12:44:17.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.072" endtime="20201029 12:44:17.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.089" endtime="20201029 12:44:17.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.092" endtime="20201029 12:44:17.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.068" endtime="20201029 12:44:17.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.066" endtime="20201029 12:44:17.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.101" endtime="20201029 12:44:17.386"></status>
</kw>
<msg timestamp="20201029 12:44:17.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063450236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063482361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.100" endtime="20201029 12:44:17.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063450236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063482361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.391" endtime="20201029 12:44:17.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.399" endtime="20201029 12:44:17.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.097" endtime="20201029 12:44:17.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.095" endtime="20201029 12:44:17.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.405" level="INFO">${RESULT} = [{'diff': 3.212500000000784e-05}, {'diff': 3.1068999999994684e-05}, {'diff': 3.102800000000239e-05}, {'diff': 3.105500000000205e-05}, {'diff': 3.1040999999995544e-05}, {'diff': 3.108400000000067e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:17.402" endtime="20201029 12:44:17.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.410" level="INFO">${ACCURACY} = {'diff': [3.212500000000784e-05, 3.1068999999994684e-05, 3.102800000000239e-05, 3.105500000000205e-05, 3.1040999999995544e-05, 3.108400000000067e-05, 3.106900000000856e-05, 3.105500000000205e-05, 3.10...</msg>
<status status="PASS" starttime="20201029 12:44:17.406" endtime="20201029 12:44:17.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.415" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.414" endtime="20201029 12:44:17.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.417" level="INFO">VALUE: [3.212500000000784e-05, 3.1068999999994684e-05, 3.102800000000239e-05, 3.105500000000205e-05, 3.1040999999995544e-05, 3.108400000000067e-05, 3.106900000000856e-05, 3.105500000000205e-05, 3.106900000000856e-05, 3.106999999999416e-05, 3.105500000000205e-05, 3.106999999999416e-05, 3.1070000000008036e-05, 3.102799999998851e-05, 3.1068999999994684e-05, 3.105599999998765e-05, 3.1070000000008036e-05, 3.105500000000205e-05, 3.108400000000067e-05, 3.1070000000008036e-05, 3.105600000000153e-05, 3.106900000000856e-05, 3.108400000000067e-05, 3.105500000000205e-05, 3.108300000000119e-05, 3.105600000000153e-05, 3.098599999999674e-05, 3.105500000000205e-05, 3.106999999999416e-05, 3.112500000000684e-05, 3.108300000000119e-05, 3.104100000000942e-05, 3.105600000000153e-05, 3.108300000000119e-05, 3.102800000000239e-05, 3.102800000000239e-05, 3.106900000000856e-05, 3.108300000000119e-05, 3.1068999999994684e-05, 3.1042000000008896e-05, 3.106999999999416e-05, 3.108300000000119e-05, 3.1068999999994684e-05, 3.106900000000856e-05, 3.1070000000008036e-05, 3.098599999999674e-05, 3.105500000000205e-05, 3.105600000000153e-05, 3.10979999999933e-05, 3.1042000000008896e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.416" endtime="20201029 12:44:17.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.410" endtime="20201029 12:44:17.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.422" endtime="20201029 12:44:17.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.420" endtime="20201029 12:44:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.419" endtime="20201029 12:44:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.064" endtime="20201029 12:44:17.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.064" endtime="20201029 12:44:17.442"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.451" endtime="20201029 12:44:17.466"></status>
</kw>
<msg timestamp="20201029 12:44:17.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.450" endtime="20201029 12:44:17.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.467" endtime="20201029 12:44:17.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.470" endtime="20201029 12:44:17.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.447" endtime="20201029 12:44:17.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.445" endtime="20201029 12:44:17.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.479" endtime="20201029 12:44:17.764"></status>
</kw>
<msg timestamp="20201029 12:44:17.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.477" endtime="20201029 12:44:17.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.769" endtime="20201029 12:44:17.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.777" endtime="20201029 12:44:17.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.475" endtime="20201029 12:44:17.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.473" endtime="20201029 12:44:17.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.783" level="INFO">${RESULT} = [{'diff': 3.211100000000133e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.106900000000162e-05}, {'diff': 3.1054999999998584e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.1040999999999014e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:17.780" endtime="20201029 12:44:17.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.788" level="INFO">${ACCURACY} = {'diff': [3.211100000000133e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.10700000000011e-05, 3.1040999999999014e-05, 3.101399999999935e-05, 3.105600000000153e-05, 3.11...</msg>
<status status="PASS" starttime="20201029 12:44:17.784" endtime="20201029 12:44:17.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.793" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.792" endtime="20201029 12:44:17.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.795" level="INFO">VALUE: [3.211100000000133e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.10700000000011e-05, 3.1040999999999014e-05, 3.101399999999935e-05, 3.105600000000153e-05, 3.11249999999999e-05, 3.1068999999998154e-05, 3.111100000000033e-05, 3.1054999999998584e-05, 3.1082999999997724e-05, 3.106900000000162e-05, 3.113900000000294e-05, 3.097200000000064e-05, 3.11249999999999e-05, 3.105599999999806e-05, 3.1054999999998584e-05, 3.106900000000162e-05, 3.106999999999763e-05, 3.104200000000196e-05, 3.104199999999849e-05, 3.1138e-05, 3.1068999999998154e-05, 3.105500000000205e-05, 3.1054999999998584e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.106999999999763e-05, 3.108400000000067e-05, 3.105500000000205e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.105600000000153e-05, 3.104200000000196e-05, 3.104200000000196e-05, 3.105600000000153e-05, 3.099999999999978e-05, 3.105500000000205e-05, 3.10700000000011e-05, 3.105500000000205e-05, 3.1054999999998584e-05, 3.1040999999999014e-05, 3.109700000000076e-05, 3.1054999999998584e-05, 3.1138e-05, 3.108300000000119e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.794" endtime="20201029 12:44:17.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.789" endtime="20201029 12:44:17.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.800" endtime="20201029 12:44:17.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.798" endtime="20201029 12:44:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.797" endtime="20201029 12:44:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.443" endtime="20201029 12:44:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.443" endtime="20201029 12:44:17.820"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.829" endtime="20201029 12:44:17.844"></status>
</kw>
<msg timestamp="20201029 12:44:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.828" endtime="20201029 12:44:17.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.845" endtime="20201029 12:44:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.848" endtime="20201029 12:44:17.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.825" endtime="20201029 12:44:17.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.823" endtime="20201029 12:44:17.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.857" endtime="20201029 12:44:18.144"></status>
</kw>
<msg timestamp="20201029 12:44:18.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.855" endtime="20201029 12:44:18.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022021319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.148" endtime="20201029 12:44:18.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.156" endtime="20201029 12:44:18.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.853" endtime="20201029 12:44:18.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.851" endtime="20201029 12:44:18.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.163" level="INFO">${RESULT} = [{'diff': 3.211100000000133e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.111100000000033e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.106900000000162e-05}, {'diff': 3.1054999999998584e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:18.159" endtime="20201029 12:44:18.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.167" level="INFO">${ACCURACY} = {'diff': [3.211100000000133e-05, 3.1068999999998154e-05, 3.111100000000033e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.108400000000067e-05, 3.109700000000076e-05, 3.1...</msg>
<status status="PASS" starttime="20201029 12:44:18.163" endtime="20201029 12:44:18.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.171" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.170" endtime="20201029 12:44:18.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.173" level="INFO">VALUE: [3.211100000000133e-05, 3.1068999999998154e-05, 3.111100000000033e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.1054999999998584e-05, 3.108400000000067e-05, 3.109700000000076e-05, 3.10700000000011e-05, 3.104200000000196e-05, 3.1054999999998584e-05, 3.104199999999849e-05, 3.104199999999849e-05, 3.1068999999998154e-05, 3.11249999999999e-05, 3.104199999999849e-05, 3.105599999999806e-05, 3.10700000000011e-05, 3.106999999999763e-05, 3.106900000000162e-05, 3.105500000000205e-05, 3.105600000000153e-05, 3.106900000000162e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.109700000000076e-05, 3.106900000000162e-05, 3.104200000000196e-05, 3.10700000000011e-05, 3.106900000000162e-05, 3.106900000000162e-05, 3.105500000000205e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.108300000000119e-05, 3.1026999999999444e-05, 3.106900000000162e-05, 3.105599999999806e-05, 3.1054999999998584e-05, 3.1054999999998584e-05, 3.104200000000196e-05, 3.104199999999849e-05, 3.108300000000119e-05, 3.106999999999763e-05, 3.111100000000033e-05, 3.105600000000153e-05, 3.105599999999806e-05, 3.1040999999999014e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.172" endtime="20201029 12:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.167" endtime="20201029 12:44:18.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.178" endtime="20201029 12:44:18.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.176" endtime="20201029 12:44:18.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.175" endtime="20201029 12:44:18.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.821" endtime="20201029 12:44:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.821" endtime="20201029 12:44:18.199"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.208" endtime="20201029 12:44:18.223"></status>
</kw>
<msg timestamp="20201029 12:44:18.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.206" endtime="20201029 12:44:18.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.224" endtime="20201029 12:44:18.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.227" endtime="20201029 12:44:18.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.203" endtime="20201029 12:44:18.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.201" endtime="20201029 12:44:18.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.236" endtime="20201029 12:44:18.520"></status>
</kw>
<msg timestamp="20201029 12:44:18.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.234" endtime="20201029 12:44:18.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022811208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022843375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.525" endtime="20201029 12:44:18.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.533" endtime="20201029 12:44:18.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.232" endtime="20201029 12:44:18.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.230" endtime="20201029 12:44:18.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.539" level="INFO">${RESULT} = [{'diff': 3.216699999999961e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.1040999999999014e-05}, {'diff': 3.105599999999806e-05}, {'diff': 3.108400000000067e-05}, {'diff': 3.105500000000205e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:18.536" endtime="20201029 12:44:18.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.543" level="INFO">${ACCURACY} = {'diff': [3.216699999999961e-05, 3.1068999999998154e-05, 3.1040999999999014e-05, 3.105599999999806e-05, 3.108400000000067e-05, 3.105500000000205e-05, 3.106900000000162e-05, 3.101399999999935e-05, 3.10...</msg>
<status status="PASS" starttime="20201029 12:44:18.540" endtime="20201029 12:44:18.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.548" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.547" endtime="20201029 12:44:18.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.550" level="INFO">VALUE: [3.216699999999961e-05, 3.1068999999998154e-05, 3.1040999999999014e-05, 3.105599999999806e-05, 3.108400000000067e-05, 3.105500000000205e-05, 3.106900000000162e-05, 3.101399999999935e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.106900000000162e-05, 3.108300000000119e-05, 3.1068999999998154e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.104200000000196e-05, 3.111100000000033e-05, 3.11249999999999e-05, 3.105600000000153e-05, 3.108400000000067e-05, 3.105600000000153e-05, 3.1054999999998584e-05, 3.099999999999978e-05, 3.106900000000162e-05, 3.105500000000205e-05, 3.106999999999763e-05, 3.1068999999998154e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.10839999999972e-05, 3.106999999999763e-05, 3.1054999999998584e-05, 3.099999999999978e-05, 3.1054999999998584e-05, 3.108400000000067e-05, 3.10700000000011e-05, 3.102799999999892e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.106999999999763e-05, 3.104200000000196e-05, 3.10700000000011e-05, 3.106999999999763e-05, 3.105500000000205e-05, 3.10700000000011e-05, 3.105500000000205e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.549" endtime="20201029 12:44:18.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.544" endtime="20201029 12:44:18.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.556" endtime="20201029 12:44:18.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.555" endtime="20201029 12:44:18.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.553" endtime="20201029 12:44:18.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.200" endtime="20201029 12:44:18.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.199" endtime="20201029 12:44:18.577"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.585" endtime="20201029 12:44:18.600"></status>
</kw>
<msg timestamp="20201029 12:44:18.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.584" endtime="20201029 12:44:18.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.601" endtime="20201029 12:44:18.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.604" endtime="20201029 12:44:18.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.581" endtime="20201029 12:44:18.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.579" endtime="20201029 12:44:18.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.612" endtime="20201029 12:44:18.897"></status>
</kw>
<msg timestamp="20201029 12:44:18.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.611" endtime="20201029 12:44:18.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.901" endtime="20201029 12:44:18.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.910" endtime="20201029 12:44:18.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.608" endtime="20201029 12:44:18.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.607" endtime="20201029 12:44:18.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.916" level="INFO">${RESULT} = [{'diff': 3.2138000000001e-05}, {'diff': 3.104199999999849e-05}, {'diff': 3.105599999999806e-05}, {'diff': 3.105600000000153e-05}, {'diff': 3.1068999999998154e-05}, {'diff': 3.10700000000011e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:18.913" endtime="20201029 12:44:18.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.921" level="INFO">${ACCURACY} = {'diff': [3.2138000000001e-05, 3.104199999999849e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.1096999...</msg>
<status status="PASS" starttime="20201029 12:44:18.917" endtime="20201029 12:44:18.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.925" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.924" endtime="20201029 12:44:18.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.928" level="INFO">VALUE: [3.2138000000001e-05, 3.104199999999849e-05, 3.105599999999806e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.1096999999997293e-05, 3.108300000000119e-05, 3.1026999999999444e-05, 3.1082999999997724e-05, 3.1138e-05, 3.10700000000011e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.10700000000011e-05, 3.10700000000011e-05, 3.108300000000119e-05, 3.105500000000205e-05, 3.105600000000153e-05, 3.1068999999998154e-05, 3.106900000000162e-05, 3.104199999999849e-05, 3.104199999999849e-05, 3.105500000000205e-05, 3.10839999999972e-05, 3.1054999999998584e-05, 3.102799999999892e-05, 3.10700000000011e-05, 3.106999999999763e-05, 3.109700000000076e-05, 3.1040999999999014e-05, 3.109700000000076e-05, 3.108300000000119e-05, 3.10700000000011e-05, 3.105599999999806e-05, 3.105599999999806e-05, 3.1068999999998154e-05, 3.105600000000153e-05, 3.106999999999763e-05, 3.108400000000067e-05, 3.109700000000076e-05, 3.105600000000153e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.926" endtime="20201029 12:44:18.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.922" endtime="20201029 12:44:18.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.933" endtime="20201029 12:44:18.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.931" endtime="20201029 12:44:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.930" endtime="20201029 12:44:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.578" endtime="20201029 12:44:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.577" endtime="20201029 12:44:18.953"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.962" endtime="20201029 12:44:18.977"></status>
</kw>
<msg timestamp="20201029 12:44:18.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.961" endtime="20201029 12:44:18.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.978" endtime="20201029 12:44:18.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.981" endtime="20201029 12:44:18.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.958" endtime="20201029 12:44:18.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.956" endtime="20201029 12:44:18.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.989" endtime="20201029 12:44:19.275"></status>
</kw>
<msg timestamp="20201029 12:44:19.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.988" endtime="20201029 12:44:19.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021478861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.279" endtime="20201029 12:44:19.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.287" endtime="20201029 12:44:19.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.985" endtime="20201029 12:44:19.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.984" endtime="20201029 12:44:19.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.294" level="INFO">${RESULT} = [{'diff': 3.211100000000133e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.108300000000119e-05}, {'diff': 3.6068999999999685e-05}, {'diff': 3.6110999999998394e-05...</msg>
<status status="PASS" starttime="20201029 12:44:19.291" endtime="20201029 12:44:19.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.298" level="INFO">${ACCURACY} = {'diff': [3.211100000000133e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.108300000000119e-05, 3.6068999999999685e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.611199999999787e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:44:19.295" endtime="20201029 12:44:19.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.302" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.301" endtime="20201029 12:44:19.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.305" level="INFO">VALUE: [3.211100000000133e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.108300000000119e-05, 3.6068999999999685e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.611199999999787e-05, 3.6097000000002294e-05, 3.10700000000011e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6083000000002724e-05, 3.6124999999997964e-05, 3.105500000000205e-05, 3.10700000000011e-05, 3.618000000000024e-05, 3.608399999999873e-05, 3.6110999999998394e-05, 3.6125000000001434e-05, 3.10700000000011e-05, 3.6110999999998394e-05, 3.6097000000002294e-05, 3.604200000000002e-05, 3.108400000000067e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.098600000000021e-05, 3.6125000000001434e-05, 3.6096999999998824e-05, 3.6139000000001004e-05, 3.6110999999998394e-05, 3.1054999999998584e-05, 3.6097000000002294e-05, 3.105500000000205e-05, 3.6111000000001864e-05, 3.101400000000282e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.105500000000205e-05, 3.108300000000119e-05, 3.6096999999998824e-05, 3.1068999999998154e-05, 3.6111000000001864e-05, 3.6068999999999685e-05, 3.6096999999998824e-05, 3.6111000000001864e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.303" endtime="20201029 12:44:19.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.299" endtime="20201029 12:44:19.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.310" endtime="20201029 12:44:19.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.308" endtime="20201029 12:44:19.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.307" endtime="20201029 12:44:19.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.954" endtime="20201029 12:44:19.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.954" endtime="20201029 12:44:19.330"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.339" endtime="20201029 12:44:19.355"></status>
</kw>
<msg timestamp="20201029 12:44:19.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.337" endtime="20201029 12:44:19.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.356" endtime="20201029 12:44:19.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.359" endtime="20201029 12:44:19.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.335" endtime="20201029 12:44:19.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.333" endtime="20201029 12:44:19.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.368" endtime="20201029 12:44:19.654"></status>
</kw>
<msg timestamp="20201029 12:44:19.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:19.366" endtime="20201029 12:44:19.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022545819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:19.658" endtime="20201029 12:44:19.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.666" endtime="20201029 12:44:19.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.364" endtime="20201029 12:44:19.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.362" endtime="20201029 12:44:19.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.673" level="INFO">${RESULT} = [{'diff': 3.7180999999997244e-05}, {'diff': 3.6082999999999255e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6096999999998824e-...</msg>
<status status="PASS" starttime="20201029 12:44:19.670" endtime="20201029 12:44:19.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.677" level="INFO">${ACCURACY} = {'diff': [3.7180999999997244e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05...</msg>
<status status="PASS" starttime="20201029 12:44:19.674" endtime="20201029 12:44:19.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.681" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.680" endtime="20201029 12:44:19.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.684" level="INFO">VALUE: [3.7180999999997244e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6068999999999685e-05, 3.6110999999998394e-05, 3.6153000000000574e-05, 3.6124999999997964e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6082999999999255e-05, 3.6110999999998394e-05, 3.6138999999997534e-05, 3.6124999999997964e-05, 3.6082999999999255e-05, 3.6124999999997964e-05, 3.619500000000275e-05, 3.6082999999999255e-05, 3.6111000000001864e-05, 3.6152999999997104e-05, 3.616600000000067e-05, 3.6055000000000115e-05, 3.618000000000024e-05, 3.6167000000000143e-05, 3.6082999999999255e-05, 3.6125000000001434e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6083000000002724e-05, 3.60979999999983e-05, 3.6111000000001864e-05, 3.6111000000001864e-05, 3.60979999999983e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.6096999999998824e-05, 3.6097000000002294e-05, 3.6152999999997104e-05, 3.6096999999998824e-05, 3.6097000000002294e-05, 3.6097000000002294e-05, 3.6097000000002294e-05, 3.6139000000001004e-05, 3.6139000000001004e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.682" endtime="20201029 12:44:19.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.678" endtime="20201029 12:44:19.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.699" endtime="20201029 12:44:19.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.697" endtime="20201029 12:44:19.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.695" endtime="20201029 12:44:19.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.331" endtime="20201029 12:44:19.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.331" endtime="20201029 12:44:19.720"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.729" endtime="20201029 12:44:19.743"></status>
</kw>
<msg timestamp="20201029 12:44:19.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.727" endtime="20201029 12:44:19.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.745" endtime="20201029 12:44:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.748" endtime="20201029 12:44:19.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.725" endtime="20201029 12:44:19.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.723" endtime="20201029 12:44:19.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.756" endtime="20201029 12:44:20.044"></status>
</kw>
<msg timestamp="20201029 12:44:20.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:44:19.755" endtime="20201029 12:44:20.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021707208, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:44:20.048" endtime="20201029 12:44:20.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.056" endtime="20201029 12:44:20.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.752" endtime="20201029 12:44:20.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.751" endtime="20201029 12:44:20.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.062" level="INFO">${RESULT} = [{'diff': 3.720800000000038e-05}, {'diff': 3.606999999999916e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.60979999999983e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6096999999998824e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:20.059" endtime="20201029 12:44:20.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.113" level="INFO">${ACCURACY} = {'diff': [3.720800000000038e-05, 3.606999999999916e-05, 3.6125000000001434e-05, 3.60979999999983e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6153000000000574e-05, 3.6138999999997534e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:20.063" endtime="20201029 12:44:20.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.117" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.116" endtime="20201029 12:44:20.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.120" level="INFO">VALUE: [3.720800000000038e-05, 3.606999999999916e-05, 3.6125000000001434e-05, 3.60979999999983e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6153000000000574e-05, 3.6138999999997534e-05, 3.6110999999998394e-05, 3.6125000000001434e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.609800000000177e-05, 3.6097000000002294e-05, 3.6167000000000143e-05, 3.6124999999997964e-05, 3.611199999999787e-05, 3.6125000000001434e-05, 3.6124999999997964e-05, 3.6111000000001864e-05, 3.6068999999999685e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6125000000001434e-05, 3.6111000000001864e-05, 3.6124999999997964e-05, 3.6125000000001434e-05, 3.605599999999959e-05, 3.6055000000000115e-05, 3.6110999999998394e-05, 3.6180999999999713e-05, 3.6083000000002724e-05, 3.619400000000328e-05, 3.6110999999998394e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.606999999999916e-05, 3.6110999999998394e-05, 3.6111000000001864e-05, 3.609800000000177e-05, 3.6110999999998394e-05, 3.6167000000000143e-05, 3.6124999999997964e-05, 3.608399999999873e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6068999999999685e-05, 3.6110999999998394e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.118" endtime="20201029 12:44:20.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.114" endtime="20201029 12:44:20.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.124" endtime="20201029 12:44:20.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.123" endtime="20201029 12:44:20.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.122" endtime="20201029 12:44:20.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.721" endtime="20201029 12:44:20.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.721" endtime="20201029 12:44:20.145"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.155" endtime="20201029 12:44:20.170"></status>
</kw>
<msg timestamp="20201029 12:44:20.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.153" endtime="20201029 12:44:20.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.171" endtime="20201029 12:44:20.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.174" endtime="20201029 12:44:20.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.150" endtime="20201029 12:44:20.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.148" endtime="20201029 12:44:20.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.183" endtime="20201029 12:44:20.469"></status>
</kw>
<msg timestamp="20201029 12:44:20.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.182" endtime="20201029 12:44:20.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023233819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.473" endtime="20201029 12:44:20.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.482" endtime="20201029 12:44:20.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.179" endtime="20201029 12:44:20.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.178" endtime="20201029 12:44:20.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.488" level="INFO">${RESULT} = [{'diff': 3.7153000000001574e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.609800000000177e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.6111000000001864e-0...</msg>
<status status="PASS" starttime="20201029 12:44:20.485" endtime="20201029 12:44:20.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.492" level="INFO">${ACCURACY} = {'diff': [3.7153000000001574e-05, 3.6125000000001434e-05, 3.609800000000177e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6082999999999255e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:20.489" endtime="20201029 12:44:20.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.497" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.496" endtime="20201029 12:44:20.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.500" level="INFO">VALUE: [3.7153000000001574e-05, 3.6125000000001434e-05, 3.609800000000177e-05, 3.6096999999998824e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6082999999999255e-05, 3.605599999999959e-05, 3.6082999999999255e-05, 3.6111000000001864e-05, 3.6139000000001004e-05, 3.60979999999983e-05, 3.6096999999998824e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.6125000000001434e-05, 3.613800000000153e-05, 3.6111000000001864e-05, 3.6125000000001434e-05, 3.6097000000002294e-05, 3.6153000000000574e-05, 3.6125000000001434e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.611200000000134e-05, 3.6083000000002724e-05, 3.619399999999981e-05, 3.606999999999916e-05, 3.6110999999998394e-05, 3.60840000000022e-05, 3.6055000000000115e-05, 3.6097000000002294e-05, 3.6111000000001864e-05, 3.601399999999741e-05, 3.6125000000001434e-05, 3.615199999999763e-05, 3.6124999999997964e-05, 3.6097000000002294e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.6110999999998394e-05, 3.6125000000001434e-05, 3.6125000000001434e-05, 3.6153000000000574e-05, 3.6096999999998824e-05, 3.6124999999997964e-05, 3.6111000000001864e-05, 3.6125000000001434e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.498" endtime="20201029 12:44:20.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.493" endtime="20201029 12:44:20.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.505" endtime="20201029 12:44:20.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.503" endtime="20201029 12:44:20.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.502" endtime="20201029 12:44:20.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.146" endtime="20201029 12:44:20.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.145" endtime="20201029 12:44:20.525"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.534" endtime="20201029 12:44:20.549"></status>
</kw>
<msg timestamp="20201029 12:44:20.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.532" endtime="20201029 12:44:20.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.550" endtime="20201029 12:44:20.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.553" endtime="20201029 12:44:20.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.530" endtime="20201029 12:44:20.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.528" endtime="20201029 12:44:20.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.561" endtime="20201029 12:44:20.851"></status>
</kw>
<msg timestamp="20201029 12:44:20.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:20.560" endtime="20201029 12:44:20.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:20.860" endtime="20201029 12:44:20.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.876" endtime="20201029 12:44:20.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.557" endtime="20201029 12:44:20.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.556" endtime="20201029 12:44:20.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.891" level="INFO">${RESULT} = [{'diff': 3.719400000000081e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.611199999999787e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.6111000000001864e-05}, {'diff': 3.6110999999998394e-05...</msg>
<status status="PASS" starttime="20201029 12:44:20.884" endtime="20201029 12:44:20.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.900" level="INFO">${ACCURACY} = {'diff': [3.719400000000081e-05, 3.6110999999998394e-05, 3.611199999999787e-05, 3.6111000000001864e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.616600000000067e-05, 3.6110999999998394e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:44:20.893" endtime="20201029 12:44:20.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.905" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.904" endtime="20201029 12:44:20.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.908" level="INFO">VALUE: [3.719400000000081e-05, 3.6110999999998394e-05, 3.611199999999787e-05, 3.6111000000001864e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.616600000000067e-05, 3.6110999999998394e-05, 3.60979999999983e-05, 3.6097000000002294e-05, 3.6124999999997964e-05, 3.6111000000001864e-05, 3.6097000000002294e-05, 3.6111000000001864e-05, 3.6055000000000115e-05, 3.611200000000134e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.6096999999998824e-05, 3.61659999999972e-05, 3.6041000000000545e-05, 3.6125000000001434e-05, 3.6110999999998394e-05, 3.6055000000000115e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 3.6111000000001864e-05, 3.6111000000001864e-05, 3.609800000000177e-05, 3.6139000000001004e-05, 3.6096999999998824e-05, 3.6111000000001864e-05, 3.608399999999873e-05, 3.613799999999806e-05, 3.6110999999998394e-05, 3.6111000000001864e-05, 3.605599999999959e-05, 3.6110999999998394e-05, 3.611200000000134e-05, 3.609800000000177e-05, 3.6055000000000115e-05, 3.6125000000001434e-05, 3.6083000000002724e-05, 3.6111000000001864e-05, 3.6110999999998394e-05, 3.6111000000001864e-05, 3.605599999999959e-05, 3.604200000000002e-05, 3.61659999999972e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.906" endtime="20201029 12:44:20.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.901" endtime="20201029 12:44:20.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.913" endtime="20201029 12:44:20.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.911" endtime="20201029 12:44:20.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.910" endtime="20201029 12:44:20.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.526" endtime="20201029 12:44:20.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.526" endtime="20201029 12:44:20.934"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.942" endtime="20201029 12:44:20.957"></status>
</kw>
<msg timestamp="20201029 12:44:20.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.941" endtime="20201029 12:44:20.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.959" endtime="20201029 12:44:20.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.961" endtime="20201029 12:44:20.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.938" endtime="20201029 12:44:20.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.936" endtime="20201029 12:44:20.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.970" endtime="20201029 12:44:21.258"></status>
</kw>
<msg timestamp="20201029 12:44:21.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.969" endtime="20201029 12:44:21.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021683833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021726056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.262" endtime="20201029 12:44:21.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.270" endtime="20201029 12:44:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.966" endtime="20201029 12:44:21.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.964" endtime="20201029 12:44:21.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.277" level="INFO">${RESULT} = [{'diff': 4.2223000000000954e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6138999999997534e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 3.618000000000024e-05}, {'diff': 3.611200000000134e-05...</msg>
<status status="PASS" starttime="20201029 12:44:21.274" endtime="20201029 12:44:21.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.281" level="INFO">${ACCURACY} = {'diff': [4.2223000000000954e-05, 3.6110999999998394e-05, 3.6138999999997534e-05, 4.1138999999999065e-05, 3.618000000000024e-05, 3.611200000000134e-05, 4.1138999999999065e-05, 4.1167000000001674e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:21.278" endtime="20201029 12:44:21.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.285" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.284" endtime="20201029 12:44:21.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.288" level="INFO">VALUE: [4.2223000000000954e-05, 3.6110999999998394e-05, 3.6138999999997534e-05, 4.1138999999999065e-05, 3.618000000000024e-05, 3.611200000000134e-05, 4.1138999999999065e-05, 4.1167000000001674e-05, 3.6110999999998394e-05, 3.6110999999998394e-05, 4.115199999999916e-05, 4.119400000000134e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 3.6124999999997964e-05, 4.1138999999999065e-05, 4.115200000000263e-05, 4.1124999999999495e-05, 3.6111000000001864e-05, 4.1139000000002535e-05, 4.1153000000002105e-05, 4.115200000000263e-05, 4.119399999999787e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 3.6110999999998394e-05, 4.1153000000002105e-05, 3.6097000000002294e-05, 4.1153000000002105e-05, 4.115199999999916e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4.1152999999998635e-05, 3.6082999999999255e-05, 4.1138999999999065e-05, 3.6096999999998824e-05, 4.1138999999999065e-05, 3.6097000000002294e-05, 4.1139000000002535e-05, 4.1153000000002105e-05, 4.1153000000002105e-05, 3.6125000000001434e-05, 4.1124999999999495e-05, 4.1110999999999925e-05, 3.6097000000002294e-05, 4.11119999999994e-05, 3.608399999999873e-05, 4.115200000000263e-05, 3.6097000000002294e-05, 3.6111000000001864e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.286" endtime="20201029 12:44:21.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.282" endtime="20201029 12:44:21.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.292" endtime="20201029 12:44:21.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.291" endtime="20201029 12:44:21.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.290" endtime="20201029 12:44:21.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.935" endtime="20201029 12:44:21.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.934" endtime="20201029 12:44:21.313"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.322" endtime="20201029 12:44:21.338"></status>
</kw>
<msg timestamp="20201029 12:44:21.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.320" endtime="20201029 12:44:21.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.339" endtime="20201029 12:44:21.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.342" endtime="20201029 12:44:21.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.318" endtime="20201029 12:44:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.316" endtime="20201029 12:44:21.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.351" endtime="20201029 12:44:21.639"></status>
</kw>
<msg timestamp="20201029 12:44:21.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.349" endtime="20201029 12:44:21.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022567819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.643" endtime="20201029 12:44:21.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.652" endtime="20201029 12:44:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.346" endtime="20201029 12:44:21.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.345" endtime="20201029 12:44:21.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.658" level="INFO">${RESULT} = [{'diff': 4.213800000000059e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.108400000000026e-05}, {'diff': 4.116599999999873e-05}, {'diff': 4.1125000000002965e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:21.655" endtime="20201029 12:44:21.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.662" level="INFO">${ACCURACY} = {'diff': [4.213800000000059e-05, 4.1152999999998635e-05, 4.1124999999999495e-05, 4.108400000000026e-05, 4.116599999999873e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:21.659" endtime="20201029 12:44:21.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.667" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.666" endtime="20201029 12:44:21.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.670" level="INFO">VALUE: [4.213800000000059e-05, 4.1152999999998635e-05, 4.1124999999999495e-05, 4.108400000000026e-05, 4.116599999999873e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4.1124999999999495e-05, 4.10980000000033e-05, 4.1166999999998205e-05, 4.120799999999744e-05, 4.1124999999999495e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1124999999999495e-05, 4.1125000000002965e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1139000000002535e-05, 4.1167000000001674e-05, 4.1125000000002965e-05, 4.119400000000134e-05, 4.118000000000177e-05, 4.120800000000091e-05, 4.1181000000001244e-05, 4.120800000000091e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1124999999999495e-05, 4.1152999999998635e-05, 4.118000000000177e-05, 4.1167000000001674e-05, 4.1181000000001244e-05, 4.116599999999873e-05, 4.1138999999999065e-05, 4.122200000000048e-05, 4.115199999999916e-05, 4.1110999999999925e-05, 4.1097000000000355e-05, 4.1167000000001674e-05, 4.1152999999998635e-05, 4.1181000000001244e-05, 4.1139000000002535e-05, 4.1167000000001674e-05, 4.1152999999998635e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.668" endtime="20201029 12:44:21.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.663" endtime="20201029 12:44:21.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.675" endtime="20201029 12:44:21.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.673" endtime="20201029 12:44:21.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.672" endtime="20201029 12:44:21.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.314" endtime="20201029 12:44:21.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.313" endtime="20201029 12:44:21.695"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.704" endtime="20201029 12:44:21.720"></status>
</kw>
<msg timestamp="20201029 12:44:21.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.703" endtime="20201029 12:44:21.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.722" endtime="20201029 12:44:21.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.725" endtime="20201029 12:44:21.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.700" endtime="20201029 12:44:21.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.698" endtime="20201029 12:44:21.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.738" endtime="20201029 12:44:22.024"></status>
</kw>
<msg timestamp="20201029 12:44:22.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.735" endtime="20201029 12:44:22.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021728333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021770542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.028" endtime="20201029 12:44:22.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.036" endtime="20201029 12:44:22.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.732" endtime="20201029 12:44:22.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.730" endtime="20201029 12:44:22.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.043" level="INFO">${RESULT} = [{'diff': 4.2209000000001384e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.115199999999916e-05}, {'diff': 4.1195000000000814e-05}, {'diff': 4.1083000000000786e-05}, {'diff': 4.1139000000002535e-0...</msg>
<status status="PASS" starttime="20201029 12:44:22.040" endtime="20201029 12:44:22.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.048" level="INFO">${ACCURACY} = {'diff': [4.2209000000001384e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4.1195000000000814e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.1152999999998635e-05, 4.11660000000022e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:44:22.044" endtime="20201029 12:44:22.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.052" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.051" endtime="20201029 12:44:22.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.054" level="INFO">VALUE: [4.2209000000001384e-05, 4.1138999999999065e-05, 4.115199999999916e-05, 4.1195000000000814e-05, 4.1083000000000786e-05, 4.1139000000002535e-05, 4.1152999999998635e-05, 4.11660000000022e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1166999999998205e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.120799999999744e-05, 4.1166999999998205e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1125000000002965e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.1153000000002105e-05, 4.1139000000002535e-05, 4.1139000000002535e-05, 4.1166999999998205e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1167000000001674e-05, 4.1138999999999065e-05, 4.1195000000000814e-05, 4.1139000000002535e-05, 4.113799999999959e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1195000000000814e-05, 4.1153000000002105e-05, 4.1124999999999495e-05, 4.1153000000002105e-05, 4.1124999999999495e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.053" endtime="20201029 12:44:22.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.049" endtime="20201029 12:44:22.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.059" endtime="20201029 12:44:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.058" endtime="20201029 12:44:22.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.057" endtime="20201029 12:44:22.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.696" endtime="20201029 12:44:22.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.696" endtime="20201029 12:44:22.080"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.089" endtime="20201029 12:44:22.104"></status>
</kw>
<msg timestamp="20201029 12:44:22.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.087" endtime="20201029 12:44:22.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.105" endtime="20201029 12:44:22.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.108" endtime="20201029 12:44:22.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.084" endtime="20201029 12:44:22.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.082" endtime="20201029 12:44:22.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.117" endtime="20201029 12:44:22.404"></status>
</kw>
<msg timestamp="20201029 12:44:22.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.115" endtime="20201029 12:44:22.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021619944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.409" endtime="20201029 12:44:22.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.419" endtime="20201029 12:44:22.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.113" endtime="20201029 12:44:22.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.111" endtime="20201029 12:44:22.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.426" level="INFO">${RESULT} = [{'diff': 4.2195000000001814e-05}, {'diff': 4.11660000000022e-05}, {'diff': 4.1124999999999495e-05}, {'diff': 4.116599999999873e-05}, {'diff': 4.1167000000001674e-05}, {'diff': 4.1167000000001674e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:22.422" endtime="20201029 12:44:22.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.430" level="INFO">${ACCURACY} = {'diff': [4.2195000000001814e-05, 4.11660000000022e-05, 4.1124999999999495e-05, 4.116599999999873e-05, 4.1167000000001674e-05, 4.1167000000001674e-05, 4.1195000000000814e-05, 4.115199999999916e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:22.426" endtime="20201029 12:44:22.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.434" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.433" endtime="20201029 12:44:22.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.436" level="INFO">VALUE: [4.2195000000001814e-05, 4.11660000000022e-05, 4.1124999999999495e-05, 4.116599999999873e-05, 4.1167000000001674e-05, 4.1167000000001674e-05, 4.1195000000000814e-05, 4.115199999999916e-05, 4.1208999999996915e-05, 4.1152999999998635e-05, 4.1167000000001674e-05, 4.1138999999999065e-05, 4.1181000000001244e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.11660000000022e-05, 4.1167000000001674e-05, 4.1166999999998205e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.1180999999997775e-05, 4.1110999999999925e-05, 4.1195000000000814e-05, 4.113799999999959e-05, 4.1167000000001674e-05, 4.1181000000001244e-05, 4.123600000000005e-05, 4.1152999999998635e-05, 4.1139000000002535e-05, 4.1152999999998635e-05, 4.1139000000002535e-05, 4.1124999999999495e-05, 4.1195000000000814e-05, 4.116599999999873e-05, 4.1139000000002535e-05, 4.1166999999998205e-05, 4.1110999999999925e-05, 4.1167000000001674e-05, 4.1110999999999925e-05, 4.1152999999998635e-05, 4.116599999999873e-05, 4.1152999999998635e-05, 4.108400000000026e-05, 4.1152999999998635e-05, 4.122200000000048e-05, 4.1139000000002535e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1166999999998205e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.435" endtime="20201029 12:44:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.430" endtime="20201029 12:44:22.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.441" endtime="20201029 12:44:22.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.440" endtime="20201029 12:44:22.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.439" endtime="20201029 12:44:22.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.081" endtime="20201029 12:44:22.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.080" endtime="20201029 12:44:22.462"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.471" endtime="20201029 12:44:22.487"></status>
</kw>
<msg timestamp="20201029 12:44:22.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.469" endtime="20201029 12:44:22.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.488" endtime="20201029 12:44:22.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.491" endtime="20201029 12:44:22.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.467" endtime="20201029 12:44:22.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.465" endtime="20201029 12:44:22.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.500" endtime="20201029 12:44:22.785"></status>
</kw>
<msg timestamp="20201029 12:44:22.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.498" endtime="20201029 12:44:22.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022789236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.790" endtime="20201029 12:44:22.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.798" endtime="20201029 12:44:22.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.496" endtime="20201029 12:44:22.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.494" endtime="20201029 12:44:22.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.804" level="INFO">${RESULT} = [{'diff': 4.226400000000019e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.1166999999998205e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.1152999999998635e-0...</msg>
<status status="PASS" starttime="20201029 12:44:22.801" endtime="20201029 12:44:22.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.808" level="INFO">${ACCURACY} = {'diff': [4.226400000000019e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.113799999999959e-05, 4.1181000000001244e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:22.805" endtime="20201029 12:44:22.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.813" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.812" endtime="20201029 12:44:22.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.816" level="INFO">VALUE: [4.226400000000019e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1166999999998205e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.113799999999959e-05, 4.1181000000001244e-05, 4.1166999999998205e-05, 4.1166999999998205e-05, 4.1152999999998635e-05, 4.1167000000001674e-05, 4.1153000000002105e-05, 4.1138999999999065e-05, 4.1110999999999925e-05, 4.1166999999998205e-05, 4.116599999999873e-05, 4.1167000000001674e-05, 4.1139000000002535e-05, 4.118000000000177e-05, 4.1181000000001244e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1152999999998635e-05, 4.115199999999916e-05, 4.11660000000022e-05, 4.115199999999916e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.1181000000001244e-05, 4.123600000000005e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.115199999999916e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.1152999999998635e-05, 4.115199999999916e-05, 4.1097000000000355e-05, 4.1152999999998635e-05, 4.1138999999999065e-05, 4.1195000000000814e-05, 4.116599999999873e-05, 4.1110999999999925e-05, 4.1138999999999065e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.814" endtime="20201029 12:44:22.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.809" endtime="20201029 12:44:22.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.821" endtime="20201029 12:44:22.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.819" endtime="20201029 12:44:22.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.818" endtime="20201029 12:44:22.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.463" endtime="20201029 12:44:22.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.463" endtime="20201029 12:44:22.842"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.850" endtime="20201029 12:44:22.865"></status>
</kw>
<msg timestamp="20201029 12:44:22.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.849" endtime="20201029 12:44:22.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.867" endtime="20201029 12:44:22.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.869" endtime="20201029 12:44:22.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.846" endtime="20201029 12:44:22.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.844" endtime="20201029 12:44:22.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.878" endtime="20201029 12:44:23.164"></status>
</kw>
<msg timestamp="20201029 12:44:23.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.877" endtime="20201029 12:44:23.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.169" endtime="20201029 12:44:23.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.179" endtime="20201029 12:44:23.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.874" endtime="20201029 12:44:23.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.873" endtime="20201029 12:44:23.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.189" level="INFO">${RESULT} = [{'diff': 4.726399999999825e-05}, {'diff': 4.1153000000002105e-05}, {'diff': 4.6195000000002345e-05}, {'diff': 4.623600000000158e-05}, {'diff': 4.620800000000244e-05}, {'diff': 4.1152999999998635e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:23.184" endtime="20201029 12:44:23.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.195" level="INFO">${ACCURACY} = {'diff': [4.726399999999825e-05, 4.1153000000002105e-05, 4.6195000000002345e-05, 4.623600000000158e-05, 4.620800000000244e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.6208999999998446e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:44:23.190" endtime="20201029 12:44:23.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.200" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.199" endtime="20201029 12:44:23.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.202" level="INFO">VALUE: [4.726399999999825e-05, 4.1153000000002105e-05, 4.6195000000002345e-05, 4.623600000000158e-05, 4.620800000000244e-05, 4.1152999999998635e-05, 4.1153000000002105e-05, 4.6208999999998446e-05, 4.1166999999998205e-05, 4.1153000000002105e-05, 4.119399999999787e-05, 4.61939999999994e-05, 4.6208999999998446e-05, 4.1166999999998205e-05, 4.115199999999916e-05, 4.1139000000002535e-05, 4.6194999999998876e-05, 4.622199999999854e-05, 4.1139000000002535e-05, 4.6222999999998016e-05, 4.6194999999998876e-05, 4.1083000000000786e-05, 4.113799999999959e-05, 4.116599999999873e-05, 4.6180999999999306e-05, 4.620800000000244e-05, 4.6181000000002775e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.11660000000022e-05, 4.1124999999999495e-05, 4.620799999999897e-05, 4.108400000000026e-05, 4.6181000000002775e-05, 4.6166999999999736e-05, 4.620800000000244e-05, 4.6222999999998016e-05, 4.1110999999999925e-05, 4.1209000000000384e-05, 4.1208999999996915e-05, 4.620799999999897e-05, 4.116599999999873e-05, 4.1152999999998635e-05, 4.113799999999959e-05, 4.616600000000026e-05, 4.1166999999998205e-05, 4.617999999999983e-05, 4.1139000000002535e-05, 4.61939999999994e-05, 4.6237000000001055e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.201" endtime="20201029 12:44:23.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.196" endtime="20201029 12:44:23.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.207" endtime="20201029 12:44:23.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.206" endtime="20201029 12:44:23.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.205" endtime="20201029 12:44:23.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.842" endtime="20201029 12:44:23.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.842" endtime="20201029 12:44:23.228"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.237" endtime="20201029 12:44:23.252"></status>
</kw>
<msg timestamp="20201029 12:44:23.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.235" endtime="20201029 12:44:23.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.254" endtime="20201029 12:44:23.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.256" endtime="20201029 12:44:23.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.233" endtime="20201029 12:44:23.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.231" endtime="20201029 12:44:23.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.265" endtime="20201029 12:44:23.552"></status>
</kw>
<msg timestamp="20201029 12:44:23.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.263" endtime="20201029 12:44:23.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.556" endtime="20201029 12:44:23.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.565" endtime="20201029 12:44:23.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.261" endtime="20201029 12:44:23.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.259" endtime="20201029 12:44:23.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.571" level="INFO">${RESULT} = [{'diff': 4.727800000000129e-05}, {'diff': 4.6209000000001915e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.615199999999722e-05...</msg>
<status status="PASS" starttime="20201029 12:44:23.568" endtime="20201029 12:44:23.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.575" level="INFO">${ACCURACY} = {'diff': [4.727800000000129e-05, 4.6209000000001915e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6153000000000166e-05, 4.615199999999722e-05, 4.625000000000115e-05, 4.617999999999983e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:23.572" endtime="20201029 12:44:23.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.580" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.579" endtime="20201029 12:44:23.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.582" level="INFO">VALUE: [4.727800000000129e-05, 4.6209000000001915e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6153000000000166e-05, 4.615199999999722e-05, 4.625000000000115e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6223000000001485e-05, 4.622200000000201e-05, 4.61939999999994e-05, 4.622199999999854e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.623600000000158e-05, 4.6153000000000166e-05, 4.6195000000002345e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.619400000000287e-05, 4.6180999999999306e-05, 4.616600000000026e-05, 4.61939999999994e-05, 4.6180999999999306e-05, 4.6195000000002345e-05, 4.6209000000001915e-05, 4.620799999999897e-05, 4.6194999999998876e-05, 4.61800000000033e-05, 4.617999999999983e-05, 4.6195000000002345e-05, 4.622199999999854e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.6181000000002775e-05, 4.6209000000001915e-05, 4.6194999999998876e-05, 4.620800000000244e-05, 4.61939999999994e-05, 4.6125000000001026e-05, 4.617999999999983e-05, 4.61939999999994e-05, 4.6208999999998446e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.581" endtime="20201029 12:44:23.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.576" endtime="20201029 12:44:23.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.587" endtime="20201029 12:44:23.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.586" endtime="20201029 12:44:23.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.584" endtime="20201029 12:44:23.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.229" endtime="20201029 12:44:23.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.229" endtime="20201029 12:44:23.608"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.616" endtime="20201029 12:44:23.633"></status>
</kw>
<msg timestamp="20201029 12:44:23.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.615" endtime="20201029 12:44:23.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.634" endtime="20201029 12:44:23.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.637" endtime="20201029 12:44:23.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.612" endtime="20201029 12:44:23.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.610" endtime="20201029 12:44:23.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.645" endtime="20201029 12:44:23.930"></status>
</kw>
<msg timestamp="20201029 12:44:23.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02252175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.644" endtime="20201029 12:44:23.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02252175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.935" endtime="20201029 12:44:23.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.943" endtime="20201029 12:44:23.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.641" endtime="20201029 12:44:23.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.640" endtime="20201029 12:44:23.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.950" level="INFO">${RESULT} = [{'diff': 4.71940000000004e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6181000000002775e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.6166999999999736e-05}, {'diff': 4.61939999999994e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:23.946" endtime="20201029 12:44:23.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.954" level="INFO">${ACCURACY} = {'diff': [4.71940000000004e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.617999999999983e-05, 4.6166999999999736e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.62080...</msg>
<status status="PASS" starttime="20201029 12:44:23.950" endtime="20201029 12:44:23.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.958" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.957" endtime="20201029 12:44:23.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.960" level="INFO">VALUE: [4.71940000000004e-05, 4.617999999999983e-05, 4.6181000000002775e-05, 4.617999999999983e-05, 4.6166999999999736e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.620800000000244e-05, 4.6208999999998446e-05, 4.6180999999999306e-05, 4.616600000000026e-05, 4.6222999999998016e-05, 4.617999999999983e-05, 4.6209000000001915e-05, 4.61939999999994e-05, 4.6153000000000166e-05, 4.617999999999983e-05, 4.6166999999999736e-05, 4.6195000000002345e-05, 4.61939999999994e-05, 4.6180999999999306e-05, 4.620799999999897e-05, 4.6194999999998876e-05, 4.6195000000002345e-05, 4.6195000000002345e-05, 4.61939999999994e-05, 4.6125000000001026e-05, 4.620799999999897e-05, 4.616600000000026e-05, 4.616600000000026e-05, 4.6195000000002345e-05, 4.623600000000158e-05, 4.619400000000287e-05, 4.61939999999994e-05, 4.622200000000201e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.622200000000201e-05, 4.61939999999994e-05, 4.626400000000072e-05, 4.6180999999999306e-05, 4.6166999999999736e-05, 4.619400000000287e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.613800000000112e-05, 4.6195000000002345e-05, 4.620799999999897e-05, 4.6195000000002345e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.959" endtime="20201029 12:44:23.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.954" endtime="20201029 12:44:23.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.966" endtime="20201029 12:44:23.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.965" endtime="20201029 12:44:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.964" endtime="20201029 12:44:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.609" endtime="20201029 12:44:23.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.608" endtime="20201029 12:44:23.987"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.995" endtime="20201029 12:44:24.011"></status>
</kw>
<msg timestamp="20201029 12:44:24.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.994" endtime="20201029 12:44:24.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.012" endtime="20201029 12:44:24.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.015" endtime="20201029 12:44:24.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.991" endtime="20201029 12:44:24.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.989" endtime="20201029 12:44:24.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.024" endtime="20201029 12:44:24.308"></status>
</kw>
<msg timestamp="20201029 12:44:24.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.022" endtime="20201029 12:44:24.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.313" endtime="20201029 12:44:24.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.321" endtime="20201029 12:44:24.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.020" endtime="20201029 12:44:24.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.018" endtime="20201029 12:44:24.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.327" level="INFO">${RESULT} = [{'diff': 4.724999999999868e-05}, {'diff': 4.6180999999999306e-05}, {'diff': 4.624999999999768e-05}, {'diff': 4.620799999999897e-05}, {'diff': 4.6195000000002345e-05}, {'diff': 4.622199999999854e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:24.324" endtime="20201029 12:44:24.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.332" level="INFO">${ACCURACY} = {'diff': [4.724999999999868e-05, 4.6180999999999306e-05, 4.624999999999768e-05, 4.620799999999897e-05, 4.6195000000002345e-05, 4.622199999999854e-05, 4.6208999999998446e-05, 4.6195000000002345e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:24.328" endtime="20201029 12:44:24.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.337" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.336" endtime="20201029 12:44:24.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.339" level="INFO">VALUE: [4.724999999999868e-05, 4.6180999999999306e-05, 4.624999999999768e-05, 4.620799999999897e-05, 4.6195000000002345e-05, 4.622199999999854e-05, 4.6208999999998446e-05, 4.6195000000002345e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.6180999999999306e-05, 4.6139000000000596e-05, 4.625000000000115e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.6166999999999736e-05, 4.619400000000287e-05, 4.61939999999994e-05, 4.617999999999983e-05, 4.620800000000244e-05, 4.620799999999897e-05, 4.6209000000001915e-05, 4.6166999999999736e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.6166999999999736e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.617999999999983e-05, 4.620799999999897e-05, 4.623600000000158e-05, 4.6180999999999306e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.6166999999999736e-05, 4.6181000000002775e-05, 4.6195000000002345e-05, 4.620799999999897e-05, 4.6223000000001485e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.625000000000115e-05, 4.6194999999998876e-05, 4.6194999999998876e-05, 4.620799999999897e-05, 4.620799999999897e-05, 4.619400000000287e-05, 4.6125000000001026e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.338" endtime="20201029 12:44:24.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.333" endtime="20201029 12:44:24.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.344" endtime="20201029 12:44:24.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.343" endtime="20201029 12:44:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.341" endtime="20201029 12:44:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.988" endtime="20201029 12:44:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.987" endtime="20201029 12:44:24.365"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.373" endtime="20201029 12:44:24.389"></status>
</kw>
<msg timestamp="20201029 12:44:24.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.372" endtime="20201029 12:44:24.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.390" endtime="20201029 12:44:24.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.392" endtime="20201029 12:44:24.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.369" endtime="20201029 12:44:24.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.367" endtime="20201029 12:44:24.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.402" endtime="20201029 12:44:24.690"></status>
</kw>
<msg timestamp="20201029 12:44:24.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.401" endtime="20201029 12:44:24.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021687542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.694" endtime="20201029 12:44:24.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.702" endtime="20201029 12:44:24.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.398" endtime="20201029 12:44:24.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.396" endtime="20201029 12:44:24.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.709" level="INFO">${RESULT} = [{'diff': 4.726400000000172e-05}, {'diff': 4.6153000000000166e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.6195000000002345e-05}, {'diff': 4.6209000000001915e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:24.706" endtime="20201029 12:44:24.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.713" level="INFO">${ACCURACY} = {'diff': [4.726400000000172e-05, 4.6153000000000166e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.6195000000002345e-05, 4.6209000000001915e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.62...</msg>
<status status="PASS" starttime="20201029 12:44:24.710" endtime="20201029 12:44:24.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.717" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.716" endtime="20201029 12:44:24.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.720" level="INFO">VALUE: [4.726400000000172e-05, 4.6153000000000166e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.6195000000002345e-05, 4.6209000000001915e-05, 4.620799999999897e-05, 4.61939999999994e-05, 4.620799999999897e-05, 4.6195000000002345e-05, 4.61939999999994e-05, 4.6194999999998876e-05, 4.616600000000026e-05, 4.6180999999999306e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.617999999999983e-05, 4.6180999999999306e-05, 4.61939999999994e-05, 4.620800000000244e-05, 4.617999999999983e-05, 4.6223000000001485e-05, 4.6166999999999736e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 4.623600000000158e-05, 4.6125000000001026e-05, 4.6194999999998876e-05, 4.6223000000001485e-05, 4.623600000000158e-05, 4.620800000000244e-05, 4.620800000000244e-05, 4.61939999999994e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6111000000001456e-05, 4.61939999999994e-05, 4.61939999999994e-05, 4.6097000000001886e-05, 4.61939999999994e-05, 4.6181000000002775e-05, 4.6195000000002345e-05, 4.623599999999811e-05, 4.623600000000158e-05, 4.6208999999998446e-05, 4.6180999999999306e-05, 4.6208999999998446e-05, 4.6180999999999306e-05, 4.6194999999998876e-05, 4.6195000000002345e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.719" endtime="20201029 12:44:24.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.714" endtime="20201029 12:44:24.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.729" endtime="20201029 12:44:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.728" endtime="20201029 12:44:24.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.727" endtime="20201029 12:44:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.365" endtime="20201029 12:44:24.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.365" endtime="20201029 12:44:24.750"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.759" endtime="20201029 12:44:24.775"></status>
</kw>
<msg timestamp="20201029 12:44:24.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.757" endtime="20201029 12:44:24.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.776" endtime="20201029 12:44:24.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.779" endtime="20201029 12:44:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.754" endtime="20201029 12:44:24.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.752" endtime="20201029 12:44:24.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.788" endtime="20201029 12:44:25.074"></status>
</kw>
<msg timestamp="20201029 12:44:25.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.786" endtime="20201029 12:44:25.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022539958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.079" endtime="20201029 12:44:25.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.087" endtime="20201029 12:44:25.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.784" endtime="20201029 12:44:25.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.782" endtime="20201029 12:44:25.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.093" level="INFO">${RESULT} = [{'diff': 4.724999999999868e-05}, {'diff': 5.123599999999964e-05}, {'diff': 4.619400000000287e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.61939999999994e-05}, {'diff': 5.124999999999921e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.090" endtime="20201029 12:44:25.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.097" level="INFO">${ACCURACY} = {'diff': [4.724999999999868e-05, 5.123599999999964e-05, 4.619400000000287e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 5.124999999999921e-05, 5.123600000000311e-05, 4.620799999999897e-05, 4.6207...</msg>
<status status="PASS" starttime="20201029 12:44:25.094" endtime="20201029 12:44:25.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.102" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.101" endtime="20201029 12:44:25.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.104" level="INFO">VALUE: [4.724999999999868e-05, 5.123599999999964e-05, 4.619400000000287e-05, 4.6194999999998876e-05, 4.61939999999994e-05, 5.124999999999921e-05, 5.123600000000311e-05, 4.620799999999897e-05, 4.620799999999897e-05, 4.622200000000201e-05, 4.620799999999897e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 4.61939999999994e-05, 4.6209000000001915e-05, 5.118099999999737e-05, 4.617999999999983e-05, 4.6139000000000596e-05, 5.123600000000311e-05, 5.123600000000311e-05, 5.126399999999878e-05, 4.6181000000002775e-05, 4.6153000000000166e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.129199999999792e-05, 4.61939999999994e-05, 5.127799999999835e-05, 5.122200000000007e-05, 5.126399999999878e-05, 5.123599999999964e-05, 4.6195000000002345e-05, 5.124999999999921e-05, 5.127699999999888e-05, 5.123599999999964e-05, 4.6194999999998876e-05, 5.1236999999999117e-05, 4.620800000000244e-05, 4.6209000000001915e-05, 4.6180999999999306e-05, 5.123599999999964e-05, 4.6209000000001915e-05, 5.131900000000106e-05, 4.622200000000201e-05, 5.1236999999999117e-05, 4.6195000000002345e-05, 5.126399999999878e-05, 4.61939999999994e-05, 4.6180999999999306e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.103" endtime="20201029 12:44:25.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.098" endtime="20201029 12:44:25.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.110" endtime="20201029 12:44:25.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.109" endtime="20201029 12:44:25.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.107" endtime="20201029 12:44:25.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.751" endtime="20201029 12:44:25.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.750" endtime="20201029 12:44:25.131"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.139" endtime="20201029 12:44:25.155"></status>
</kw>
<msg timestamp="20201029 12:44:25.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.138" endtime="20201029 12:44:25.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.156" endtime="20201029 12:44:25.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.159" endtime="20201029 12:44:25.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.135" endtime="20201029 12:44:25.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.133" endtime="20201029 12:44:25.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.168" endtime="20201029 12:44:25.454"></status>
</kw>
<msg timestamp="20201029 12:44:25.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.166" endtime="20201029 12:44:25.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021725556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.458" endtime="20201029 12:44:25.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.466" endtime="20201029 12:44:25.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.164" endtime="20201029 12:44:25.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.162" endtime="20201029 12:44:25.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.473" level="INFO">${RESULT} = [{'diff': 5.229199999999892e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.122299999999955e-05}, {'diff': 5.126400000000225e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.469" endtime="20201029 12:44:25.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.477" level="INFO">${ACCURACY} = {'diff': [5.229199999999892e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122299999999955e-05, 5.126400000000225e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.1250...</msg>
<status status="PASS" starttime="20201029 12:44:25.474" endtime="20201029 12:44:25.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.482" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.481" endtime="20201029 12:44:25.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.484" level="INFO">VALUE: [5.229199999999892e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122299999999955e-05, 5.126400000000225e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.125000000000268e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.125000000000268e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.119500000000041e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.127799999999835e-05, 5.119500000000041e-05, 5.122299999999955e-05, 5.122200000000007e-05, 5.129200000000139e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.1221999999996604e-05, 5.123600000000311e-05, 5.1236999999999117e-05, 5.1237000000002586e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.1236999999999117e-05, 5.1207999999997034e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.1165999999998324e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.126399999999878e-05, 5.1236999999999117e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.130499999999802e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.483" endtime="20201029 12:44:25.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.478" endtime="20201029 12:44:25.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.489" endtime="20201029 12:44:25.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.488" endtime="20201029 12:44:25.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.487" endtime="20201029 12:44:25.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.132" endtime="20201029 12:44:25.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.131" endtime="20201029 12:44:25.510"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.519" endtime="20201029 12:44:25.534"></status>
</kw>
<msg timestamp="20201029 12:44:25.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.517" endtime="20201029 12:44:25.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.536" endtime="20201029 12:44:25.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.538" endtime="20201029 12:44:25.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.515" endtime="20201029 12:44:25.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.513" endtime="20201029 12:44:25.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.547" endtime="20201029 12:44:25.835"></status>
</kw>
<msg timestamp="20201029 12:44:25.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.546" endtime="20201029 12:44:25.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021769375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.839" endtime="20201029 12:44:25.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.848" endtime="20201029 12:44:25.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.543" endtime="20201029 12:44:25.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.542" endtime="20201029 12:44:25.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.854" level="INFO">${RESULT} = [{'diff': 5.227799999999935e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.127800000000182e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.123599999999964e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.851" endtime="20201029 12:44:25.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.858" level="INFO">${ACCURACY} = {'diff': [5.227799999999935e-05, 5.123599999999964e-05, 5.127800000000182e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.1235...</msg>
<status status="PASS" starttime="20201029 12:44:25.855" endtime="20201029 12:44:25.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.863" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.862" endtime="20201029 12:44:25.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.865" level="INFO">VALUE: [5.227799999999935e-05, 5.123599999999964e-05, 5.127800000000182e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123600000000311e-05, 5.1236999999999117e-05, 5.123600000000311e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.1193999999997464e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.118099999999737e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.129200000000139e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.132000000000053e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.129199999999792e-05, 5.122299999999955e-05, 5.123599999999964e-05, 5.124999999999921e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.864" endtime="20201029 12:44:25.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.859" endtime="20201029 12:44:25.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.870" endtime="20201029 12:44:25.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.869" endtime="20201029 12:44:25.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.867" endtime="20201029 12:44:25.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.511" endtime="20201029 12:44:25.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.510" endtime="20201029 12:44:25.891"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.899" endtime="20201029 12:44:25.916"></status>
</kw>
<msg timestamp="20201029 12:44:25.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.898" endtime="20201029 12:44:25.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.918" endtime="20201029 12:44:25.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.920" endtime="20201029 12:44:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.895" endtime="20201029 12:44:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.893" endtime="20201029 12:44:25.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.929" endtime="20201029 12:44:26.215"></status>
</kw>
<msg timestamp="20201029 12:44:26.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.927" endtime="20201029 12:44:26.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.219" endtime="20201029 12:44:26.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.228" endtime="20201029 12:44:26.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.925" endtime="20201029 12:44:26.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.923" endtime="20201029 12:44:26.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.234" level="INFO">${RESULT} = [{'diff': 5.231899999999859e-05}, {'diff': 5.124999999999921e-05}, {'diff': 5.125000000000268e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.122200000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.231" endtime="20201029 12:44:26.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.238" level="INFO">${ACCURACY} = {'diff': [5.231899999999859e-05, 5.124999999999921e-05, 5.125000000000268e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.126400000000225e-05, 5.127799999999835e-05, 5.1235...</msg>
<status status="PASS" starttime="20201029 12:44:26.235" endtime="20201029 12:44:26.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.242" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.241" endtime="20201029 12:44:26.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.246" level="INFO">VALUE: [5.231899999999859e-05, 5.124999999999921e-05, 5.125000000000268e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.126400000000225e-05, 5.127799999999835e-05, 5.123599999999964e-05, 5.129199999999792e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.130499999999802e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.125000000000268e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.129099999999845e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123600000000311e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.1236999999999117e-05, 5.125000000000268e-05, 5.120899999999998e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.126300000000278e-05, 5.123599999999964e-05, 5.125000000000268e-05, 5.124999999999921e-05, 5.1236999999999117e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.129199999999792e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.123599999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.243" endtime="20201029 12:44:26.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.239" endtime="20201029 12:44:26.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.251" endtime="20201029 12:44:26.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.249" endtime="20201029 12:44:26.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.248" endtime="20201029 12:44:26.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.892" endtime="20201029 12:44:26.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.891" endtime="20201029 12:44:26.271"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.280" endtime="20201029 12:44:26.296"></status>
</kw>
<msg timestamp="20201029 12:44:26.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.278" endtime="20201029 12:44:26.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.297" endtime="20201029 12:44:26.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.300" endtime="20201029 12:44:26.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.276" endtime="20201029 12:44:26.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.274" endtime="20201029 12:44:26.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.309" endtime="20201029 12:44:26.594"></status>
</kw>
<msg timestamp="20201029 12:44:26.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.307" endtime="20201029 12:44:26.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.599" endtime="20201029 12:44:26.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.607" endtime="20201029 12:44:26.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.304" endtime="20201029 12:44:26.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.303" endtime="20201029 12:44:26.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.613" level="INFO">${RESULT} = [{'diff': 5.229199999999892e-05}, {'diff': 5.1221999999996604e-05}, {'diff': 5.127699999999888e-05}, {'diff': 5.123600000000311e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.122200000000007e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.610" endtime="20201029 12:44:26.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.618" level="INFO">${ACCURACY} = {'diff': [5.229199999999892e-05, 5.1221999999996604e-05, 5.127699999999888e-05, 5.123600000000311e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.1278...</msg>
<status status="PASS" starttime="20201029 12:44:26.614" endtime="20201029 12:44:26.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.623" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.622" endtime="20201029 12:44:26.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.625" level="INFO">VALUE: [5.229199999999892e-05, 5.1221999999996604e-05, 5.127699999999888e-05, 5.123600000000311e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.127800000000182e-05, 5.127799999999835e-05, 5.13340000000001e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.119500000000041e-05, 5.120899999999998e-05, 5.125000000000268e-05, 5.119500000000041e-05, 5.124999999999921e-05, 5.1179999999997894e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.119500000000041e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.127800000000182e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.131900000000106e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.125000000000268e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.129200000000139e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.624" endtime="20201029 12:44:26.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.619" endtime="20201029 12:44:26.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.630" endtime="20201029 12:44:26.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.629" endtime="20201029 12:44:26.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.627" endtime="20201029 12:44:26.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.272" endtime="20201029 12:44:26.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.272" endtime="20201029 12:44:26.651"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.659" endtime="20201029 12:44:26.675"></status>
</kw>
<msg timestamp="20201029 12:44:26.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.658" endtime="20201029 12:44:26.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.677" endtime="20201029 12:44:26.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.679" endtime="20201029 12:44:26.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.655" endtime="20201029 12:44:26.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.653" endtime="20201029 12:44:26.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.688" endtime="20201029 12:44:26.977"></status>
</kw>
<msg timestamp="20201029 12:44:26.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.687" endtime="20201029 12:44:26.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.981" endtime="20201029 12:44:26.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.989" endtime="20201029 12:44:26.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.684" endtime="20201029 12:44:26.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.682" endtime="20201029 12:44:26.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.996" level="INFO">${RESULT} = [{'diff': 5.229200000000239e-05}, {'diff': 5.626299999999737e-05}, {'diff': 5.6236000000001174e-05}, {'diff': 5.6263999999996844e-05}, {'diff': 5.123599999999964e-05}, {'diff': 5.1223000000003016e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:26.993" endtime="20201029 12:44:26.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.000" level="INFO">${ACCURACY} = {'diff': [5.229200000000239e-05, 5.626299999999737e-05, 5.6236000000001174e-05, 5.6263999999996844e-05, 5.123599999999964e-05, 5.1223000000003016e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:26.997" endtime="20201029 12:44:27.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.004" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.003" endtime="20201029 12:44:27.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.007" level="INFO">VALUE: [5.229200000000239e-05, 5.626299999999737e-05, 5.6236000000001174e-05, 5.6263999999996844e-05, 5.123599999999964e-05, 5.1223000000003016e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.123599999999964e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.125000000000268e-05, 5.6249999999997274e-05, 5.118100000000084e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.123599999999964e-05, 5.129200000000139e-05, 5.123599999999964e-05, 5.6264000000000314e-05, 5.122299999999955e-05, 5.129200000000139e-05, 5.6264000000000314e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.123599999999964e-05, 5.6263999999996844e-05, 5.6264000000000314e-05, 5.124999999999921e-05, 5.6277999999999884e-05, 5.626299999999737e-05, 5.124999999999921e-05, 5.129099999999845e-05, 5.6250000000000744e-05, 5.123599999999964e-05, 5.6277999999999884e-05, 5.630499999999955e-05, 5.123599999999964e-05, 5.122299999999955e-05, 5.626300000000084e-05, 5.627700000000041e-05, 5.633300000000216e-05, 5.629200000000292e-05, 5.116600000000179e-05, 5.124999999999921e-05, 5.6291999999999454e-05, 5.124999999999921e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.005" endtime="20201029 12:44:27.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.001" endtime="20201029 12:44:27.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.012" endtime="20201029 12:44:27.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.010" endtime="20201029 12:44:27.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.009" endtime="20201029 12:44:27.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.652" endtime="20201029 12:44:27.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.651" endtime="20201029 12:44:27.033"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.042" endtime="20201029 12:44:27.059"></status>
</kw>
<msg timestamp="20201029 12:44:27.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.040" endtime="20201029 12:44:27.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.060" endtime="20201029 12:44:27.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.063" endtime="20201029 12:44:27.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.038" endtime="20201029 12:44:27.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.036" endtime="20201029 12:44:27.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.071" endtime="20201029 12:44:27.357"></status>
</kw>
<msg timestamp="20201029 12:44:27.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.070" endtime="20201029 12:44:27.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022900903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.361" endtime="20201029 12:44:27.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.369" endtime="20201029 12:44:27.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.067" endtime="20201029 12:44:27.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.066" endtime="20201029 12:44:27.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.376" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.6277999999999884e-0...</msg>
<status status="PASS" starttime="20201029 12:44:27.373" endtime="20201029 12:44:27.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.380" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:27.377" endtime="20201029 12:44:27.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.384" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.383" endtime="20201029 12:44:27.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.387" level="INFO">VALUE: [5.733299999999969e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.629099999999998e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6263999999996844e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.630600000000249e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6263999999996844e-05, 5.627699999999694e-05, 5.6277999999999884e-05, 5.6249999999997274e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6208000000002034e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.6264000000000314e-05, 5.632000000000206e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6263999999996844e-05, 5.629099999999998e-05, 5.6305999999999023e-05, 5.6264000000000314e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.385" endtime="20201029 12:44:27.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.381" endtime="20201029 12:44:27.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.392" endtime="20201029 12:44:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.391" endtime="20201029 12:44:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.390" endtime="20201029 12:44:27.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.034" endtime="20201029 12:44:27.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.033" endtime="20201029 12:44:27.413"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.422" endtime="20201029 12:44:27.438"></status>
</kw>
<msg timestamp="20201029 12:44:27.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.420" endtime="20201029 12:44:27.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.439" endtime="20201029 12:44:27.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.441" endtime="20201029 12:44:27.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.418" endtime="20201029 12:44:27.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.415" endtime="20201029 12:44:27.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.450" endtime="20201029 12:44:27.736"></status>
</kw>
<msg timestamp="20201029 12:44:27.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.449" endtime="20201029 12:44:27.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021639236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021696583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.740" endtime="20201029 12:44:27.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.749" endtime="20201029 12:44:27.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.446" endtime="20201029 12:44:27.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.445" endtime="20201029 12:44:27.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.755" level="INFO">${RESULT} = [{'diff': 5.734699999999926e-05}, {'diff': 5.6305999999999023e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.630500000000302e-05}, {'diff': 5.627700000000041e-05}, {'diff': 5.6264000000000314e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:27.752" endtime="20201029 12:44:27.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.760" level="INFO">${ACCURACY} = {'diff': [5.734699999999926e-05, 5.6305999999999023e-05, 5.6277999999999884e-05, 5.630500000000302e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:27.756" endtime="20201029 12:44:27.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.764" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.763" endtime="20201029 12:44:27.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.767" level="INFO">VALUE: [5.734699999999926e-05, 5.6305999999999023e-05, 5.6277999999999884e-05, 5.630500000000302e-05, 5.627700000000041e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6305999999999023e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.629200000000292e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.6277999999999884e-05, 5.6305999999999023e-05, 5.6291999999999454e-05, 5.627700000000041e-05, 5.630600000000249e-05, 5.630499999999955e-05, 5.633399999999816e-05, 5.630499999999955e-05, 5.627700000000041e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.627699999999694e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.6263999999996844e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.627699999999694e-05, 5.6250000000000744e-05, 5.630600000000249e-05, 5.6277999999999884e-05, 5.6291999999999454e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.766" endtime="20201029 12:44:27.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.761" endtime="20201029 12:44:27.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.772" endtime="20201029 12:44:27.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.770" endtime="20201029 12:44:27.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.769" endtime="20201029 12:44:27.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.414" endtime="20201029 12:44:27.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.413" endtime="20201029 12:44:27.793"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.801" endtime="20201029 12:44:27.817"></status>
</kw>
<msg timestamp="20201029 12:44:27.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.800" endtime="20201029 12:44:27.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.819" endtime="20201029 12:44:27.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.821" endtime="20201029 12:44:27.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.797" endtime="20201029 12:44:27.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.795" endtime="20201029 12:44:27.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.830" endtime="20201029 12:44:28.119"></status>
</kw>
<msg timestamp="20201029 12:44:28.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:27.828" endtime="20201029 12:44:28.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710833, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:28.125" endtime="20201029 12:44:28.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.135" endtime="20201029 12:44:28.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.826" endtime="20201029 12:44:28.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.824" endtime="20201029 12:44:28.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.142" level="INFO">${RESULT} = [{'diff': 5.733299999999969e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6291999999999454e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.633299999999869e-05...</msg>
<status status="PASS" starttime="20201029 12:44:28.139" endtime="20201029 12:44:28.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.146" level="INFO">${ACCURACY} = {'diff': [5.733299999999969e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.633299999999869e-05, 5.630600000000249e-05, 5.6264000000000314e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:28.143" endtime="20201029 12:44:28.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.151" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.150" endtime="20201029 12:44:28.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.153" level="INFO">VALUE: [5.733299999999969e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.633299999999869e-05, 5.630600000000249e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.629099999999998e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.623699999999718e-05, 5.6264000000000314e-05, 5.6305999999999023e-05, 5.6277999999999884e-05, 5.63480000000012e-05, 5.626300000000084e-05, 5.6291999999999454e-05, 5.631899999999912e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.626300000000084e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6291999999999454e-05, 5.620900000000151e-05, 5.6277999999999884e-05, 5.633300000000216e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.6208000000002034e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.619499999999847e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.630600000000249e-05, 5.6264000000000314e-05, 5.630600000000249e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.152" endtime="20201029 12:44:28.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.147" endtime="20201029 12:44:28.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.158" endtime="20201029 12:44:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.157" endtime="20201029 12:44:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.155" endtime="20201029 12:44:28.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.793" endtime="20201029 12:44:28.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.793" endtime="20201029 12:44:28.179"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.188" endtime="20201029 12:44:28.204"></status>
</kw>
<msg timestamp="20201029 12:44:28.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.186" endtime="20201029 12:44:28.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.206" endtime="20201029 12:44:28.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.209" endtime="20201029 12:44:28.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.183" endtime="20201029 12:44:28.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.181" endtime="20201029 12:44:28.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.217" endtime="20201029 12:44:28.503"></status>
</kw>
<msg timestamp="20201029 12:44:28.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.216" endtime="20201029 12:44:28.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.507" endtime="20201029 12:44:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.516" endtime="20201029 12:44:28.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.213" endtime="20201029 12:44:28.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.212" endtime="20201029 12:44:28.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.522" level="INFO">${RESULT} = [{'diff': 5.7278000000000884e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.6222000000001604e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.627700000000041e-05}, {'diff': 5.6277999999999884e-0...</msg>
<status status="PASS" starttime="20201029 12:44:28.519" endtime="20201029 12:44:28.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.526" level="INFO">${ACCURACY} = {'diff': [5.7278000000000884e-05, 5.6277999999999884e-05, 5.6222000000001604e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:28.523" endtime="20201029 12:44:28.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.531" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.530" endtime="20201029 12:44:28.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.533" level="INFO">VALUE: [5.7278000000000884e-05, 5.6277999999999884e-05, 5.6222000000001604e-05, 5.6277999999999884e-05, 5.627700000000041e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.629099999999998e-05, 5.630499999999955e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.629099999999998e-05, 5.627699999999694e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6264000000000314e-05, 5.6236000000001174e-05, 5.6250000000000744e-05, 5.6264000000000314e-05, 5.629200000000292e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6264000000000314e-05, 5.6277999999999884e-05, 5.632000000000206e-05, 5.630600000000249e-05, 5.6277999999999884e-05, 5.622299999999761e-05, 5.6277999999999884e-05, 5.6291999999999454e-05, 5.6194000000002464e-05, 5.629200000000292e-05, 5.6305999999999023e-05, 5.627700000000041e-05, 5.623700000000065e-05, 5.6264000000000314e-05, 5.630500000000302e-05, 5.6291999999999454e-05, 5.629099999999998e-05, 5.6291999999999454e-05, 5.6291999999999454e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.532" endtime="20201029 12:44:28.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.527" endtime="20201029 12:44:28.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.540" endtime="20201029 12:44:28.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.538" endtime="20201029 12:44:28.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.537" endtime="20201029 12:44:28.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.180" endtime="20201029 12:44:28.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.179" endtime="20201029 12:44:28.561"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.569" endtime="20201029 12:44:28.585"></status>
</kw>
<msg timestamp="20201029 12:44:28.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.568" endtime="20201029 12:44:28.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.587" endtime="20201029 12:44:28.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.589" endtime="20201029 12:44:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.565" endtime="20201029 12:44:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.563" endtime="20201029 12:44:28.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.598" endtime="20201029 12:44:28.883"></status>
</kw>
<msg timestamp="20201029 12:44:28.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.596" endtime="20201029 12:44:28.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.887" endtime="20201029 12:44:28.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.895" endtime="20201029 12:44:28.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.594" endtime="20201029 12:44:28.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.592" endtime="20201029 12:44:28.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.902" level="INFO">${RESULT} = [{'diff': 6.231999999999766e-05}, {'diff': 6.131900000000065e-05}, {'diff': 5.627700000000041e-05}, {'diff': 5.629099999999998e-05}, {'diff': 5.627800000000335e-05}, {'diff': 6.131899999999718e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.899" endtime="20201029 12:44:28.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.907" level="INFO">${ACCURACY} = {'diff': [6.231999999999766e-05, 6.131900000000065e-05, 5.627700000000041e-05, 5.629099999999998e-05, 5.627800000000335e-05, 6.131899999999718e-05, 6.127699999999847e-05, 5.6250000000000744e-05, 5.630...</msg>
<status status="PASS" starttime="20201029 12:44:28.903" endtime="20201029 12:44:28.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.911" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.910" endtime="20201029 12:44:28.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.913" level="INFO">VALUE: [6.231999999999766e-05, 6.131900000000065e-05, 5.627700000000041e-05, 5.629099999999998e-05, 5.627800000000335e-05, 6.131899999999718e-05, 6.127699999999847e-05, 5.6250000000000744e-05, 5.630600000000249e-05, 5.627700000000041e-05, 6.129100000000151e-05, 6.131900000000065e-05, 5.630499999999955e-05, 5.6277999999999884e-05, 5.631900000000259e-05, 5.6264000000000314e-05, 6.125000000000227e-05, 5.627700000000041e-05, 6.130599999999709e-05, 5.6264000000000314e-05, 6.133300000000022e-05, 5.627700000000041e-05, 6.133300000000022e-05, 5.6277999999999884e-05, 6.132000000000012e-05, 6.13889999999985e-05, 6.129099999999804e-05, 6.13339999999997e-05, 5.631899999999912e-05, 5.633299999999869e-05, 6.132000000000012e-05, 5.6264000000000314e-05, 5.634700000000173e-05, 6.130500000000108e-05, 5.6277999999999884e-05, 6.132000000000012e-05, 5.627700000000041e-05, 5.630499999999955e-05, 6.13339999999997e-05, 5.6291999999999454e-05, 5.6277999999999884e-05, 5.6277999999999884e-05, 5.6264000000000314e-05, 5.6235999999997704e-05, 6.130499999999761e-05, 5.630600000000249e-05, 6.131900000000065e-05, 5.6277999999999884e-05, 6.133300000000022e-05, 5.6277999999999884e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.912" endtime="20201029 12:44:28.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.908" endtime="20201029 12:44:28.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.918" endtime="20201029 12:44:28.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.917" endtime="20201029 12:44:28.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.916" endtime="20201029 12:44:28.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.561" endtime="20201029 12:44:28.939"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.561" endtime="20201029 12:44:28.939"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.948" endtime="20201029 12:44:28.964"></status>
</kw>
<msg timestamp="20201029 12:44:28.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.946" endtime="20201029 12:44:28.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.965" endtime="20201029 12:44:28.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.968" endtime="20201029 12:44:28.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.944" endtime="20201029 12:44:28.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.941" endtime="20201029 12:44:28.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.977" endtime="20201029 12:44:29.263"></status>
</kw>
<msg timestamp="20201029 12:44:29.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.975" endtime="20201029 12:44:29.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021652292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.267" endtime="20201029 12:44:29.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.275" endtime="20201029 12:44:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.973" endtime="20201029 12:44:29.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.971" endtime="20201029 12:44:29.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.282" level="INFO">${RESULT} = [{'diff': 6.237499999999993e-05}, {'diff': 6.138900000000197e-05}, {'diff': 6.130499999999761e-05}, {'diff': 6.136100000000283e-05}, {'diff': 6.130599999999709e-05}, {'diff': 6.134699999999979e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.279" endtime="20201029 12:44:29.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.286" level="INFO">${ACCURACY} = {'diff': [6.237499999999993e-05, 6.138900000000197e-05, 6.130499999999761e-05, 6.136100000000283e-05, 6.130599999999709e-05, 6.134699999999979e-05, 6.131900000000065e-05, 6.127699999999847e-05, 6.1346...</msg>
<status status="PASS" starttime="20201029 12:44:29.283" endtime="20201029 12:44:29.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.290" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.289" endtime="20201029 12:44:29.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.293" level="INFO">VALUE: [6.237499999999993e-05, 6.138900000000197e-05, 6.130499999999761e-05, 6.136100000000283e-05, 6.130599999999709e-05, 6.134699999999979e-05, 6.131900000000065e-05, 6.127699999999847e-05, 6.134699999999979e-05, 6.133300000000022e-05, 6.138900000000197e-05, 6.130599999999709e-05, 6.133300000000022e-05, 6.134799999999926e-05, 6.134699999999979e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.134699999999979e-05, 6.129199999999752e-05, 6.133299999999675e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.130500000000108e-05, 6.132000000000012e-05, 6.134699999999979e-05, 6.131900000000065e-05, 6.127799999999795e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.130500000000108e-05, 6.130599999999709e-05, 6.130499999999761e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.127799999999795e-05, 6.133300000000022e-05, 6.129200000000098e-05, 6.13750000000024e-05, 6.13339999999997e-05, 6.132000000000012e-05, 6.130600000000055e-05, 6.133299999999675e-05, 6.132000000000012e-05, 6.130499999999761e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.137499999999893e-05, 6.127800000000141e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.291" endtime="20201029 12:44:29.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.287" endtime="20201029 12:44:29.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.297" endtime="20201029 12:44:29.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.296" endtime="20201029 12:44:29.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.295" endtime="20201029 12:44:29.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.940" endtime="20201029 12:44:29.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.939" endtime="20201029 12:44:29.318"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.327" endtime="20201029 12:44:29.344"></status>
</kw>
<msg timestamp="20201029 12:44:29.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.325" endtime="20201029 12:44:29.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.345" endtime="20201029 12:44:29.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.348" endtime="20201029 12:44:29.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.323" endtime="20201029 12:44:29.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.321" endtime="20201029 12:44:29.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.357" endtime="20201029 12:44:29.643"></status>
</kw>
<msg timestamp="20201029 12:44:29.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.355" endtime="20201029 12:44:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022577986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.647" endtime="20201029 12:44:29.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.655" endtime="20201029 12:44:29.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.353" endtime="20201029 12:44:29.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.351" endtime="20201029 12:44:29.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.662" level="INFO">${RESULT} = [{'diff': 6.236100000000036e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.130600000000055e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.659" endtime="20201029 12:44:29.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.666" level="INFO">${ACCURACY} = {'diff': [6.236100000000036e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.137499999999893e-05, 6.130600000000055e-05, 6.1304...</msg>
<status status="PASS" starttime="20201029 12:44:29.663" endtime="20201029 12:44:29.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.670" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.669" endtime="20201029 12:44:29.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.673" level="INFO">VALUE: [6.236100000000036e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.137499999999893e-05, 6.130600000000055e-05, 6.130499999999761e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.129099999999804e-05, 6.127800000000141e-05, 6.12499999999988e-05, 6.127800000000141e-05, 6.126399999999838e-05, 6.131900000000065e-05, 6.126300000000237e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.133299999999675e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.134799999999926e-05, 6.133300000000022e-05, 6.126399999999838e-05, 6.136099999999936e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.134699999999979e-05, 6.13339999999997e-05, 6.13339999999997e-05, 6.133300000000022e-05, 6.130599999999709e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.131900000000065e-05, 6.140299999999807e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.130599999999709e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.132000000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.671" endtime="20201029 12:44:29.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.667" endtime="20201029 12:44:29.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.678" endtime="20201029 12:44:29.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.677" endtime="20201029 12:44:29.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.676" endtime="20201029 12:44:29.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.319" endtime="20201029 12:44:29.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.319" endtime="20201029 12:44:29.699"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.708" endtime="20201029 12:44:29.724"></status>
</kw>
<msg timestamp="20201029 12:44:29.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.706" endtime="20201029 12:44:29.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.725" endtime="20201029 12:44:29.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.728" endtime="20201029 12:44:29.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.704" endtime="20201029 12:44:29.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.702" endtime="20201029 12:44:29.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.737" endtime="20201029 12:44:30.024"></status>
</kw>
<msg timestamp="20201029 12:44:30.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:29.736" endtime="20201029 12:44:30.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:30.030" endtime="20201029 12:44:30.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.040" endtime="20201029 12:44:30.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.733" endtime="20201029 12:44:30.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.731" endtime="20201029 12:44:30.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.046" level="INFO">${RESULT} = [{'diff': 6.23889999999995e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.13339999999997e-05}, {'diff': 6.131900000000065e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:30.043" endtime="20201029 12:44:30.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.051" level="INFO">${ACCURACY} = {'diff': [6.23889999999995e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.13339999999997e-05, 6.131900000000065e-05, 6.13339999999997e-05, 6.130600000000055e-05, 6.1318999...</msg>
<status status="PASS" starttime="20201029 12:44:30.047" endtime="20201029 12:44:30.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.056" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.055" endtime="20201029 12:44:30.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.058" level="INFO">VALUE: [6.23889999999995e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.13339999999997e-05, 6.131900000000065e-05, 6.13339999999997e-05, 6.130600000000055e-05, 6.131899999999718e-05, 6.133400000000316e-05, 6.127699999999847e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.136099999999936e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.137499999999893e-05, 6.133300000000022e-05, 6.12499999999988e-05, 6.130600000000055e-05, 6.136100000000283e-05, 6.130599999999709e-05, 6.134799999999926e-05, 6.126399999999838e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.130500000000108e-05, 6.130500000000108e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.133400000000316e-05, 6.130600000000055e-05, 6.133300000000022e-05, 6.131899999999718e-05, 6.13339999999997e-05, 6.129100000000151e-05, 6.134699999999979e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.134800000000273e-05, 6.130600000000055e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.057" endtime="20201029 12:44:30.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.052" endtime="20201029 12:44:30.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.063" endtime="20201029 12:44:30.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.062" endtime="20201029 12:44:30.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.060" endtime="20201029 12:44:30.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.700" endtime="20201029 12:44:30.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.699" endtime="20201029 12:44:30.084"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.092" endtime="20201029 12:44:30.109"></status>
</kw>
<msg timestamp="20201029 12:44:30.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.091" endtime="20201029 12:44:30.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.110" endtime="20201029 12:44:30.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.112" endtime="20201029 12:44:30.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.088" endtime="20201029 12:44:30.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.086" endtime="20201029 12:44:30.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.121" endtime="20201029 12:44:30.409"></status>
</kw>
<msg timestamp="20201029 12:44:30.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.120" endtime="20201029 12:44:30.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.414" endtime="20201029 12:44:30.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.422" endtime="20201029 12:44:30.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.117" endtime="20201029 12:44:30.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.116" endtime="20201029 12:44:30.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.428" level="INFO">${RESULT} = [{'diff': 6.238900000000297e-05}, {'diff': 6.129099999999804e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.132000000000012e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.425" endtime="20201029 12:44:30.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.432" level="INFO">${ACCURACY} = {'diff': [6.238900000000297e-05, 6.129099999999804e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.1333...</msg>
<status status="PASS" starttime="20201029 12:44:30.429" endtime="20201029 12:44:30.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.437" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.436" endtime="20201029 12:44:30.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.439" level="INFO">VALUE: [6.238900000000297e-05, 6.129099999999804e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.129100000000151e-05, 6.130499999999761e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.133400000000316e-05, 6.130500000000108e-05, 6.132000000000012e-05, 6.129099999999804e-05, 6.134699999999979e-05, 6.13339999999997e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.13339999999997e-05, 6.133300000000022e-05, 6.134699999999979e-05, 6.133300000000022e-05, 6.130500000000108e-05, 6.133300000000022e-05, 6.129199999999752e-05, 6.133300000000022e-05, 6.13339999999997e-05, 6.134699999999979e-05, 6.13339999999997e-05, 6.130600000000055e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.132000000000012e-05, 6.131900000000065e-05, 6.138799999999903e-05, 6.13339999999997e-05, 6.137499999999893e-05, 6.134699999999979e-05, 6.132000000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.438" endtime="20201029 12:44:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.433" endtime="20201029 12:44:30.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.444" endtime="20201029 12:44:30.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.443" endtime="20201029 12:44:30.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.441" endtime="20201029 12:44:30.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.085" endtime="20201029 12:44:30.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.084" endtime="20201029 12:44:30.465"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.473" endtime="20201029 12:44:30.491"></status>
</kw>
<msg timestamp="20201029 12:44:30.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.472" endtime="20201029 12:44:30.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.492" endtime="20201029 12:44:30.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.495" endtime="20201029 12:44:30.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.469" endtime="20201029 12:44:30.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.467" endtime="20201029 12:44:30.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.503" endtime="20201029 12:44:30.789"></status>
</kw>
<msg timestamp="20201029 12:44:30.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.502" endtime="20201029 12:44:30.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.793" endtime="20201029 12:44:30.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.801" endtime="20201029 12:44:30.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.499" endtime="20201029 12:44:30.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.498" endtime="20201029 12:44:30.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.808" level="INFO">${RESULT} = [{'diff': 6.243099999999821e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.132000000000012e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.132000000000012e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.805" endtime="20201029 12:44:30.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.812" level="INFO">${ACCURACY} = {'diff': [6.243099999999821e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.132000000000012e-05, 6.12499999999988e-05, 6.634799999999733e-05, 6.64169...</msg>
<status status="PASS" starttime="20201029 12:44:30.809" endtime="20201029 12:44:30.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.816" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.815" endtime="20201029 12:44:30.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.819" level="INFO">VALUE: [6.243099999999821e-05, 6.131900000000065e-05, 6.132000000000012e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.132000000000012e-05, 6.12499999999988e-05, 6.634799999999733e-05, 6.641699999999917e-05, 6.634699999999785e-05, 6.637500000000046e-05, 6.132000000000012e-05, 6.132000000000012e-05, 6.636100000000089e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.13339999999997e-05, 6.641699999999917e-05, 6.133300000000022e-05, 6.131900000000065e-05, 6.13339999999997e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.130600000000055e-05, 6.13339999999997e-05, 6.636100000000089e-05, 6.127800000000141e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.134699999999979e-05, 6.637499999999699e-05, 6.134699999999979e-05, 6.130600000000055e-05, 6.130600000000055e-05, 6.132000000000012e-05, 6.133300000000022e-05, 6.131899999999718e-05, 6.125000000000227e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.636100000000089e-05, 6.133300000000022e-05, 6.637500000000046e-05, 6.130600000000055e-05, 6.633300000000175e-05, 6.636099999999742e-05, 6.132000000000012e-05, 6.136100000000283e-05, 6.13339999999997e-05, 6.131900000000065e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.817" endtime="20201029 12:44:30.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.813" endtime="20201029 12:44:30.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.824" endtime="20201029 12:44:30.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.823" endtime="20201029 12:44:30.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.822" endtime="20201029 12:44:30.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.466" endtime="20201029 12:44:30.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.465" endtime="20201029 12:44:30.845"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.854" endtime="20201029 12:44:30.870"></status>
</kw>
<msg timestamp="20201029 12:44:30.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.852" endtime="20201029 12:44:30.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.872" endtime="20201029 12:44:30.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.874" endtime="20201029 12:44:30.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.850" endtime="20201029 12:44:30.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.848" endtime="20201029 12:44:30.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.883" endtime="20201029 12:44:31.169"></status>
</kw>
<msg timestamp="20201029 12:44:31.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:30.881" endtime="20201029 12:44:31.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021641, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:31.173" endtime="20201029 12:44:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.181" endtime="20201029 12:44:31.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.879" endtime="20201029 12:44:31.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.877" endtime="20201029 12:44:31.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.188" level="INFO">${RESULT} = [{'diff': 6.741700000000017e-05}, {'diff': 6.645799999999841e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.643100000000221e-05}, {'diff': 6.637500000000046e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.185" endtime="20201029 12:44:31.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.193" level="INFO">${ACCURACY} = {'diff': [6.741700000000017e-05, 6.645799999999841e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.643100000000221e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.6320...</msg>
<status status="PASS" starttime="20201029 12:44:31.189" endtime="20201029 12:44:31.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.197" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.196" endtime="20201029 12:44:31.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.200" level="INFO">VALUE: [6.741700000000017e-05, 6.645799999999841e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.643100000000221e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.632000000000166e-05, 6.631999999999819e-05, 6.641699999999917e-05, 6.634700000000132e-05, 6.629099999999957e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.641699999999917e-05, 6.630599999999862e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.637499999999699e-05, 6.640200000000013e-05, 6.637500000000046e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.63480000000008e-05, 6.643100000000221e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.643100000000221e-05, 6.634700000000132e-05, 6.634700000000132e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.641699999999917e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.634700000000132e-05, 6.63480000000008e-05, 6.638900000000003e-05, 6.634699999999785e-05, 6.630499999999914e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.636100000000089e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.198" endtime="20201029 12:44:31.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.194" endtime="20201029 12:44:31.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.205" endtime="20201029 12:44:31.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.203" endtime="20201029 12:44:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.202" endtime="20201029 12:44:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.846" endtime="20201029 12:44:31.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.845" endtime="20201029 12:44:31.225"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.234" endtime="20201029 12:44:31.250"></status>
</kw>
<msg timestamp="20201029 12:44:31.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.232" endtime="20201029 12:44:31.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.252" endtime="20201029 12:44:31.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.254" endtime="20201029 12:44:31.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.230" endtime="20201029 12:44:31.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.228" endtime="20201029 12:44:31.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.263" endtime="20201029 12:44:31.548"></status>
</kw>
<msg timestamp="20201029 12:44:31.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.262" endtime="20201029 12:44:31.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.553" endtime="20201029 12:44:31.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.561" endtime="20201029 12:44:31.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.259" endtime="20201029 12:44:31.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.257" endtime="20201029 12:44:31.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.567" level="INFO">${RESULT} = [{'diff': 6.744399999999984e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.637499999999699e-05}, {'diff': 6.638900000000003e-05}, {'diff': 6.636099999999742e-05}, {'diff': 6.64029999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:31.564" endtime="20201029 12:44:31.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.571" level="INFO">${ACCURACY} = {'diff': [6.744399999999984e-05, 6.637500000000046e-05, 6.637499999999699e-05, 6.638900000000003e-05, 6.636099999999742e-05, 6.64029999999996e-05, 6.636100000000089e-05, 6.637499999999699e-05, 6.63750...</msg>
<status status="PASS" starttime="20201029 12:44:31.568" endtime="20201029 12:44:31.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.576" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.575" endtime="20201029 12:44:31.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.579" level="INFO">VALUE: [6.744399999999984e-05, 6.637500000000046e-05, 6.637499999999699e-05, 6.638900000000003e-05, 6.636099999999742e-05, 6.64029999999996e-05, 6.636100000000089e-05, 6.637499999999699e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.64029999999996e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.631900000000218e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.633299999999828e-05, 6.636099999999742e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.631999999999819e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.636200000000037e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.631899999999871e-05, 6.634700000000132e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.634699999999785e-05, 6.637499999999699e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.577" endtime="20201029 12:44:31.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.572" endtime="20201029 12:44:31.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.584" endtime="20201029 12:44:31.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.582" endtime="20201029 12:44:31.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.581" endtime="20201029 12:44:31.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.226" endtime="20201029 12:44:31.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.226" endtime="20201029 12:44:31.605"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.613" endtime="20201029 12:44:31.631"></status>
</kw>
<msg timestamp="20201029 12:44:31.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.612" endtime="20201029 12:44:31.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.632" endtime="20201029 12:44:31.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.635" endtime="20201029 12:44:31.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.609" endtime="20201029 12:44:31.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.607" endtime="20201029 12:44:31.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.643" endtime="20201029 12:44:31.929"></status>
</kw>
<msg timestamp="20201029 12:44:31.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.642" endtime="20201029 12:44:31.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022681583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.933" endtime="20201029 12:44:31.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.942" endtime="20201029 12:44:31.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.639" endtime="20201029 12:44:31.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.638" endtime="20201029 12:44:31.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.948" level="INFO">${RESULT} = [{'diff': 6.740200000000113e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.636100000000089e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.945" endtime="20201029 12:44:31.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.952" level="INFO">${ACCURACY} = {'diff': [6.740200000000113e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.633400000000123e-05, 6.6347...</msg>
<status status="PASS" starttime="20201029 12:44:31.949" endtime="20201029 12:44:31.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.957" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.956" endtime="20201029 12:44:31.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.959" level="INFO">VALUE: [6.740200000000113e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.641699999999917e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.633400000000123e-05, 6.634700000000132e-05, 6.634699999999785e-05, 6.641700000000264e-05, 6.63480000000008e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.630500000000261e-05, 6.636100000000089e-05, 6.633299999999828e-05, 6.634700000000132e-05, 6.64159999999997e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.636099999999742e-05, 6.64159999999997e-05, 6.637499999999699e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.627799999999948e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.633399999999776e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.636099999999742e-05, 6.636099999999742e-05, 6.63619999999969e-05, 6.637499999999699e-05, 6.641699999999917e-05, 6.632000000000166e-05, 6.638900000000003e-05, 6.636200000000037e-05, 6.636099999999742e-05, 6.637500000000046e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.63480000000008e-05, 6.636100000000089e-05, 6.630499999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.958" endtime="20201029 12:44:31.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.953" endtime="20201029 12:44:31.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.965" endtime="20201029 12:44:31.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.963" endtime="20201029 12:44:31.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.962" endtime="20201029 12:44:31.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.606" endtime="20201029 12:44:31.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.605" endtime="20201029 12:44:31.985"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.994" endtime="20201029 12:44:32.014"></status>
</kw>
<msg timestamp="20201029 12:44:32.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.993" endtime="20201029 12:44:32.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.015" endtime="20201029 12:44:32.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.018" endtime="20201029 12:44:32.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.990" endtime="20201029 12:44:32.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.988" endtime="20201029 12:44:32.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.027" endtime="20201029 12:44:32.311"></status>
</kw>
<msg timestamp="20201029 12:44:32.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.025" endtime="20201029 12:44:32.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021855847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.315" endtime="20201029 12:44:32.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.323" endtime="20201029 12:44:32.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.023" endtime="20201029 12:44:32.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.021" endtime="20201029 12:44:32.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.330" level="INFO">${RESULT} = [{'diff': 0.0001351800000000021}, {'diff': 0.00013466600000000203}, {'diff': 0.00013470800000000074}, {'diff': 0.00013472200000000031}, {'diff': 0.00013470900000000022}, {'diff': 0.0001347229999999998...</msg>
<status status="PASS" starttime="20201029 12:44:32.327" endtime="20201029 12:44:32.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.334" level="INFO">${ACCURACY} = {'diff': [0.0001351800000000021, 0.00013466600000000203, 0.00013470800000000074, 0.00013472200000000031, 0.00013470900000000022, 0.0001347229999999998, 0.00013470800000000074, 0.00013472200000000031, ...</msg>
<status status="PASS" starttime="20201029 12:44:32.331" endtime="20201029 12:44:32.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.339" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.338" endtime="20201029 12:44:32.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.341" level="INFO">VALUE: [0.0001351800000000021, 0.00013466600000000203, 0.00013470800000000074, 0.00013472200000000031, 0.00013470900000000022, 0.0001347229999999998, 0.00013470800000000074, 0.00013472200000000031, 0.0001347229999999998, 0.00013469400000000117, 0.0001346939999999977, 0.00013474999999999945, 0.00013470800000000074, 0.0001347229999999998, 0.00013470900000000022, 0.00013470900000000022, 0.00013470799999999727, 0.0001346939999999977, 0.00013470800000000074, 0.00013472200000000031, 0.00013472199999999684, 0.00013470799999999727, 0.00013470800000000074, 0.00013469500000000065, 0.00013472200000000031, 0.00013473599999999988, 0.00013470900000000022, 0.00013470800000000074, 0.00013473599999999988, 0.0001347229999999998, 0.00013470900000000022, 0.00013469500000000065, 0.00013473599999999988, 0.00013470800000000074, 0.00013472200000000031, 0.00013470799999999727, 0.00013470900000000022, 0.00013472200000000031, 0.00013469500000000065, 0.00013470800000000074, 0.00013473599999999988, 0.00013469500000000065, 0.00013472200000000031, 0.00013469500000000065, 0.00013470799999999727, 0.00013470800000000074, 0.00013470799999999727, 0.00013469499999999718, 0.00013470900000000022, 0.00013470800000000074]</msg>
<status status="PASS" starttime="20201029 12:44:32.340" endtime="20201029 12:44:32.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.335" endtime="20201029 12:44:32.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.346" endtime="20201029 12:44:32.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.345" endtime="20201029 12:44:32.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.344" endtime="20201029 12:44:32.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.986" endtime="20201029 12:44:32.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.986" endtime="20201029 12:44:32.367"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.375" endtime="20201029 12:44:32.395"></status>
</kw>
<msg timestamp="20201029 12:44:32.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.374" endtime="20201029 12:44:32.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.397" endtime="20201029 12:44:32.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.399" endtime="20201029 12:44:32.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.371" endtime="20201029 12:44:32.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.369" endtime="20201029 12:44:32.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.408" endtime="20201029 12:44:32.696"></status>
</kw>
<msg timestamp="20201029 12:44:32.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.407" endtime="20201029 12:44:32.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.700" endtime="20201029 12:44:32.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.708" endtime="20201029 12:44:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.404" endtime="20201029 12:44:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.403" endtime="20201029 12:44:32.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.715" level="INFO">${RESULT} = [{'diff': 0.00013523600000000038}, {'diff': 0.00013474999999999945}, {'diff': 0.00013470800000000074}, {'diff': 0.00013473599999999988}, {'diff': 0.00013473599999999988}, {'diff': 0.000134708000000000...</msg>
<status status="PASS" starttime="20201029 12:44:32.712" endtime="20201029 12:44:32.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.719" level="INFO">${ACCURACY} = {'diff': [0.00013523600000000038, 0.00013474999999999945, 0.00013470800000000074, 0.00013473599999999988, 0.00013473599999999988, 0.00013470800000000074, 0.00013473599999999988, 0.00013470799999999727...</msg>
<status status="PASS" starttime="20201029 12:44:32.716" endtime="20201029 12:44:32.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.723" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.722" endtime="20201029 12:44:32.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.725" level="INFO">VALUE: [0.00013523600000000038, 0.00013474999999999945, 0.00013470800000000074, 0.00013473599999999988, 0.00013473599999999988, 0.00013470800000000074, 0.00013473599999999988, 0.00013470799999999727, 0.00013465299999999847, 0.0001347229999999998, 0.00013469500000000065, 0.00013472200000000031, 0.0001346809999999976, 0.00013470800000000074, 0.00013479200000000163, 0.00013470800000000074, 0.00013472200000000031, 0.00013470800000000074, 0.00013473699999999936, 0.00013469400000000117, 0.00013473599999999988, 0.00013470799999999727, 0.00013465300000000194, 0.00013473599999999988, 0.00013470900000000022, 0.00013468100000000108, 0.00013470800000000074, 0.00013469500000000065, 0.00013470800000000074, 0.00013472200000000031, 0.00013469500000000065, 0.00013470800000000074, 0.00013469500000000065, 0.0001347229999999998, 0.00013472200000000031, 0.00013473599999999988, 0.00013472199999999684, 0.00013466599999999856, 0.00013472200000000031, 0.00013470900000000022, 0.00013474999999999945, 0.0001346800000000016, 0.00013472199999999684, 0.00013472199999999684, 0.00013469400000000117, 0.00013465299999999847, 0.00013470800000000074, 0.00013472200000000031, 0.00013467999999999813, 0.00013469400000000117]</msg>
<status status="PASS" starttime="20201029 12:44:32.724" endtime="20201029 12:44:32.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.720" endtime="20201029 12:44:32.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.731" endtime="20201029 12:44:32.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.729" endtime="20201029 12:44:32.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.728" endtime="20201029 12:44:32.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.368" endtime="20201029 12:44:32.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.367" endtime="20201029 12:44:32.751"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.760" endtime="20201029 12:44:32.781"></status>
</kw>
<msg timestamp="20201029 12:44:32.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.758" endtime="20201029 12:44:32.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.782" endtime="20201029 12:44:32.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.785" endtime="20201029 12:44:32.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.756" endtime="20201029 12:44:32.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.754" endtime="20201029 12:44:32.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.794" endtime="20201029 12:44:33.079"></status>
</kw>
<msg timestamp="20201029 12:44:33.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.792" endtime="20201029 12:44:33.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.083" endtime="20201029 12:44:33.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.091" endtime="20201029 12:44:33.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.789" endtime="20201029 12:44:33.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.788" endtime="20201029 12:44:33.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.097" level="INFO">${RESULT} = [{'diff': 0.00013520800000000124}, {'diff': 0.00013470800000000074}, {'diff': 0.00013472200000000031}, {'diff': 0.00013469500000000065}, {'diff': 0.00013470799999999727}, {'diff': 0.000134693999999997...</msg>
<status status="PASS" starttime="20201029 12:44:33.094" endtime="20201029 12:44:33.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.101" level="INFO">${ACCURACY} = {'diff': [0.00013520800000000124, 0.00013470800000000074, 0.00013472200000000031, 0.00013469500000000065, 0.00013470799999999727, 0.0001346939999999977, 0.00013469400000000117, 0.00013469500000000065,...</msg>
<status status="PASS" starttime="20201029 12:44:33.098" endtime="20201029 12:44:33.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.106" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.105" endtime="20201029 12:44:33.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.109" level="INFO">VALUE: [0.00013520800000000124, 0.00013470800000000074, 0.00013472200000000031, 0.00013469500000000065, 0.00013470799999999727, 0.0001346939999999977, 0.00013469400000000117, 0.00013469500000000065, 0.00013469400000000117, 0.00013470800000000074, 0.0001346809999999976, 0.00013467999999999813, 0.00013476299999999955, 0.00013470799999999727, 0.0001347229999999998, 0.00013470900000000022, 0.000134651999999999, 0.00013473599999999988, 0.00013470900000000022, 0.00013473599999999988, 0.00013470900000000022, 0.00013473699999999936, 0.00013472200000000031, 0.00013469400000000117, 0.00013470800000000074, 0.00013470900000000022, 0.00013469500000000065, 0.00013470800000000074, 0.00013472200000000031, 0.00013470800000000074, 0.00013473599999999988, 0.00013472200000000031, 0.00013470900000000022, 0.00013472200000000031, 0.00013473700000000283, 0.00013469499999999718, 0.00013472200000000031, 0.00013473699999999936, 0.00013474999999999945, 0.00013470900000000022, 0.00013470800000000074, 0.0001346939999999977, 0.00013469500000000065, 0.00013470900000000022, 0.00013472200000000031, 0.00013469400000000117, 0.00013469500000000065, 0.00013470799999999727, 0.00013472199999999684, 0.0001347229999999998]</msg>
<status status="PASS" starttime="20201029 12:44:33.107" endtime="20201029 12:44:33.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.102" endtime="20201029 12:44:33.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.114" endtime="20201029 12:44:33.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.112" endtime="20201029 12:44:33.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.111" endtime="20201029 12:44:33.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.752" endtime="20201029 12:44:33.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.752" endtime="20201029 12:44:33.134"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.143" endtime="20201029 12:44:33.163"></status>
</kw>
<msg timestamp="20201029 12:44:33.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.141" endtime="20201029 12:44:33.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.164" endtime="20201029 12:44:33.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.167" endtime="20201029 12:44:33.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.139" endtime="20201029 12:44:33.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.137" endtime="20201029 12:44:33.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.176" endtime="20201029 12:44:33.460"></status>
</kw>
<msg timestamp="20201029 12:44:33.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.174" endtime="20201029 12:44:33.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021839167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.464" endtime="20201029 12:44:33.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.472" endtime="20201029 12:44:33.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.172" endtime="20201029 12:44:33.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.170" endtime="20201029 12:44:33.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.479" level="INFO">${RESULT} = [{'diff': 0.00013519500000000115}, {'diff': 0.00013469499999999718}, {'diff': 0.00013468100000000108}, {'diff': 0.00013470900000000022}, {'diff': 0.00013473599999999988}, {'diff': 0.000134694999999997...</msg>
<status status="PASS" starttime="20201029 12:44:33.475" endtime="20201029 12:44:33.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.483" level="INFO">${ACCURACY} = {'diff': [0.00013519500000000115, 0.00013469499999999718, 0.00013468100000000108, 0.00013470900000000022, 0.00013473599999999988, 0.00013469499999999718, 0.00013470799999999727, 0.00013473599999999988...</msg>
<status status="PASS" starttime="20201029 12:44:33.480" endtime="20201029 12:44:33.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.488" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.487" endtime="20201029 12:44:33.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.490" level="INFO">VALUE: [0.00013519500000000115, 0.00013469499999999718, 0.00013468100000000108, 0.00013470900000000022, 0.00013473599999999988, 0.00013469499999999718, 0.00013470799999999727, 0.00013473599999999988, 0.00013469400000000117, 0.0001347229999999998, 0.00013469400000000117, 0.0001347229999999998, 0.00013469400000000117, 0.0001346939999999977, 0.0001347229999999998, 0.00013466699999999804, 0.00013479199999999816, 0.00013470800000000074, 0.00013472200000000031, 0.00013462499999999933, 0.00013469400000000117, 0.00013472200000000031, 0.00013466600000000203, 0.00013470800000000074, 0.00013473599999999988, 0.0001347779999999986, 0.00013470800000000074, 0.00013469499999999718, 0.00013472200000000031, 0.00013467999999999813, 0.00013470799999999727, 0.00013470800000000074, 0.00013469400000000117, 0.00013469400000000117, 0.00013473599999999988, 0.00013472200000000031, 0.00013473599999999988, 0.00013470800000000074, 0.00013469500000000065, 0.0001346670000000015, 0.00013470800000000074, 0.00013467999999999813, 0.00013470800000000074, 0.00013470800000000074, 0.0001347640000000025, 0.00013472200000000031, 0.00013470800000000074, 0.00013473599999999988, 0.00013472200000000031, 0.00013469400000000117]</msg>
<status status="PASS" starttime="20201029 12:44:33.489" endtime="20201029 12:44:33.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.484" endtime="20201029 12:44:33.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.495" endtime="20201029 12:44:33.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.494" endtime="20201029 12:44:33.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.493" endtime="20201029 12:44:33.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.135" endtime="20201029 12:44:33.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.135" endtime="20201029 12:44:33.516"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.525" endtime="20201029 12:44:34.543"></status>
</kw>
<msg timestamp="20201029 12:44:34.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:44:33.523" endtime="20201029 12:44:34.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 44', 'msg': ['sleep_accuracy_timer_sleep 44\r\n', '{"cmd":"sleep_accuracy: timer_sleep(44)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201029 12:44:34.546" endtime="20201029 12:44:34.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.555" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201029 12:44:34.552" endtime="20201029 12:44:34.556"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.520" endtime="20201029 12:44:34.557"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.518" endtime="20201029 12:44:34.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.566" endtime="20201029 12:44:34.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.563" endtime="20201029 12:44:34.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.561" endtime="20201029 12:44:34.590"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.517" endtime="20201029 12:44:34.590"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:33.516" endtime="20201029 12:44:34.591"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:17.063" endtime="20201029 12:44:34.592"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201029 12:44:16.997" endtime="20201029 12:44:34.593" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201029 12:43:37.068" endtime="20201029 12:44:34.600"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.679" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:44:34.688" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:35.833" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:44:34.678" endtime="20201029 12:44:35.834"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.836" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 12:44:35.835" endtime="20201029 12:44:35.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.677" endtime="20201029 12:44:35.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.839" endtime="20201029 12:44:36.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.838" endtime="20201029 12:44:36.024"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.037" endtime="20201029 12:44:36.050"></status>
</kw>
<msg timestamp="20201029 12:44:36.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.035" endtime="20201029 12:44:36.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.051" endtime="20201029 12:44:36.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.056" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:36.054" endtime="20201029 12:44:36.056"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.033" endtime="20201029 12:44:36.057"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.030" endtime="20201029 12:44:36.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.029" endtime="20201029 12:44:36.058"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:36.066" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:36.064" endtime="20201029 12:44:36.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.060" endtime="20201029 12:44:36.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.028" endtime="20201029 12:44:36.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.028" endtime="20201029 12:44:36.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.069" endtime="20201029 12:44:36.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.026" endtime="20201029 12:44:36.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.075" endtime="20201029 12:44:36.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.025" endtime="20201029 12:44:36.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.676" endtime="20201029 12:44:36.080"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.091" endtime="20201029 12:44:36.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.088" endtime="20201029 12:44:36.114"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.143" endtime="20201029 12:44:36.159"></status>
</kw>
<msg timestamp="20201029 12:44:36.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.140" endtime="20201029 12:44:36.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.161" endtime="20201029 12:44:36.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.165" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:36.163" endtime="20201029 12:44:36.166"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.135" endtime="20201029 12:44:36.167"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.130" endtime="20201029 12:44:36.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.127" endtime="20201029 12:44:36.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:36.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:36.171" endtime="20201029 12:44:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.169" endtime="20201029 12:44:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.125" endtime="20201029 12:44:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.124" endtime="20201029 12:44:36.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.173" endtime="20201029 12:44:36.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.121" endtime="20201029 12:44:36.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.116" endtime="20201029 12:44:36.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.086" endtime="20201029 12:44:36.177"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.185" endtime="20201029 12:44:42.277"></status>
</kw>
<msg timestamp="20201029 12:44:42.278" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.183" endtime="20201029 12:44:42.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.279" endtime="20201029 12:44:42.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.282" endtime="20201029 12:44:42.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.181" endtime="20201029 12:44:42.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.179" endtime="20201029 12:44:42.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.287" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:44:42.285" endtime="20201029 12:44:42.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.291" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:42.290" endtime="20201029 12:44:42.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.294" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:42.293" endtime="20201029 12:44:42.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.287" endtime="20201029 12:44:42.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.299" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:42.298" endtime="20201029 12:44:42.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.301" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:42.300" endtime="20201029 12:44:42.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.295" endtime="20201029 12:44:42.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.305" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:42.304" endtime="20201029 12:44:42.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.308" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:44:42.306" endtime="20201029 12:44:42.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.302" endtime="20201029 12:44:42.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.315" endtime="20201029 12:44:42.615"></status>
</kw>
<msg timestamp="20201029 12:44:42.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.083884681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183583139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.313" endtime="20201029 12:44:42.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.083884681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.183583139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.620" endtime="20201029 12:44:42.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.628" endtime="20201029 12:44:42.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.311" endtime="20201029 12:44:42.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.309" endtime="20201029 12:44:42.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:42.635" level="INFO">${FILTERED} = [{'diff': 0.099698458}, {'diff': 0.09959543099999998}, {'diff': 0.09960423600000001}, {'diff': 0.09960629099999996}, {'diff': 0.099607528}, {'diff': 0.09960301400000005}, {'diff': 0.09960094500000005}...</msg>
<status status="PASS" starttime="20201029 12:44:42.632" endtime="20201029 12:44:42.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.640" level="INFO">${RESULT} = {'diff': [0.099698458, 0.09959543099999998, 0.09960423600000001, 0.09960629099999996, 0.099607528, 0.09960301400000005, 0.09960094500000005, 0.09960124999999997, 0.09960213900000003, 0.099603166999999...</msg>
<status status="PASS" starttime="20201029 12:44:42.636" endtime="20201029 12:44:42.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.644" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:42.643" endtime="20201029 12:44:42.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.646" level="INFO">VALUE: [0.099698458, 0.09959543099999998, 0.09960423600000001, 0.09960629099999996, 0.099607528, 0.09960301400000005, 0.09960094500000005, 0.09960124999999997, 0.09960213900000003, 0.09960316699999994, 0.0996033890000001, 0.09959965300000007, 0.09959937500000016, 0.09959423599999995, 0.09960222200000013, 0.099603361, 0.09960243000000002, 0.09960457000000011, 0.09960488900000009, 0.09960737499999994, 0.099605736, 0.09960523599999993, 0.09960744399999966, 0.09960391700000004, 0.09960305499999977, 0.0996014999999999, 0.09959286200000017, 0.09958338899999974, 0.09958541600000004, 0.09958580500000025, 0.09959251400000024, 0.0995905269999997, 0.09958488899999995, 0.09958581900000008, 0.0995840969999997, 0.09958086099999974, 0.09957469400000019, 0.09958061099999993, 0.09958187500000015, 0.09958309700000001, 0.09958276399999999, 0.09958333400000008, 0.09958765300000039, 0.09958822300000048, 0.09958977800000035, 0.09958602799999916, 0.09958870799999975, 0.09958498599999999, 0.09958283399999956, 0.09958174999999958, 0.09958434699999952]</msg>
<status status="PASS" starttime="20201029 12:44:42.645" endtime="20201029 12:44:42.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.640" endtime="20201029 12:44:42.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.177" endtime="20201029 12:44:42.647"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:36.081" endtime="20201029 12:44:42.648" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.654" endtime="20201029 12:44:42.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.653" endtime="20201029 12:44:42.674"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.687" endtime="20201029 12:44:42.700"></status>
</kw>
<msg timestamp="20201029 12:44:42.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.686" endtime="20201029 12:44:42.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.701" endtime="20201029 12:44:42.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.706" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:42.704" endtime="20201029 12:44:42.706"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:42.683" endtime="20201029 12:44:42.707"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:42.681" endtime="20201029 12:44:42.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.680" endtime="20201029 12:44:42.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:42.712" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:42.711" endtime="20201029 12:44:42.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.709" endtime="20201029 12:44:42.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.679" endtime="20201029 12:44:42.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.678" endtime="20201029 12:44:42.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.714" endtime="20201029 12:44:42.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.677" endtime="20201029 12:44:42.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.675" endtime="20201029 12:44:42.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.652" endtime="20201029 12:44:42.716"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.726" endtime="20201029 12:44:48.832"></status>
</kw>
<msg timestamp="20201029 12:44:48.833" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.724" endtime="20201029 12:44:48.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.841" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.836" endtime="20201029 12:44:48.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.844" endtime="20201029 12:44:48.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.720" endtime="20201029 12:44:48.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.719" endtime="20201029 12:44:48.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.859" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:44:48.854" endtime="20201029 12:44:48.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.868" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:48.866" endtime="20201029 12:44:48.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.872" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:48.870" endtime="20201029 12:44:48.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.861" endtime="20201029 12:44:48.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.879" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:48.878" endtime="20201029 12:44:48.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.881" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:48.880" endtime="20201029 12:44:48.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.875" endtime="20201029 12:44:48.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.886" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:48.885" endtime="20201029 12:44:48.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.888" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:44:48.887" endtime="20201029 12:44:48.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.883" endtime="20201029 12:44:48.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.895" endtime="20201029 12:44:49.192"></status>
</kw>
<msg timestamp="20201029 12:44:49.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062753319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162550569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.894" endtime="20201029 12:44:49.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062753319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162550569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.196" endtime="20201029 12:44:49.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.204" endtime="20201029 12:44:49.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.891" endtime="20201029 12:44:49.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.889" endtime="20201029 12:44:49.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:49.211" level="INFO">${FILTERED} = [{'diff': 0.09979725}, {'diff': 0.09976609700000003}, {'diff': 0.09932352699999997}, {'diff': 0.09960076400000001}, {'diff': 0.09961245799999996}, {'diff': 0.09960783400000006}, {'diff': 0.09960262500...</msg>
<status status="PASS" starttime="20201029 12:44:49.208" endtime="20201029 12:44:49.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.216" level="INFO">${RESULT} = {'diff': [0.09979725, 0.09976609700000003, 0.09932352699999997, 0.09960076400000001, 0.09961245799999996, 0.09960783400000006, 0.09960262500000006, 0.09959891599999993, 0.0996008610000001, 0.099596111...</msg>
<status status="PASS" starttime="20201029 12:44:49.212" endtime="20201029 12:44:49.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.220" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:49.219" endtime="20201029 12:44:49.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.222" level="INFO">VALUE: [0.09979725, 0.09976609700000003, 0.09932352699999997, 0.09960076400000001, 0.09961245799999996, 0.09960783400000006, 0.09960262500000006, 0.09959891599999993, 0.0996008610000001, 0.09959611199999996, 0.09959505600000007, 0.09959612500000015, 0.0995941939999998, 0.09958974999999981, 0.099592334, 0.09959505600000007, 0.0995907359999999, 0.09958898699999996, 0.0995929579999999, 0.09959880500000007, 0.0996002220000003, 0.0995995409999999, 0.09959401400000001, 0.09959227800000026, 0.09959684699999993, 0.09959799999999985, 0.09960012500000026, 0.09960722199999994, 0.09960254199999996, 0.09960216699999958, 0.09960251299999978, 0.09959291699999984, 0.09959633399999968, 0.09960277799999995, 0.09959679099999974, 0.09959293000000002, 0.09959833299999987, 0.09960006900000007, 0.09960140299999987, 0.09959916599999996, 0.09959544500000028, 0.09959363900000007, 0.09959504200000069, 0.09959344399999992, 0.0995933890000007, 0.09958891700000017, 0.09958977799999946, 0.09959037500000001, 0.09959198600000008, 0.09959008299999983, 0.09959055600000077]</msg>
<status status="PASS" starttime="20201029 12:44:49.221" endtime="20201029 12:44:49.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.216" endtime="20201029 12:44:49.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.717" endtime="20201029 12:44:49.223"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:42.649" endtime="20201029 12:44:49.224" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.230" endtime="20201029 12:44:49.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.229" endtime="20201029 12:44:49.250"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.263" endtime="20201029 12:44:49.276"></status>
</kw>
<msg timestamp="20201029 12:44:49.276" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.261" endtime="20201029 12:44:49.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.279" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.277" endtime="20201029 12:44:49.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.282" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:49.280" endtime="20201029 12:44:49.282"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:49.259" endtime="20201029 12:44:49.283"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:49.256" endtime="20201029 12:44:49.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.255" endtime="20201029 12:44:49.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:49.287" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:49.287" endtime="20201029 12:44:49.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.284" endtime="20201029 12:44:49.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.254" endtime="20201029 12:44:49.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.254" endtime="20201029 12:44:49.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.289" endtime="20201029 12:44:49.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.253" endtime="20201029 12:44:49.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.251" endtime="20201029 12:44:49.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.228" endtime="20201029 12:44:49.292"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.300" endtime="20201029 12:44:55.401"></status>
</kw>
<msg timestamp="20201029 12:44:55.402" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.299" endtime="20201029 12:44:55.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.407" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.404" endtime="20201029 12:44:55.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.409" endtime="20201029 12:44:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.296" endtime="20201029 12:44:55.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.294" endtime="20201029 12:44:55.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.419" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:44:55.416" endtime="20201029 12:44:55.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.428" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:55.426" endtime="20201029 12:44:55.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.432" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:44:55.430" endtime="20201029 12:44:55.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.421" endtime="20201029 12:44:55.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.442" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:44:55.440" endtime="20201029 12:44:55.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.446" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:44:55.444" endtime="20201029 12:44:55.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.435" endtime="20201029 12:44:55.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.455" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:44:55.453" endtime="20201029 12:44:55.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.460" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:44:55.458" endtime="20201029 12:44:55.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.449" endtime="20201029 12:44:55.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.477" endtime="20201029 12:44:55.776"></status>
</kw>
<msg timestamp="20201029 12:44:55.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061425653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16165525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:55.472" endtime="20201029 12:44:55.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061425653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.16165525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:55.780" endtime="20201029 12:44:55.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.789" endtime="20201029 12:44:55.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.466" endtime="20201029 12:44:55.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.463" endtime="20201029 12:44:55.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:44:55.795" level="INFO">${FILTERED} = [{'diff': 0.100229597}, {'diff': 0.09906362500000002}, {'diff': 0.099592764}, {'diff': 0.09959637499999996}, {'diff': 0.09959604099999997}, {'diff': 0.09959676399999995}, {'diff': 0.09959337499999998}...</msg>
<status status="PASS" starttime="20201029 12:44:55.792" endtime="20201029 12:44:55.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.799" level="INFO">${RESULT} = {'diff': [0.100229597, 0.09906362500000002, 0.099592764, 0.09959637499999996, 0.09959604099999997, 0.09959676399999995, 0.09959337499999998, 0.09959316699999998, 0.09960073599999997, 0.099602430999999...</msg>
<status status="PASS" starttime="20201029 12:44:55.796" endtime="20201029 12:44:55.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.803" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:44:55.802" endtime="20201029 12:44:55.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.806" level="INFO">VALUE: [0.100229597, 0.09906362500000002, 0.099592764, 0.09959637499999996, 0.09959604099999997, 0.09959676399999995, 0.09959337499999998, 0.09959316699999998, 0.09960073599999997, 0.09960243099999988, 0.0996017090000001, 0.09959806999999987, 0.09959387500000005, 0.09959520799999999, 0.09959580599999995, 0.0995999729999999, 0.09959986100000018, 0.09959411100000004, 0.09959336099999994, 0.09959356899999983, 0.09960052799999985, 0.0995991110000003, 0.0996032360000001, 0.09960342999999972, 0.09960692999999976, 0.09960641600000031, 0.09960309700000014, 0.09960327800000002, 0.09960276399999968, 0.09959404100000002, 0.09959363900000007, 0.09959306899999998, 0.09959620800000035, 0.09959134700000005, 0.09959801399999968, 0.09959530500000024, 0.0995937640000002, 0.09959390300000015, 0.09959284699999982, 0.09959391699999998, 0.09959005500000018, 0.09959749999999978, 0.09960063800000007, 0.09959187499999977, 0.09959052700000015, 0.09959518100000064, 0.09959268099999985, 0.09960280500000085, 0.09959962499999975, 0.09959556899999988, 0.09960026400000022]</msg>
<status status="PASS" starttime="20201029 12:44:55.805" endtime="20201029 12:44:55.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.800" endtime="20201029 12:44:55.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.293" endtime="20201029 12:44:55.807"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:49.225" endtime="20201029 12:44:55.808" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.814" endtime="20201029 12:44:55.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.813" endtime="20201029 12:44:55.834"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.848" endtime="20201029 12:44:55.860"></status>
</kw>
<msg timestamp="20201029 12:44:55.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.846" endtime="20201029 12:44:55.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.861" endtime="20201029 12:44:55.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.866" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:55.864" endtime="20201029 12:44:55.866"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:55.843" endtime="20201029 12:44:55.867"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:55.841" endtime="20201029 12:44:55.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.840" endtime="20201029 12:44:55.868"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:55.872" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:55.871" endtime="20201029 12:44:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.868" endtime="20201029 12:44:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.839" endtime="20201029 12:44:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.839" endtime="20201029 12:44:55.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.873" endtime="20201029 12:44:55.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.836" endtime="20201029 12:44:55.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.835" endtime="20201029 12:44:55.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.811" endtime="20201029 12:44:55.876"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.884" endtime="20201029 12:45:01.981"></status>
</kw>
<msg timestamp="20201029 12:45:01.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.883" endtime="20201029 12:45:01.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.987" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.984" endtime="20201029 12:45:01.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.989" endtime="20201029 12:45:01.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.880" endtime="20201029 12:45:01.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.878" endtime="20201029 12:45:01.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.999" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:45:01.996" endtime="20201029 12:45:02.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.008" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:02.006" endtime="20201029 12:45:02.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.014" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:02.010" endtime="20201029 12:45:02.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.001" endtime="20201029 12:45:02.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.024" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:02.022" endtime="20201029 12:45:02.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.028" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:02.026" endtime="20201029 12:45:02.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.017" endtime="20201029 12:45:02.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.038" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:02.036" endtime="20201029 12:45:02.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.042" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:45:02.040" endtime="20201029 12:45:02.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.031" endtime="20201029 12:45:02.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.057" endtime="20201029 12:45:02.360"></status>
</kw>
<msg timestamp="20201029 12:45:02.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061765944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162425931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.054" endtime="20201029 12:45:02.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061765944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162425931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.365" endtime="20201029 12:45:02.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.373" endtime="20201029 12:45:02.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.049" endtime="20201029 12:45:02.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.045" endtime="20201029 12:45:02.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:02.379" level="INFO">${FILTERED} = [{'diff': 0.10065998699999999}, {'diff': 0.09980287500000001}, {'diff': 0.09847697300000002}, {'diff': 0.09960316699999999}, {'diff': 0.09960423599999996}, {'diff': 0.099599153}, {'diff': 0.0996029720...</msg>
<status status="PASS" starttime="20201029 12:45:02.376" endtime="20201029 12:45:02.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.386" level="INFO">${RESULT} = {'diff': [0.10065998699999999, 0.09980287500000001, 0.09847697300000002, 0.09960316699999999, 0.09960423599999996, 0.099599153, 0.09960297200000001, 0.09960344399999999, 0.09960519499999998, 0.0996056...</msg>
<status status="PASS" starttime="20201029 12:45:02.380" endtime="20201029 12:45:02.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.390" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:02.389" endtime="20201029 12:45:02.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.392" level="INFO">VALUE: [0.10065998699999999, 0.09980287500000001, 0.09847697300000002, 0.09960316699999999, 0.09960423599999996, 0.099599153, 0.09960297200000001, 0.09960344399999999, 0.09960519499999998, 0.09960566700000006, 0.09960834699999999, 0.09960340299999992, 0.09959877699999997, 0.09959869399999999, 0.09959929199999995, 0.09960079100000008, 0.09959419400000002, 0.0996079299999999, 0.09960673599999992, 0.09960887499999971, 0.09961070800000016, 0.0996094030000001, 0.0996131250000003, 0.09960208299999973, 0.09959334699999989, 0.09959743000000021, 0.09958905500000004, 0.09959094400000001, 0.09959691699999995, 0.09959631999999985, 0.09959879199999966, 0.09959270799999986, 0.09959761100000009, 0.0995958339999996, 0.09959913899999995, 0.09960133299999985, 0.09960366600000015, 0.09960056999999978, 0.09960130600000028, 0.09960265300000026, 0.0995902080000004, 0.09959107000000067, 0.09959143000000026, 0.09959304100000033, 0.09959037500000001, 0.09958911100000023, 0.09958331899999973, 0.09958433300000014, 0.09958301399999936, 0.09959033300000009, 0.09959188900000004]</msg>
<status status="PASS" starttime="20201029 12:45:02.391" endtime="20201029 12:45:02.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.387" endtime="20201029 12:45:02.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.877" endtime="20201029 12:45:02.394"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:55.809" endtime="20201029 12:45:02.394" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.400" endtime="20201029 12:45:02.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.399" endtime="20201029 12:45:02.420"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.433" endtime="20201029 12:45:02.446"></status>
</kw>
<msg timestamp="20201029 12:45:02.446" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.432" endtime="20201029 12:45:02.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.447" endtime="20201029 12:45:02.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:02.450" endtime="20201029 12:45:02.452"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:02.429" endtime="20201029 12:45:02.452"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:02.427" endtime="20201029 12:45:02.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.426" endtime="20201029 12:45:02.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:02.458" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:02.457" endtime="20201029 12:45:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.455" endtime="20201029 12:45:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.425" endtime="20201029 12:45:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.424" endtime="20201029 12:45:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.459" endtime="20201029 12:45:02.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.423" endtime="20201029 12:45:02.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.421" endtime="20201029 12:45:02.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.398" endtime="20201029 12:45:02.462"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.471" endtime="20201029 12:45:08.568"></status>
</kw>
<msg timestamp="20201029 12:45:08.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.470" endtime="20201029 12:45:08.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.571" endtime="20201029 12:45:08.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.577" endtime="20201029 12:45:08.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.466" endtime="20201029 12:45:08.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.464" endtime="20201029 12:45:08.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.588" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:45:08.584" endtime="20201029 12:45:08.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.597" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:08.595" endtime="20201029 12:45:08.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.601" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:08.599" endtime="20201029 12:45:08.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.590" endtime="20201029 12:45:08.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.611" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:08.609" endtime="20201029 12:45:08.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.615" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:08.613" endtime="20201029 12:45:08.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.604" endtime="20201029 12:45:08.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.625" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:08.623" endtime="20201029 12:45:08.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.629" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:45:08.627" endtime="20201029 12:45:08.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.618" endtime="20201029 12:45:08.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.644" endtime="20201029 12:45:08.947"></status>
</kw>
<msg timestamp="20201029 12:45:08.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062577028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163725764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.641" endtime="20201029 12:45:08.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062577028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163725764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.952" endtime="20201029 12:45:08.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.960" endtime="20201029 12:45:08.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.636" endtime="20201029 12:45:08.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.632" endtime="20201029 12:45:08.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:08.966" level="INFO">${FILTERED} = [{'diff': 0.10114873599999999}, {'diff': 0.099795513}, {'diff': 0.09797130599999998}, {'diff': 0.09959466699999997}, {'diff': 0.099590138}, {'diff': 0.09959315300000005}, {'diff': 0.09959659700000001}...</msg>
<status status="PASS" starttime="20201029 12:45:08.963" endtime="20201029 12:45:08.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.971" level="INFO">${RESULT} = {'diff': [0.10114873599999999, 0.099795513, 0.09797130599999998, 0.09959466699999997, 0.099590138, 0.09959315300000005, 0.09959659700000001, 0.09959526400000007, 0.099592444, 0.09959227799999992, 0.09...</msg>
<status status="PASS" starttime="20201029 12:45:08.967" endtime="20201029 12:45:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.975" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:08.974" endtime="20201029 12:45:08.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.977" level="INFO">VALUE: [0.10114873599999999, 0.099795513, 0.09797130599999998, 0.09959466699999997, 0.099590138, 0.09959315300000005, 0.09959659700000001, 0.09959526400000007, 0.099592444, 0.09959227799999992, 0.09958768099999982, 0.09958668100000012, 0.09959740299999997, 0.09959934700000006, 0.09960130600000006, 0.09960087499999992, 0.0995972220000001, 0.099597763, 0.09959644499999998, 0.09959652800000018, 0.09959717999999995, 0.09959747200000013, 0.099592291, 0.09959431899999993, 0.09959252800000007, 0.09959050000000014, 0.09958713900000005, 0.09959307000000006, 0.09959715300000038, 0.09960088900000041, 0.099597889, 0.09959681899999984, 0.09960138900000004, 0.0995982780000002, 0.09959301400000031, 0.09959468099999969, 0.09959645800000017, 0.09960006900000007, 0.09960898599999979, 0.09960905600000025, 0.09960701400000005, 0.09961295799999981, 0.09961144399999977, 0.09961047200000017, 0.09961009799999943, 0.09960198600000059, 0.09960599999999964, 0.09960738899999999, 0.09960813899999987, 0.09960819500000007, 0.09960577799999992]</msg>
<status status="PASS" starttime="20201029 12:45:08.976" endtime="20201029 12:45:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.972" endtime="20201029 12:45:08.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.462" endtime="20201029 12:45:08.978"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:02.395" endtime="20201029 12:45:08.979" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.985" endtime="20201029 12:45:09.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.984" endtime="20201029 12:45:09.005"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.018" endtime="20201029 12:45:09.031"></status>
</kw>
<msg timestamp="20201029 12:45:09.031" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.017" endtime="20201029 12:45:09.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.033" endtime="20201029 12:45:09.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.037" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:09.035" endtime="20201029 12:45:09.038"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:09.014" endtime="20201029 12:45:09.038"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:09.012" endtime="20201029 12:45:09.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.011" endtime="20201029 12:45:09.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:09.043" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:09.042" endtime="20201029 12:45:09.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.040" endtime="20201029 12:45:09.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.010" endtime="20201029 12:45:09.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.009" endtime="20201029 12:45:09.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.044" endtime="20201029 12:45:09.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.008" endtime="20201029 12:45:09.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.006" endtime="20201029 12:45:09.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.983" endtime="20201029 12:45:09.047"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.055" endtime="20201029 12:45:15.152"></status>
</kw>
<msg timestamp="20201029 12:45:15.153" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.054" endtime="20201029 12:45:15.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.158" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.155" endtime="20201029 12:45:15.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.160" endtime="20201029 12:45:15.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.051" endtime="20201029 12:45:15.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.049" endtime="20201029 12:45:15.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.170" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:45:15.167" endtime="20201029 12:45:15.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.178" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:15.176" endtime="20201029 12:45:15.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.183" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:15.181" endtime="20201029 12:45:15.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.172" endtime="20201029 12:45:15.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.192" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:15.190" endtime="20201029 12:45:15.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.196" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:15.194" endtime="20201029 12:45:15.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.186" endtime="20201029 12:45:15.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.204" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:15.203" endtime="20201029 12:45:15.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.206" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:45:15.205" endtime="20201029 12:45:15.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.199" endtime="20201029 12:45:15.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.213" endtime="20201029 12:45:15.511"></status>
</kw>
<msg timestamp="20201029 12:45:15.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061671583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163488792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.211" endtime="20201029 12:45:15.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061671583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163488792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.515" endtime="20201029 12:45:15.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.523" endtime="20201029 12:45:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.209" endtime="20201029 12:45:15.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.207" endtime="20201029 12:45:15.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:15.530" level="INFO">${FILTERED} = [{'diff': 0.10181720899999999}, {'diff': 0.099835764}, {'diff': 0.097308597}, {'diff': 0.10237847299999997}, {'diff': 0.09681065300000002}, {'diff': 0.099593555}, {'diff': 0.09959068100000001}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:15.526" endtime="20201029 12:45:15.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.533" level="INFO">${RESULT} = {'diff': [0.10181720899999999, 0.099835764, 0.097308597, 0.10237847299999997, 0.09681065300000002, 0.099593555, 0.09959068100000001, 0.099595361, 0.099591722, 0.09959229200000008, 0.09959155600000003,...</msg>
<status status="PASS" starttime="20201029 12:45:15.531" endtime="20201029 12:45:15.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.537" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:15.536" endtime="20201029 12:45:15.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.540" level="INFO">VALUE: [0.10181720899999999, 0.099835764, 0.097308597, 0.10237847299999997, 0.09681065300000002, 0.099593555, 0.09959068100000001, 0.099595361, 0.099591722, 0.09959229200000008, 0.09959155600000003, 0.09958762500000007, 0.09959524999999991, 0.09960358299999994, 0.09959856999999994, 0.09960187500000006, 0.09959495799999996, 0.09959522200000004, 0.09959324999999986, 0.09959499999999988, 0.09959634699999986, 0.09959370899999964, 0.09959091599999992, 0.09959972199999978, 0.09959176399999992, 0.09958831899999998, 0.09958987499999994, 0.0995903880000002, 0.0995836109999999, 0.09958690199999998, 0.0995846389999997, 0.0995861950000001, 0.09957959800000005, 0.09958424999999993, 0.09958122199999986, 0.09958179099999986, 0.09957818100000004, 0.09958007000000002, 0.09957741699999989, 0.09958237500000022, 0.0995870270000001, 0.09958472200000035, 0.09958486099999941, 0.09958797300000022, 0.09959663900000049, 0.09959873599999991, 0.09959548600000012, 0.09959140300000069, 0.09959226399999999, 0.09959270800000031, 0.0995895830000002]</msg>
<status status="PASS" starttime="20201029 12:45:15.539" endtime="20201029 12:45:15.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.534" endtime="20201029 12:45:15.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.048" endtime="20201029 12:45:15.541"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:08.980" endtime="20201029 12:45:15.542" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:44:34.619" endtime="20201029 12:45:15.548"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="FAIL" starttime="20201029 12:42:47.623" endtime="20201029 12:45:15.580"></status>
</suite>
<statistics>
<total>
<stat pass="17" fail="1">Critical Tests</stat>
<stat pass="17" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="17" fail="1">APP_tests_xtimer_benchmarks</stat>
<stat pass="17" fail="1">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="17" fail="1" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
