<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 09:32:52.130" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:52.719" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:52.727" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:53.871" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:52.717" endtime="20201029 09:32:53.872"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:53.874" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:32:53.873" endtime="20201029 09:32:53.875"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.716" endtime="20201029 09:32:53.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:53.877" endtime="20201029 09:32:54.127"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:53.876" endtime="20201029 09:32:54.127"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.140" endtime="20201029 09:32:54.152"></status>
</kw>
<msg timestamp="20201029 09:32:54.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.138" endtime="20201029 09:32:54.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.154" endtime="20201029 09:32:54.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.159" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:54.156" endtime="20201029 09:32:54.159"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:54.136" endtime="20201029 09:32:54.160"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:54.134" endtime="20201029 09:32:54.160"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.132" endtime="20201029 09:32:54.161"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:54.164" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:54.164" endtime="20201029 09:32:54.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.161" endtime="20201029 09:32:54.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.132" endtime="20201029 09:32:54.166"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.131" endtime="20201029 09:32:54.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.167" endtime="20201029 09:32:54.168"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.129" endtime="20201029 09:32:54.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.170" endtime="20201029 09:32:54.171"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.128" endtime="20201029 09:32:54.172"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:52.714" endtime="20201029 09:32:54.172"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:54.178" endtime="20201029 09:32:54.198"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.177" endtime="20201029 09:32:54.198"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.212" endtime="20201029 09:32:54.224"></status>
</kw>
<msg timestamp="20201029 09:32:54.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.210" endtime="20201029 09:32:54.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.226" endtime="20201029 09:32:54.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:54.228" endtime="20201029 09:32:54.230"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:54.208" endtime="20201029 09:32:54.231"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:54.205" endtime="20201029 09:32:54.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.203" endtime="20201029 09:32:54.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:54.236" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:54.235" endtime="20201029 09:32:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.233" endtime="20201029 09:32:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.203" endtime="20201029 09:32:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.202" endtime="20201029 09:32:54.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.237" endtime="20201029 09:32:54.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.201" endtime="20201029 09:32:54.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.199" endtime="20201029 09:32:54.240"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.175" endtime="20201029 09:32:54.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.248" endtime="20201029 09:32:54.256"></status>
</kw>
<msg timestamp="20201029 09:32:54.256" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.245" endtime="20201029 09:32:54.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.259" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:54.257" endtime="20201029 09:32:54.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:54.260" endtime="20201029 09:32:54.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.242" endtime="20201029 09:32:54.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.241" endtime="20201029 09:32:54.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.266" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 09:32:54.265" endtime="20201029 09:32:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.269" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 09:32:54.268" endtime="20201029 09:32:54.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.263" endtime="20201029 09:32:54.269"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:54.173" endtime="20201029 09:32:54.270" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:52.253" endtime="20201029 09:32:54.272"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:32:54.323" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:32:54.331" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:32:55.560" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:32:54.322" endtime="20201029 09:32:55.561"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.563" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:32:55.562" endtime="20201029 09:32:55.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.321" endtime="20201029 09:32:55.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:55.566" endtime="20201029 09:32:55.825"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.565" endtime="20201029 09:32:55.826"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.838" endtime="20201029 09:32:55.850"></status>
</kw>
<msg timestamp="20201029 09:32:55.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.836" endtime="20201029 09:32:55.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.852" endtime="20201029 09:32:55.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:55.855" endtime="20201029 09:32:55.857"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:55.834" endtime="20201029 09:32:55.858"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:55.832" endtime="20201029 09:32:55.858"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.831" endtime="20201029 09:32:55.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:55.862" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:55.861" endtime="20201029 09:32:55.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.859" endtime="20201029 09:32:55.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.830" endtime="20201029 09:32:55.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.829" endtime="20201029 09:32:55.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.864" endtime="20201029 09:32:55.865"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.828" endtime="20201029 09:32:55.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.866" endtime="20201029 09:32:55.868"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.826" endtime="20201029 09:32:55.869"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:54.319" endtime="20201029 09:32:55.869"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:32:55.875" endtime="20201029 09:32:55.895"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.873" endtime="20201029 09:32:55.895"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.908" endtime="20201029 09:32:55.920"></status>
</kw>
<msg timestamp="20201029 09:32:55.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.907" endtime="20201029 09:32:55.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.922" endtime="20201029 09:32:55.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:32:55.925" endtime="20201029 09:32:55.927"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:55.904" endtime="20201029 09:32:55.928"></status>
</kw>
<status status="FAIL" starttime="20201029 09:32:55.902" endtime="20201029 09:32:55.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.901" endtime="20201029 09:32:55.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:32:55.932" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:32:55.932" endtime="20201029 09:32:55.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.930" endtime="20201029 09:32:55.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.900" endtime="20201029 09:32:55.933"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.899" endtime="20201029 09:32:55.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.934" endtime="20201029 09:32:55.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.898" endtime="20201029 09:32:55.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.896" endtime="20201029 09:32:55.936"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.872" endtime="20201029 09:32:55.937"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.945" endtime="20201029 09:32:55.956"></status>
</kw>
<msg timestamp="20201029 09:32:55.957" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.944" endtime="20201029 09:32:55.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:55.959" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:55.958" endtime="20201029 09:32:55.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.961" endtime="20201029 09:32:55.962"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.941" endtime="20201029 09:32:55.963"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.939" endtime="20201029 09:32:55.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:55.970" endtime="20201029 09:32:56.261"></status>
</kw>
<msg timestamp="20201029 09:32:56.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060884056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:55.968" endtime="20201029 09:32:56.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060884056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060885319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:56.265" endtime="20201029 09:32:56.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.274" endtime="20201029 09:32:56.275"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.965" endtime="20201029 09:32:56.276"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.964" endtime="20201029 09:32:56.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:56.280" level="INFO">${RESULT} = [{'diff': 1.2630000000013464e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1809999999959353e-06}, {'diff': 1.1799999999964617e-06}, {'diff': 1.1809999999959353e-06}, {'diff': 1.1810000000028742e-...</msg>
<status status="PASS" starttime="20201029 09:32:56.277" endtime="20201029 09:32:56.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:56.286" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2630000000013464e-06, 1.1800000000034006e-06, 1.1809999999959353e-06, 1.1799999999964617e-06, 1.1809999999959353e-06, 1.1810000000028742e-06, 1.1249999999976557e-06, 1.1669999999963654e-06...</msg>
<status status="PASS" starttime="20201029 09:32:56.281" endtime="20201029 09:32:56.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:56.290" endtime="20201029 09:32:56.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.294" level="INFO">VALUE: [1.2630000000013464e-06, 1.1800000000034006e-06, 1.1809999999959353e-06, 1.1799999999964617e-06, 1.1809999999959353e-06, 1.1810000000028742e-06, 1.1249999999976557e-06, 1.1669999999963654e-06, 1.1809999999959353e-06, 1.1380000000046908e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1519999999973218e-06, 1.1809999999959353e-06, 1.1529999999967955e-06, 1.1250000000045945e-06, 1.2219999999951714e-06, 1.1669999999963654e-06, 1.1949999999955052e-06, 1.1950000000024441e-06, 1.1529999999967955e-06, 1.2219999999951714e-06, 1.1949999999955052e-06, 1.1249999999976557e-06, 1.2080000000025404e-06, 1.1939999999960316e-06, 1.1799999999964617e-06, 1.1799999999964617e-06, 1.1800000000034006e-06, 1.1530000000037344e-06, 1.2220000000021103e-06, 1.1800000000034006e-06, 1.1940000000029705e-06, 1.1950000000024441e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1940000000029705e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.2370000000011538e-06, 1.1810000000028742e-06, 1.1809999999889964e-06, 1.1810000000028742e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1949999999955052e-06, 1.1800000000034006e-06, 1.250000000008189e-06]</msg>
<status status="PASS" starttime="20201029 09:32:56.292" endtime="20201029 09:32:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.287" endtime="20201029 09:32:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.938" endtime="20201029 09:32:56.297"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.938" endtime="20201029 09:32:56.297"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.308" endtime="20201029 09:32:56.319"></status>
</kw>
<msg timestamp="20201029 09:32:56.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.306" endtime="20201029 09:32:56.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.320" endtime="20201029 09:32:56.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.323" endtime="20201029 09:32:56.324"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.302" endtime="20201029 09:32:56.325"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.300" endtime="20201029 09:32:56.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.332" endtime="20201029 09:32:56.636"></status>
</kw>
<msg timestamp="20201029 09:32:56.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062448, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062449194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:56.330" endtime="20201029 09:32:56.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062448, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062449194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:56.641" endtime="20201029 09:32:56.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.653" endtime="20201029 09:32:56.655"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.328" endtime="20201029 09:32:56.656"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.326" endtime="20201029 09:32:56.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:56.660" level="INFO">${RESULT} = [{'diff': 1.1940000000029705e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1949999999955052e-06}, {'diff': 1.1669999999963654e-06}, {'diff': 1.2370000000011538e-06}, {'diff': 1.1810000000028742e-...</msg>
<status status="PASS" starttime="20201029 09:32:56.657" endtime="20201029 09:32:56.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:56.666" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1940000000029705e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.2370000000011538e-06, 1.1810000000028742e-06, 1.1809999999889964e-06, 1.1810000000028742e-06...</msg>
<status status="PASS" starttime="20201029 09:32:56.661" endtime="20201029 09:32:56.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.670" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:56.669" endtime="20201029 09:32:56.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.673" level="INFO">VALUE: [1.1940000000029705e-06, 1.1800000000034006e-06, 1.1949999999955052e-06, 1.1669999999963654e-06, 1.2370000000011538e-06, 1.1810000000028742e-06, 1.1809999999889964e-06, 1.1810000000028742e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1939999999960316e-06, 1.1949999999955052e-06, 1.1800000000034006e-06, 1.250000000008189e-06, 1.222000000022927e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.1659999999968917e-06, 1.1799999999895228e-06, 1.1669999999686098e-06, 1.194000000037665e-06, 1.2079999999747848e-06, 1.181000000016752e-06, 1.1389999999833478e-06, 1.2359999999600468e-06, 1.181000000016752e-06, 1.2219999999674158e-06, 1.1799999999895228e-06, 1.1799999999895228e-06, 1.0970000000054547e-06, 1.222000000022927e-06, 1.194000000037665e-06, 1.0979999999771728e-06, 1.2079999999747848e-06, 1.194000000037665e-06, 1.1659999999968917e-06, 1.1249999999907168e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.180000000045034e-06, 1.139000000038859e-06, 1.277999999993451e-06, 1.1809999999612408e-06, 1.195000000009383e-06, 1.180000000045034e-06, 1.222999999994645e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.2079999999747848e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1519999999487496e-06, 1.1939999999821538e-06]</msg>
<status status="PASS" starttime="20201029 09:32:56.672" endtime="20201029 09:32:56.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.667" endtime="20201029 09:32:56.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.298" endtime="20201029 09:32:56.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.298" endtime="20201029 09:32:56.675"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.686" endtime="20201029 09:32:56.696"></status>
</kw>
<msg timestamp="20201029 09:32:56.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.685" endtime="20201029 09:32:56.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:56.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:56.699" endtime="20201029 09:32:56.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.702" endtime="20201029 09:32:56.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.682" endtime="20201029 09:32:56.705"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.679" endtime="20201029 09:32:56.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:56.712" endtime="20201029 09:32:57.012"></status>
</kw>
<msg timestamp="20201029 09:32:57.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414760236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:56.711" endtime="20201029 09:32:57.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.414758958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.414760236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:57.017" endtime="20201029 09:32:57.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.027" endtime="20201029 09:32:57.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.708" endtime="20201029 09:32:57.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.706" endtime="20201029 09:32:57.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:57.034" level="INFO">${RESULT} = [{'diff': 1.277999999993451e-06}, {'diff': 1.1809999999612408e-06}, {'diff': 1.195000000009383e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.222999999994645e-06}, {'diff': 1.181000000016752e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:32:57.030" endtime="20201029 09:32:57.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:57.039" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.277999999993451e-06, 1.1809999999612408e-06, 1.195000000009383e-06, 1.180000000045034e-06, 1.222999999994645e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.20...</msg>
<status status="PASS" starttime="20201029 09:32:57.035" endtime="20201029 09:32:57.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.043" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:57.042" endtime="20201029 09:32:57.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.046" level="INFO">VALUE: [1.277999999993451e-06, 1.1809999999612408e-06, 1.195000000009383e-06, 1.180000000045034e-06, 1.222999999994645e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.208000000030296e-06, 1.2079999999747848e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1519999999487496e-06, 1.1939999999821538e-06, 1.2780000000489622e-06, 1.180000000045034e-06, 1.2229999999391339e-06, 1.1939999999821538e-06, 1.209000000002014e-06, 1.15300000003149e-06, 1.1949999999538718e-06, 1.1659999999968917e-06, 1.194000000093176e-06, 1.180000000045034e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.194000000093176e-06, 1.236000000015558e-06, 1.208000000030296e-06, 1.1939999999821538e-06, 1.194000000093176e-06, 1.2359999999045357e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1950000000648942e-06, 1.180000000045034e-06, 1.2219999999674158e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1809999999057297e-06, 1.1949999999538718e-06, 1.2499999999526779e-06, 1.1659999999968917e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1389999999833478e-06, 1.1939999999821538e-06, 1.1109999999980857e-06, 1.194000000093176e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.26400000000082e-06, 1.1659999999968917e-06, 1.194000000093176e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2079999999192736e-06, 1.1939999999821538e-06, 1.180000000045034e-06]</msg>
<status status="PASS" starttime="20201029 09:32:57.044" endtime="20201029 09:32:57.046"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.040" endtime="20201029 09:32:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.676" endtime="20201029 09:32:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:56.675" endtime="20201029 09:32:57.047"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.056" endtime="20201029 09:32:57.067"></status>
</kw>
<msg timestamp="20201029 09:32:57.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.053" endtime="20201029 09:32:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.069" endtime="20201029 09:32:57.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.073" endtime="20201029 09:32:57.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.051" endtime="20201029 09:32:57.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.049" endtime="20201029 09:32:57.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.086" endtime="20201029 09:32:57.391"></status>
</kw>
<msg timestamp="20201029 09:32:57.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.783359389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.783360528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:57.084" endtime="20201029 09:32:57.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.783359389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.783360528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:57.396" endtime="20201029 09:32:57.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.405" endtime="20201029 09:32:57.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.081" endtime="20201029 09:32:57.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.077" endtime="20201029 09:32:57.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:57.412" level="INFO">${RESULT} = [{'diff': 1.1389999999833478e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.194000000093176e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1939999999821538e-06...</msg>
<status status="PASS" starttime="20201029 09:32:57.409" endtime="20201029 09:32:57.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:57.418" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1389999999833478e-06, 1.1939999999821538e-06, 1.1109999999980857e-06, 1.194000000093176e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.26400000000082e-06, 1.1659999999968917e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:32:57.413" endtime="20201029 09:32:57.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.423" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:57.422" endtime="20201029 09:32:57.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.425" level="INFO">VALUE: [1.1389999999833478e-06, 1.1939999999821538e-06, 1.1109999999980857e-06, 1.194000000093176e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.26400000000082e-06, 1.1659999999968917e-06, 1.194000000093176e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2079999999192736e-06, 1.1939999999821538e-06, 1.180000000045034e-06, 1.2629999999180797e-06, 1.1669999999686098e-06, 1.2359999999045357e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.1520000000597719e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1659999998858694e-06, 1.181000000016752e-06, 1.1950000000648942e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.1809999997947074e-06, 1.181000000016752e-06, 1.1809999997947074e-06, 1.1950000000648942e-06, 1.1659999998858694e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1950000000648942e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1950000000648942e-06, 1.125000000046228e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.2090000001130363e-06]</msg>
<status status="PASS" starttime="20201029 09:32:57.424" endtime="20201029 09:32:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.419" endtime="20201029 09:32:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.048" endtime="20201029 09:32:57.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.048" endtime="20201029 09:32:57.427"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.434" endtime="20201029 09:32:57.444"></status>
</kw>
<msg timestamp="20201029 09:32:57.445" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.433" endtime="20201029 09:32:57.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.446" endtime="20201029 09:32:57.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.449" endtime="20201029 09:32:57.450"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.430" endtime="20201029 09:32:57.451"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.429" endtime="20201029 09:32:57.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.458" endtime="20201029 09:32:57.766"></status>
</kw>
<msg timestamp="20201029 09:32:57.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142164181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:57.456" endtime="20201029 09:32:57.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.142163, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.142164181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:57.771" endtime="20201029 09:32:57.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.781" endtime="20201029 09:32:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.454" endtime="20201029 09:32:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.452" endtime="20201029 09:32:57.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:57.788" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.1950000000648942e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1950000000648942e-0...</msg>
<status status="PASS" starttime="20201029 09:32:57.784" endtime="20201029 09:32:57.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:57.794" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1670000001906544e-06, 1.1950000000648942e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1950000000648942e-06, 1.125000000046228e-06, 1.1669999999686098e-06, ...</msg>
<status status="PASS" starttime="20201029 09:32:57.789" endtime="20201029 09:32:57.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.798" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:57.797" endtime="20201029 09:32:57.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.801" level="INFO">VALUE: [1.181000000016752e-06, 1.1670000001906544e-06, 1.1950000000648942e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1950000000648942e-06, 1.125000000046228e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.181000000016752e-06, 1.2090000001130363e-06, 1.26400000000082e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2090000001130363e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.1950000000648942e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1950000000648942e-06, 1.1939999999821538e-06, 1.2499999999526779e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1949999998428495e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.2220000000784381e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1939999999821538e-06, 1.1809999997947074e-06, 1.2499999999526779e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1799999999340116e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:32:57.799" endtime="20201029 09:32:57.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.795" endtime="20201029 09:32:57.801"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.427" endtime="20201029 09:32:57.802"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.427" endtime="20201029 09:32:57.802"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.810" endtime="20201029 09:32:57.820"></status>
</kw>
<msg timestamp="20201029 09:32:57.821" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.808" endtime="20201029 09:32:57.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:57.823" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:57.822" endtime="20201029 09:32:57.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.824" endtime="20201029 09:32:57.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.806" endtime="20201029 09:32:57.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.804" endtime="20201029 09:32:57.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:57.833" endtime="20201029 09:32:58.135"></status>
</kw>
<msg timestamp="20201029 09:32:58.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.511469889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511471097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:57.832" endtime="20201029 09:32:58.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.511469889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.511471097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:58.140" endtime="20201029 09:32:58.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.150" endtime="20201029 09:32:58.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.829" endtime="20201029 09:32:58.152"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.828" endtime="20201029 09:32:58.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:58.160" level="INFO">${RESULT} = [{'diff': 1.208000000030296e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1800000001560562e-06}, {'diff': 1.1800000001560562e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 09:32:58.155" endtime="20201029 09:32:58.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:58.167" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.208000000030296e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.1800000001560562e-06,...</msg>
<status status="PASS" starttime="20201029 09:32:58.163" endtime="20201029 09:32:58.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.174" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:58.173" endtime="20201029 09:32:58.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.177" level="INFO">VALUE: [1.208000000030296e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.1800000001560562e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.3050000000625062e-06, 1.208000000030296e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1939999999821538e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1950000000648942e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2769999999662218e-06, 1.1950000000648942e-06, 1.1530000001425122e-06, 1.1950000000648942e-06, 1.1950000000648942e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.2220000000784381e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.1809999997947074e-06, 1.1950000000648942e-06, 1.2360000001265803e-06, 1.2090000001130363e-06, 1.1949999998428495e-06, 1.1939999999821538e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.1950000000648942e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1799999999340116e-06, 1.2089999998909917e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.1809999997947074e-06, 1.1939999999821538e-06, 1.1949999998428495e-06, 1.1659999998858694e-06]</msg>
<status status="PASS" starttime="20201029 09:32:58.175" endtime="20201029 09:32:58.177"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.169" endtime="20201029 09:32:58.178"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.803" endtime="20201029 09:32:58.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:57.802" endtime="20201029 09:32:58.179"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.191" endtime="20201029 09:32:58.201"></status>
</kw>
<msg timestamp="20201029 09:32:58.201" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.189" endtime="20201029 09:32:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.202" endtime="20201029 09:32:58.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.205" endtime="20201029 09:32:58.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.185" endtime="20201029 09:32:58.207"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.183" endtime="20201029 09:32:58.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.214" endtime="20201029 09:32:58.519"></status>
</kw>
<msg timestamp="20201029 09:32:58.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.877101847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.877103, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:58.212" endtime="20201029 09:32:58.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.877101847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.877103, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:32:58.524" endtime="20201029 09:32:58.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.534" endtime="20201029 09:32:58.535"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.210" endtime="20201029 09:32:58.536"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.208" endtime="20201029 09:32:58.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:58.541" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1939999999821538e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.2229999999391339e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 09:32:58.537" endtime="20201029 09:32:58.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:58.546" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1799999999340116e-06, 1.2089999998909917e-06, 1.1799999999340116e-06,...</msg>
<status status="PASS" starttime="20201029 09:32:58.542" endtime="20201029 09:32:58.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.550" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:58.549" endtime="20201029 09:32:58.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.553" level="INFO">VALUE: [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1799999999340116e-06, 1.2089999998909917e-06, 1.1799999999340116e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.1809999997947074e-06, 1.1939999999821538e-06, 1.1949999998428495e-06, 1.1659999998858694e-06, 1.2360000001265803e-06, 1.2090000001130363e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1109999999980857e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1250000002682725e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1949999998428495e-06, 1.1529999999204676e-06, 1.2220000003004827e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2219999998563935e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:32:58.552" endtime="20201029 09:32:58.553"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.547" endtime="20201029 09:32:58.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.181" endtime="20201029 09:32:58.554"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.180" endtime="20201029 09:32:58.554"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.562" endtime="20201029 09:32:58.572"></status>
</kw>
<msg timestamp="20201029 09:32:58.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.561" endtime="20201029 09:32:58.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.574" endtime="20201029 09:32:58.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.576" endtime="20201029 09:32:58.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.558" endtime="20201029 09:32:58.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.556" endtime="20201029 09:32:58.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.585" endtime="20201029 09:32:58.894"></status>
</kw>
<msg timestamp="20201029 09:32:58.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248908167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248909333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:58.584" endtime="20201029 09:32:58.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.248908167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.248909333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:58.899" endtime="20201029 09:32:58.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.909" endtime="20201029 09:32:58.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.581" endtime="20201029 09:32:58.911"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.580" endtime="20201029 09:32:58.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:58.916" level="INFO">${RESULT} = [{'diff': 1.1659999996638248e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1939999997601092e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06...</msg>
<status status="PASS" starttime="20201029 09:32:58.913" endtime="20201029 09:32:58.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:58.922" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1659999996638248e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:32:58.917" endtime="20201029 09:32:58.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:58.925" endtime="20201029 09:32:58.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.929" level="INFO">VALUE: [1.1659999996638248e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1939999997601092e-06, 1.1799999999340116e-06, 1.1800000003781008e-06, 1.2640000002228646e-06, 1.208000000030296e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.1939999997601092e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1949999998428495e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.2229999999391339e-06, 1.1940000002041984e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06]</msg>
<status status="PASS" starttime="20201029 09:32:58.927" endtime="20201029 09:32:58.929"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.923" endtime="20201029 09:32:58.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.555" endtime="20201029 09:32:58.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.555" endtime="20201029 09:32:58.930"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.938" endtime="20201029 09:32:58.949"></status>
</kw>
<msg timestamp="20201029 09:32:58.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.937" endtime="20201029 09:32:58.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:58.952" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:58.950" endtime="20201029 09:32:58.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.953" endtime="20201029 09:32:58.954"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.934" endtime="20201029 09:32:58.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.932" endtime="20201029 09:32:58.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:58.963" endtime="20201029 09:32:59.298"></status>
</kw>
<msg timestamp="20201029 09:32:59.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.610373778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.610374958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:58.961" endtime="20201029 09:32:59.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.610373778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.610374958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:59.310" endtime="20201029 09:32:59.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.329" endtime="20201029 09:32:59.331"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.958" endtime="20201029 09:32:59.332"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.956" endtime="20201029 09:32:59.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:59.337" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1799999999340116e-06},...</msg>
<status status="PASS" starttime="20201029 09:32:59.333" endtime="20201029 09:32:59.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:59.342" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 09:32:59.338" endtime="20201029 09:32:59.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.346" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:59.345" endtime="20201029 09:32:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.348" level="INFO">VALUE: [1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.3189999998886037e-06, 1.1669999997465652e-06, 1.1800000003781008e-06, 1.1949999998428495e-06, 1.208000000030296e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1939999997601092e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.2640000002228646e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.2639999997787754e-06, 1.1949999998428495e-06, 1.13900000009437e-06, 1.1950000002869388e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1809999995726628e-06, 1.1799999999340116e-06, 1.1939999997601092e-06, 1.1529999999204676e-06, 1.1950000002869388e-06, 1.0970000001719882e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2360000001265803e-06, 1.166000000107914e-06]</msg>
<status status="PASS" starttime="20201029 09:32:59.347" endtime="20201029 09:32:59.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.342" endtime="20201029 09:32:59.350"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.931" endtime="20201029 09:32:59.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:58.931" endtime="20201029 09:32:59.351"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.359" endtime="20201029 09:32:59.369"></status>
</kw>
<msg timestamp="20201029 09:32:59.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.357" endtime="20201029 09:32:59.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.371" endtime="20201029 09:32:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.373" endtime="20201029 09:32:59.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.354" endtime="20201029 09:32:59.375"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.353" endtime="20201029 09:32:59.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.382" endtime="20201029 09:32:59.706"></status>
</kw>
<msg timestamp="20201029 09:32:59.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977591972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:59.381" endtime="20201029 09:32:59.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.977591972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.977593167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:59.711" endtime="20201029 09:32:59.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.722" endtime="20201029 09:32:59.723"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.378" endtime="20201029 09:32:59.724"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.376" endtime="20201029 09:32:59.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:32:59.729" level="INFO">${RESULT} = [{'diff': 1.1950000002869388e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1950000002869388e-...</msg>
<status status="PASS" starttime="20201029 09:32:59.725" endtime="20201029 09:32:59.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:32:59.734" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1950000002869388e-06, 1.0970000001719882e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1529999999204676e-06, 1.1669999997465652e-06...</msg>
<status status="PASS" starttime="20201029 09:32:59.730" endtime="20201029 09:32:59.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.738" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:32:59.737" endtime="20201029 09:32:59.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.741" level="INFO">VALUE: [1.1950000002869388e-06, 1.0970000001719882e-06, 1.1949999998428495e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.1950000002869388e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2360000001265803e-06, 1.166000000107914e-06, 1.2639999997787754e-06, 1.181000000016752e-06, 1.1109999999980857e-06, 1.1940000002041984e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.1939999997601092e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.2220000003004827e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1949999998428495e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.2219999998563935e-06, 1.1950000002869388e-06, 1.1800000003781008e-06]</msg>
<status status="PASS" starttime="20201029 09:32:59.739" endtime="20201029 09:32:59.741"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.735" endtime="20201029 09:32:59.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.351" endtime="20201029 09:32:59.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.351" endtime="20201029 09:32:59.742"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.750" endtime="20201029 09:32:59.761"></status>
</kw>
<msg timestamp="20201029 09:32:59.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.749" endtime="20201029 09:32:59.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:32:59.764" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:32:59.762" endtime="20201029 09:32:59.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.765" endtime="20201029 09:32:59.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.746" endtime="20201029 09:32:59.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.744" endtime="20201029 09:32:59.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:32:59.774" endtime="20201029 09:33:00.085"></status>
</kw>
<msg timestamp="20201029 09:33:00.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.388772097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.388773278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:32:59.772" endtime="20201029 09:33:00.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.388772097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.388773278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.090" endtime="20201029 09:33:00.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.101" endtime="20201029 09:33:00.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.770" endtime="20201029 09:33:00.103"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.768" endtime="20201029 09:33:00.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:00.108" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1800000003781008e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.2499999999526779e-06}, {'diff': 1.1529999999204676e-0...</msg>
<status status="PASS" starttime="20201029 09:33:00.104" endtime="20201029 09:33:00.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:00.113" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1800000003781008e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:00.109" endtime="20201029 09:33:00.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:00.116" endtime="20201029 09:33:00.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.119" level="INFO">VALUE: [1.181000000016752e-06, 1.1800000003781008e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999998428495e-06, 1.181000000016752e-06, 1.1939999997601092e-06, 1.2219999998563935e-06, 1.1950000002869388e-06, 1.1800000003781008e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.208000000030296e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1250000002682725e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.208000000030296e-06, 1.1800000003781008e-06, 1.1809999995726628e-06, 1.1949999998428495e-06, 1.1800000003781008e-06, 1.2219999998563935e-06, 1.1809999995726628e-06, 1.2220000003004827e-06, 1.1670000001906544e-06, 1.1939999997601092e-06, 1.1949999998428495e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.1949999998428495e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1800000003781008e-06]</msg>
<status status="PASS" starttime="20201029 09:33:00.118" endtime="20201029 09:33:00.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.113" endtime="20201029 09:33:00.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.743" endtime="20201029 09:33:00.121"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:59.743" endtime="20201029 09:33:00.121"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.130" endtime="20201029 09:33:00.140"></status>
</kw>
<msg timestamp="20201029 09:33:00.141" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.127" endtime="20201029 09:33:00.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.142" endtime="20201029 09:33:00.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.144" endtime="20201029 09:33:00.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.125" endtime="20201029 09:33:00.146"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.123" endtime="20201029 09:33:00.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.153" endtime="20201029 09:33:00.470"></status>
</kw>
<msg timestamp="20201029 09:33:00.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.770485222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.770486403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.152" endtime="20201029 09:33:00.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.770485222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.770486403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.475" endtime="20201029 09:33:00.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.486" endtime="20201029 09:33:00.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.149" endtime="20201029 09:33:00.488"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.147" endtime="20201029 09:33:00.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:00.493" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1949999998428495e-06}, {'diff': 1.1939999997601092e-06}, {'diff': 1.1939999997601092e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:00.489" endtime="20201029 09:33:00.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:00.498" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:00.494" endtime="20201029 09:33:00.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.503" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:00.502" endtime="20201029 09:33:00.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.505" level="INFO">VALUE: [1.181000000016752e-06, 1.1949999998428495e-06, 1.1939999997601092e-06, 1.1939999997601092e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.1949999998428495e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1800000003781008e-06, 1.2360000001265803e-06, 1.2639999997787754e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.222000000744572e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.1949999993987603e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999993987603e-06, 1.2079999995862067e-06, 1.1950000002869388e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2780000000489622e-06, 1.2090000005571255e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.2499999995085886e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999993987603e-06]</msg>
<status status="PASS" starttime="20201029 09:33:00.504" endtime="20201029 09:33:00.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.499" endtime="20201029 09:33:00.506"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.122" endtime="20201029 09:33:00.507"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.121" endtime="20201029 09:33:00.507"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.515" endtime="20201029 09:33:00.525"></status>
</kw>
<msg timestamp="20201029 09:33:00.525" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.513" endtime="20201029 09:33:00.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.528" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.526" endtime="20201029 09:33:00.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.529" endtime="20201029 09:33:00.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.510" endtime="20201029 09:33:00.531"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.509" endtime="20201029 09:33:00.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.544" endtime="20201029 09:33:00.873"></status>
</kw>
<msg timestamp="20201029 09:33:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140098722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.541" endtime="20201029 09:33:00.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.140098722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.140099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.879" endtime="20201029 09:33:00.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.889" endtime="20201029 09:33:00.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.536" endtime="20201029 09:33:00.891"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.532" endtime="20201029 09:33:00.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:00.896" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1940000002041984e-0...</msg>
<status status="PASS" starttime="20201029 09:33:00.893" endtime="20201029 09:33:00.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:00.902" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:00.897" endtime="20201029 09:33:00.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.906" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:00.905" endtime="20201029 09:33:00.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.909" level="INFO">VALUE: [1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1949999993987603e-06, 1.2219999998563935e-06, 1.18000000082219e-06, 1.2079999995862067e-06, 1.2080000004743852e-06, 1.1660000005520033e-06, 1.19399999931602e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1949999993987603e-06, 1.2370000002093207e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2090000005571255e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:33:00.907" endtime="20201029 09:33:00.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.903" endtime="20201029 09:33:00.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.508" endtime="20201029 09:33:00.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.507" endtime="20201029 09:33:00.910"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.918" endtime="20201029 09:33:00.928"></status>
</kw>
<msg timestamp="20201029 09:33:00.929" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.916" endtime="20201029 09:33:00.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:00.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:00.930" endtime="20201029 09:33:00.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.932" endtime="20201029 09:33:00.934"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.914" endtime="20201029 09:33:00.935"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.912" endtime="20201029 09:33:00.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:00.941" endtime="20201029 09:33:01.249"></status>
</kw>
<msg timestamp="20201029 09:33:01.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.514740306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.514741486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:00.940" endtime="20201029 09:33:01.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.514740306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.514741486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:01.257" endtime="20201029 09:33:01.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.269" endtime="20201029 09:33:01.271"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.937" endtime="20201029 09:33:01.272"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.936" endtime="20201029 09:33:01.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:01.278" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-...</msg>
<status status="PASS" starttime="20201029 09:33:01.273" endtime="20201029 09:33:01.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:01.284" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06...</msg>
<status status="PASS" starttime="20201029 09:33:01.280" endtime="20201029 09:33:01.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:01.288" endtime="20201029 09:33:01.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.292" level="INFO">VALUE: [1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.2499999995085886e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.181000000016752e-06, 1.1109999995539965e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.111999999636737e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.13900000009437e-06, 1.2219999998563935e-06, 1.2229999999391339e-06, 1.181000000016752e-06, 1.18000000082219e-06, 1.1799999999340116e-06, 1.111999999636737e-06, 1.111000000442175e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.2080000004743852e-06, 1.1529999994763784e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1940000002041984e-06]</msg>
<status status="PASS" starttime="20201029 09:33:01.290" endtime="20201029 09:33:01.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.285" endtime="20201029 09:33:01.293"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.911" endtime="20201029 09:33:01.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:00.911" endtime="20201029 09:33:01.294"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.304" endtime="20201029 09:33:01.314"></status>
</kw>
<msg timestamp="20201029 09:33:01.315" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.303" endtime="20201029 09:33:01.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.316" endtime="20201029 09:33:01.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.319" endtime="20201029 09:33:01.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.298" endtime="20201029 09:33:01.321"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.296" endtime="20201029 09:33:01.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.328" endtime="20201029 09:33:01.647"></status>
</kw>
<msg timestamp="20201029 09:33:01.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.907286861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.907288042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:01.326" endtime="20201029 09:33:01.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.907286861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.907288042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:01.653" endtime="20201029 09:33:01.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.668" endtime="20201029 09:33:01.670"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.323" endtime="20201029 09:33:01.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.322" endtime="20201029 09:33:01.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:01.676" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.19399999931602e-06}, {'diff': 1.2080000004743852e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:01.672" endtime="20201029 09:33:01.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:01.683" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1249999998241833e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.2080000004743852e-06, 1.1529999994763784e-06, 1.2219999998563935e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:01.678" endtime="20201029 09:33:01.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.688" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:01.687" endtime="20201029 09:33:01.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.691" level="INFO">VALUE: [1.181000000016752e-06, 1.1249999998241833e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.2080000004743852e-06, 1.1529999994763784e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.2499999995085886e-06, 1.2499999995085886e-06, 1.2780000000489622e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1940000002041984e-06, 1.2090000005571255e-06, 1.1380000000116297e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1249999998241833e-06, 1.2640000006669538e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1950000002869388e-06, 1.2370000002093207e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:33:01.689" endtime="20201029 09:33:01.691"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.684" endtime="20201029 09:33:01.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.295" endtime="20201029 09:33:01.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.294" endtime="20201029 09:33:01.692"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.701" endtime="20201029 09:33:01.711"></status>
</kw>
<msg timestamp="20201029 09:33:01.711" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.699" endtime="20201029 09:33:01.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:01.714" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:01.712" endtime="20201029 09:33:01.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.715" endtime="20201029 09:33:01.717"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.696" endtime="20201029 09:33:01.718"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.694" endtime="20201029 09:33:01.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:01.725" endtime="20201029 09:33:02.036"></status>
</kw>
<msg timestamp="20201029 09:33:02.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.283426917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.283428111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:01.723" endtime="20201029 09:33:02.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.283426917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.283428111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.041" endtime="20201029 09:33:02.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.051" endtime="20201029 09:33:02.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.721" endtime="20201029 09:33:02.053"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.719" endtime="20201029 09:33:02.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.057" level="INFO">${RESULT} = [{'diff': 1.1940000002041984e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1950000002869388e-06}, {'diff': 1.2370000002093207e-...</msg>
<status status="PASS" starttime="20201029 09:33:02.054" endtime="20201029 09:33:02.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.063" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1950000002869388e-06, 1.2370000002093207e-06, 1.1799999999340116e-06, 1.181000000016752e-06,...</msg>
<status status="PASS" starttime="20201029 09:33:02.058" endtime="20201029 09:33:02.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.067" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.066" endtime="20201029 09:33:02.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.070" level="INFO">VALUE: [1.1940000002041984e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1950000002869388e-06, 1.2370000002093207e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.2499999995085886e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.2640000006669538e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2230000008273123e-06, 1.222000000744572e-06, 1.1940000002041984e-06, 1.1670000006347436e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1659999996638248e-06, 1.1950000002869388e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.111000000442175e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.068" endtime="20201029 09:33:02.070"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.064" endtime="20201029 09:33:02.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.693" endtime="20201029 09:33:02.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:01.693" endtime="20201029 09:33:02.071"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.079" endtime="20201029 09:33:02.089"></status>
</kw>
<msg timestamp="20201029 09:33:02.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.077" endtime="20201029 09:33:02.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.091" endtime="20201029 09:33:02.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.094" endtime="20201029 09:33:02.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.075" endtime="20201029 09:33:02.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.073" endtime="20201029 09:33:02.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.104" endtime="20201029 09:33:02.420"></status>
</kw>
<msg timestamp="20201029 09:33:02.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.669882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.669883778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.102" endtime="20201029 09:33:02.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.669882597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.669883778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.425" endtime="20201029 09:33:02.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.435" endtime="20201029 09:33:02.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.099" endtime="20201029 09:33:02.437"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.097" endtime="20201029 09:33:02.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.442" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1799999999340116e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:02.438" endtime="20201029 09:33:02.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.446" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1...</msg>
<status status="PASS" starttime="20201029 09:33:02.443" endtime="20201029 09:33:02.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.451" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.450" endtime="20201029 09:33:02.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.453" level="INFO">VALUE: [1.181000000016752e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.111000000442175e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.2360000001265803e-06, 1.1659999996638248e-06, 1.2080000004743852e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.2640000006669538e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1249999998241833e-06, 1.1949999993987603e-06, 1.2089999996689471e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.19399999931602e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.452" endtime="20201029 09:33:02.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.447" endtime="20201029 09:33:02.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.072" endtime="20201029 09:33:02.454"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.072" endtime="20201029 09:33:02.455"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.463" endtime="20201029 09:33:02.473"></status>
</kw>
<msg timestamp="20201029 09:33:02.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.462" endtime="20201029 09:33:02.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.476" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.475" endtime="20201029 09:33:02.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.477" endtime="20201029 09:33:02.479"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.458" endtime="20201029 09:33:02.480"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.457" endtime="20201029 09:33:02.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.489" endtime="20201029 09:33:02.807"></status>
</kw>
<msg timestamp="20201029 09:33:02.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.037482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.037483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.487" endtime="20201029 09:33:02.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.037482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.037483889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.812" endtime="20201029 09:33:02.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.822" endtime="20201029 09:33:02.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.482" endtime="20201029 09:33:02.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.481" endtime="20201029 09:33:02.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:02.829" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1949999993987603e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.19399999931602e-06}, {'diff': 1.181000000016752e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:02.825" endtime="20201029 09:33:02.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:02.834" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.19399999931602e-06, 1.166...</msg>
<status status="PASS" starttime="20201029 09:33:02.830" endtime="20201029 09:33:02.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.838" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:02.837" endtime="20201029 09:33:02.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.841" level="INFO">VALUE: [1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.19399999931602e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.2360000001265803e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.2229999999391339e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.19399999931602e-06, 1.13900000009437e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.2230000008273123e-06, 1.2080000004743852e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.250000000396767e-06, 1.2080000004743852e-06, 1.222000000744572e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 09:33:02.840" endtime="20201029 09:33:02.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.835" endtime="20201029 09:33:02.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.455" endtime="20201029 09:33:02.842"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.455" endtime="20201029 09:33:02.842"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.850" endtime="20201029 09:33:02.861"></status>
</kw>
<msg timestamp="20201029 09:33:02.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.849" endtime="20201029 09:33:02.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:02.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:02.862" endtime="20201029 09:33:02.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.865" endtime="20201029 09:33:02.866"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.846" endtime="20201029 09:33:02.867"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.844" endtime="20201029 09:33:02.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:02.874" endtime="20201029 09:33:03.184"></status>
</kw>
<msg timestamp="20201029 09:33:03.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410669194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410670375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:02.872" endtime="20201029 09:33:03.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.410669194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.410670375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.189" endtime="20201029 09:33:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.199" endtime="20201029 09:33:03.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.870" endtime="20201029 09:33:03.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.868" endtime="20201029 09:33:03.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.206" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1109999995539965e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.2230000008273123e-06}, {'diff': 1.2080000004743852e-0...</msg>
<status status="PASS" starttime="20201029 09:33:03.202" endtime="20201029 09:33:03.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.212" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.181000000016752e-06, 1.2219999998563935e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.2230000008273123e-06, 1.2080000004743852e-06, 1.1940000002041984e-06, 1.181000000016752e-06, ...</msg>
<status status="PASS" starttime="20201029 09:33:03.207" endtime="20201029 09:33:03.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.215" endtime="20201029 09:33:03.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.218" level="INFO">VALUE: [1.181000000016752e-06, 1.2219999998563935e-06, 1.1109999995539965e-06, 1.1669999997465652e-06, 1.2230000008273123e-06, 1.2080000004743852e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.250000000396767e-06, 1.2080000004743852e-06, 1.222000000744572e-06, 1.1799999999340116e-06, 1.2639999997787754e-06, 1.1799999999340116e-06, 1.2360000001265803e-06, 1.222000000744572e-06, 1.2769999999662218e-06, 1.1660000005520033e-06, 1.2229999999391339e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.2080000004743852e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1940000002041984e-06, 1.18000000082219e-06, 1.1940000002041984e-06, 1.1660000005520033e-06, 1.1940000002041984e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1520000002818165e-06, 1.19399999931602e-06, 1.1940000002041984e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2359999992384019e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.1529999994763784e-06]</msg>
<status status="PASS" starttime="20201029 09:33:03.217" endtime="20201029 09:33:03.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.212" endtime="20201029 09:33:03.219"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.843" endtime="20201029 09:33:03.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:02.843" endtime="20201029 09:33:03.220"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.228" endtime="20201029 09:33:03.238"></status>
</kw>
<msg timestamp="20201029 09:33:03.238" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.226" endtime="20201029 09:33:03.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.241" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.239" endtime="20201029 09:33:03.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.242" endtime="20201029 09:33:03.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.224" endtime="20201029 09:33:03.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.222" endtime="20201029 09:33:03.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.252" endtime="20201029 09:33:03.570"></status>
</kw>
<msg timestamp="20201029 09:33:03.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.786980778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.786981958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.250" endtime="20201029 09:33:03.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.786980778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.786981958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.575" endtime="20201029 09:33:03.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.585" endtime="20201029 09:33:03.586"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.247" endtime="20201029 09:33:03.587"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.245" endtime="20201029 09:33:03.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:03.592" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.2359999992384019e-06}...</msg>
<status status="PASS" starttime="20201029 09:33:03.588" endtime="20201029 09:33:03.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:03.596" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2359999992384019e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1....</msg>
<status status="PASS" starttime="20201029 09:33:03.593" endtime="20201029 09:33:03.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.600" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 09:33:03.599" endtime="20201029 09:33:03.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.603" level="INFO">VALUE: [1.1799999999340116e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2359999992384019e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.19399999931602e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.250000000396767e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.250000000396767e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.2499999995085886e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1249999998241833e-06, 1.1249999998241833e-06, 1.222000000744572e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1940000002041984e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.1940000002041984e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1950000002869388e-06, 1.1949999993987603e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1950000002869388e-06, 1.222000000744572e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1670000006347436e-06]</msg>
<status status="PASS" starttime="20201029 09:33:03.601" endtime="20201029 09:33:03.603"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.597" endtime="20201029 09:33:03.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.221" endtime="20201029 09:33:03.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.220" endtime="20201029 09:33:03.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:32:55.937" endtime="20201029 09:33:03.605"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:32:55.869" endtime="20201029 09:33:03.605" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:03.613" endtime="20201029 09:33:03.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.611" endtime="20201029 09:33:03.633"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.646" endtime="20201029 09:33:03.658"></status>
</kw>
<msg timestamp="20201029 09:33:03.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.645" endtime="20201029 09:33:03.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.660" endtime="20201029 09:33:03.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.664" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:03.663" endtime="20201029 09:33:03.665"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:03.642" endtime="20201029 09:33:03.665"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:03.639" endtime="20201029 09:33:03.666"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.638" endtime="20201029 09:33:03.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:03.670" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:03.669" endtime="20201029 09:33:03.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.667" endtime="20201029 09:33:03.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.637" endtime="20201029 09:33:03.671"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.636" endtime="20201029 09:33:03.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.672" endtime="20201029 09:33:03.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.635" endtime="20201029 09:33:03.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.633" endtime="20201029 09:33:03.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.609" endtime="20201029 09:33:03.675"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.683" endtime="20201029 09:33:03.695"></status>
</kw>
<msg timestamp="20201029 09:33:03.696" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.682" endtime="20201029 09:33:03.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:03.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:03.697" endtime="20201029 09:33:03.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.699" endtime="20201029 09:33:03.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.679" endtime="20201029 09:33:03.701"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.677" endtime="20201029 09:33:03.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:03.708" endtime="20201029 09:33:03.995"></status>
</kw>
<msg timestamp="20201029 09:33:03.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062189139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062201167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.707" endtime="20201029 09:33:03.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062189139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062201167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:03.999" endtime="20201029 09:33:04.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.007" endtime="20201029 09:33:04.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.704" endtime="20201029 09:33:04.009"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.702" endtime="20201029 09:33:04.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.014" level="INFO">${RESULT} = [{'diff': 1.2028000000004202e-05}, {'diff': 1.1402000000000634e-05}, {'diff': 1.1403000000000107e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1416999999999677e-...</msg>
<status status="PASS" starttime="20201029 09:33:04.011" endtime="20201029 09:33:04.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.018" level="INFO">${OVERHEAD} = {'diff': [1.2028000000004202e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1403000000000107e-05...</msg>
<status status="PASS" starttime="20201029 09:33:04.015" endtime="20201029 09:33:04.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.022" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:04.021" endtime="20201029 09:33:04.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.025" level="INFO">VALUE: [1.2028000000004202e-05, 1.1402000000000634e-05, 1.1403000000000107e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.1403000000000107e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1443999999999344e-05, 1.1374999999994029e-05, 1.1374999999994029e-05, 1.1374999999994029e-05, 1.1430000000006713e-05, 1.1375000000007907e-05, 1.1402999999993169e-05, 1.1388000000001064e-05, 1.1403000000007046e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000007046e-05, 1.1375000000007907e-05, 1.1361000000001398e-05, 1.1429999999992835e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1402000000007573e-05, 1.1347000000008767e-05, 1.1389000000000538e-05, 1.1402999999993169e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1403000000007046e-05, 1.1403000000007046e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1402000000007573e-05, 1.1459000000005326e-05, 1.1374999999994029e-05, 1.1375000000007907e-05, 1.1430999999992308e-05, 1.1402000000007573e-05, 1.1361000000001398e-05, 1.1374999999994029e-05, 1.1402000000007573e-05, 1.1389000000000538e-05, 1.1375000000007907e-05]</msg>
<status status="PASS" starttime="20201029 09:33:04.024" endtime="20201029 09:33:04.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.019" endtime="20201029 09:33:04.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.676" endtime="20201029 09:33:04.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.676" endtime="20201029 09:33:04.027"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.035" endtime="20201029 09:33:04.046"></status>
</kw>
<msg timestamp="20201029 09:33:04.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.034" endtime="20201029 09:33:04.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.048" endtime="20201029 09:33:04.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.050" endtime="20201029 09:33:04.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.031" endtime="20201029 09:33:04.052"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.029" endtime="20201029 09:33:04.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.059" endtime="20201029 09:33:04.365"></status>
</kw>
<msg timestamp="20201029 09:33:04.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063373264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063384667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.058" endtime="20201029 09:33:04.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063373264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063384667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.370" endtime="20201029 09:33:04.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.382" endtime="20201029 09:33:04.386"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.055" endtime="20201029 09:33:04.387"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.053" endtime="20201029 09:33:04.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.398" level="INFO">${RESULT} = [{'diff': 1.1403000000007046e-05}, {'diff': 1.1416999999999677e-05}, {'diff': 1.1374999999994029e-05}, {'diff': 1.1402000000007573e-05}, {'diff': 1.1459000000005326e-05}, {'diff': 1.1374999999994029e-...</msg>
<status status="PASS" starttime="20201029 09:33:04.390" endtime="20201029 09:33:04.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.409" level="INFO">${OVERHEAD} = {'diff': [1.1403000000007046e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1402000000007573e-05, 1.1459000000005326e-05, 1.1374999999994029e-05, 1.1375000000007907e-05, 1.1430999999992308e-05...</msg>
<status status="PASS" starttime="20201029 09:33:04.400" endtime="20201029 09:33:04.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.418" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:04.416" endtime="20201029 09:33:04.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.423" level="INFO">VALUE: [1.1403000000007046e-05, 1.1416999999999677e-05, 1.1374999999994029e-05, 1.1402000000007573e-05, 1.1459000000005326e-05, 1.1374999999994029e-05, 1.1375000000007907e-05, 1.1430999999992308e-05, 1.1402000000007573e-05, 1.1361000000001398e-05, 1.1374999999994029e-05, 1.1402000000007573e-05, 1.1389000000000538e-05, 1.1375000000007907e-05, 1.2000000000012001e-05, 1.1334000000029487e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1402000000049206e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1389000000028293e-05, 1.1417000000013555e-05, 1.1388000000001064e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388000000001064e-05, 1.14440000000271e-05, 1.1388999999972782e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1402999999965413e-05, 1.1388000000001064e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1389000000028293e-05, 1.1374999999980151e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.1401999999993695e-05, 1.1444999999998817e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1444999999998817e-05, 1.1402999999965413e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1402999999965413e-05, 1.1415999999986326e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1348000000022118e-05, 1.1389000000028293e-05]</msg>
<status status="PASS" starttime="20201029 09:33:04.420" endtime="20201029 09:33:04.424"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.411" endtime="20201029 09:33:04.425"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.028" endtime="20201029 09:33:04.426"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.028" endtime="20201029 09:33:04.427"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.443" endtime="20201029 09:33:04.458"></status>
</kw>
<msg timestamp="20201029 09:33:04.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.440" endtime="20201029 09:33:04.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.461" endtime="20201029 09:33:04.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.466" endtime="20201029 09:33:04.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.434" endtime="20201029 09:33:04.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.431" endtime="20201029 09:33:04.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.482" endtime="20201029 09:33:04.792"></status>
</kw>
<msg timestamp="20201029 09:33:04.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402642111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4026535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:04.480" endtime="20201029 09:33:04.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.402642111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.4026535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:04.797" endtime="20201029 09:33:04.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.807" endtime="20201029 09:33:04.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.476" endtime="20201029 09:33:04.809"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.473" endtime="20201029 09:33:04.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:04.814" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1389000000028293e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999980151e-...</msg>
<status status="PASS" starttime="20201029 09:33:04.811" endtime="20201029 09:33:04.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:04.819" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1388999999972782e-05, 1.1374999999980151e-05...</msg>
<status status="PASS" starttime="20201029 09:33:04.815" endtime="20201029 09:33:04.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:04.822" endtime="20201029 09:33:04.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.825" level="INFO">VALUE: [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1389000000028293e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1388999999972782e-05, 1.1374999999980151e-05, 1.1402999999965413e-05, 1.1415999999986326e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1348000000022118e-05, 1.1389000000028293e-05, 1.2012999999977403e-05, 1.1375000000035662e-05, 1.136099999998752e-05, 1.1389000000083804e-05, 1.145800000001973e-05, 1.1403000000020924e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1402000000049206e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1402000000049206e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1389000000083804e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1389000000083804e-05, 1.1431000000006186e-05, 1.1402999999909902e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1431000000006186e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1430000000034468e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.145800000001973e-05, 1.1388999999972782e-05, 1.1402999999909902e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1389000000083804e-05]</msg>
<status status="PASS" starttime="20201029 09:33:04.824" endtime="20201029 09:33:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.820" endtime="20201029 09:33:04.826"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.428" endtime="20201029 09:33:04.827"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.427" endtime="20201029 09:33:04.827"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.836" endtime="20201029 09:33:04.847"></status>
</kw>
<msg timestamp="20201029 09:33:04.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.833" endtime="20201029 09:33:04.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:04.850" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:04.848" endtime="20201029 09:33:04.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.851" endtime="20201029 09:33:04.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.831" endtime="20201029 09:33:04.854"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.829" endtime="20201029 09:33:04.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:04.863" endtime="20201029 09:33:05.162"></status>
</kw>
<msg timestamp="20201029 09:33:05.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800886736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800898125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:04.861" endtime="20201029 09:33:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.800886736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.800898125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.167" endtime="20201029 09:33:05.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.177" endtime="20201029 09:33:05.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.858" endtime="20201029 09:33:05.179"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.856" endtime="20201029 09:33:05.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.184" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1430000000034468e-05}, {'diff': 1.1388000000001064e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.137499999992464e-0...</msg>
<status status="PASS" starttime="20201029 09:33:05.181" endtime="20201029 09:33:05.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.194" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1403000000020924e-05, 1.1430000000034468e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.145800000001973e-05, 1.1388999999972782e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:05.185" endtime="20201029 09:33:05.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.203" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:05.200" endtime="20201029 09:33:05.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.210" level="INFO">VALUE: [1.1388999999972782e-05, 1.1403000000020924e-05, 1.1430000000034468e-05, 1.1388000000001064e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.145800000001973e-05, 1.1388999999972782e-05, 1.1402999999909902e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1375000000035662e-05, 1.1375000000035662e-05, 1.1389000000083804e-05, 1.2055999999871503e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1417000000069066e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1401999999938184e-05, 1.1444999999943306e-05, 1.1417000000069066e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1388000000112086e-05, 1.1361000000098542e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1388000000112086e-05, 1.1389000000194827e-05, 1.1401999999938184e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1402000000160228e-05, 1.131900000017616e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 09:33:05.206" endtime="20201029 09:33:05.211"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.195" endtime="20201029 09:33:05.212"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.828" endtime="20201029 09:33:05.214"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:04.827" endtime="20201029 09:33:05.214"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.234" endtime="20201029 09:33:05.248"></status>
</kw>
<msg timestamp="20201029 09:33:05.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.229" endtime="20201029 09:33:05.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.255" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.252" endtime="20201029 09:33:05.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.258" endtime="20201029 09:33:05.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.223" endtime="20201029 09:33:05.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.220" endtime="20201029 09:33:05.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.276" endtime="20201029 09:33:05.581"></status>
</kw>
<msg timestamp="20201029 09:33:05.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183116125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183127528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.273" endtime="20201029 09:33:05.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183116125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183127528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.586" endtime="20201029 09:33:05.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.596" endtime="20201029 09:33:05.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.268" endtime="20201029 09:33:05.598"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.264" endtime="20201029 09:33:05.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.603" level="INFO">${RESULT} = [{'diff': 1.1403000000020924e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.131900000017616e-05}, {'diff': 1.1415999999986326e-05}, {'diff': 1.1403000000020924e-0...</msg>
<status status="PASS" starttime="20201029 09:33:05.600" endtime="20201029 09:33:05.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.609" level="INFO">${OVERHEAD} = {'diff': [1.1403000000020924e-05, 1.1403000000020924e-05, 1.1402000000160228e-05, 1.131900000017616e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:05.604" endtime="20201029 09:33:05.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.613" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:05.612" endtime="20201029 09:33:05.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.615" level="INFO">VALUE: [1.1403000000020924e-05, 1.1403000000020924e-05, 1.1402000000160228e-05, 1.131900000017616e-05, 1.1415999999986326e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.2013999999949121e-05, 1.1346999999828355e-05, 1.1430999999895164e-05, 1.13470000000504e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1415999999986326e-05, 1.140299999979888e-05, 1.137499999992464e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1389000000194827e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1416999999847022e-05, 1.1389000000194827e-05, 1.1403000000020924e-05, 1.140299999979888e-05, 1.1346999999828355e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1457999999908708e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1458000000130752e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1361000000098542e-05, 1.1457999999908708e-05, 1.1417000000069066e-05, 1.1375000000146684e-05, 1.1430000000034468e-05]</msg>
<status status="PASS" starttime="20201029 09:33:05.614" endtime="20201029 09:33:05.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.610" endtime="20201029 09:33:05.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.216" endtime="20201029 09:33:05.617"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.215" endtime="20201029 09:33:05.618"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.628" endtime="20201029 09:33:05.640"></status>
</kw>
<msg timestamp="20201029 09:33:05.640" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.626" endtime="20201029 09:33:05.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.643" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:05.642" endtime="20201029 09:33:05.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.645" endtime="20201029 09:33:05.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.623" endtime="20201029 09:33:05.648"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.621" endtime="20201029 09:33:05.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.657" endtime="20201029 09:33:05.966"></status>
</kw>
<msg timestamp="20201029 09:33:05.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.573157681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.573169028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.655" endtime="20201029 09:33:05.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.573157681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.573169028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:05.971" endtime="20201029 09:33:05.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:05.981" endtime="20201029 09:33:05.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.653" endtime="20201029 09:33:05.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.650" endtime="20201029 09:33:05.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:05.988" level="INFO">${RESULT} = [{'diff': 1.1346999999828355e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000020924e-05}, {'diff': 1.1457999999908708e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1375000000146684e-...</msg>
<status status="PASS" starttime="20201029 09:33:05.985" endtime="20201029 09:33:05.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:05.993" level="INFO">${OVERHEAD} = {'diff': [1.1346999999828355e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1457999999908708e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1458000000130752e-05, 1.137499999992464e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:05.989" endtime="20201029 09:33:05.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:05.997" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:05.996" endtime="20201029 09:33:05.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.000" level="INFO">VALUE: [1.1346999999828355e-05, 1.1388999999972782e-05, 1.1403000000020924e-05, 1.1457999999908708e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1458000000130752e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1361000000098542e-05, 1.1457999999908708e-05, 1.1417000000069066e-05, 1.1375000000146684e-05, 1.1430000000034468e-05, 1.2027000000136567e-05, 1.1388000000112086e-05, 1.137499999992464e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1430999999895164e-05, 1.1361999999959238e-05, 1.1388999999972782e-05, 1.1389000000194827e-05, 1.1333999999862954e-05, 1.1389000000194827e-05, 1.1388999999972782e-05, 1.1443999999860566e-05, 1.1403000000020924e-05, 1.1388000000112086e-05, 1.1403000000020924e-05, 1.140299999979888e-05, 1.1361000000098542e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1415999999986326e-05, 1.1360999999876498e-05, 1.1401999999938184e-05, 1.140299999979888e-05, 1.137499999992464e-05, 1.1401999999938184e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.137499999992464e-05, 1.1401999999938184e-05, 1.1305000000128018e-05, 1.1403000000020924e-05, 1.1403000000020924e-05, 1.1417000000069066e-05, 1.1401999999938184e-05, 1.1333000000002258e-05, 1.1375000000146684e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1401999999938184e-05]</msg>
<status status="PASS" starttime="20201029 09:33:05.998" endtime="20201029 09:33:06.000"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.994" endtime="20201029 09:33:06.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.619" endtime="20201029 09:33:06.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:05.618" endtime="20201029 09:33:06.001"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.010" endtime="20201029 09:33:06.021"></status>
</kw>
<msg timestamp="20201029 09:33:06.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.008" endtime="20201029 09:33:06.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.022" endtime="20201029 09:33:06.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.025" endtime="20201029 09:33:06.026"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.005" endtime="20201029 09:33:06.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.003" endtime="20201029 09:33:06.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.034" endtime="20201029 09:33:06.339"></status>
</kw>
<msg timestamp="20201029 09:33:06.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.956825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.956836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.032" endtime="20201029 09:33:06.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.956825056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.956836458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.344" endtime="20201029 09:33:06.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.354" endtime="20201029 09:33:06.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.030" endtime="20201029 09:33:06.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.028" endtime="20201029 09:33:06.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.361" level="INFO">${RESULT} = [{'diff': 1.1401999999938184e-05}, {'diff': 1.1333000000002258e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-...</msg>
<status status="PASS" starttime="20201029 09:33:06.358" endtime="20201029 09:33:06.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.366" level="INFO">${OVERHEAD} = {'diff': [1.1401999999938184e-05, 1.1333000000002258e-05, 1.1375000000146684e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1403000000020924e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:06.362" endtime="20201029 09:33:06.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.371" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:06.370" endtime="20201029 09:33:06.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.373" level="INFO">VALUE: [1.1401999999938184e-05, 1.1333000000002258e-05, 1.1375000000146684e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1403000000020924e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.137499999992464e-05, 1.1401999999938184e-05, 1.2027999999997263e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.138800000033413e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1375000000146684e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1443999999638521e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1472999999817546e-05, 1.1374999999702595e-05, 1.1375000000146684e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.140199999971614e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1318999999954116e-05, 1.140199999971614e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1375000000146684e-05]</msg>
<status status="PASS" starttime="20201029 09:33:06.372" endtime="20201029 09:33:06.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.367" endtime="20201029 09:33:06.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.002" endtime="20201029 09:33:06.374"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.002" endtime="20201029 09:33:06.375"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.382" endtime="20201029 09:33:06.393"></status>
</kw>
<msg timestamp="20201029 09:33:06.394" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.381" endtime="20201029 09:33:06.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.395" endtime="20201029 09:33:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.397" endtime="20201029 09:33:06.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.378" endtime="20201029 09:33:06.399"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.377" endtime="20201029 09:33:06.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.406" endtime="20201029 09:33:06.722"></status>
</kw>
<msg timestamp="20201029 09:33:06.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.327427681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.327439083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.405" endtime="20201029 09:33:06.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.327427681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.327439083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.728" endtime="20201029 09:33:06.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.738" endtime="20201029 09:33:06.739"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.402" endtime="20201029 09:33:06.740"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.400" endtime="20201029 09:33:06.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:06.744" level="INFO">${RESULT} = [{'diff': 1.140199999971614e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1417000000069066e-05}, {'diff': 1.13470000000504e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1318999999954116e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:06.741" endtime="20201029 09:33:06.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:06.750" level="INFO">${OVERHEAD} = {'diff': [1.140199999971614e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1318999999954116e-05, 1.140199999971614e-05, 1.140299999979888e-05, 1.1...</msg>
<status status="PASS" starttime="20201029 09:33:06.745" endtime="20201029 09:33:06.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.754" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:06.753" endtime="20201029 09:33:06.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.757" level="INFO">VALUE: [1.140199999971614e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1318999999954116e-05, 1.140199999971614e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.2000000000345068e-05, 1.1443999999638521e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1374999999702595e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1444999999721261e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.13470000000504e-05, 1.1319000000398205e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1333000000224303e-05, 1.1347999999689051e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1415999999986326e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1360999999876498e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1389000000416871e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 09:33:06.755" endtime="20201029 09:33:06.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.751" endtime="20201029 09:33:06.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.375" endtime="20201029 09:33:06.758"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.375" endtime="20201029 09:33:06.758"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.766" endtime="20201029 09:33:06.777"></status>
</kw>
<msg timestamp="20201029 09:33:06.778" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.764" endtime="20201029 09:33:06.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:06.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:06.779" endtime="20201029 09:33:06.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.781" endtime="20201029 09:33:06.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.762" endtime="20201029 09:33:06.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.760" endtime="20201029 09:33:06.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:06.792" endtime="20201029 09:33:07.103"></status>
</kw>
<msg timestamp="20201029 09:33:07.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.690811597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.690822958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:06.790" endtime="20201029 09:33:07.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.690811597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.690822958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.108" endtime="20201029 09:33:07.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.118" endtime="20201029 09:33:07.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.787" endtime="20201029 09:33:07.120"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.785" endtime="20201029 09:33:07.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.125" level="INFO">${RESULT} = [{'diff': 1.1360999999876498e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1417000000069066e-05}, {'diff': 1.1403000000242969e-0...</msg>
<status status="PASS" starttime="20201029 09:33:07.121" endtime="20201029 09:33:07.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.130" level="INFO">${OVERHEAD} = {'diff': [1.1360999999876498e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999979888e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:07.126" endtime="20201029 09:33:07.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.134" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:07.133" endtime="20201029 09:33:07.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.136" level="INFO">VALUE: [1.1360999999876498e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1389000000416871e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.2014000000171166e-05, 1.1360999999876498e-05, 1.1333999999862954e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1346999999606311e-05, 1.1430000000256513e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.134800000013314e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1417000000069066e-05, 1.1375000000146684e-05, 1.1374999999702595e-05, 1.1375000000146684e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1402000000160228e-05]</msg>
<status status="PASS" starttime="20201029 09:33:07.135" endtime="20201029 09:33:07.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.130" endtime="20201029 09:33:07.137"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.759" endtime="20201029 09:33:07.138"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:06.758" endtime="20201029 09:33:07.138"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.146" endtime="20201029 09:33:07.157"></status>
</kw>
<msg timestamp="20201029 09:33:07.158" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.145" endtime="20201029 09:33:07.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.159" endtime="20201029 09:33:07.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.161" endtime="20201029 09:33:07.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.142" endtime="20201029 09:33:07.163"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.140" endtime="20201029 09:33:07.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.171" endtime="20201029 09:33:07.490"></status>
</kw>
<msg timestamp="20201029 09:33:07.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06353625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.063547625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:07.169" endtime="20201029 09:33:07.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.06353625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.063547625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:07.497" endtime="20201029 09:33:07.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.512" endtime="20201029 09:33:07.515"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.166" endtime="20201029 09:33:07.516"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.164" endtime="20201029 09:33:07.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.524" level="INFO">${RESULT} = [{'diff': 1.1375000000146684e-05}, {'diff': 1.13470000000504e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.144500000016535e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1388999999972782e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:07.519" endtime="20201029 09:33:07.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.530" level="INFO">${OVERHEAD} = {'diff': [1.1375000000146684e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1....</msg>
<status status="PASS" starttime="20201029 09:33:07.525" endtime="20201029 09:33:07.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.536" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:07.535" endtime="20201029 09:33:07.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.540" level="INFO">VALUE: [1.1375000000146684e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1403000000242969e-05, 1.140299999979888e-05, 1.1402000000160228e-05, 1.2014000000171166e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1375000000146684e-05, 1.1417000000069066e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.140199999971614e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.130599999976667e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1387999999890042e-05, 1.1332999999780213e-05, 1.1387999999890042e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1387999999890042e-05]</msg>
<status status="PASS" starttime="20201029 09:33:07.538" endtime="20201029 09:33:07.541"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.532" endtime="20201029 09:33:07.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.138" endtime="20201029 09:33:07.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.138" endtime="20201029 09:33:07.543"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.554" endtime="20201029 09:33:07.566"></status>
</kw>
<msg timestamp="20201029 09:33:07.567" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.552" endtime="20201029 09:33:07.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.570" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.568" endtime="20201029 09:33:07.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.572" endtime="20201029 09:33:07.574"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.548" endtime="20201029 09:33:07.575"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.546" endtime="20201029 09:33:07.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.591" endtime="20201029 09:33:07.910"></status>
</kw>
<msg timestamp="20201029 09:33:07.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.433042986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.433054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.589" endtime="20201029 09:33:07.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.433042986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.433054389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.915" endtime="20201029 09:33:07.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.925" endtime="20201029 09:33:07.927"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.585" endtime="20201029 09:33:07.928"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.577" endtime="20201029 09:33:07.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:07.933" level="INFO">${RESULT} = [{'diff': 1.1403000000242969e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.138800000033413e-05}, {'diff': 1.1375000000146684e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1388999999972782e-0...</msg>
<status status="PASS" starttime="20201029 09:33:07.929" endtime="20201029 09:33:07.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:07.938" level="INFO">${OVERHEAD} = {'diff': [1.1403000000242969e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1403000000242969e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:07.934" endtime="20201029 09:33:07.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.942" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:07.941" endtime="20201029 09:33:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.944" level="INFO">VALUE: [1.1403000000242969e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1402000000160228e-05, 1.140299999979888e-05, 1.140299999979888e-05, 1.138800000033413e-05, 1.1387999999890042e-05, 1.1929999999882313e-05, 1.1360999999876498e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140199999971614e-05, 1.138800000033413e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000146684e-05, 1.1375000000146684e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999979888e-05, 1.1333000000224303e-05, 1.138800000033413e-05, 1.1388999999972782e-05, 1.1415999999986326e-05, 1.1402000000160228e-05, 1.1333000000224303e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.138800000033413e-05, 1.1387999999890042e-05, 1.1389000000416871e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 09:33:07.943" endtime="20201029 09:33:07.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.939" endtime="20201029 09:33:07.945"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.544" endtime="20201029 09:33:07.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.543" endtime="20201029 09:33:07.946"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.954" endtime="20201029 09:33:07.965"></status>
</kw>
<msg timestamp="20201029 09:33:07.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.952" endtime="20201029 09:33:07.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:07.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:07.966" endtime="20201029 09:33:07.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.969" endtime="20201029 09:33:07.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.950" endtime="20201029 09:33:07.971"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.948" endtime="20201029 09:33:07.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:07.981" endtime="20201029 09:33:08.293"></status>
</kw>
<msg timestamp="20201029 09:33:08.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.830577208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.830588597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:07.979" endtime="20201029 09:33:08.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.830577208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.830588597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.298" endtime="20201029 09:33:08.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.308" endtime="20201029 09:33:08.309"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.974" endtime="20201029 09:33:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.972" endtime="20201029 09:33:08.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.314" level="INFO">${RESULT} = [{'diff': 1.1389000000416871e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1417000000069066e-05}, {'diff': 1.140299999979888e-05}, {'diff': 1.1374999999702595e-0...</msg>
<status status="PASS" starttime="20201029 09:33:08.311" endtime="20201029 09:33:08.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.319" level="INFO">${OVERHEAD} = {'diff': [1.1389000000416871e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1387999999890042e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:08.315" endtime="20201029 09:33:08.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.324" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:08.322" endtime="20201029 09:33:08.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.326" level="INFO">VALUE: [1.1389000000416871e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1417000000069066e-05, 1.140299999979888e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.140299999979888e-05, 1.1388999999972782e-05, 1.1389000000416871e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1999999999900979e-05, 1.1332999999780213e-05, 1.1416999999624977e-05, 1.1319000000398205e-05, 1.1361000000320587e-05, 1.1416999999624977e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.138800000077822e-05, 1.1403000000242969e-05, 1.144400000008261e-05, 1.1417000000513156e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1374999999702595e-05, 1.1459000000435537e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1360999999432408e-05]</msg>
<status status="PASS" starttime="20201029 09:33:08.325" endtime="20201029 09:33:08.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.320" endtime="20201029 09:33:08.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.947" endtime="20201029 09:33:08.328"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:07.946" endtime="20201029 09:33:08.328"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.336" endtime="20201029 09:33:08.346"></status>
</kw>
<msg timestamp="20201029 09:33:08.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.334" endtime="20201029 09:33:08.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.349" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.348" endtime="20201029 09:33:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.351" endtime="20201029 09:33:08.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.332" endtime="20201029 09:33:08.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.330" endtime="20201029 09:33:08.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.360" endtime="20201029 09:33:08.676"></status>
</kw>
<msg timestamp="20201029 09:33:08.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.219532833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.219544292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.358" endtime="20201029 09:33:08.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.219532833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.219544292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.681" endtime="20201029 09:33:08.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.691" endtime="20201029 09:33:08.692"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.356" endtime="20201029 09:33:08.693"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.354" endtime="20201029 09:33:08.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:08.698" level="INFO">${RESULT} = [{'diff': 1.1459000000435537e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.13470000000504e-05}...</msg>
<status status="PASS" starttime="20201029 09:33:08.694" endtime="20201029 09:33:08.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:08.703" level="INFO">${OVERHEAD} = {'diff': [1.1459000000435537e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1...</msg>
<status status="PASS" starttime="20201029 09:33:08.699" endtime="20201029 09:33:08.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.707" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:08.706" endtime="20201029 09:33:08.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.710" level="INFO">VALUE: [1.1459000000435537e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1360999999432408e-05, 1.2013999999282987e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1416000000430415e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.1388999999972782e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1416999999624977e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1471999999734805e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1415999999542237e-05]</msg>
<status status="PASS" starttime="20201029 09:33:08.708" endtime="20201029 09:33:08.710"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.704" endtime="20201029 09:33:08.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.329" endtime="20201029 09:33:08.711"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.328" endtime="20201029 09:33:08.711"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.719" endtime="20201029 09:33:08.730"></status>
</kw>
<msg timestamp="20201029 09:33:08.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.717" endtime="20201029 09:33:08.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:08.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:08.731" endtime="20201029 09:33:08.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.734" endtime="20201029 09:33:08.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.715" endtime="20201029 09:33:08.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.713" endtime="20201029 09:33:08.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:08.743" endtime="20201029 09:33:09.054"></status>
</kw>
<msg timestamp="20201029 09:33:09.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.591400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.591411556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:08.742" endtime="20201029 09:33:09.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.591400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.591411556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.059" endtime="20201029 09:33:09.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.069" endtime="20201029 09:33:09.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.739" endtime="20201029 09:33:09.071"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.738" endtime="20201029 09:33:09.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.076" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1374999999702595e-...</msg>
<status status="PASS" starttime="20201029 09:33:09.072" endtime="20201029 09:33:09.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.080" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1387999999890042e-05...</msg>
<status status="PASS" starttime="20201029 09:33:09.077" endtime="20201029 09:33:09.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.085" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.084" endtime="20201029 09:33:09.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.089" level="INFO">VALUE: [1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1387999999890042e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1471999999734805e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.13470000000504e-05, 1.1415999999542237e-05, 1.1972000000248784e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1416999999624977e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1416999999624977e-05, 1.144400000008261e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.138900000086096e-05, 1.1416000000430415e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1374999999702595e-05]</msg>
<status status="PASS" starttime="20201029 09:33:09.087" endtime="20201029 09:33:09.089"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.081" endtime="20201029 09:33:09.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.712" endtime="20201029 09:33:09.090"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:08.712" endtime="20201029 09:33:09.090"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.099" endtime="20201029 09:33:09.110"></status>
</kw>
<msg timestamp="20201029 09:33:09.111" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.097" endtime="20201029 09:33:09.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.112" endtime="20201029 09:33:09.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.115" endtime="20201029 09:33:09.116"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.094" endtime="20201029 09:33:09.117"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.093" endtime="20201029 09:33:09.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.124" endtime="20201029 09:33:09.439"></status>
</kw>
<msg timestamp="20201029 09:33:09.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.964913653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.964925028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.122" endtime="20201029 09:33:09.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.964913653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.964925028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.444" endtime="20201029 09:33:09.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.454" endtime="20201029 09:33:09.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.119" endtime="20201029 09:33:09.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.118" endtime="20201029 09:33:09.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.461" level="INFO">${RESULT} = [{'diff': 1.1374999999702595e-05}, {'diff': 1.1374999999702595e-05}, {'diff': 1.1417000000513156e-05}, {'diff': 1.1416999999624977e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1374999999702595e-0...</msg>
<status status="PASS" starttime="20201029 09:33:09.458" endtime="20201029 09:33:09.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.466" level="INFO">${OVERHEAD} = {'diff': [1.1374999999702595e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1374999999702595e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:09.462" endtime="20201029 09:33:09.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.470" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.469" endtime="20201029 09:33:09.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.473" level="INFO">VALUE: [1.1374999999702595e-05, 1.1374999999702595e-05, 1.1417000000513156e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1374999999702595e-05, 1.2027999999553174e-05, 1.1416000000430415e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.144500000016535e-05, 1.1332999999780213e-05, 1.1416999999624977e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1332999999780213e-05, 1.138800000077822e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1403000000242969e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1374999999702595e-05, 1.1415999999542237e-05, 1.13470000000504e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1430000000700602e-05, 1.1319000000398205e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.140199999927205e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05]</msg>
<status status="PASS" starttime="20201029 09:33:09.472" endtime="20201029 09:33:09.473"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.467" endtime="20201029 09:33:09.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.091" endtime="20201029 09:33:09.474"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.091" endtime="20201029 09:33:09.474"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.482" endtime="20201029 09:33:09.494"></status>
</kw>
<msg timestamp="20201029 09:33:09.494" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.481" endtime="20201029 09:33:09.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.495" endtime="20201029 09:33:09.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.498" endtime="20201029 09:33:09.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.478" endtime="20201029 09:33:09.500"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.476" endtime="20201029 09:33:09.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.506" endtime="20201029 09:33:09.826"></status>
</kw>
<msg timestamp="20201029 09:33:09.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.333277903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.333289292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.505" endtime="20201029 09:33:09.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.333277903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.333289292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.831" endtime="20201029 09:33:09.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.841" endtime="20201029 09:33:09.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.502" endtime="20201029 09:33:09.843"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.501" endtime="20201029 09:33:09.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:09.848" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1416000000430415e-05}, {'diff': 1.140199999927205e-05}, {'diff': 1.1374999999702595e-0...</msg>
<status status="PASS" starttime="20201029 09:33:09.844" endtime="20201029 09:33:09.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:09.853" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.140199999927205e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:09.849" endtime="20201029 09:33:09.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.858" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:09.857" endtime="20201029 09:33:09.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.860" level="INFO">VALUE: [1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.140199999927205e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.13470000000504e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1999999999900979e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.138800000077822e-05, 1.138900000086096e-05, 1.1374999999702595e-05, 1.144400000008261e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.144500000016535e-05, 1.1388999999972782e-05, 1.1360999999432408e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1471999999734805e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1416999999624977e-05, 1.1444999999277172e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1403000000242969e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05]</msg>
<status status="PASS" starttime="20201029 09:33:09.859" endtime="20201029 09:33:09.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.854" endtime="20201029 09:33:09.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.475" endtime="20201029 09:33:09.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.475" endtime="20201029 09:33:09.862"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.870" endtime="20201029 09:33:09.881"></status>
</kw>
<msg timestamp="20201029 09:33:09.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.868" endtime="20201029 09:33:09.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:09.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:09.882" endtime="20201029 09:33:09.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.885" endtime="20201029 09:33:09.886"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.865" endtime="20201029 09:33:09.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.864" endtime="20201029 09:33:09.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:09.894" endtime="20201029 09:33:10.205"></status>
</kw>
<msg timestamp="20201029 09:33:10.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.706727167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.706738597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:09.892" endtime="20201029 09:33:10.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.706727167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.706738597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.210" endtime="20201029 09:33:10.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.220" endtime="20201029 09:33:10.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.890" endtime="20201029 09:33:10.222"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.888" endtime="20201029 09:33:10.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.226" level="INFO">${RESULT} = [{'diff': 1.1429999999812424e-05}, {'diff': 1.1471999999734805e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1387999999890042e-05}, {'diff': 1.1416999999624977e-05}, {'diff': 1.1444999999277172e-...</msg>
<status status="PASS" starttime="20201029 09:33:10.223" endtime="20201029 09:33:10.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.231" level="INFO">${OVERHEAD} = {'diff': [1.1429999999812424e-05, 1.1471999999734805e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1416999999624977e-05, 1.1444999999277172e-05, 1.1388999999972782e-05, 1.1458000000352797e-05...</msg>
<status status="PASS" starttime="20201029 09:33:10.227" endtime="20201029 09:33:10.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.235" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.234" endtime="20201029 09:33:10.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.238" level="INFO">VALUE: [1.1429999999812424e-05, 1.1471999999734805e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1416999999624977e-05, 1.1444999999277172e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1403000000242969e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.2026999999470434e-05, 1.1387999999890042e-05, 1.140299999935479e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1416000000430415e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.134800000013314e-05, 1.1416999999624977e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1333999999862954e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1360999999432408e-05, 1.1320000000480945e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1361000000320587e-05]</msg>
<status status="PASS" starttime="20201029 09:33:10.236" endtime="20201029 09:33:10.238"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.232" endtime="20201029 09:33:10.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.862" endtime="20201029 09:33:10.239"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:09.862" endtime="20201029 09:33:10.239"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.248" endtime="20201029 09:33:10.259"></status>
</kw>
<msg timestamp="20201029 09:33:10.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.247" endtime="20201029 09:33:10.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.261" endtime="20201029 09:33:10.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.263" endtime="20201029 09:33:10.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.243" endtime="20201029 09:33:10.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.241" endtime="20201029 09:33:10.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.272" endtime="20201029 09:33:10.589"></status>
</kw>
<msg timestamp="20201029 09:33:10.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.083206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.083217403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:10.271" endtime="20201029 09:33:10.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.083206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.083217403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 09:33:10.594" endtime="20201029 09:33:10.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.604" endtime="20201029 09:33:10.605"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.268" endtime="20201029 09:33:10.606"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.266" endtime="20201029 09:33:10.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.610" level="INFO">${RESULT} = [{'diff': 1.1403000000242969e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1375000000590774e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1360999999432408e-05}, {'diff': 1.1320000000480945e-0...</msg>
<status status="PASS" starttime="20201029 09:33:10.607" endtime="20201029 09:33:10.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.616" level="INFO">${OVERHEAD} = {'diff': [1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1360999999432408e-05, 1.1320000000480945e-05, 1.1361000000320587e-05, 1.1403000000242969e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:10.611" endtime="20201029 09:33:10.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.620" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.619" endtime="20201029 09:33:10.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.622" level="INFO">VALUE: [1.1403000000242969e-05, 1.1403000000242969e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1360999999432408e-05, 1.1320000000480945e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1430999999895164e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.2027999999553174e-05, 1.1332999999780213e-05, 1.13470000000504e-05, 1.1403000000242969e-05, 1.134800000013314e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1415999999542237e-05, 1.1403000000242969e-05, 1.1319999999592767e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.140299999935479e-05, 1.1430999999895164e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1402000000160228e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1429999999812424e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1472000000622984e-05, 1.1402000000160228e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999935479e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1416999999624977e-05, 1.138900000086096e-05]</msg>
<status status="PASS" starttime="20201029 09:33:10.621" endtime="20201029 09:33:10.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.616" endtime="20201029 09:33:10.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.240" endtime="20201029 09:33:10.624"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.240" endtime="20201029 09:33:10.624"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.632" endtime="20201029 09:33:10.643"></status>
</kw>
<msg timestamp="20201029 09:33:10.643" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.631" endtime="20201029 09:33:10.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.646" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:10.645" endtime="20201029 09:33:10.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.647" endtime="20201029 09:33:10.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.628" endtime="20201029 09:33:10.649"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.626" endtime="20201029 09:33:10.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.656" endtime="20201029 09:33:10.966"></status>
</kw>
<msg timestamp="20201029 09:33:10.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.452346403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.452357792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.654" endtime="20201029 09:33:10.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.452346403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.452357792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:10.971" endtime="20201029 09:33:10.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:10.981" endtime="20201029 09:33:10.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.652" endtime="20201029 09:33:10.983"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.650" endtime="20201029 09:33:10.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:10.988" level="INFO">${RESULT} = [{'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1472000000622984e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.140299999935479e-05}, {'diff': 1.1375000000590774e-0...</msg>
<status status="PASS" starttime="20201029 09:33:10.985" endtime="20201029 09:33:10.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:10.994" level="INFO">${OVERHEAD} = {'diff': [1.1388999999972782e-05, 1.1403000000242969e-05, 1.1472000000622984e-05, 1.1402000000160228e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1388999999972782e-05,...</msg>
<status status="PASS" starttime="20201029 09:33:10.989" endtime="20201029 09:33:10.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:10.998" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:10.997" endtime="20201029 09:33:10.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.001" level="INFO">VALUE: [1.1388999999972782e-05, 1.1403000000242969e-05, 1.1472000000622984e-05, 1.1402000000160228e-05, 1.140299999935479e-05, 1.1375000000590774e-05, 1.1416999999624977e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.140299999935479e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1416999999624977e-05, 1.138900000086096e-05, 1.1999999999900979e-05, 1.1416999999624977e-05, 1.1375000000590774e-05, 1.1403000000242969e-05, 1.1429999999812424e-05, 1.1332999999780213e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1417000000513156e-05, 1.144500000016535e-05, 1.1388999999972782e-05, 1.1416999999624977e-05, 1.140299999935479e-05, 1.140199999927205e-05, 1.1403000000242969e-05, 1.1332999999780213e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1361000000320587e-05, 1.140299999935479e-05, 1.1415999999542237e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1402000000160228e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.13470000000504e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1403000000242969e-05]</msg>
<status status="PASS" starttime="20201029 09:33:10.999" endtime="20201029 09:33:11.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.995" endtime="20201029 09:33:11.001"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.625" endtime="20201029 09:33:11.002"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:10.624" endtime="20201029 09:33:11.003"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.010" endtime="20201029 09:33:11.021"></status>
</kw>
<msg timestamp="20201029 09:33:11.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.009" endtime="20201029 09:33:11.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.024" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.023" endtime="20201029 09:33:11.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.025" endtime="20201029 09:33:11.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.006" endtime="20201029 09:33:11.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.005" endtime="20201029 09:33:11.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.035" endtime="20201029 09:33:11.351"></status>
</kw>
<msg timestamp="20201029 09:33:11.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.827145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.827156875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.034" endtime="20201029 09:33:11.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.827145472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.827156875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.356" endtime="20201029 09:33:11.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.366" endtime="20201029 09:33:11.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.030" endtime="20201029 09:33:11.368"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.028" endtime="20201029 09:33:11.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.373" level="INFO">${RESULT} = [{'diff': 1.1403000000242969e-05}, {'diff': 1.1402000000160228e-05}, {'diff': 1.1361000000320587e-05}, {'diff': 1.1388999999972782e-05}, {'diff': 1.1403000000242969e-05}, {'diff': 1.1403000000242969e-...</msg>
<status status="PASS" starttime="20201029 09:33:11.370" endtime="20201029 09:33:11.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.378" level="INFO">${OVERHEAD} = {'diff': [1.1403000000242969e-05, 1.1402000000160228e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.13470000000504e-05, ...</msg>
<status status="PASS" starttime="20201029 09:33:11.374" endtime="20201029 09:33:11.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.382" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 09:33:11.381" endtime="20201029 09:33:11.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.387" level="INFO">VALUE: [1.1403000000242969e-05, 1.1402000000160228e-05, 1.1361000000320587e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1403000000242969e-05, 1.1415999999542237e-05, 1.13470000000504e-05, 1.1402000000160228e-05, 1.1403000000242969e-05, 1.1387999999890042e-05, 1.1388999999972782e-05, 1.1361000000320587e-05, 1.1403000000242969e-05, 1.2069999999475556e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.140199999927205e-05, 1.1375000000590774e-05, 1.1429999999812424e-05, 1.1387999999890042e-05, 1.1403000000242969e-05, 1.1374999999702595e-05, 1.1375000000590774e-05, 1.1332999999780213e-05, 1.1361000000320587e-05, 1.140199999927205e-05, 1.1417000000513156e-05, 1.1375000000590774e-05, 1.1388999999972782e-05, 1.1374999999702595e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.140299999935479e-05, 1.1388999999972782e-05, 1.1388999999972782e-05, 1.1403000000242969e-05, 1.1388999999972782e-05, 1.1458000000352797e-05, 1.1388999999972782e-05, 1.1375000000590774e-05, 1.1387999999890042e-05, 1.1374999999702595e-05, 1.1403000000242969e-05, 1.144500000016535e-05, 1.1443999999194432e-05, 1.140299999935479e-05, 1.1429999999812424e-05, 1.1415999999542237e-05, 1.1374999999702595e-05, 1.1388999999972782e-05, 1.144400000008261e-05, 1.1403000000242969e-05, 1.1430999999895164e-05, 1.1388999999972782e-05, 1.140299999935479e-05, 1.1417000000513156e-05, 1.1375000000590774e-05, 1.138800000077822e-05, 1.1416000000430415e-05]</msg>
<status status="PASS" starttime="20201029 09:33:11.383" endtime="20201029 09:33:11.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.379" endtime="20201029 09:33:11.388"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.003" endtime="20201029 09:33:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.003" endtime="20201029 09:33:11.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:03.675" endtime="20201029 09:33:11.389"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:03.607" endtime="20201029 09:33:11.389" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:11.396" endtime="20201029 09:33:11.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.395" endtime="20201029 09:33:11.416"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.429" endtime="20201029 09:33:11.443"></status>
</kw>
<msg timestamp="20201029 09:33:11.444" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.428" endtime="20201029 09:33:11.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.445" endtime="20201029 09:33:11.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:11.449" endtime="20201029 09:33:11.453"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.425" endtime="20201029 09:33:11.454"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.423" endtime="20201029 09:33:11.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.421" endtime="20201029 09:33:11.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:11.461" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:11.460" endtime="20201029 09:33:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.457" endtime="20201029 09:33:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.421" endtime="20201029 09:33:11.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.420" endtime="20201029 09:33:11.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.464" endtime="20201029 09:33:11.465"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.419" endtime="20201029 09:33:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.417" endtime="20201029 09:33:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.393" endtime="20201029 09:33:11.467"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.476" endtime="20201029 09:33:11.496"></status>
</kw>
<msg timestamp="20201029 09:33:11.496" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.474" endtime="20201029 09:33:11.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.499" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.498" endtime="20201029 09:33:11.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.500" endtime="20201029 09:33:11.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.471" endtime="20201029 09:33:11.502"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.469" endtime="20201029 09:33:11.503"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.505" endtime="20201029 09:33:11.507"></status>
</kw>
<msg timestamp="20201029 09:33:11.507" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:11.504" endtime="20201029 09:33:11.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.511" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:11.510" endtime="20201029 09:33:11.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.513" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:11.512" endtime="20201029 09:33:11.514"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.508" endtime="20201029 09:33:11.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.518" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:11.517" endtime="20201029 09:33:11.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.520" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:11.519" endtime="20201029 09:33:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.515" endtime="20201029 09:33:11.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.527" endtime="20201029 09:33:11.814"></status>
</kw>
<msg timestamp="20201029 09:33:11.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.526" endtime="20201029 09:33:11.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072262625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:11.819" endtime="20201029 09:33:11.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.827" endtime="20201029 09:33:11.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.523" endtime="20201029 09:33:11.829"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.521" endtime="20201029 09:33:11.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:11.833" level="INFO">${RESULT} = [{'diff': 3.281900000000337e-05}, {'diff': 3.229200000000321e-05}, {'diff': 3.229199999998933e-05}, {'diff': 3.22779999999967e-05}, {'diff': 3.231900000000287e-05}, {'diff': 3.229199999998933e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:11.830" endtime="20201029 09:33:11.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:11.838" level="INFO">${OVERHEAD} = {'diff': [3.281900000000337e-05, 3.229200000000321e-05, 3.229199999998933e-05, 3.22779999999967e-05, 3.231900000000287e-05, 3.229199999998933e-05, 3.229100000000373e-05, 3.2304999999996364e-05, 3.2306...</msg>
<status status="PASS" starttime="20201029 09:33:11.834" endtime="20201029 09:33:11.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.843" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:11.842" endtime="20201029 09:33:11.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.845" level="INFO">VALUE: [3.281900000000337e-05, 3.229200000000321e-05, 3.229199999998933e-05, 3.22779999999967e-05, 3.231900000000287e-05, 3.229199999998933e-05, 3.229100000000373e-05, 3.2304999999996364e-05, 3.2306000000009716e-05, 3.231900000000287e-05, 3.2304999999996364e-05, 3.229200000000321e-05, 3.230599999999584e-05, 3.226400000000407e-05, 3.229100000000373e-05, 3.2276999999997225e-05, 3.2332999999995504e-05, 3.2290999999989856e-05, 3.234800000000149e-05, 3.230500000001024e-05, 3.2276999999997225e-05, 3.229200000000321e-05, 3.229200000000321e-05, 3.2278000000010576e-05, 3.232000000000235e-05, 3.229199999998933e-05, 3.229199999998933e-05, 3.233399999999498e-05, 3.232000000000235e-05, 3.233300000000938e-05, 3.2304999999996364e-05, 3.233300000000938e-05, 3.2250000000011436e-05, 3.230599999999584e-05, 3.2332999999995504e-05, 3.230599999999584e-05, 3.231900000000287e-05, 3.2306000000009716e-05, 3.2306000000009716e-05, 3.232000000000235e-05, 3.2318999999988995e-05, 3.233399999999498e-05, 3.230599999999584e-05, 3.230599999999584e-05, 3.231900000000287e-05, 3.230500000001024e-05, 3.229199999998933e-05, 3.223600000000493e-05, 3.229100000000373e-05, 3.2306000000009716e-05]</msg>
<status status="PASS" starttime="20201029 09:33:11.844" endtime="20201029 09:33:11.846"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.839" endtime="20201029 09:33:11.847"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.467" endtime="20201029 09:33:11.847"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:11.391" endtime="20201029 09:33:11.848" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:11.855" endtime="20201029 09:33:11.874"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.853" endtime="20201029 09:33:11.875"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.888" endtime="20201029 09:33:11.900"></status>
</kw>
<msg timestamp="20201029 09:33:11.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.886" endtime="20201029 09:33:11.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.902" endtime="20201029 09:33:11.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:11.906" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:11.904" endtime="20201029 09:33:11.907"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.884" endtime="20201029 09:33:11.907"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:11.882" endtime="20201029 09:33:11.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.880" endtime="20201029 09:33:11.908"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:11.913" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:11.912" endtime="20201029 09:33:11.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.909" endtime="20201029 09:33:11.913"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.880" endtime="20201029 09:33:11.914"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.879" endtime="20201029 09:33:11.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.915" endtime="20201029 09:33:11.916"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.878" endtime="20201029 09:33:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.876" endtime="20201029 09:33:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.852" endtime="20201029 09:33:11.917"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:11.926" endtime="20201029 09:33:12.169"></status>
</kw>
<msg timestamp="20201029 09:33:12.170" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:11.924" endtime="20201029 09:33:12.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.172" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.171" endtime="20201029 09:33:12.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.173" endtime="20201029 09:33:12.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.921" endtime="20201029 09:33:12.175"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.919" endtime="20201029 09:33:12.176"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.178" endtime="20201029 09:33:12.180"></status>
</kw>
<msg timestamp="20201029 09:33:12.180" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:12.176" endtime="20201029 09:33:12.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.184" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:12.183" endtime="20201029 09:33:12.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.186" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:12.185" endtime="20201029 09:33:12.187"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.181" endtime="20201029 09:33:12.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.191" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:12.190" endtime="20201029 09:33:12.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.193" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:12.192" endtime="20201029 09:33:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.188" endtime="20201029 09:33:12.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.200" endtime="20201029 09:33:12.508"></status>
</kw>
<msg timestamp="20201029 09:33:12.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067161528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067305597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.199" endtime="20201029 09:33:12.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067161528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067305597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:12.511" endtime="20201029 09:33:12.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.519" endtime="20201029 09:33:12.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.196" endtime="20201029 09:33:12.521"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.194" endtime="20201029 09:33:12.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:12.526" level="INFO">${RESULT} = [{'diff': 0.00014406899999999667}, {'diff': 0.00014288899999999327}, {'diff': 0.00014290299999999978}, {'diff': 0.00014287500000000064}, {'diff': 0.00014293099999999892}, {'diff': 0.000142945000000005...</msg>
<status status="PASS" starttime="20201029 09:33:12.522" endtime="20201029 09:33:12.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:12.530" level="INFO">${OVERHEAD} = {'diff': [0.00014406899999999667, 0.00014288899999999327, 0.00014290299999999978, 0.00014287500000000064, 0.00014293099999999892, 0.00014294500000000543, 0.0001429020000000003, 0.00014288900000000715,...</msg>
<status status="PASS" starttime="20201029 09:33:12.527" endtime="20201029 09:33:12.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.535" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:12.534" endtime="20201029 09:33:12.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.537" level="INFO">VALUE: [0.00014406899999999667, 0.00014288899999999327, 0.00014290299999999978, 0.00014287500000000064, 0.00014293099999999892, 0.00014294500000000543, 0.0001429020000000003, 0.00014288900000000715, 0.0001429169999999924, 0.0001429020000000003, 0.00014291599999999294, 0.00014298599999999773, 0.00014287500000000064, 0.00014291599999999294, 0.00014288900000000715, 0.00014288900000000715, 0.00014290299999999978, 0.00014286099999999413, 0.0001428610000000219, 0.0001429169999999924, 0.00014290299999999978, 0.00014281999999998796, 0.0001428889999999794, 0.00014288900000000715, 0.00014290299999999978, 0.00014291700000002017, 0.00014290299999999978, 0.00014287500000001452, 0.00014290299999999978, 0.0001429310000000128, 0.00014287499999998676, 0.00014291599999999294, 0.0001429169999999924, 0.00014294400000000596, 0.00014290299999999978, 0.00014291599999999294, 0.0001429310000000128, 0.0001429169999999924, 0.0001428889999999794, 0.0001429169999999924, 0.00014291599999999294, 0.00014286099999999413, 0.0001428890000000349, 0.0001429020000000003, 0.0001429020000000003, 0.00014286200000002136, 0.0001429310000000128, 0.0001428889999999794, 0.00014290299999997202, 0.00014290300000002754]</msg>
<status status="PASS" starttime="20201029 09:33:12.536" endtime="20201029 09:33:12.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.531" endtime="20201029 09:33:12.538"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:11.918" endtime="20201029 09:33:12.538"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:11.849" endtime="20201029 09:33:12.539" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:12.546" endtime="20201029 09:33:12.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.545" endtime="20201029 09:33:12.566"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.580" endtime="20201029 09:33:12.592"></status>
</kw>
<msg timestamp="20201029 09:33:12.593" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.578" endtime="20201029 09:33:12.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.595" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.594" endtime="20201029 09:33:12.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:12.598" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:12.596" endtime="20201029 09:33:12.598"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:12.575" endtime="20201029 09:33:12.599"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:12.572" endtime="20201029 09:33:12.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.571" endtime="20201029 09:33:12.600"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:12.604" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:12.603" endtime="20201029 09:33:12.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.601" endtime="20201029 09:33:12.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.570" endtime="20201029 09:33:12.604"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.570" endtime="20201029 09:33:12.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.605" endtime="20201029 09:33:12.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.568" endtime="20201029 09:33:12.607"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.567" endtime="20201029 09:33:12.608"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.543" endtime="20201029 09:33:12.608"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:12.616" endtime="20201029 09:33:13.458"></status>
</kw>
<msg timestamp="20201029 09:33:13.459" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:12.615" endtime="20201029 09:33:13.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.464" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.461" endtime="20201029 09:33:13.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.466" endtime="20201029 09:33:13.470"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.612" endtime="20201029 09:33:13.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.610" endtime="20201029 09:33:13.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.476" endtime="20201029 09:33:13.480"></status>
</kw>
<msg timestamp="20201029 09:33:13.481" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:13.474" endtime="20201029 09:33:13.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.489" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:13.487" endtime="20201029 09:33:13.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.494" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:13.492" endtime="20201029 09:33:13.494"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.483" endtime="20201029 09:33:13.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.502" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:13.501" endtime="20201029 09:33:13.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.505" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:13.504" endtime="20201029 09:33:13.505"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.497" endtime="20201029 09:33:13.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.513" endtime="20201029 09:33:13.804"></status>
</kw>
<msg timestamp="20201029 09:33:13.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076818208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077086778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.511" endtime="20201029 09:33:13.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076818208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077086778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.808" endtime="20201029 09:33:13.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.815" endtime="20201029 09:33:13.817"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.508" endtime="20201029 09:33:13.818"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.506" endtime="20201029 09:33:13.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:13.822" level="INFO">${RESULT} = [{'diff': 0.00026856999999999576}, {'diff': 0.0002617359999999985}, {'diff': 0.0002617359999999985}, {'diff': 0.00026175000000000503}, {'diff': 0.0002617779999999903}, {'diff': 0.00026176399999999767}...</msg>
<status status="PASS" starttime="20201029 09:33:13.819" endtime="20201029 09:33:13.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:13.826" level="INFO">${OVERHEAD} = {'diff': [0.00026856999999999576, 0.0002617359999999985, 0.0002617359999999985, 0.00026175000000000503, 0.0002617779999999903, 0.00026176399999999767, 0.00026176399999999767, 0.0002618060000000033, 0....</msg>
<status status="PASS" starttime="20201029 09:33:13.823" endtime="20201029 09:33:13.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.830" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:13.829" endtime="20201029 09:33:13.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.833" level="INFO">VALUE: [0.00026856999999999576, 0.0002617359999999985, 0.0002617359999999985, 0.00026175000000000503, 0.0002617779999999903, 0.00026176399999999767, 0.00026176399999999767, 0.0002618060000000033, 0.00026177800000001805, 0.00026180500000000384, 0.00026180500000000384, 0.0002617910000000112, 0.00026175000000000503, 0.0002617910000000112, 0.00026179200000003844, 0.0002618329999999891, 0.0002617779999999903, 0.00026176399999999767, 0.0002618329999999891, 0.00026184700000003724, 0.00026181899999999647, 0.0002618329999999891, 0.0002618200000000237, 0.0002617910000000112, 0.00026181899999999647, 0.00026181899999999647, 0.00026181899999999647, 0.00026184699999998173, 0.00026181899999999647, 0.0002618199999999682, 0.0002618200000000792, 0.00026180600000003107, 0.00026180599999992005, 0.0002617910000000112, 0.00026179199999998293, 0.0002618199999999682, 0.00026186099999991885, 0.0002617499999999495, 0.0002618199999999682, 0.00026176399999999767, 0.00026179199999998293, 0.00026175000000006055, 0.00026181899999999647, 0.0002618480000000645, 0.0002617780000000458, 0.0002617780000000458, 0.00026177699999996307, 0.00026181899999999647, 0.0002617910000000112, 0.0002617910000000112]</msg>
<status status="PASS" starttime="20201029 09:33:13.831" endtime="20201029 09:33:13.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.827" endtime="20201029 09:33:13.833"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:12.609" endtime="20201029 09:33:13.834"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:12.541" endtime="20201029 09:33:13.834" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:13.842" endtime="20201029 09:33:13.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.840" endtime="20201029 09:33:13.862"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.875" endtime="20201029 09:33:13.888"></status>
</kw>
<msg timestamp="20201029 09:33:13.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.874" endtime="20201029 09:33:13.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.891" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.889" endtime="20201029 09:33:13.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:13.892" endtime="20201029 09:33:13.894"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:13.871" endtime="20201029 09:33:13.895"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:13.869" endtime="20201029 09:33:13.896"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.868" endtime="20201029 09:33:13.896"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:13.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:13.899" endtime="20201029 09:33:13.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.897" endtime="20201029 09:33:13.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.867" endtime="20201029 09:33:13.900"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.866" endtime="20201029 09:33:13.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.901" endtime="20201029 09:33:13.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.865" endtime="20201029 09:33:13.903"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.862" endtime="20201029 09:33:13.904"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.839" endtime="20201029 09:33:13.904"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.912" endtime="20201029 09:33:13.933"></status>
</kw>
<msg timestamp="20201029 09:33:13.934" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.911" endtime="20201029 09:33:13.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.936" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:13.935" endtime="20201029 09:33:13.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.937" endtime="20201029 09:33:13.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.908" endtime="20201029 09:33:13.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.906" endtime="20201029 09:33:13.940"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.942" endtime="20201029 09:33:13.945"></status>
</kw>
<msg timestamp="20201029 09:33:13.945" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:13.941" endtime="20201029 09:33:13.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.950" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:13.949" endtime="20201029 09:33:13.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.952" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:13.951" endtime="20201029 09:33:13.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.946" endtime="20201029 09:33:13.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.956" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:13.955" endtime="20201029 09:33:13.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:13.958" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:13.957" endtime="20201029 09:33:13.959"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.953" endtime="20201029 09:33:13.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:13.966" endtime="20201029 09:33:14.255"></status>
</kw>
<msg timestamp="20201029 09:33:14.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063759778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063765694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:13.964" endtime="20201029 09:33:14.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063759778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063765694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.260" endtime="20201029 09:33:14.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.268" endtime="20201029 09:33:14.269"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.961" endtime="20201029 09:33:14.270"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.960" endtime="20201029 09:33:14.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.274" level="INFO">${RESULT} = [{'diff': 5.915999999994703e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.915999999994703e-06}, {'diff': 5.916999999994177e-06}, {'diff': 5.917000000008055e-06}, {'diff': 5.916999999994177e-06}, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.271" endtime="20201029 09:33:14.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.279" level="INFO">${OVERHEAD} = {'diff': [5.915999999994703e-06, 5.9589999999998255e-06, 5.915999999994703e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.916999999994177e-06, 5.931000000000686e-06, 5.917000000008055e-06, 5.916...</msg>
<status status="PASS" starttime="20201029 09:33:14.275" endtime="20201029 09:33:14.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.284" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 09:33:14.283" endtime="20201029 09:33:14.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.286" level="INFO">VALUE: [5.915999999994703e-06, 5.9589999999998255e-06, 5.915999999994703e-06, 5.916999999994177e-06, 5.917000000008055e-06, 5.916999999994177e-06, 5.931000000000686e-06, 5.917000000008055e-06, 5.916999999994177e-06, 5.9729999999924566e-06, 5.903000000001546e-06, 5.916999999994177e-06, 5.930000000001212e-06, 5.931000000000686e-06, 5.917000000008055e-06, 5.9019999999881945e-06, 5.916999999994177e-06, 5.931000000000686e-06, 5.915999999994703e-06, 5.903000000001546e-06, 5.916999999994177e-06, 5.902000000002072e-06, 5.860999999995897e-06, 5.916000000008581e-06, 5.916999999994177e-06, 5.902000000002072e-06, 5.903000000001546e-06, 5.915999999994703e-06, 5.903000000001546e-06, 5.889000000008915e-06, 5.902999999987668e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.916999999994177e-06, 5.916000000008581e-06, 5.916999999994177e-06, 5.903000000001546e-06, 5.917000000008055e-06, 5.971999999992983e-06, 5.903000000001546e-06, 5.888999999995037e-06, 5.903000000001546e-06, 5.903000000001546e-06, 5.875000000002406e-06, 5.916999999994177e-06, 5.916999999994177e-06, 5.861000000009775e-06]</msg>
<status status="PASS" starttime="20201029 09:33:14.285" endtime="20201029 09:33:14.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.280" endtime="20201029 09:33:14.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:13.905" endtime="20201029 09:33:14.287"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:13.836" endtime="20201029 09:33:14.288" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:14.295" endtime="20201029 09:33:14.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.294" endtime="20201029 09:33:14.315"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.328" endtime="20201029 09:33:14.340"></status>
</kw>
<msg timestamp="20201029 09:33:14.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.326" endtime="20201029 09:33:14.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.343" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.342" endtime="20201029 09:33:14.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.346" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:14.344" endtime="20201029 09:33:14.346"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:14.324" endtime="20201029 09:33:14.347"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:14.322" endtime="20201029 09:33:14.348"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.320" endtime="20201029 09:33:14.348"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:14.352" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:14.351" endtime="20201029 09:33:14.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.349" endtime="20201029 09:33:14.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.320" endtime="20201029 09:33:14.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.319" endtime="20201029 09:33:14.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.353" endtime="20201029 09:33:14.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.318" endtime="20201029 09:33:14.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.316" endtime="20201029 09:33:14.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.292" endtime="20201029 09:33:14.356"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.366" endtime="20201029 09:33:14.610"></status>
</kw>
<msg timestamp="20201029 09:33:14.610" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.364" endtime="20201029 09:33:14.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.613" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:14.611" endtime="20201029 09:33:14.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.614" endtime="20201029 09:33:14.615"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.361" endtime="20201029 09:33:14.616"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.358" endtime="20201029 09:33:14.616"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.618" endtime="20201029 09:33:14.620"></status>
</kw>
<msg timestamp="20201029 09:33:14.620" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:14.617" endtime="20201029 09:33:14.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.625" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:14.624" endtime="20201029 09:33:14.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.627" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:14.626" endtime="20201029 09:33:14.627"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.621" endtime="20201029 09:33:14.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.631" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:14.630" endtime="20201029 09:33:14.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.633" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:14.633" endtime="20201029 09:33:14.634"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.628" endtime="20201029 09:33:14.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.641" endtime="20201029 09:33:14.936"></status>
</kw>
<msg timestamp="20201029 09:33:14.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067666667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.639" endtime="20201029 09:33:14.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067666667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067700139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:14.945" endtime="20201029 09:33:14.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:14.963" endtime="20201029 09:33:14.966"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.637" endtime="20201029 09:33:14.967"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.635" endtime="20201029 09:33:14.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:14.976" level="INFO">${RESULT} = [{'diff': 3.347200000000661e-05}, {'diff': 3.347200000000661e-05}, {'diff': 3.34580000000001e-05}, {'diff': 3.3514000000012256e-05}, {'diff': 3.350000000000575e-05}, {'diff': 3.3486000000013116e-05}, ...</msg>
<status status="PASS" starttime="20201029 09:33:14.970" endtime="20201029 09:33:14.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:14.987" level="INFO">${OVERHEAD} = {'diff': [3.347200000000661e-05, 3.347200000000661e-05, 3.34580000000001e-05, 3.3514000000012256e-05, 3.350000000000575e-05, 3.3486000000013116e-05, 3.351399999999838e-05, 3.348599999999924e-05, 3.351...</msg>
<status status="PASS" starttime="20201029 09:33:14.979" endtime="20201029 09:33:14.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:14.996" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 09:33:14.994" endtime="20201029 09:33:14.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.002" level="INFO">VALUE: [3.347200000000661e-05, 3.347200000000661e-05, 3.34580000000001e-05, 3.3514000000012256e-05, 3.350000000000575e-05, 3.3486000000013116e-05, 3.351399999999838e-05, 3.348599999999924e-05, 3.351399999999838e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.350000000000575e-05, 3.350000000000575e-05, 3.348599999999924e-05, 3.3500000000019625e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.347200000000661e-05, 3.3458999999985695e-05, 3.35139999999845e-05, 3.355599999999015e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.3444999999993064e-05, 3.3458999999985695e-05, 3.3444000000021346e-05, 3.35139999999845e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.349999999999187e-05, 3.352800000000489e-05, 3.354199999999752e-05, 3.348599999999924e-05, 3.3486000000026994e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.348599999999924e-05, 3.347200000000661e-05, 3.345900000001345e-05, 3.3500000000019625e-05, 3.347199999997885e-05, 3.3514000000012256e-05, 3.3514000000012256e-05, 3.3486000000026994e-05, 3.348599999997148e-05, 3.348599999997148e-05, 3.356899999995555e-05]</msg>
<status status="PASS" starttime="20201029 09:33:14.999" endtime="20201029 09:33:15.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.989" endtime="20201029 09:33:15.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:14.357" endtime="20201029 09:33:15.005"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:14.289" endtime="20201029 09:33:15.006" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:15.020" endtime="20201029 09:33:15.039"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.017" endtime="20201029 09:33:15.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.053" endtime="20201029 09:33:15.065"></status>
</kw>
<msg timestamp="20201029 09:33:15.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.051" endtime="20201029 09:33:15.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.068" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.066" endtime="20201029 09:33:15.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.074" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:15.069" endtime="20201029 09:33:15.074"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:15.049" endtime="20201029 09:33:15.075"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:15.046" endtime="20201029 09:33:15.075"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.045" endtime="20201029 09:33:15.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:15.079" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:15.079" endtime="20201029 09:33:15.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.077" endtime="20201029 09:33:15.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.044" endtime="20201029 09:33:15.080"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.044" endtime="20201029 09:33:15.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.081" endtime="20201029 09:33:15.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.042" endtime="20201029 09:33:15.083"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.041" endtime="20201029 09:33:15.084"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.014" endtime="20201029 09:33:15.084"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.092" endtime="20201029 09:33:15.933"></status>
</kw>
<msg timestamp="20201029 09:33:15.934" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.091" endtime="20201029 09:33:15.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.940" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:15.937" endtime="20201029 09:33:15.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.942" endtime="20201029 09:33:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.088" endtime="20201029 09:33:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.086" endtime="20201029 09:33:15.948"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.952" endtime="20201029 09:33:15.955"></status>
</kw>
<msg timestamp="20201029 09:33:15.956" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 09:33:15.950" endtime="20201029 09:33:15.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.965" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 09:33:15.963" endtime="20201029 09:33:15.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.970" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 09:33:15.968" endtime="20201029 09:33:15.970"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.958" endtime="20201029 09:33:15.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.979" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 09:33:15.977" endtime="20201029 09:33:15.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:15.983" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 09:33:15.982" endtime="20201029 09:33:15.984"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.973" endtime="20201029 09:33:15.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:15.999" endtime="20201029 09:33:16.296"></status>
</kw>
<msg timestamp="20201029 09:33:16.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079402319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079463778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:15.995" endtime="20201029 09:33:16.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079402319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079463778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:16.300" endtime="20201029 09:33:16.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.308" endtime="20201029 09:33:16.310"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.990" endtime="20201029 09:33:16.311"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.986" endtime="20201029 09:33:16.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:16.315" level="INFO">${RESULT} = [{'diff': 6.145899999999982e-05}, {'diff': 6.143100000000068e-05}, {'diff': 6.148599999999949e-05}, {'diff': 6.14719999999791e-05}, {'diff': 6.152799999997738e-05}, {'diff': 6.148599999999949e-05}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:16.312" endtime="20201029 09:33:16.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 09:33:16.319" level="INFO">${OVERHEAD} = {'diff': [6.145899999999982e-05, 6.143100000000068e-05, 6.148599999999949e-05, 6.14719999999791e-05, 6.152799999997738e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.14859...</msg>
<status status="PASS" starttime="20201029 09:33:16.316" endtime="20201029 09:33:16.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.324" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 09:33:16.323" endtime="20201029 09:33:16.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.326" level="INFO">VALUE: [6.145899999999982e-05, 6.143100000000068e-05, 6.148599999999949e-05, 6.14719999999791e-05, 6.152799999997738e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.144400000002159e-05, 6.149999999999212e-05, 6.147299999997857e-05, 6.151399999998475e-05, 6.147300000003408e-05, 6.145900000004145e-05, 6.154099999999829e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.155499999999092e-05, 6.148599999999949e-05, 6.148599999999949e-05, 6.145899999998594e-05, 6.151399999998475e-05, 6.151300000001303e-05, 6.152800000003289e-05, 6.150000000004763e-05, 6.151399999998475e-05, 6.150000000004763e-05, 6.152800000003289e-05, 6.148599999999949e-05, 6.150000000004763e-05, 6.14999999999366e-05, 6.148599999999949e-05, 6.151399999998475e-05, 6.14999999999366e-05, 6.14999999999366e-05, 6.14999999999366e-05, 6.152799999992187e-05, 6.145800000001422e-05, 6.151399999998475e-05, 6.14579999999032e-05, 6.151400000009577e-05, 6.150000000004763e-05, 6.14869999999712e-05, 6.151399999998475e-05, 6.151399999998475e-05]</msg>
<status status="PASS" starttime="20201029 09:33:16.325" endtime="20201029 09:33:16.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.320" endtime="20201029 09:33:16.327"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:15.084" endtime="20201029 09:33:16.328"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:15.009" endtime="20201029 09:33:16.328" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:16.335" endtime="20201029 09:33:16.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.333" endtime="20201029 09:33:16.355"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.369" endtime="20201029 09:33:16.381"></status>
</kw>
<msg timestamp="20201029 09:33:16.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.367" endtime="20201029 09:33:16.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:16.383" endtime="20201029 09:33:16.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.387" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 09:33:16.385" endtime="20201029 09:33:16.387"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.365" endtime="20201029 09:33:16.388"></status>
</kw>
<status status="FAIL" starttime="20201029 09:33:16.362" endtime="20201029 09:33:16.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.360" endtime="20201029 09:33:16.389"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 09:33:16.393" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 09:33:16.392" endtime="20201029 09:33:16.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.390" endtime="20201029 09:33:16.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.360" endtime="20201029 09:33:16.393"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.359" endtime="20201029 09:33:16.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:16.394" endtime="20201029 09:33:16.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.358" endtime="20201029 09:33:16.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.356" endtime="20201029 09:33:16.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.332" endtime="20201029 09:33:16.397"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 09:33:16.400" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 09:33:16.409" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 09:33:17.639" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 09:33:16.399" endtime="20201029 09:33:17.640"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.645" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 09:33:17.642" endtime="20201029 09:33:17.646"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:16.398" endtime="20201029 09:33:17.647"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:17.654" endtime="20201029 09:33:17.674"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.650" endtime="20201029 09:33:17.675"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.687" endtime="20201029 09:33:17.695"></status>
</kw>
<msg timestamp="20201029 09:33:17.696" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.684" endtime="20201029 09:33:17.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:17.699" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:17.697" endtime="20201029 09:33:17.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.701" endtime="20201029 09:33:17.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.681" endtime="20201029 09:33:17.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.678" endtime="20201029 09:33:17.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:17.712" endtime="20201029 09:33:17.998"></status>
</kw>
<msg timestamp="20201029 09:33:18.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:17.711" endtime="20201029 09:33:18.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022356847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.002" endtime="20201029 09:33:18.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.010" endtime="20201029 09:33:18.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.707" endtime="20201029 09:33:18.013"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.705" endtime="20201029 09:33:18.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:18.017" level="INFO">${PHILIP_RES} = [{'diff': 3.399999999999931e-05}, {'diff': 3.1790999999999764e-05}, {'diff': 3.173600000000096e-05}, {'diff': 3.181900000000237e-05}, {'diff': 3.17640000000001e-05}, {'diff': 3.172300000000086e-05}, {...</msg>
<status status="PASS" starttime="20201029 09:33:18.014" endtime="20201029 09:33:18.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.021" level="INFO">${RESULT} = {'diff': [3.399999999999931e-05, 3.1790999999999764e-05, 3.173600000000096e-05, 3.181900000000237e-05, 3.17640000000001e-05, 3.172300000000086e-05, 3.17640000000001e-05, 3.182000000000185e-05, 3.17360...</msg>
<status status="PASS" starttime="20201029 09:33:18.018" endtime="20201029 09:33:18.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.025" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:18.024" endtime="20201029 09:33:18.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.028" level="INFO">VALUE: [3.399999999999931e-05, 3.1790999999999764e-05, 3.173600000000096e-05, 3.181900000000237e-05, 3.17640000000001e-05, 3.172300000000086e-05, 3.17640000000001e-05, 3.182000000000185e-05, 3.173600000000096e-05, 3.173600000000096e-05, 3.172199999999792e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.167999999999921e-05, 3.174999999999706e-05, 3.173600000000096e-05, 3.17640000000001e-05, 3.175000000000053e-05, 3.173599999999749e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.172300000000086e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.169500000000172e-05, 3.175000000000053e-05, 3.172300000000086e-05, 3.1790999999999764e-05, 3.180599999999881e-05, 3.175000000000053e-05, 3.173599999999749e-05, 3.17640000000001e-05, 3.173699999999696e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.173600000000096e-05, 3.173599999999749e-05, 3.173600000000096e-05, 3.174999999999706e-05, 3.166699999999911e-05, 3.175000000000053e-05, 3.166599999999964e-05, 3.175000000000053e-05, 3.173600000000096e-05, 3.173600000000096e-05, 3.173600000000096e-05, 3.172199999999792e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.027" endtime="20201029 09:33:18.028"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.022" endtime="20201029 09:33:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.676" endtime="20201029 09:33:18.029"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.649" endtime="20201029 09:33:18.030"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.032" endtime="20201029 09:33:18.051"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.030" endtime="20201029 09:33:18.052"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.061" endtime="20201029 09:33:18.070"></status>
</kw>
<msg timestamp="20201029 09:33:18.070" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.059" endtime="20201029 09:33:18.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.073" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.071" endtime="20201029 09:33:18.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.074" endtime="20201029 09:33:18.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.057" endtime="20201029 09:33:18.076"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.054" endtime="20201029 09:33:18.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.083" endtime="20201029 09:33:18.371"></status>
</kw>
<msg timestamp="20201029 09:33:18.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018397069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018456153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.082" endtime="20201029 09:33:18.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018397069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018456153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.377" endtime="20201029 09:33:18.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.386" endtime="20201029 09:33:18.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.079" endtime="20201029 09:33:18.389"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.077" endtime="20201029 09:33:18.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:18.394" level="INFO">${PHILIP_RES} = [{'diff': 5.9084000000000914e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.634700000000173e-05}, {'diff': 5.638899999999697e-05}, {'diff': 5.643099999999915e-05}, {'diff': 5.6401999999997066e-05},...</msg>
<status status="PASS" starttime="20201029 09:33:18.391" endtime="20201029 09:33:18.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.400" level="INFO">${RESULT} = {'diff': [5.9084000000000914e-05, 5.637500000000087e-05, 5.634700000000173e-05, 5.638899999999697e-05, 5.643099999999915e-05, 5.6401999999997066e-05, 5.638900000000044e-05, 5.641700000000305e-05, 5.64...</msg>
<status status="PASS" starttime="20201029 09:33:18.395" endtime="20201029 09:33:18.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.404" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:18.403" endtime="20201029 09:33:18.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.406" level="INFO">VALUE: [5.9084000000000914e-05, 5.637500000000087e-05, 5.634700000000173e-05, 5.638899999999697e-05, 5.643099999999915e-05, 5.6401999999997066e-05, 5.638900000000044e-05, 5.641700000000305e-05, 5.640300000000001e-05, 5.636099999999783e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.637500000000087e-05, 5.641699999999958e-05, 5.641699999999958e-05, 5.638900000000044e-05, 5.643099999999915e-05, 5.643099999999915e-05, 5.6402000000000535e-05, 5.641699999999958e-05, 5.6472000000001854e-05, 5.63480000000012e-05, 5.6416000000000105e-05, 5.640300000000001e-05, 5.638900000000044e-05, 5.6388000000000965e-05, 5.638900000000044e-05, 5.63610000000013e-05, 5.638900000000044e-05, 5.6387999999997496e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.6401999999997066e-05, 5.640300000000001e-05, 5.63749999999974e-05, 5.640300000000001e-05, 5.6388000000000965e-05, 5.638900000000044e-05, 5.638900000000044e-05, 5.632000000000206e-05, 5.637500000000087e-05, 5.641700000000305e-05, 5.640300000000001e-05, 5.641700000000305e-05, 5.6402000000000535e-05, 5.640300000000001e-05, 5.640300000000001e-05, 5.638900000000044e-05, 5.638900000000044e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.405" endtime="20201029 09:33:18.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.401" endtime="20201029 09:33:18.407"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.052" endtime="20201029 09:33:18.408"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.030" endtime="20201029 09:33:18.408"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.410" endtime="20201029 09:33:18.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.409" endtime="20201029 09:33:18.430"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.438" endtime="20201029 09:33:18.449"></status>
</kw>
<msg timestamp="20201029 09:33:18.449" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.437" endtime="20201029 09:33:18.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.452" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.450" endtime="20201029 09:33:18.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.453" endtime="20201029 09:33:18.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.434" endtime="20201029 09:33:18.455"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.432" endtime="20201029 09:33:18.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.462" endtime="20201029 09:33:18.750"></status>
</kw>
<msg timestamp="20201029 09:33:18.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017466361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.461" endtime="20201029 09:33:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017466361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.754" endtime="20201029 09:33:18.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.762" endtime="20201029 09:33:18.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.458" endtime="20201029 09:33:18.764"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.456" endtime="20201029 09:33:18.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:18.769" level="INFO">${PHILIP_RES} = [{'diff': 8.63470000000005e-05}, {'diff': 8.368100000000211e-05}, {'diff': 8.372200000000135e-05}, {'diff': 8.366699999999908e-05}, {'diff': 8.36659999999996e-05}, {'diff': 8.359700000000123e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:18.765" endtime="20201029 09:33:18.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:18.774" level="INFO">${RESULT} = {'diff': [8.63470000000005e-05, 8.368100000000211e-05, 8.372200000000135e-05, 8.366699999999908e-05, 8.36659999999996e-05, 8.359700000000123e-05, 8.363899999999994e-05, 8.36659999999996e-05, 8.3652999...</msg>
<status status="PASS" starttime="20201029 09:33:18.770" endtime="20201029 09:33:18.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.778" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:18.777" endtime="20201029 09:33:18.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.781" level="INFO">VALUE: [8.63470000000005e-05, 8.368100000000211e-05, 8.372200000000135e-05, 8.366699999999908e-05, 8.36659999999996e-05, 8.359700000000123e-05, 8.363899999999994e-05, 8.36659999999996e-05, 8.36529999999995e-05, 8.368100000000211e-05, 8.366699999999908e-05, 8.36110000000008e-05, 8.368000000000264e-05, 8.368099999999865e-05, 8.370799999999831e-05, 8.366699999999908e-05, 8.366700000000254e-05, 8.36659999999996e-05, 8.367999999999917e-05, 8.368100000000211e-05, 8.369499999999822e-05, 8.37370000000004e-05, 8.369399999999874e-05, 8.368000000000264e-05, 8.368099999999865e-05, 8.36529999999995e-05, 8.363899999999994e-05, 8.363899999999994e-05, 8.369500000000168e-05, 8.359699999999776e-05, 8.363899999999994e-05, 8.36659999999996e-05, 8.366699999999908e-05, 8.36110000000008e-05, 8.365300000000297e-05, 8.362500000000037e-05, 8.36659999999996e-05, 8.368100000000211e-05, 8.368099999999865e-05, 8.36659999999996e-05, 8.369400000000221e-05, 8.373600000000092e-05, 8.369499999999822e-05, 8.369499999999822e-05, 8.366700000000254e-05, 8.372200000000135e-05, 8.369399999999874e-05, 8.366699999999908e-05, 8.370899999999779e-05, 8.36659999999996e-05]</msg>
<status status="PASS" starttime="20201029 09:33:18.779" endtime="20201029 09:33:18.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.775" endtime="20201029 09:33:18.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.431" endtime="20201029 09:33:18.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.408" endtime="20201029 09:33:18.782"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:18.784" endtime="20201029 09:33:18.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.783" endtime="20201029 09:33:18.804"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.812" endtime="20201029 09:33:18.825"></status>
</kw>
<msg timestamp="20201029 09:33:18.825" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.811" endtime="20201029 09:33:18.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:18.873" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:18.872" endtime="20201029 09:33:18.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.875" endtime="20201029 09:33:18.876"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.808" endtime="20201029 09:33:18.877"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.806" endtime="20201029 09:33:18.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:18.884" endtime="20201029 09:33:19.171"></status>
</kw>
<msg timestamp="20201029 09:33:19.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:18.882" endtime="20201029 09:33:19.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017538556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.175" endtime="20201029 09:33:19.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.183" endtime="20201029 09:33:19.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.880" endtime="20201029 09:33:19.185"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.878" endtime="20201029 09:33:19.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:19.189" level="INFO">${PHILIP_RES} = [{'diff': 0.00011608299999999946}, {'diff': 0.00011341700000000107}, {'diff': 0.0001134030000000015}, {'diff': 0.0001134030000000015}, {'diff': 0.00011343000000000117}, {'diff': 0.00011340200000000203...</msg>
<status status="PASS" starttime="20201029 09:33:19.186" endtime="20201029 09:33:19.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.193" level="INFO">${RESULT} = {'diff': [0.00011608299999999946, 0.00011341700000000107, 0.0001134030000000015, 0.0001134030000000015, 0.00011343000000000117, 0.00011340200000000203, 0.00011343000000000117, 0.00011344400000000074, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.190" endtime="20201029 09:33:19.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.198" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:19.197" endtime="20201029 09:33:19.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.200" level="INFO">VALUE: [0.00011608299999999946, 0.00011341700000000107, 0.0001134030000000015, 0.0001134030000000015, 0.00011343000000000117, 0.00011340200000000203, 0.00011343000000000117, 0.00011344400000000074, 0.00011338899999999846, 0.00011341700000000107, 0.00011340199999999856, 0.00011338899999999846, 0.00011340200000000203, 0.00011343000000000117, 0.0001134160000000016, 0.00011340200000000203, 0.00011341599999999813, 0.00011338899999999846, 0.00011340199999999856, 0.0001133749999999989, 0.00011340199999999856, 0.0001134030000000015, 0.00011341700000000107, 0.0001134160000000016, 0.00011348599999999945, 0.00011338900000000193, 0.00011338899999999846, 0.0001133749999999989, 0.00011340299999999803, 0.00011338899999999846, 0.0001134030000000015, 0.00011341700000000107, 0.00011341700000000107, 0.0001134030000000015, 0.00011341700000000107, 0.0001133749999999989, 0.00011338899999999846, 0.00011347199999999988, 0.00011336099999999932, 0.00011341700000000107, 0.00011345899999999978, 0.00011338899999999846, 0.0001133749999999989, 0.00011341700000000107, 0.00011338899999999846, 0.0001134030000000015, 0.00011338900000000193, 0.0001134030000000015, 0.00011341700000000107, 0.00011343100000000064]</msg>
<status status="PASS" starttime="20201029 09:33:19.199" endtime="20201029 09:33:19.200"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.194" endtime="20201029 09:33:19.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.805" endtime="20201029 09:33:19.201"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:18.782" endtime="20201029 09:33:19.201"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.204" endtime="20201029 09:33:19.223"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.202" endtime="20201029 09:33:19.224"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.232" endtime="20201029 09:33:19.247"></status>
</kw>
<msg timestamp="20201029 09:33:19.248" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.230" endtime="20201029 09:33:19.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.250" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.249" endtime="20201029 09:33:19.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.251" endtime="20201029 09:33:19.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.228" endtime="20201029 09:33:19.253"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.226" endtime="20201029 09:33:19.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.260" endtime="20201029 09:33:19.547"></status>
</kw>
<msg timestamp="20201029 09:33:19.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.259" endtime="20201029 09:33:19.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.551" endtime="20201029 09:33:19.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.559" endtime="20201029 09:33:19.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.256" endtime="20201029 09:33:19.561"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.254" endtime="20201029 09:33:19.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:19.566" level="INFO">${PHILIP_RES} = [{'diff': 0.00014831900000000092}, {'diff': 0.0001456389999999995}, {'diff': 0.0001456389999999995}, {'diff': 0.0001456519999999996}, {'diff': 0.0001456389999999995}, {'diff': 0.0001457220000000009}, ...</msg>
<status status="PASS" starttime="20201029 09:33:19.562" endtime="20201029 09:33:19.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.570" level="INFO">${RESULT} = {'diff': [0.00014831900000000092, 0.0001456389999999995, 0.0001456389999999995, 0.0001456519999999996, 0.0001456389999999995, 0.0001457220000000009, 0.0001456519999999996, 0.0001456389999999995, 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:19.567" endtime="20201029 09:33:19.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.574" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:19.573" endtime="20201029 09:33:19.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.576" level="INFO">VALUE: [0.00014831900000000092, 0.0001456389999999995, 0.0001456389999999995, 0.0001456519999999996, 0.0001456389999999995, 0.0001457220000000009, 0.0001456519999999996, 0.0001456389999999995, 0.00014562499999999992, 0.00014562499999999992, 0.0001456389999999995, 0.0001456389999999995, 0.0001456389999999995, 0.00014562499999999992, 0.00014566599999999916, 0.00014563900000000296, 0.0001456389999999995, 0.00014559700000000078, 0.00014565299999999906, 0.0001456389999999995, 0.00014565299999999906, 0.00014565300000000253, 0.00014565299999999906, 0.0001456670000000021, 0.0001456389999999995, 0.00014566699999999863, 0.00014565200000000306, 0.0001456389999999995, 0.0001456389999999995, 0.00014562499999999992, 0.00014566599999999916, 0.00014565300000000253, 0.00014562499999999992, 0.00014561100000000035, 0.00014561100000000035, 0.00014562499999999992, 0.00014562499999999992, 0.00014561100000000035, 0.00014563800000000002, 0.0001456670000000021, 0.00014565299999999906, 0.00014565299999999906, 0.0001456670000000021, 0.00014566599999999916, 0.00014565299999999906, 0.0001456670000000021, 0.00014562499999999992, 0.00014566599999999916, 0.00014561100000000035, 0.00014566699999999863]</msg>
<status status="PASS" starttime="20201029 09:33:19.575" endtime="20201029 09:33:19.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.570" endtime="20201029 09:33:19.578"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.224" endtime="20201029 09:33:19.579"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.202" endtime="20201029 09:33:19.579"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.581" endtime="20201029 09:33:19.600"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.580" endtime="20201029 09:33:19.601"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.609" endtime="20201029 09:33:19.626"></status>
</kw>
<msg timestamp="20201029 09:33:19.626" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.607" endtime="20201029 09:33:19.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.629" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.627" endtime="20201029 09:33:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.630" endtime="20201029 09:33:19.631"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.605" endtime="20201029 09:33:19.632"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.603" endtime="20201029 09:33:19.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.639" endtime="20201029 09:33:19.924"></status>
</kw>
<msg timestamp="20201029 09:33:19.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017815972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.637" endtime="20201029 09:33:19.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017815972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017999014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:19.928" endtime="20201029 09:33:19.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.936" endtime="20201029 09:33:19.938"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.635" endtime="20201029 09:33:19.939"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.633" endtime="20201029 09:33:19.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:19.943" level="INFO">${PHILIP_RES} = [{'diff': 0.00018304200000000131}, {'diff': 0.00018030500000000213}, {'diff': 0.00018037499999999998}, {'diff': 0.00018038899999999955}, {'diff': 0.00018037499999999998}, {'diff': 0.000180388999999999...</msg>
<status status="PASS" starttime="20201029 09:33:19.940" endtime="20201029 09:33:19.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:19.948" level="INFO">${RESULT} = {'diff': [0.00018304200000000131, 0.00018030500000000213, 0.00018037499999999998, 0.00018038899999999955, 0.00018037499999999998, 0.00018038899999999955, 0.0001804450000000013, 0.00018038900000000302,...</msg>
<status status="PASS" starttime="20201029 09:33:19.944" endtime="20201029 09:33:19.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.952" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:19.951" endtime="20201029 09:33:19.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:19.954" level="INFO">VALUE: [0.00018304200000000131, 0.00018030500000000213, 0.00018037499999999998, 0.00018038899999999955, 0.00018037499999999998, 0.00018038899999999955, 0.0001804450000000013, 0.00018038900000000302, 0.0001804030000000026, 0.00018037499999999998, 0.00018040299999999912, 0.00018044400000000183, 0.00018040299999999912, 0.00018040299999999912, 0.00018033400000000074, 0.00018031899999999823, 0.0001804580000000014, 0.00018031899999999823, 0.0001803610000000004, 0.00018041599999999922, 0.0001803610000000004, 0.00018040299999999912, 0.00018037499999999998, 0.00018037499999999998, 0.00018037499999999998, 0.0001803610000000004, 0.0001803610000000004, 0.0001803610000000004, 0.0001803610000000004, 0.00018044399999999836, 0.00018037499999999998, 0.00018037499999999998, 0.00018033300000000127, 0.00018034700000000084, 0.00018037499999999998, 0.00018037499999999998, 0.0001803610000000004, 0.00018037499999999998, 0.00018040199999999965, 0.00018031899999999823, 0.00018037499999999998, 0.00018038899999999955, 0.00018037499999999998, 0.00018045799999999793, 0.00018038899999999955, 0.00018038899999999955, 0.00018037499999999998, 0.00018036099999999694, 0.00018034699999999737, 0.00018036099999999694]</msg>
<status status="PASS" starttime="20201029 09:33:19.953" endtime="20201029 09:33:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.948" endtime="20201029 09:33:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.602" endtime="20201029 09:33:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.579" endtime="20201029 09:33:19.956"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:19.958" endtime="20201029 09:33:19.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.957" endtime="20201029 09:33:19.978"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:19.987" endtime="20201029 09:33:20.005"></status>
</kw>
<msg timestamp="20201029 09:33:20.006" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:19.985" endtime="20201029 09:33:20.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.008" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.007" endtime="20201029 09:33:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.009" endtime="20201029 09:33:20.011"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.982" endtime="20201029 09:33:20.012"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.980" endtime="20201029 09:33:20.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.019" endtime="20201029 09:33:20.305"></status>
</kw>
<msg timestamp="20201029 09:33:20.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018213389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018433694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.017" endtime="20201029 09:33:20.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018213389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018433694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.309" endtime="20201029 09:33:20.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.317" endtime="20201029 09:33:20.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.014" endtime="20201029 09:33:20.320"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.013" endtime="20201029 09:33:20.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:20.325" level="INFO">${PHILIP_RES} = [{'diff': 0.0002203050000000005}, {'diff': 0.00021759699999999993}, {'diff': 0.00021757000000000026}, {'diff': 0.0002176109999999995}, {'diff': 0.0002175979999999994}, {'diff': 0.0002175970000000034},...</msg>
<status status="PASS" starttime="20201029 09:33:20.322" endtime="20201029 09:33:20.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.329" level="INFO">${RESULT} = {'diff': [0.0002203050000000005, 0.00021759699999999993, 0.00021757000000000026, 0.0002176109999999995, 0.0002175979999999994, 0.0002175970000000034, 0.00021757000000000026, 0.00021759699999999993, 0....</msg>
<status status="PASS" starttime="20201029 09:33:20.326" endtime="20201029 09:33:20.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.333" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:20.332" endtime="20201029 09:33:20.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.335" level="INFO">VALUE: [0.0002203050000000005, 0.00021759699999999993, 0.00021757000000000026, 0.0002176109999999995, 0.0002175979999999994, 0.0002175970000000034, 0.00021757000000000026, 0.00021759699999999993, 0.00021759699999999993, 0.00021762500000000254, 0.00021761100000000297, 0.0002176109999999995, 0.0002176109999999995, 0.00021762499999999907, 0.00021768000000000134, 0.00021759699999999993, 0.0002176109999999995, 0.00021762500000000254, 0.00021762500000000254, 0.00021763899999999864, 0.00021758300000000036, 0.0002176109999999995, 0.00021758300000000036, 0.00021763899999999864, 0.00021762499999999907, 0.00021762499999999907, 0.0002176109999999995, 0.00021759800000000287, 0.0002175970000000034, 0.00021762500000000254, 0.00021759699999999993, 0.00021759699999999993, 0.0002175979999999994, 0.00021762499999999907, 0.00021762499999999907, 0.00021762499999999907, 0.00021768000000000134, 0.00021761100000000297, 0.0002175979999999994, 0.00021759699999999993, 0.00021762499999999907, 0.0002176109999999995, 0.0002176109999999995, 0.00021762499999999907, 0.00021758399999999983, 0.00021759699999999993, 0.00021761200000000244, 0.0002175560000000007, 0.00021765300000000168, 0.00021754200000000112]</msg>
<status status="PASS" starttime="20201029 09:33:20.334" endtime="20201029 09:33:20.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.329" endtime="20201029 09:33:20.336"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.979" endtime="20201029 09:33:20.337"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:19.956" endtime="20201029 09:33:20.337"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.339" endtime="20201029 09:33:20.358"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.338" endtime="20201029 09:33:20.359"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.368" endtime="20201029 09:33:20.388"></status>
</kw>
<msg timestamp="20201029 09:33:20.389" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.366" endtime="20201029 09:33:20.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.391" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.390" endtime="20201029 09:33:20.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.392" endtime="20201029 09:33:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.363" endtime="20201029 09:33:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.361" endtime="20201029 09:33:20.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.404" endtime="20201029 09:33:20.689"></status>
</kw>
<msg timestamp="20201029 09:33:20.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018082153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.403" endtime="20201029 09:33:20.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018082153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.693" endtime="20201029 09:33:20.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.701" endtime="20201029 09:33:20.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.400" endtime="20201029 09:33:20.703"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.399" endtime="20201029 09:33:20.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:20.708" level="INFO">${PHILIP_RES} = [{'diff': 0.0002599720000000007}, {'diff': 0.00025729199999999924}, {'diff': 0.0002572779999999997}, {'diff': 0.0002573189999999989}, {'diff': 0.00025729199999999924}, {'diff': 0.00025730499999999934}...</msg>
<status status="PASS" starttime="20201029 09:33:20.705" endtime="20201029 09:33:20.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:20.712" level="INFO">${RESULT} = {'diff': [0.0002599720000000007, 0.00025729199999999924, 0.0002572779999999997, 0.0002573189999999989, 0.00025729199999999924, 0.00025730499999999934, 0.0002573059999999988, 0.00025729199999999924, 0....</msg>
<status status="PASS" starttime="20201029 09:33:20.709" endtime="20201029 09:33:20.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.716" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:20.715" endtime="20201029 09:33:20.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.718" level="INFO">VALUE: [0.0002599720000000007, 0.00025729199999999924, 0.0002572779999999997, 0.0002573189999999989, 0.00025729199999999924, 0.00025730499999999934, 0.0002573059999999988, 0.00025729199999999924, 0.0002573059999999988, 0.0002572779999999997, 0.0002573060000000023, 0.00025729099999999977, 0.00025729199999999924, 0.00025730499999999934, 0.0002573059999999988, 0.00025729099999999977, 0.00025729099999999977, 0.00025729199999999924, 0.00025730499999999934, 0.00025729199999999924, 0.00025725000000000053, 0.0002573199999999984, 0.0002573189999999989, 0.0002573470000000015, 0.00025732000000000185, 0.0002573189999999989, 0.0002573189999999989, 0.00025729199999999924, 0.00025730499999999934, 0.0002573060000000023, 0.0002573190000000024, 0.0002572779999999997, 0.0002572779999999997, 0.0002573340000000014, 0.00025730499999999934, 0.00025733399999999795, 0.00025729199999999924, 0.00025729199999999924, 0.00025730499999999934, 0.0002572779999999997, 0.0002573189999999989, 0.0002572779999999997, 0.00025729199999999924, 0.00025729099999999977, 0.0002572220000000014, 0.0002573329999999985, 0.0002573059999999988, 0.0002572640000000001, 0.00025729199999999924, 0.00025725000000000053]</msg>
<status status="PASS" starttime="20201029 09:33:20.717" endtime="20201029 09:33:20.719"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.712" endtime="20201029 09:33:20.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.360" endtime="20201029 09:33:20.720"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.337" endtime="20201029 09:33:20.721"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:20.723" endtime="20201029 09:33:20.742"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.722" endtime="20201029 09:33:20.743"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.751" endtime="20201029 09:33:20.774"></status>
</kw>
<msg timestamp="20201029 09:33:20.775" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.750" endtime="20201029 09:33:20.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:20.777" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:20.776" endtime="20201029 09:33:20.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.778" endtime="20201029 09:33:20.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.747" endtime="20201029 09:33:20.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.745" endtime="20201029 09:33:20.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:20.787" endtime="20201029 09:33:21.074"></status>
</kw>
<msg timestamp="20201029 09:33:21.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:20.786" endtime="20201029 09:33:21.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018106764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.080" endtime="20201029 09:33:21.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.089" endtime="20201029 09:33:21.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.783" endtime="20201029 09:33:21.092"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.781" endtime="20201029 09:33:21.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:21.097" level="INFO">${PHILIP_RES} = [{'diff': 0.0003021670000000025}, {'diff': 0.00029942999999999984}, {'diff': 0.00029950000000000115}, {'diff': 0.0002995410000000004}, {'diff': 0.0002994439999999994}, {'diff': 0.0002994859999999981},...</msg>
<status status="PASS" starttime="20201029 09:33:21.094" endtime="20201029 09:33:21.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.102" level="INFO">${RESULT} = {'diff': [0.0003021670000000025, 0.00029942999999999984, 0.00029950000000000115, 0.0002995410000000004, 0.0002994439999999994, 0.0002994859999999981, 0.00029950000000000115, 0.00029944500000000235, 0....</msg>
<status status="PASS" starttime="20201029 09:33:21.098" endtime="20201029 09:33:21.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.107" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:21.105" endtime="20201029 09:33:21.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.110" level="INFO">VALUE: [0.0003021670000000025, 0.00029942999999999984, 0.00029950000000000115, 0.0002995410000000004, 0.0002994439999999994, 0.0002994859999999981, 0.00029950000000000115, 0.00029944500000000235, 0.000299472000000002, 0.00029947199999999854, 0.00029947199999999854, 0.0002994999999999977, 0.00029951300000000125, 0.00029947199999999854, 0.00029950000000000115, 0.0002995140000000007, 0.00029940300000000017, 0.00029950000000000115, 0.00029947199999999854, 0.0002994869999999976, 0.00029947199999999854, 0.000299472000000002, 0.0002994860000000016, 0.000299472999999998, 0.0002995140000000007, 0.0002994860000000016, 0.0002994860000000016, 0.000299472999999998, 0.00029947199999999854, 0.0002994859999999981, 0.0002995140000000007, 0.00029954199999999986, 0.00029950000000000115, 0.0002994309999999993, 0.00029945800000000244, 0.0002994860000000016, 0.00029951399999999725, 0.0002995270000000008, 0.0002994999999999977, 0.0002995139999999938, 0.0002995140000000007, 0.0002994860000000016, 0.0002995140000000007, 0.00029950000000000115, 0.00029951300000000125, 0.00029952799999999336, 0.0002995140000000007, 0.000299472000000002, 0.0002994860000000016, 0.00029950000000000115]</msg>
<status status="PASS" starttime="20201029 09:33:21.108" endtime="20201029 09:33:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.103" endtime="20201029 09:33:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.744" endtime="20201029 09:33:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:20.721" endtime="20201029 09:33:21.112"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.115" endtime="20201029 09:33:21.134"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.113" endtime="20201029 09:33:21.135"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.143" endtime="20201029 09:33:21.168"></status>
</kw>
<msg timestamp="20201029 09:33:21.169" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.141" endtime="20201029 09:33:21.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.171" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.170" endtime="20201029 09:33:21.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.172" endtime="20201029 09:33:21.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.139" endtime="20201029 09:33:21.174"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.137" endtime="20201029 09:33:21.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.181" endtime="20201029 09:33:21.467"></status>
</kw>
<msg timestamp="20201029 09:33:21.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.180" endtime="20201029 09:33:21.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017618667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017965556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.471" endtime="20201029 09:33:21.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.479" endtime="20201029 09:33:21.481"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.177" endtime="20201029 09:33:21.482"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.176" endtime="20201029 09:33:21.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:21.486" level="INFO">${PHILIP_RES} = [{'diff': 0.00034688899999999953}, {'diff': 0.00034419499999999853}, {'diff': 0.0003442219999999982}, {'diff': 0.0003442219999999982}, {'diff': 0.0003441799999999995}, {'diff': 0.0003442500000000008},...</msg>
<status status="PASS" starttime="20201029 09:33:21.483" endtime="20201029 09:33:21.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.490" level="INFO">${RESULT} = {'diff': [0.00034688899999999953, 0.00034419499999999853, 0.0003442219999999982, 0.0003442219999999982, 0.0003441799999999995, 0.0003442500000000008, 0.00034423600000000124, 0.00034418099999999896, 0....</msg>
<status status="PASS" starttime="20201029 09:33:21.487" endtime="20201029 09:33:21.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.494" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:21.493" endtime="20201029 09:33:21.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.497" level="INFO">VALUE: [0.00034688899999999953, 0.00034419499999999853, 0.0003442219999999982, 0.0003442219999999982, 0.0003441799999999995, 0.0003442500000000008, 0.00034423600000000124, 0.00034418099999999896, 0.0003442080000000021, 0.0003442219999999982, 0.00034420900000000157, 0.00034415200000000035, 0.0003442500000000008, 0.00034420900000000157, 0.0003441940000000025, 0.00034422200000000167, 0.00034419399999999906, 0.0003442079999999986, 0.0003441669999999994, 0.0003442079999999986, 0.00034419499999999853, 0.0003442079999999986, 0.0003442219999999982, 0.00034418099999999896, 0.0003442080000000021, 0.00034422200000000167, 0.00034422300000000114, 0.0003442219999999982, 0.00034418100000000243, 0.0003442080000000021, 0.0003441529999999998, 0.000344195000000002, 0.00034422200000000167, 0.0003441940000000025, 0.0003441799999999995, 0.0003442089999999981, 0.00034418099999999896, 0.0003442079999999986, 0.0003442079999999986, 0.0003441529999999998, 0.0003442219999999982, 0.0003442219999999982, 0.00034419499999999853, 0.0003442219999999982, 0.00034419499999999853, 0.00034418099999999896, 0.0003442219999999982, 0.00034423599999999777, 0.00034415200000000035, 0.0003442079999999986]</msg>
<status status="PASS" starttime="20201029 09:33:21.495" endtime="20201029 09:33:21.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.491" endtime="20201029 09:33:21.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.135" endtime="20201029 09:33:21.499"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.113" endtime="20201029 09:33:21.499"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.501" endtime="20201029 09:33:21.520"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.500" endtime="20201029 09:33:21.521"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.529" endtime="20201029 09:33:21.557"></status>
</kw>
<msg timestamp="20201029 09:33:21.558" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.527" endtime="20201029 09:33:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.560" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.559" endtime="20201029 09:33:21.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.561" endtime="20201029 09:33:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.525" endtime="20201029 09:33:21.564"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.523" endtime="20201029 09:33:21.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.571" endtime="20201029 09:33:21.856"></status>
</kw>
<msg timestamp="20201029 09:33:21.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.570" endtime="20201029 09:33:21.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017936944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:21.861" endtime="20201029 09:33:21.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.869" endtime="20201029 09:33:21.870"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.567" endtime="20201029 09:33:21.871"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.565" endtime="20201029 09:33:21.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:21.875" level="INFO">${PHILIP_RES} = [{'diff': 0.0003940969999999995}, {'diff': 0.0003914729999999998}, {'diff': 0.00039141700000000154}, {'diff': 0.00039144399999999774}, {'diff': 0.00039142999999999817}, {'diff': 0.00039141699999999807...</msg>
<status status="PASS" starttime="20201029 09:33:21.872" endtime="20201029 09:33:21.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:21.879" level="INFO">${RESULT} = {'diff': [0.0003940969999999995, 0.0003914729999999998, 0.00039141700000000154, 0.00039144399999999774, 0.00039142999999999817, 0.00039141699999999807, 0.00039138899999999893, 0.0003913609999999998, 0...</msg>
<status status="PASS" starttime="20201029 09:33:21.876" endtime="20201029 09:33:21.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.883" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:21.882" endtime="20201029 09:33:21.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.886" level="INFO">VALUE: [0.0003940969999999995, 0.0003914729999999998, 0.00039141700000000154, 0.00039144399999999774, 0.00039142999999999817, 0.00039141699999999807, 0.00039138899999999893, 0.0003913609999999998, 0.00039138899999999893, 0.0003914029999999985, 0.00039137499999999936, 0.0003914159999999986, 0.0003914310000000011, 0.0003914440000000012, 0.0003914310000000011, 0.00039141700000000154, 0.0003914440000000012, 0.00039140300000000197, 0.0003913609999999998, 0.0003913609999999998, 0.0003914029999999985, 0.00039137499999999936, 0.00039137500000000283, 0.00039137499999999936, 0.0003914029999999985, 0.00039137499999999936, 0.0003913890000000024, 0.0003913609999999998, 0.00039141700000000154, 0.00039138899999999893, 0.0003914450000000007, 0.00039145800000000425, 0.00039142999999999817, 0.000391417000000005, 0.00039144399999999774, 0.0003914590000000037, 0.00039144399999999774, 0.00039140199999999903, 0.0003914029999999985, 0.00039144399999999774, 0.00039138899999999893, 0.00039143099999999764, 0.00039144500000000415, 0.00039138899999999893, 0.0003913750000000063, 0.0003914029999999985, 0.00039137499999999936, 0.00039140199999999903, 0.0003914029999999985, 0.00039140300000000544]</msg>
<status status="PASS" starttime="20201029 09:33:21.884" endtime="20201029 09:33:21.887"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.880" endtime="20201029 09:33:21.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.522" endtime="20201029 09:33:21.888"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.499" endtime="20201029 09:33:21.888"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:21.891" endtime="20201029 09:33:21.910"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.889" endtime="20201029 09:33:21.911"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.919" endtime="20201029 09:33:21.950"></status>
</kw>
<msg timestamp="20201029 09:33:21.950" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.917" endtime="20201029 09:33:21.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:21.953" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:21.951" endtime="20201029 09:33:21.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.954" endtime="20201029 09:33:21.955"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.915" endtime="20201029 09:33:21.956"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.913" endtime="20201029 09:33:21.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:21.963" endtime="20201029 09:33:22.250"></status>
</kw>
<msg timestamp="20201029 09:33:22.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0181115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:21.961" endtime="20201029 09:33:22.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017667722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0181115, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:22.254" endtime="20201029 09:33:22.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.261" endtime="20201029 09:33:22.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.959" endtime="20201029 09:33:22.264"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.957" endtime="20201029 09:33:22.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:22.268" level="INFO">${PHILIP_RES} = [{'diff': 0.00044377799999999884}, {'diff': 0.0004410550000000027}, {'diff': 0.00044102799999999956}, {'diff': 0.0004410550000000027}, {'diff': 0.0004410549999999992}, {'diff': 0.00044108299999999837}...</msg>
<status status="PASS" starttime="20201029 09:33:22.265" endtime="20201029 09:33:22.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.273" level="INFO">${RESULT} = {'diff': [0.00044377799999999884, 0.0004410550000000027, 0.00044102799999999956, 0.0004410550000000027, 0.0004410549999999992, 0.00044108299999999837, 0.00044105600000000217, 0.0004410559999999987, 0....</msg>
<status status="PASS" starttime="20201029 09:33:22.269" endtime="20201029 09:33:22.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.277" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:22.276" endtime="20201029 09:33:22.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.279" level="INFO">VALUE: [0.00044377799999999884, 0.0004410550000000027, 0.00044102799999999956, 0.0004410550000000027, 0.0004410549999999992, 0.00044108299999999837, 0.00044105600000000217, 0.0004410559999999987, 0.0004410420000000026, 0.0004410000000000004, 0.000441014, 0.000441014, 0.0004410559999999987, 0.00044102799999999956, 0.00044104099999999966, 0.0004410689999999988, 0.00044106900000000226, 0.0004409580000000017, 0.0004410420000000026, 0.00044104099999999966, 0.00044098600000000085, 0.00044108300000000183, 0.0004410549999999992, 0.00044112500000000054, 0.000441014, 0.0004410559999999987, 0.00044112500000000054, 0.0004410409999999962, 0.00044105599999999523, 0.0004410980000000009, 0.00044107000000000174, 0.0004410409999999962, 0.0004410550000000027, 0.00044105499999999576, 0.00044108300000000183, 0.0004410550000000027, 0.0004410689999999953, 0.0004410550000000027, 0.00044108300000000183, 0.00044105599999999523, 0.00044105600000000217, 0.0004409859999999974, 0.0004410840000000013, 0.0004410970000000014, 0.0004411390000000001, 0.0004410550000000027, 0.0004410409999999962, 0.00044108300000000183, 0.0004410970000000014, 0.00044099999999999695]</msg>
<status status="PASS" starttime="20201029 09:33:22.278" endtime="20201029 09:33:22.280"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.274" endtime="20201029 09:33:22.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.911" endtime="20201029 09:33:22.281"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:21.889" endtime="20201029 09:33:22.281"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.284" endtime="20201029 09:33:22.303"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.282" endtime="20201029 09:33:22.304"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.312" endtime="20201029 09:33:22.345"></status>
</kw>
<msg timestamp="20201029 09:33:22.346" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.310" endtime="20201029 09:33:22.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.348" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.347" endtime="20201029 09:33:22.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.349" endtime="20201029 09:33:22.351"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.308" endtime="20201029 09:33:22.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.306" endtime="20201029 09:33:22.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.358" endtime="20201029 09:33:22.653"></status>
</kw>
<msg timestamp="20201029 09:33:22.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.357" endtime="20201029 09:33:22.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017564764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018060681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:22.662" endtime="20201029 09:33:22.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.679" endtime="20201029 09:33:22.684"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.354" endtime="20201029 09:33:22.685"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.353" endtime="20201029 09:33:22.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:22.694" level="INFO">${PHILIP_RES} = [{'diff': 0.0004959169999999985}, {'diff': 0.0004932359999999976}, {'diff': 0.0004932499999999972}, {'diff': 0.0004932500000000006}, {'diff': 0.0004931949999999984}, {'diff': 0.0004932360000000011}, {...</msg>
<status status="PASS" starttime="20201029 09:33:22.688" endtime="20201029 09:33:22.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:22.703" level="INFO">${RESULT} = {'diff': [0.0004959169999999985, 0.0004932359999999976, 0.0004932499999999972, 0.0004932500000000006, 0.0004931949999999984, 0.0004932360000000011, 0.0004932500000000006, 0.0004931800000000028, 0.0004...</msg>
<status status="PASS" starttime="20201029 09:33:22.696" endtime="20201029 09:33:22.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.710" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:22.709" endtime="20201029 09:33:22.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.713" level="INFO">VALUE: [0.0004959169999999985, 0.0004932359999999976, 0.0004932499999999972, 0.0004932500000000006, 0.0004931949999999984, 0.0004932360000000011, 0.0004932500000000006, 0.0004931800000000028, 0.0004932360000000011, 0.0004931799999999993, 0.0004931940000000024, 0.0004932090000000014, 0.000493221999999998, 0.0004932229999999975, 0.0004932220000000015, 0.0004932500000000006, 0.0004932630000000007, 0.000493221999999998, 0.0004932220000000015, 0.0004932360000000011, 0.0004932360000000011, 0.000493223000000001, 0.0004932639999999967, 0.0004932080000000019, 0.0004932640000000002, 0.0004932640000000002, 0.0004932360000000011, 0.0004932360000000011, 0.0004932500000000006, 0.0004932080000000019, 0.0004932360000000011, 0.0004932500000000006, 0.0004932360000000011, 0.0004932360000000011, 0.0004932080000000019, 0.0004931950000000018, 0.0004931950000000018, 0.0004932640000000002, 0.0004932500000000006, 0.0004932630000000007, 0.0004931950000000018, 0.0004932220000000015, 0.0004932770000000003, 0.0004932360000000011, 0.0004932360000000011, 0.0004932220000000015, 0.0004932500000000006, 0.0004932220000000015, 0.0004932500000000006, 0.0004932360000000011]</msg>
<status status="PASS" starttime="20201029 09:33:22.711" endtime="20201029 09:33:22.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.705" endtime="20201029 09:33:22.714"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.304" endtime="20201029 09:33:22.715"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.282" endtime="20201029 09:33:22.715"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:22.717" endtime="20201029 09:33:22.736"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.716" endtime="20201029 09:33:22.737"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.745" endtime="20201029 09:33:22.782"></status>
</kw>
<msg timestamp="20201029 09:33:22.782" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.744" endtime="20201029 09:33:22.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:22.785" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:22.783" endtime="20201029 09:33:22.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.786" endtime="20201029 09:33:22.788"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.741" endtime="20201029 09:33:22.789"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.739" endtime="20201029 09:33:22.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:22.796" endtime="20201029 09:33:23.082"></status>
</kw>
<msg timestamp="20201029 09:33:23.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01752525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:22.794" endtime="20201029 09:33:23.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01752525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018075833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:23.086" endtime="20201029 09:33:23.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.094" endtime="20201029 09:33:23.095"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.792" endtime="20201029 09:33:23.096"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.790" endtime="20201029 09:33:23.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:23.100" level="INFO">${PHILIP_RES} = [{'diff': 0.0005505830000000003}, {'diff': 0.0005479999999999999}, {'diff': 0.0005479310000000015}, {'diff': 0.0005479019999999994}, {'diff': 0.0005479029999999989}, {'diff': 0.0005478889999999993}, {...</msg>
<status status="PASS" starttime="20201029 09:33:23.097" endtime="20201029 09:33:23.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.104" level="INFO">${RESULT} = {'diff': [0.0005505830000000003, 0.0005479999999999999, 0.0005479310000000015, 0.0005479019999999994, 0.0005479029999999989, 0.0005478889999999993, 0.0005479440000000016, 0.0005479169999999985, 0.0005...</msg>
<status status="PASS" starttime="20201029 09:33:23.101" endtime="20201029 09:33:23.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.108" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:23.107" endtime="20201029 09:33:23.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.111" level="INFO">VALUE: [0.0005505830000000003, 0.0005479999999999999, 0.0005479310000000015, 0.0005479019999999994, 0.0005479029999999989, 0.0005478889999999993, 0.0005479440000000016, 0.0005479169999999985, 0.0005479019999999994, 0.0005479450000000011, 0.0005479439999999981, 0.0005479030000000024, 0.000547915999999999, 0.0005479029999999989, 0.0005479299999999986, 0.0005479029999999989, 0.000547915999999999, 0.000547930999999998, 0.0005479020000000029, 0.000547930999999998, 0.0005479440000000016, 0.0005478749999999998, 0.0005479160000000025, 0.0005479030000000024, 0.0005479030000000024, 0.0005478879999999964, 0.0005479309999999946, 0.0005478890000000028, 0.000547930000000002, 0.000547916999999995, 0.0005479170000000019, 0.0005478890000000028, 0.0005479030000000024, 0.000547916999999995, 0.0005479170000000019, 0.000547930000000002, 0.0005479450000000011, 0.0005479590000000006, 0.000547930000000002, 0.0005479860000000003, 0.0005478890000000028, 0.0005479170000000019, 0.0005479310000000015, 0.0005478890000000028, 0.0005479160000000025, 0.0005478749999999963, 0.0005479309999999946, 0.0005479170000000019, 0.0005479170000000019, 0.0005479869999999998]</msg>
<status status="PASS" starttime="20201029 09:33:23.110" endtime="20201029 09:33:23.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.105" endtime="20201029 09:33:23.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.738" endtime="20201029 09:33:23.113"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:22.715" endtime="20201029 09:33:23.113"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:23.116" endtime="20201029 09:33:23.135"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.114" endtime="20201029 09:33:23.136"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.144" endtime="20201029 09:33:23.184"></status>
</kw>
<msg timestamp="20201029 09:33:23.184" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.142" endtime="20201029 09:33:23.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.186" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.185" endtime="20201029 09:33:23.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.188" endtime="20201029 09:33:23.189"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.140" endtime="20201029 09:33:23.190"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.138" endtime="20201029 09:33:23.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.196" endtime="20201029 09:33:23.499"></status>
</kw>
<msg timestamp="20201029 09:33:23.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.195" endtime="20201029 09:33:23.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.509" endtime="20201029 09:33:23.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.522" endtime="20201029 09:33:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.192" endtime="20201029 09:33:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.191" endtime="20201029 09:33:23.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:23.530" level="INFO">${PHILIP_RES} = [{'diff': 0.0006076529999999997}, {'diff': 0.0006050410000000006}, {'diff': 0.0006049870000000013}, {'diff': 0.0006050559999999996}, {'diff': 0.000605027999999997}, {'diff': 0.0006049719999999988}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:23.526" endtime="20201029 09:33:23.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.535" level="INFO">${RESULT} = {'diff': [0.0006076529999999997, 0.0006050410000000006, 0.0006049870000000013, 0.0006050559999999996, 0.000605027999999997, 0.0006049719999999988, 0.0006049309999999995, 0.00060493, 0.0006049590000000...</msg>
<status status="PASS" starttime="20201029 09:33:23.531" endtime="20201029 09:33:23.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.539" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:23.538" endtime="20201029 09:33:23.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.541" level="INFO">VALUE: [0.0006076529999999997, 0.0006050410000000006, 0.0006049870000000013, 0.0006050559999999996, 0.000605027999999997, 0.0006049719999999988, 0.0006049309999999995, 0.00060493, 0.0006049590000000021, 0.0006049720000000022, 0.0006049590000000021, 0.0006049859999999983, 0.0006049589999999987, 0.0006049030000000004, 0.0006049160000000005, 0.0006049449999999991, 0.000604917, 0.0006049449999999991, 0.0006050280000000005, 0.0006049590000000021, 0.0006049999999999979, 0.0006049720000000022, 0.0006049449999999956, 0.0006049590000000021, 0.0006049169999999965, 0.0006049450000000026, 0.0006049579999999957, 0.0006049720000000022, 0.0006049450000000026, 0.0006049439999999962, 0.0006050140000000009, 0.0006050140000000009, 0.0006049870000000013, 0.0006050140000000009, 0.0006050130000000015, 0.0006049580000000027, 0.0006049019999999974, 0.0006050140000000009, 0.0006050000000000014, 0.0006050140000000009, 0.0006050280000000005, 0.0006049169999999965, 0.0006049870000000013, 0.0006050000000000014, 0.000605013999999994, 0.0006049999999999944, 0.0006049860000000018, 0.0006050130000000015, 0.0006049860000000018, 0.0006050420000000001]</msg>
<status status="PASS" starttime="20201029 09:33:23.540" endtime="20201029 09:33:23.542"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.536" endtime="20201029 09:33:23.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.136" endtime="20201029 09:33:23.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.114" endtime="20201029 09:33:23.543"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:23.546" endtime="20201029 09:33:23.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.544" endtime="20201029 09:33:23.566"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.574" endtime="20201029 09:33:23.617"></status>
</kw>
<msg timestamp="20201029 09:33:23.618" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.572" endtime="20201029 09:33:23.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.620" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:23.619" endtime="20201029 09:33:23.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.621" endtime="20201029 09:33:23.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.570" endtime="20201029 09:33:23.623"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.568" endtime="20201029 09:33:23.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.630" endtime="20201029 09:33:23.917"></status>
</kw>
<msg timestamp="20201029 09:33:23.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.629" endtime="20201029 09:33:23.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017897417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018564681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:23.921" endtime="20201029 09:33:23.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:23.929" endtime="20201029 09:33:23.930"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.626" endtime="20201029 09:33:23.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.624" endtime="20201029 09:33:23.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:23.935" level="INFO">${PHILIP_RES} = [{'diff': 0.0006672640000000007}, {'diff': 0.000664610999999999}, {'diff': 0.0006645829999999998}, {'diff': 0.0006645699999999997}, {'diff': 0.0006645420000000006}, {'diff': 0.0006645000000000019}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:23.932" endtime="20201029 09:33:23.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:23.939" level="INFO">${RESULT} = {'diff': [0.0006672640000000007, 0.000664610999999999, 0.0006645829999999998, 0.0006645699999999997, 0.0006645420000000006, 0.0006645000000000019, 0.0006645409999999977, 0.0006645829999999998, 0.00066...</msg>
<status status="PASS" starttime="20201029 09:33:23.936" endtime="20201029 09:33:23.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.943" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:23.942" endtime="20201029 09:33:23.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:23.945" level="INFO">VALUE: [0.0006672640000000007, 0.000664610999999999, 0.0006645829999999998, 0.0006645699999999997, 0.0006645420000000006, 0.0006645000000000019, 0.0006645409999999977, 0.0006645829999999998, 0.0006645839999999993, 0.0006645269999999981, 0.000664625000000002, 0.0006645690000000003, 0.0006645969999999994, 0.0006645420000000006, 0.0006646249999999986, 0.0006645690000000003, 0.0006646110000000024, 0.0006645419999999971, 0.0006645839999999958, 0.0006645559999999967, 0.000664513999999998, 0.0006645700000000032, 0.0006645420000000041, 0.0006645830000000033, 0.0006646670000000007, 0.0006645970000000029, 0.0006645970000000029, 0.000664625000000002, 0.0006645690000000037, 0.0006645690000000037, 0.0006645970000000029, 0.0006645559999999967, 0.0006645559999999967, 0.0006645550000000042, 0.0006645690000000037, 0.0006645840000000028, 0.0006645559999999967, 0.0006645279999999976, 0.0006645829999999964, 0.0006645699999999963, 0.0006645419999999971, 0.0006645560000000036, 0.0006645420000000041, 0.000664513999999998, 0.0006646109999999955, 0.0006645829999999964, 0.0006645839999999958, 0.0006645829999999964, 0.0006645419999999971, 0.0006645829999999964]</msg>
<status status="PASS" starttime="20201029 09:33:23.944" endtime="20201029 09:33:24.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.940" endtime="20201029 09:33:24.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.566" endtime="20201029 09:33:24.005"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:23.544" endtime="20201029 09:33:24.005"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.008" endtime="20201029 09:33:24.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.006" endtime="20201029 09:33:24.028"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.036" endtime="20201029 09:33:24.082"></status>
</kw>
<msg timestamp="20201029 09:33:24.083" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.034" endtime="20201029 09:33:24.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.085" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.084" endtime="20201029 09:33:24.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.086" endtime="20201029 09:33:24.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.031" endtime="20201029 09:33:24.091"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.030" endtime="20201029 09:33:24.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.098" endtime="20201029 09:33:24.400"></status>
</kw>
<msg timestamp="20201029 09:33:24.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017548097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0182775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:24.097" endtime="20201029 09:33:24.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017548097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0182775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 09:33:24.404" endtime="20201029 09:33:24.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.411" endtime="20201029 09:33:24.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.094" endtime="20201029 09:33:24.413"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.092" endtime="20201029 09:33:24.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.418" level="INFO">${PHILIP_RES} = [{'diff': 0.000729403}, {'diff': 0.0007267359999999987}, {'diff': 0.000726708999999999}, {'diff': 0.000726708999999999}, {'diff': 0.0007266660000000008}, {'diff': 0.000726723000000002}, {'diff': 0.000...</msg>
<status status="PASS" starttime="20201029 09:33:24.415" endtime="20201029 09:33:24.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.422" level="INFO">${RESULT} = {'diff': [0.000729403, 0.0007267359999999987, 0.000726708999999999, 0.000726708999999999, 0.0007266660000000008, 0.000726723000000002, 0.0007266800000000004, 0.0007267079999999995, 0.00072673600000000...</msg>
<status status="PASS" starttime="20201029 09:33:24.419" endtime="20201029 09:33:24.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.426" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.425" endtime="20201029 09:33:24.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.428" level="INFO">VALUE: [0.000729403, 0.0007267359999999987, 0.000726708999999999, 0.000726708999999999, 0.0007266660000000008, 0.000726723000000002, 0.0007266800000000004, 0.0007267079999999995, 0.0007267360000000021, 0.000726723000000002, 0.0007266949999999994, 0.000726694, 0.0007267640000000013, 0.0007267499999999982, 0.0007267920000000004, 0.0007268190000000001, 0.0007267359999999952, 0.0007267780000000043, 0.0007267920000000039, 0.0007267359999999987, 0.0007267919999999969, 0.0007267499999999982, 0.0007267640000000047, 0.0007267219999999991, 0.0007268329999999962, 0.0007267779999999974, 0.0007267909999999975, 0.0007267359999999987, 0.0007267499999999982, 0.0007267910000000044, 0.0007267360000000056, 0.0007266660000000008, 0.0007266670000000003, 0.0007267219999999991, 0.0007266800000000004, 0.000726694, 0.0007267639999999978, 0.0007267499999999982, 0.000726722000000006, 0.0007267360000000056, 0.0007267090000000059, 0.0007267079999999995, 0.000726805000000004, 0.0007267779999999974, 0.0007267499999999982, 0.0007267219999999991, 0.0007266949999999994, 0.0007266530000000007, 0.0007266809999999999, 0.0007267639999999978]</msg>
<status status="PASS" starttime="20201029 09:33:24.427" endtime="20201029 09:33:24.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.423" endtime="20201029 09:33:24.430"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.028" endtime="20201029 09:33:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.005" endtime="20201029 09:33:24.431"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.433" endtime="20201029 09:33:24.453"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.432" endtime="20201029 09:33:24.453"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.461" endtime="20201029 09:33:24.511"></status>
</kw>
<msg timestamp="20201029 09:33:24.512" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.460" endtime="20201029 09:33:24.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.514" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.513" endtime="20201029 09:33:24.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.515" endtime="20201029 09:33:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.457" endtime="20201029 09:33:24.517"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.455" endtime="20201029 09:33:24.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.524" endtime="20201029 09:33:24.809"></status>
</kw>
<msg timestamp="20201029 09:33:24.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017548486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.523" endtime="20201029 09:33:24.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017548486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018342556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:24.813" endtime="20201029 09:33:24.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.821" endtime="20201029 09:33:24.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.520" endtime="20201029 09:33:24.824"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.518" endtime="20201029 09:33:24.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:24.828" level="INFO">${PHILIP_RES} = [{'diff': 0.0007940700000000009}, {'diff': 0.000791389}, {'diff': 0.0007913059999999986}, {'diff': 0.0007913479999999973}, {'diff': 0.0007913330000000017}, {'diff': 0.0007913610000000008}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:24.825" endtime="20201029 09:33:24.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:24.833" level="INFO">${RESULT} = {'diff': [0.0007940700000000009, 0.000791389, 0.0007913059999999986, 0.0007913479999999973, 0.0007913330000000017, 0.0007913610000000008, 0.0007913470000000013, 0.0007913329999999982, 0.00079129099999...</msg>
<status status="PASS" starttime="20201029 09:33:24.829" endtime="20201029 09:33:24.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.837" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:24.836" endtime="20201029 09:33:24.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.839" level="INFO">VALUE: [0.0007940700000000009, 0.000791389, 0.0007913059999999986, 0.0007913479999999973, 0.0007913330000000017, 0.0007913610000000008, 0.0007913470000000013, 0.0007913329999999982, 0.0007912909999999995, 0.000791389, 0.0007913340000000012, 0.0007912639999999999, 0.0007913330000000017, 0.0007913050000000026, 0.0007914440000000023, 0.0007913480000000007, 0.0007913749999999969, 0.0007913049999999991, 0.0007913470000000047, 0.0007913469999999978, 0.0007913609999999974, 0.0007913200000000051, 0.0007913889999999965, 0.0007913339999999977, 0.0007912779999999994, 0.0007913469999999978, 0.0007913329999999982, 0.0007913610000000043, 0.0007912639999999999, 0.0007913609999999974, 0.0007913890000000035, 0.0007913890000000035, 0.0007913199999999981, 0.0007912779999999994, 0.0007913329999999982, 0.0007913620000000038, 0.0007913339999999977, 0.0007913189999999987, 0.0007913189999999987, 0.0007913749999999969, 0.0007914450000000017, 0.0007913750000000039, 0.0007914170000000026, 0.0007914169999999957, 0.0007913609999999974, 0.0007914170000000026, 0.0007913339999999977, 0.0007914029999999961, 0.0007913890000000035, 0.0007913480000000042]</msg>
<status status="PASS" starttime="20201029 09:33:24.838" endtime="20201029 09:33:24.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.833" endtime="20201029 09:33:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.454" endtime="20201029 09:33:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.431" endtime="20201029 09:33:24.841"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:24.844" endtime="20201029 09:33:24.863"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.842" endtime="20201029 09:33:24.863"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.872" endtime="20201029 09:33:24.925"></status>
</kw>
<msg timestamp="20201029 09:33:24.926" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.870" endtime="20201029 09:33:24.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:24.928" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:24.927" endtime="20201029 09:33:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.930" endtime="20201029 09:33:24.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.868" endtime="20201029 09:33:24.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.865" endtime="20201029 09:33:24.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:24.938" endtime="20201029 09:33:25.235"></status>
</kw>
<msg timestamp="20201029 09:33:25.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01791275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018774014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:24.937" endtime="20201029 09:33:25.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01791275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018774014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:25.239" endtime="20201029 09:33:25.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.247" endtime="20201029 09:33:25.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.934" endtime="20201029 09:33:25.249"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.933" endtime="20201029 09:33:25.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.253" level="INFO">${PHILIP_RES} = [{'diff': 0.000861263999999997}, {'diff': 0.0008586530000000009}, {'diff': 0.000858583999999999}, {'diff': 0.0008585829999999996}, {'diff': 0.0008586250000000017}, {'diff': 0.0008586249999999983}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:25.250" endtime="20201029 09:33:25.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.257" level="INFO">${RESULT} = {'diff': [0.000861263999999997, 0.0008586530000000009, 0.000858583999999999, 0.0008585829999999996, 0.0008586250000000017, 0.0008586249999999983, 0.0008586119999999982, 0.0008586520000000014, 0.000858...</msg>
<status status="PASS" starttime="20201029 09:33:25.254" endtime="20201029 09:33:25.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.261" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.260" endtime="20201029 09:33:25.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.264" level="INFO">VALUE: [0.000861263999999997, 0.0008586530000000009, 0.000858583999999999, 0.0008585829999999996, 0.0008586250000000017, 0.0008586249999999983, 0.0008586119999999982, 0.0008586520000000014, 0.0008586109999999987, 0.0008585550000000004, 0.0008585420000000003, 0.0008586109999999987, 0.0008585980000000021, 0.0008586390000000013, 0.0008585970000000026, 0.0008586250000000017, 0.0008585840000000025, 0.0008585829999999961, 0.0008585980000000021, 0.0008586109999999952, 0.0008585279999999973, 0.0008585280000000042, 0.0008584859999999986, 0.0008585419999999969, 0.0008584999999999982, 0.000858583000000003, 0.0008584579999999994, 0.000858554999999997, 0.0008586110000000022, 0.0008586390000000013, 0.0008586110000000022, 0.0008585969999999957, 0.0008585970000000026, 0.0008585410000000043, 0.0008585839999999956, 0.000858583000000003, 0.0008585700000000029, 0.000858554999999997, 0.0008585409999999974, 0.0008585270000000048, 0.0008585970000000026, 0.000858554999999997, 0.0008585140000000047, 0.0008585690000000035, 0.0008586389999999944, 0.0008585700000000029, 0.0008585140000000047, 0.0008585700000000029, 0.0008585140000000047, 0.0008585140000000047]</msg>
<status status="PASS" starttime="20201029 09:33:25.263" endtime="20201029 09:33:25.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.258" endtime="20201029 09:33:25.265"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.864" endtime="20201029 09:33:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:24.842" endtime="20201029 09:33:25.266"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.268" endtime="20201029 09:33:25.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.267" endtime="20201029 09:33:25.288"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.296" endtime="20201029 09:33:25.354"></status>
</kw>
<msg timestamp="20201029 09:33:25.354" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.295" endtime="20201029 09:33:25.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.356" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.355" endtime="20201029 09:33:25.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.358" endtime="20201029 09:33:25.360"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.292" endtime="20201029 09:33:25.361"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.290" endtime="20201029 09:33:25.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.367" endtime="20201029 09:33:25.649"></status>
</kw>
<msg timestamp="20201029 09:33:25.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.366" endtime="20201029 09:33:25.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.653" endtime="20201029 09:33:25.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.660" endtime="20201029 09:33:25.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.363" endtime="20201029 09:33:25.662"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.362" endtime="20201029 09:33:25.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:25.667" level="INFO">${PHILIP_RES} = [{'diff': 0.0009308609999999981}, {'diff': 0.0009281669999999971}, {'diff': 0.0009281940000000002}, {'diff': 0.0009281800000000007}, {'diff': 0.0009281529999999975}, {'diff': 0.0009281249999999984}, {...</msg>
<status status="PASS" starttime="20201029 09:33:25.664" endtime="20201029 09:33:25.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:25.671" level="INFO">${RESULT} = {'diff': [0.0009308609999999981, 0.0009281669999999971, 0.0009281940000000002, 0.0009281800000000007, 0.0009281529999999975, 0.0009281249999999984, 0.0009281249999999984, 0.000928153000000001, 0.00092...</msg>
<status status="PASS" starttime="20201029 09:33:25.668" endtime="20201029 09:33:25.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.675" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:25.674" endtime="20201029 09:33:25.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.677" level="INFO">VALUE: [0.0009308609999999981, 0.0009281669999999971, 0.0009281940000000002, 0.0009281800000000007, 0.0009281529999999975, 0.0009281249999999984, 0.0009281249999999984, 0.000928153000000001, 0.0009281250000000019, 0.0009281120000000018, 0.0009280839999999992, 0.000927944, 0.000928041999999997, 0.0009281249999999984, 0.0009280970000000027, 0.0009281250000000019, 0.0009281670000000006, 0.0009281250000000019, 0.0009281110000000023, 0.000928041999999997, 0.000928041999999997, 0.0009280830000000032, 0.0009281110000000023, 0.0009280980000000022, 0.0009280980000000022, 0.0009280969999999958, 0.0009280699999999961, 0.0009281519999999946, 0.0009280969999999958, 0.0009281390000000014, 0.0009281940000000002, 0.0009281249999999949, 0.0009281109999999954, 0.0009280969999999958, 0.0009280000000000052, 0.0009280969999999958, 0.0009281109999999954, 0.0009281390000000014, 0.0009280700000000031, 0.0009280700000000031, 0.0009280559999999966, 0.0009281109999999954, 0.0009281250000000019, 0.0009281110000000023, 0.0009281659999999942, 0.0009281669999999936, 0.000928153000000001, 0.0009281250000000019, 0.0009281800000000007, 0.0009281670000000075]</msg>
<status status="PASS" starttime="20201029 09:33:25.676" endtime="20201029 09:33:25.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.671" endtime="20201029 09:33:25.679"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.289" endtime="20201029 09:33:25.680"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.266" endtime="20201029 09:33:25.680"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:25.682" endtime="20201029 09:33:25.702"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.681" endtime="20201029 09:33:25.702"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.710" endtime="20201029 09:33:25.771"></status>
</kw>
<msg timestamp="20201029 09:33:25.772" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.709" endtime="20201029 09:33:25.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:25.774" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:25.773" endtime="20201029 09:33:25.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.775" endtime="20201029 09:33:25.777"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.706" endtime="20201029 09:33:25.778"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.704" endtime="20201029 09:33:25.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:25.784" endtime="20201029 09:33:26.087"></status>
</kw>
<msg timestamp="20201029 09:33:26.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:25.783" endtime="20201029 09:33:26.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017630125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018632833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.091" endtime="20201029 09:33:26.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.098" endtime="20201029 09:33:26.100"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.780" endtime="20201029 09:33:26.101"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.779" endtime="20201029 09:33:26.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.105" level="INFO">${PHILIP_RES} = [{'diff': 0.0010027080000000015}, {'diff': 0.0010000140000000005}, {'diff': 0.001000028}, {'diff': 0.0010000140000000005}, {'diff': 0.0009999579999999987}, {'diff': 0.0009999859999999978}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:26.102" endtime="20201029 09:33:26.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.110" level="INFO">${RESULT} = {'diff': [0.0010027080000000015, 0.0010000140000000005, 0.001000028, 0.0010000140000000005, 0.0009999579999999987, 0.0009999859999999978, 0.0010001110000000014, 0.0010000549999999997, 0.00099997200000...</msg>
<status status="PASS" starttime="20201029 09:33:26.106" endtime="20201029 09:33:26.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.115" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.114" endtime="20201029 09:33:26.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.117" level="INFO">VALUE: [0.0010027080000000015, 0.0010000140000000005, 0.001000028, 0.0010000140000000005, 0.0009999579999999987, 0.0009999859999999978, 0.0010001110000000014, 0.0010000549999999997, 0.0009999720000000017, 0.0010000410000000001, 0.0010000559999999992, 0.0010000140000000005, 0.0010000699999999987, 0.0010000270000000006, 0.0009999720000000017, 0.0010000140000000005, 0.0009999730000000012, 0.0010000419999999996, 0.0010000000000000009, 0.0010000549999999997, 0.0010000689999999993, 0.0010000829999999988, 0.0010000969999999984, 0.0010000559999999992, 0.0010001669999999963, 0.0010000549999999997, 0.0010000140000000005, 0.0010000969999999984, 0.0010000829999999988, 0.0010001249999999975, 0.0010001669999999963, 0.001000110999999998, 0.0010001809999999958, 0.0010000549999999997, 0.0010000689999999993, 0.001000012999999994, 0.0010000689999999993, 0.0010000419999999996, 0.0010000140000000005, 0.001000110999999998, 0.0010000689999999993, 0.0010001800000000033, 0.0010000830000000127, 0.0010000969999999915, 0.0010001250000000045, 0.0010000419999999927, 0.0010000699999999918, 0.0010001669999999963, 0.0010001669999999963, 0.001000110999999998]</msg>
<status status="PASS" starttime="20201029 09:33:26.116" endtime="20201029 09:33:26.118"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.111" endtime="20201029 09:33:26.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.703" endtime="20201029 09:33:26.119"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:25.680" endtime="20201029 09:33:26.119"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.122" endtime="20201029 09:33:26.141"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.120" endtime="20201029 09:33:26.142"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.150" endtime="20201029 09:33:26.215"></status>
</kw>
<msg timestamp="20201029 09:33:26.215" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.148" endtime="20201029 09:33:26.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.218" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.216" endtime="20201029 09:33:26.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.219" endtime="20201029 09:33:26.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.146" endtime="20201029 09:33:26.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.144" endtime="20201029 09:33:26.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.228" endtime="20201029 09:33:26.514"></status>
</kw>
<msg timestamp="20201029 09:33:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.226" endtime="20201029 09:33:26.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017632583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018710083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.518" endtime="20201029 09:33:26.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.526" endtime="20201029 09:33:26.527"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.224" endtime="20201029 09:33:26.528"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.222" endtime="20201029 09:33:26.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.532" level="INFO">${PHILIP_RES} = [{'diff': 0.0010774999999999986}, {'diff': 0.001074776999999999}, {'diff': 0.001074776999999999}, {'diff': 0.0010748189999999977}, {'diff': 0.0010748200000000006}, {'diff': 0.001074901999999999}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:26.529" endtime="20201029 09:33:26.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.536" level="INFO">${RESULT} = {'diff': [0.0010774999999999986, 0.001074776999999999, 0.001074776999999999, 0.0010748189999999977, 0.0010748200000000006, 0.001074901999999999, 0.0010747500000000028, 0.0010747359999999997, 0.0010747...</msg>
<status status="PASS" starttime="20201029 09:33:26.533" endtime="20201029 09:33:26.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.540" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.539" endtime="20201029 09:33:26.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.543" level="INFO">VALUE: [0.0010774999999999986, 0.001074776999999999, 0.001074776999999999, 0.0010748189999999977, 0.0010748200000000006, 0.001074901999999999, 0.0010747500000000028, 0.0010747359999999997, 0.0010747640000000024, 0.0010747220000000002, 0.0010748190000000012, 0.0010748609999999999, 0.0010747080000000006, 0.0010746950000000005, 0.0010747499999999993, 0.0010747779999999985, 0.0010747219999999932, 0.0010747640000000058, 0.0010746530000000018, 0.0010747639999999989, 0.0010746800000000015, 0.0010746950000000005, 0.0010747080000000006, 0.001074709, 0.0010747220000000002, 0.0010747779999999985, 0.0010747779999999985, 0.0010747499999999993, 0.001074709, 0.001074791999999998, 0.001074805000000005, 0.0010747909999999986, 0.0010747359999999997, 0.001074694000000001, 0.0010747629999999994, 0.0010747499999999993, 0.0010747499999999993, 0.0010747909999999986, 0.0010747499999999993, 0.0010748329999999973, 0.001074694000000001, 0.0010747779999999985, 0.0010748609999999964, 0.001074776999999999, 0.0010748059999999976, 0.0010747499999999993, 0.0010747359999999928, 0.001074763999999992, 0.0010748059999999976, 0.001074611000000003]</msg>
<status status="PASS" starttime="20201029 09:33:26.541" endtime="20201029 09:33:26.543"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.537" endtime="20201029 09:33:26.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.142" endtime="20201029 09:33:26.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.120" endtime="20201029 09:33:26.545"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.547" endtime="20201029 09:33:26.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.545" endtime="20201029 09:33:26.567"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.575" endtime="20201029 09:33:26.645"></status>
</kw>
<msg timestamp="20201029 09:33:26.646" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.573" endtime="20201029 09:33:26.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.651" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:26.648" endtime="20201029 09:33:26.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.653" endtime="20201029 09:33:26.658"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.571" endtime="20201029 09:33:26.659"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.569" endtime="20201029 09:33:26.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.673" endtime="20201029 09:33:26.965"></status>
</kw>
<msg timestamp="20201029 09:33:26.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017617583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.670" endtime="20201029 09:33:26.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017617583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018772083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:26.969" endtime="20201029 09:33:26.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:26.977" endtime="20201029 09:33:26.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.665" endtime="20201029 09:33:26.979"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.661" endtime="20201029 09:33:26.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:26.984" level="INFO">${PHILIP_RES} = [{'diff': 0.0011544999999999993}, {'diff': 0.0011518190000000018}, {'diff': 0.0011517769999999997}, {'diff': 0.0011517919999999987}, {'diff': 0.0011517920000000022}, {'diff': 0.0011518189999999984}, {...</msg>
<status status="PASS" starttime="20201029 09:33:26.980" endtime="20201029 09:33:26.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:26.988" level="INFO">${RESULT} = {'diff': [0.0011544999999999993, 0.0011518190000000018, 0.0011517769999999997, 0.0011517919999999987, 0.0011517920000000022, 0.0011518189999999984, 0.0011517779999999991, 0.0011517639999999996, 0.0011...</msg>
<status status="PASS" starttime="20201029 09:33:26.984" endtime="20201029 09:33:26.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.992" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:26.991" endtime="20201029 09:33:26.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:26.994" level="INFO">VALUE: [0.0011544999999999993, 0.0011518190000000018, 0.0011517769999999997, 0.0011517919999999987, 0.0011517920000000022, 0.0011518189999999984, 0.0011517779999999991, 0.0011517639999999996, 0.0011517779999999991, 0.0011517780000000026, 0.0011516800000000021, 0.0011518060000000052, 0.0011518330000000049, 0.0011516940000000017, 0.0011517090000000008, 0.0011516950000000012, 0.0011516530000000025, 0.0011516660000000026, 0.0011516250000000033, 0.0011517360000000004, 0.0011516799999999952, 0.00115175, 0.0011516940000000017, 0.0011518059999999983, 0.00115175, 0.0011516660000000026, 0.0011518060000000052, 0.0011517909999999992, 0.0011517639999999996, 0.0011517220000000009, 0.0011517919999999987, 0.0011517779999999991, 0.0011517639999999996, 0.0011517909999999992, 0.0011517639999999996, 0.0011517360000000004, 0.001151749999999993, 0.0011518749999999967, 0.0011519170000000023, 0.001151861000000004, 0.0011519029999999958, 0.0011518889999999893, 0.001151930999999995, 0.0011519170000000023, 0.0011519860000000076, 0.0011519730000000006, 0.0011519450000000014, 0.0011517909999999992, 0.0011518889999999893, 0.0011519030000000097]</msg>
<status status="PASS" starttime="20201029 09:33:26.993" endtime="20201029 09:33:26.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.988" endtime="20201029 09:33:26.996"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.567" endtime="20201029 09:33:26.997"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.545" endtime="20201029 09:33:26.997"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:26.999" endtime="20201029 09:33:27.019"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.998" endtime="20201029 09:33:27.020"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.030" endtime="20201029 09:33:27.104"></status>
</kw>
<msg timestamp="20201029 09:33:27.105" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.028" endtime="20201029 09:33:27.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.107" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.106" endtime="20201029 09:33:27.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.108" endtime="20201029 09:33:27.110"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.025" endtime="20201029 09:33:27.111"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.023" endtime="20201029 09:33:27.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.119" endtime="20201029 09:33:27.405"></status>
</kw>
<msg timestamp="20201029 09:33:27.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.116" endtime="20201029 09:33:27.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.409" endtime="20201029 09:33:27.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.416" endtime="20201029 09:33:27.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.113" endtime="20201029 09:33:27.419"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.112" endtime="20201029 09:33:27.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.423" level="INFO">${PHILIP_RES} = [{'diff': 0.0012338619999999988}, {'diff': 0.001231195000000001}, {'diff': 0.0012312360000000001}, {'diff': 0.0012313609999999968}, {'diff': 0.001231318999999998}, {'diff': 0.0012312639999999993}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:27.420" endtime="20201029 09:33:27.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.428" level="INFO">${RESULT} = {'diff': [0.0012338619999999988, 0.001231195000000001, 0.0012312360000000001, 0.0012313609999999968, 0.001231318999999998, 0.0012312639999999993, 0.0012312920000000019, 0.001231237000000003, 0.0012312...</msg>
<status status="PASS" starttime="20201029 09:33:27.424" endtime="20201029 09:33:27.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.432" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.431" endtime="20201029 09:33:27.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.434" level="INFO">VALUE: [0.0012338619999999988, 0.001231195000000001, 0.0012312360000000001, 0.0012313609999999968, 0.001231318999999998, 0.0012312639999999993, 0.0012312920000000019, 0.001231237000000003, 0.0012312499999999962, 0.0012312359999999967, 0.001231222000000004, 0.0012311659999999988, 0.001231221999999997, 0.0012312360000000036, 0.0012312229999999966, 0.001231222000000004, 0.001231291999999995, 0.001231222000000004, 0.0012312780000000023, 0.001231222000000004, 0.001231209000000004, 0.0012313340000000006, 0.0012312639999999958, 0.0012311659999999988, 0.001231209000000004, 0.0012312360000000036, 0.0012311379999999997, 0.0012312780000000023, 0.0012311659999999988, 0.001231098, 0.0012311810000000048, 0.0012312780000000023, 0.0012312359999999967, 0.0012311799999999984, 0.001231222000000004, 0.0012312369999999961, 0.0012312500000000032, 0.0012311949999999905, 0.0012311950000000044, 0.0012311669999999914, 0.0012311809999999979, 0.0012311809999999979, 0.0012312639999999958, 0.0012312219999999902, 0.0012312500000000032, 0.001231208999999997, 0.0012312780000000023, 0.0012313610000000003, 0.001231320000000008, 0.001231291999999995]</msg>
<status status="PASS" starttime="20201029 09:33:27.433" endtime="20201029 09:33:27.435"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.429" endtime="20201029 09:33:27.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.021" endtime="20201029 09:33:27.436"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:26.997" endtime="20201029 09:33:27.436"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.439" endtime="20201029 09:33:27.459"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.437" endtime="20201029 09:33:27.460"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.477" endtime="20201029 09:33:27.557"></status>
</kw>
<msg timestamp="20201029 09:33:27.558" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.474" endtime="20201029 09:33:27.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.563" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.560" endtime="20201029 09:33:27.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.565" endtime="20201029 09:33:27.569"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.469" endtime="20201029 09:33:27.570"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.465" endtime="20201029 09:33:27.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.584" endtime="20201029 09:33:27.879"></status>
</kw>
<msg timestamp="20201029 09:33:27.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029479375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030795375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.581" endtime="20201029 09:33:27.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029479375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030795375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:27.883" endtime="20201029 09:33:27.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.890" endtime="20201029 09:33:27.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.575" endtime="20201029 09:33:27.892"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.572" endtime="20201029 09:33:27.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:27.897" level="INFO">${PHILIP_RES} = [{'diff': 0.0013160000000000012}, {'diff': 0.0013133199999999963}, {'diff': 0.0013133329999999999}, {'diff': 0.0013134310000000038}, {'diff': 0.001313472000000003}, {'diff': 0.0013133619999999985}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:27.894" endtime="20201029 09:33:27.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:27.901" level="INFO">${RESULT} = {'diff': [0.0013160000000000012, 0.0013133199999999963, 0.0013133329999999999, 0.0013134310000000038, 0.001313472000000003, 0.0013133619999999985, 0.0013134159999999978, 0.0013133879999999987, 0.00131...</msg>
<status status="PASS" starttime="20201029 09:33:27.898" endtime="20201029 09:33:27.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.905" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:27.904" endtime="20201029 09:33:27.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:27.907" level="INFO">VALUE: [0.0013160000000000012, 0.0013133199999999963, 0.0013133329999999999, 0.0013134310000000038, 0.001313472000000003, 0.0013133619999999985, 0.0013134159999999978, 0.0013133879999999987, 0.0013135410000000014, 0.0013134310000000038, 0.0013135140000000017, 0.0013134310000000038, 0.001313360999999999, 0.001313361000000006, 0.001313459000000003, 0.0013134029999999977, 0.0013133889999999981, 0.0013134309999999969, 0.0013134030000000047, 0.0013133889999999981, 0.0013133620000000054, 0.0013134159999999978, 0.0013133749999999986, 0.0013134029999999908, 0.0013133050000000007, 0.0013133190000000072, 0.0013134579999999896, 0.0013133469999999925, 0.0013132919999999937, 0.001313278000000001, 0.0013132919999999937, 0.001313278000000001, 0.0013132639999999945, 0.0013133749999999916, 0.0013132779999999872, 0.0013133189999999934, 0.0013132360000000093, 0.0013131940000000036, 0.0013133470000000064, 0.0013132360000000093, 0.0013132639999999945, 0.0013133470000000064, 0.0013133050000000007, 0.0013133750000000055, 0.0013132909999999942, 0.0013133480000000058, 0.001313249999999988, 0.001313291000000008, 0.0013133329999999999, 0.001313278000000001]</msg>
<status status="PASS" starttime="20201029 09:33:27.906" endtime="20201029 09:33:27.908"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.902" endtime="20201029 09:33:27.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.462" endtime="20201029 09:33:27.909"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.436" endtime="20201029 09:33:27.909"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:27.912" endtime="20201029 09:33:27.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.910" endtime="20201029 09:33:27.932"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:27.940" endtime="20201029 09:33:28.022"></status>
</kw>
<msg timestamp="20201029 09:33:28.023" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:27.938" endtime="20201029 09:33:28.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.025" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.024" endtime="20201029 09:33:28.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.026" endtime="20201029 09:33:28.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.936" endtime="20201029 09:33:28.031"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.934" endtime="20201029 09:33:28.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.038" endtime="20201029 09:33:28.324"></status>
</kw>
<msg timestamp="20201029 09:33:28.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.037" endtime="20201029 09:33:28.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.328" endtime="20201029 09:33:28.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.336" endtime="20201029 09:33:28.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.034" endtime="20201029 09:33:28.338"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.032" endtime="20201029 09:33:28.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.342" level="INFO">${PHILIP_RES} = [{'diff': 0.001400514000000002}, {'diff': 0.0013977499999999997}, {'diff': 0.0013977499999999997}, {'diff': 0.0013978060000000014}, {'diff': 0.0013978190000000015}, {'diff': 0.0013977779999999988}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:28.339" endtime="20201029 09:33:28.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.346" level="INFO">${RESULT} = {'diff': [0.001400514000000002, 0.0013977499999999997, 0.0013977499999999997, 0.0013978060000000014, 0.0013978190000000015, 0.0013977779999999988, 0.0013977639999999993, 0.0013977770000000028, 0.00139...</msg>
<status status="PASS" starttime="20201029 09:33:28.343" endtime="20201029 09:33:28.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.350" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.349" endtime="20201029 09:33:28.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.353" level="INFO">VALUE: [0.001400514000000002, 0.0013977499999999997, 0.0013977499999999997, 0.0013978060000000014, 0.0013978190000000015, 0.0013977779999999988, 0.0013977639999999993, 0.0013977770000000028, 0.0013978329999999976, 0.001397833000000001, 0.0013978189999999946, 0.0013979169999999985, 0.0013978610000000002, 0.0013978889999999994, 0.0013978749999999998, 0.0013978469999999937, 0.0013978060000000014, 0.0013978190000000015, 0.0013977079999999975, 0.0013979579999999978, 0.0013978480000000001, 0.0013978470000000007, 0.001397902999999999, 0.0013978610000000002, 0.0013978329999999942, 0.0013978470000000007, 0.001397902999999999, 0.0013979439999999982, 0.0013978190000000015, 0.0013978470000000007, 0.001397833000000001, 0.0013978060000000014, 0.0013977359999999966, 0.0013976949999999905, 0.001397805000000002, 0.0013978889999999994, 0.001397805000000002, 0.0013978469999999937, 0.001397820000000008, 0.0013978469999999937, 0.0013977780000000023, 0.0013979169999999985, 0.0013977780000000023, 0.001397805000000002, 0.0013977770000000028, 0.0013978619999999997, 0.0013978190000000085, 0.0013978889999999994, 0.0013978610000000002, 0.0013978060000000014]</msg>
<status status="PASS" starttime="20201029 09:33:28.352" endtime="20201029 09:33:28.354"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.347" endtime="20201029 09:33:28.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.932" endtime="20201029 09:33:28.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:27.910" endtime="20201029 09:33:28.355"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.358" endtime="20201029 09:33:28.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.356" endtime="20201029 09:33:28.380"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.396" endtime="20201029 09:33:28.485"></status>
</kw>
<msg timestamp="20201029 09:33:28.486" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.393" endtime="20201029 09:33:28.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.491" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.488" endtime="20201029 09:33:28.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.494" endtime="20201029 09:33:28.497"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.388" endtime="20201029 09:33:28.498"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.384" endtime="20201029 09:33:28.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.512" endtime="20201029 09:33:28.806"></status>
</kw>
<msg timestamp="20201029 09:33:28.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029255208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030742653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.509" endtime="20201029 09:33:28.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029255208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030742653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.810" endtime="20201029 09:33:28.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.817" endtime="20201029 09:33:28.819"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.504" endtime="20201029 09:33:28.820"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.500" endtime="20201029 09:33:28.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:28.824" level="INFO">${PHILIP_RES} = [{'diff': 0.0014874450000000004}, {'diff': 0.0014847360000000004}, {'diff': 0.0014848890000000031}, {'diff': 0.0014849020000000032}, {'diff': 0.0014847360000000004}, {'diff': 0.0014849030000000027}, {...</msg>
<status status="PASS" starttime="20201029 09:33:28.821" endtime="20201029 09:33:28.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:28.829" level="INFO">${RESULT} = {'diff': [0.0014874450000000004, 0.0014847360000000004, 0.0014848890000000031, 0.0014849020000000032, 0.0014847360000000004, 0.0014849030000000027, 0.0014849030000000027, 0.0014848330000000048, 0.0014...</msg>
<status status="PASS" starttime="20201029 09:33:28.825" endtime="20201029 09:33:28.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.833" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:28.832" endtime="20201029 09:33:28.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.835" level="INFO">VALUE: [0.0014874450000000004, 0.0014847360000000004, 0.0014848890000000031, 0.0014849020000000032, 0.0014847360000000004, 0.0014849030000000027, 0.0014849030000000027, 0.0014848330000000048, 0.001484777999999999, 0.0014847769999999996, 0.00148475, 0.0014846250000000033, 0.0014847080000000012, 0.001484667000000002, 0.001484667000000002, 0.0014847220000000008, 0.0014847360000000004, 0.0014846810000000016, 0.0014849169999999953, 0.0014848469999999975, 0.0014848330000000048, 0.0014847909999999992, 0.0014847220000000078, 0.0014847779999999922, 0.001484861000000004, 0.0014848620000000035, 0.0014847919999999987, 0.0014848469999999975, 0.0014848749999999966, 0.0014848190000000122, 0.001484832999999991, 0.001484750000000007, 0.0014847779999999922, 0.0014848189999999983, 0.0014846530000000024, 0.0014847360000000004, 0.0014848060000000052, 0.0014848059999999913, 0.0014849019999999963, 0.0014847779999999922, 0.0014848750000000105, 0.0014847919999999987, 0.0014846939999999947, 0.0014847639999999995, 0.0014847090000000007, 0.0014848199999999978, 0.001484861000000004, 0.0014847360000000004, 0.0014845970000000042, 0.0014846949999999942]</msg>
<status status="PASS" starttime="20201029 09:33:28.834" endtime="20201029 09:33:28.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.829" endtime="20201029 09:33:28.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.381" endtime="20201029 09:33:28.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.356" endtime="20201029 09:33:28.837"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:28.839" endtime="20201029 09:33:28.859"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.838" endtime="20201029 09:33:28.859"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.867" endtime="20201029 09:33:28.959"></status>
</kw>
<msg timestamp="20201029 09:33:28.960" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.866" endtime="20201029 09:33:28.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:28.962" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:28.961" endtime="20201029 09:33:28.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.963" endtime="20201029 09:33:28.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.863" endtime="20201029 09:33:28.965"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.861" endtime="20201029 09:33:28.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:28.972" endtime="20201029 09:33:29.260"></status>
</kw>
<msg timestamp="20201029 09:33:29.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019100764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:28.971" endtime="20201029 09:33:29.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017523708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019100764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.264" endtime="20201029 09:33:29.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.272" endtime="20201029 09:33:29.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.968" endtime="20201029 09:33:29.274"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.966" endtime="20201029 09:33:29.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.278" level="INFO">${PHILIP_RES} = [{'diff': 0.0015770560000000003}, {'diff': 0.001574416999999998}, {'diff': 0.0015744860000000034}, {'diff': 0.0015744310000000011}, {'diff': 0.001574306000000001}, {'diff': 0.0015744029999999985}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:29.275" endtime="20201029 09:33:29.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.282" level="INFO">${RESULT} = {'diff': [0.0015770560000000003, 0.001574416999999998, 0.0015744860000000034, 0.0015744310000000011, 0.001574306000000001, 0.0015744029999999985, 0.0015743609999999998, 0.0015744309999999977, 0.001574...</msg>
<status status="PASS" starttime="20201029 09:33:29.279" endtime="20201029 09:33:29.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.287" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.286" endtime="20201029 09:33:29.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.291" level="INFO">VALUE: [0.0015770560000000003, 0.001574416999999998, 0.0015744860000000034, 0.0015744310000000011, 0.001574306000000001, 0.0015744029999999985, 0.0015743609999999998, 0.0015744309999999977, 0.0015744440000000012, 0.0015743610000000033, 0.001574402999999995, 0.001574291999999998, 0.0015742639999999988, 0.001574403000000002, 0.0015743750000000029, 0.001574305000000005, 0.001574374999999996, 0.001574304999999998, 0.0015743329999999972, 0.0015743750000000029, 0.0015743889999999955, 0.0015744720000000004, 0.0015743619999999958, 0.0015743329999999972, 0.001574403000000002, 0.0015744580000000008, 0.0015743890000000024, 0.0015743750000000029, 0.0015744029999999881, 0.0015744300000000017, 0.0015743469999999898, 0.001574403000000002, 0.0015743750000000029, 0.0015743479999999893, 0.0015744720000000073, 0.0015744299999999878, 0.0015743890000000094, 0.0015744029999999881, 0.0015744720000000073, 0.0015743889999999955, 0.0015743750000000029, 0.0015744719999999934, 0.0015745699999999974, 0.0015746110000000035, 0.0015744439999999943, 0.0015743470000000037, 0.0015743059999999975, 0.0015743750000000029, 0.001574320000000004, 0.0015744169999999946]</msg>
<status status="PASS" starttime="20201029 09:33:29.288" endtime="20201029 09:33:29.299"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.283" endtime="20201029 09:33:29.300"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.860" endtime="20201029 09:33:29.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:28.837" endtime="20201029 09:33:29.302"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.307" endtime="20201029 09:33:29.329"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.304" endtime="20201029 09:33:29.330"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.350" endtime="20201029 09:33:29.450"></status>
</kw>
<msg timestamp="20201029 09:33:29.451" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.347" endtime="20201029 09:33:29.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.456" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.453" endtime="20201029 09:33:29.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.458" endtime="20201029 09:33:29.463"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.340" endtime="20201029 09:33:29.464"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.335" endtime="20201029 09:33:29.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.478" endtime="20201029 09:33:29.784"></status>
</kw>
<msg timestamp="20201029 09:33:29.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034297625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035966458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.475" endtime="20201029 09:33:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034297625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035966458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.788" endtime="20201029 09:33:29.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.795" endtime="20201029 09:33:29.797"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.470" endtime="20201029 09:33:29.798"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.466" endtime="20201029 09:33:29.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:29.802" level="INFO">${PHILIP_RES} = [{'diff': 0.0016688330000000015}, {'diff': 0.0016663059999999993}, {'diff': 0.001666222000000002}, {'diff': 0.0016662090000000018}, {'diff': 0.001666332999999999}, {'diff': 0.0016661250000000044}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:29.799" endtime="20201029 09:33:29.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:29.806" level="INFO">${RESULT} = {'diff': [0.0016688330000000015, 0.0016663059999999993, 0.001666222000000002, 0.0016662090000000018, 0.001666332999999999, 0.0016661250000000044, 0.001666110999999998, 0.0016662090000000018, 0.0016659...</msg>
<status status="PASS" starttime="20201029 09:33:29.803" endtime="20201029 09:33:29.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.810" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:29.809" endtime="20201029 09:33:29.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.812" level="INFO">VALUE: [0.0016688330000000015, 0.0016663059999999993, 0.001666222000000002, 0.0016662090000000018, 0.001666332999999999, 0.0016661250000000044, 0.001666110999999998, 0.0016662090000000018, 0.001665958000000002, 0.0016660689999999992, 0.0016661810000000027, 0.001666221999999995, 0.0016662359999999946, 0.001666361000000005, 0.001666221999999995, 0.0016662640000000006, 0.001666250000000008, 0.0016662079999999885, 0.001666237000000001, 0.0016662779999999933, 0.0016663609999999912, 0.0016662919999999998, 0.001666332999999992, 0.0016663059999999924, 0.0016662360000000015, 0.0016663059999999924, 0.0016662499999999941, 0.0016661939999999958, 0.0016663750000000116, 0.0016663749999999977, 0.0016663890000000042, 0.0016664170000000034, 0.001666237000000001, 0.0016662919999999998, 0.001666304999999993, 0.0016663189999999994, 0.0016663749999999977, 0.0016663470000000125, 0.0016662919999999998, 0.001666304999999993, 0.0016664720000000022, 0.0016664029999999969, 0.0016664859999999948, 0.0016664579999999957, 0.0016663750000000116, 0.0016664169999999895, 0.001666332999999992, 0.0016663749999999977, 0.001666333000000006, 0.001666332999999992]</msg>
<status status="PASS" starttime="20201029 09:33:29.811" endtime="20201029 09:33:29.814"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.806" endtime="20201029 09:33:29.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.331" endtime="20201029 09:33:29.815"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.302" endtime="20201029 09:33:29.815"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:29.818" endtime="20201029 09:33:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.816" endtime="20201029 09:33:29.838"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.845" endtime="20201029 09:33:29.947"></status>
</kw>
<msg timestamp="20201029 09:33:29.947" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.844" endtime="20201029 09:33:29.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:29.950" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:29.948" endtime="20201029 09:33:29.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.951" endtime="20201029 09:33:29.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.841" endtime="20201029 09:33:29.953"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.840" endtime="20201029 09:33:29.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:29.960" endtime="20201029 09:33:30.248"></status>
</kw>
<msg timestamp="20201029 09:33:30.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:29.958" endtime="20201029 09:33:30.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017501431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.252" endtime="20201029 09:33:30.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.259" endtime="20201029 09:33:30.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.956" endtime="20201029 09:33:30.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.954" endtime="20201029 09:33:30.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.266" level="INFO">${PHILIP_RES} = [{'diff': 0.0017636519999999975}, {'diff': 0.0017609159999999978}, {'diff': 0.0017610560000000004}, {'diff': 0.001760958}, {'diff': 0.0017611250000000023}, {'diff': 0.0017609310000000003}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:30.263" endtime="20201029 09:33:30.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.270" level="INFO">${RESULT} = {'diff': [0.0017636519999999975, 0.0017609159999999978, 0.0017610560000000004, 0.001760958, 0.0017611250000000023, 0.0017609310000000003, 0.00176107, 0.0017610000000000021, 0.0017608470000000029, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:30.267" endtime="20201029 09:33:30.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.275" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.274" endtime="20201029 09:33:30.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.277" level="INFO">VALUE: [0.0017636519999999975, 0.0017609159999999978, 0.0017610560000000004, 0.001760958, 0.0017611250000000023, 0.0017609310000000003, 0.00176107, 0.0017610000000000021, 0.0017608470000000029, 0.0017610140000000052, 0.0017608610000000025, 0.001760972999999999, 0.001760875000000002, 0.0017610280000000048, 0.001761056000000004, 0.0017609999999999987, 0.0017609440000000004, 0.0017610139999999982, 0.0017610549999999975, 0.0017609160000000013, 0.0017609170000000007, 0.0017609440000000004, 0.001760972999999999, 0.0017609169999999938, 0.0017610700000000035, 0.001760958000000007, 0.0017609719999999995, 0.0017610140000000052, 0.0017610140000000052, 0.0017609590000000064, 0.0017609999999999987, 0.0017609719999999995, 0.0017609859999999922, 0.0017609859999999922, 0.0017609719999999995, 0.001760874999999995, 0.0017609859999999922, 0.0017609440000000004, 0.001760958000000007, 0.0017610130000000057, 0.0017611250000000023, 0.0017610549999999975, 0.001761040999999991, 0.0017609719999999995, 0.0017609449999999999, 0.0017608889999999877, 0.0017607909999999977, 0.0017608890000000016, 0.0017609309999999934, 0.0017608610000000025]</msg>
<status status="PASS" starttime="20201029 09:33:30.276" endtime="20201029 09:33:30.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.271" endtime="20201029 09:33:30.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.838" endtime="20201029 09:33:30.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:29.815" endtime="20201029 09:33:30.279"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.281" endtime="20201029 09:33:30.302"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.280" endtime="20201029 09:33:30.303"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.320" endtime="20201029 09:33:30.428"></status>
</kw>
<msg timestamp="20201029 09:33:30.429" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.317" endtime="20201029 09:33:30.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.434" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.432" endtime="20201029 09:33:30.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.437" endtime="20201029 09:33:30.440"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.311" endtime="20201029 09:33:30.441"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.307" endtime="20201029 09:33:30.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.455" endtime="20201029 09:33:30.751"></status>
</kw>
<msg timestamp="20201029 09:33:30.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029314097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031174639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.452" endtime="20201029 09:33:30.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029314097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031174639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:30.755" endtime="20201029 09:33:30.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.763" endtime="20201029 09:33:30.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.447" endtime="20201029 09:33:30.765"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.443" endtime="20201029 09:33:30.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:30.770" level="INFO">${PHILIP_RES} = [{'diff': 0.0018605419999999998}, {'diff': 0.0018577360000000057}, {'diff': 0.001857791999999997}, {'diff': 0.001857903000000001}, {'diff': 0.0018579719999999994}, {'diff': 0.001857903000000001}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:30.767" endtime="20201029 09:33:30.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:30.774" level="INFO">${RESULT} = {'diff': [0.0018605419999999998, 0.0018577360000000057, 0.001857791999999997, 0.001857903000000001, 0.0018579719999999994, 0.001857903000000001, 0.001857903000000001, 0.001857903000000001, 0.001857889...</msg>
<status status="PASS" starttime="20201029 09:33:30.771" endtime="20201029 09:33:30.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.778" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:30.777" endtime="20201029 09:33:30.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.780" level="INFO">VALUE: [0.0018605419999999998, 0.0018577360000000057, 0.001857791999999997, 0.001857903000000001, 0.0018579719999999994, 0.001857903000000001, 0.001857903000000001, 0.001857903000000001, 0.0018578890000000015, 0.0018579719999999994, 0.001858083999999996, 0.0018581670000000008, 0.0018580830000000034, 0.0018580560000000038, 0.0018580829999999965, 0.0018579440000000003, 0.0018578750000000019, 0.0018579999999999985, 0.0018580420000000042, 0.0018579719999999994, 0.0018579590000000062, 0.001857791999999997, 0.0018578750000000088, 0.0018578890000000015, 0.001857931000000007, 0.0018578750000000088, 0.0018579729999999989, 0.0018579309999999932, 0.0018579719999999994, 0.001858111999999995, 0.0018580690000000039, 0.0018581109999999956, 0.0018580280000000116, 0.0018580420000000042, 0.0018580559999999968, 0.001857986000000006, 0.0018580139999999912, 0.0018579719999999994, 0.0018580279999999977, 0.0018579999999999985, 0.0018579170000000006, 0.0018579019999999946, 0.0018579020000000085, 0.0018579170000000006, 0.0018580139999999912, 0.0018580549999999973, 0.001858014000000005, 0.0018579580000000068, 0.0018580420000000042, 0.0018578750000000088]</msg>
<status status="PASS" starttime="20201029 09:33:30.779" endtime="20201029 09:33:30.781"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.774" endtime="20201029 09:33:30.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.304" endtime="20201029 09:33:30.782"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.279" endtime="20201029 09:33:30.782"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:30.785" endtime="20201029 09:33:30.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.783" endtime="20201029 09:33:30.805"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.813" endtime="20201029 09:33:30.924"></status>
</kw>
<msg timestamp="20201029 09:33:30.925" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.811" endtime="20201029 09:33:30.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:30.928" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:30.926" endtime="20201029 09:33:30.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.929" endtime="20201029 09:33:30.931"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.809" endtime="20201029 09:33:30.932"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.807" endtime="20201029 09:33:30.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:30.939" endtime="20201029 09:33:31.228"></status>
</kw>
<msg timestamp="20201029 09:33:31.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:30.937" endtime="20201029 09:33:31.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:31.232" endtime="20201029 09:33:31.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.248" endtime="20201029 09:33:31.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.934" endtime="20201029 09:33:31.252"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.933" endtime="20201029 09:33:31.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.261" level="INFO">${PHILIP_RES} = [{'diff': 0.001960125}, {'diff': 0.0019572640000000002}, {'diff': 0.001957430999999999}, {'diff': 0.001957416}, {'diff': 0.001957403}, {'diff': 0.0019575140000000005}, {'diff': 0.001957500000000001}, ...</msg>
<status status="PASS" starttime="20201029 09:33:31.254" endtime="20201029 09:33:31.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.269" level="INFO">${RESULT} = {'diff': [0.001960125, 0.0019572640000000002, 0.001957430999999999, 0.001957416, 0.001957403, 0.0019575140000000005, 0.001957500000000001, 0.0019574030000000034, 0.0019574310000000025, 0.0019573610000...</msg>
<status status="PASS" starttime="20201029 09:33:31.263" endtime="20201029 09:33:31.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.278" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.276" endtime="20201029 09:33:31.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.283" level="INFO">VALUE: [0.001960125, 0.0019572640000000002, 0.001957430999999999, 0.001957416, 0.001957403, 0.0019575140000000005, 0.001957500000000001, 0.0019574030000000034, 0.0019574310000000025, 0.0019573610000000047, 0.0019573750000000043, 0.0019574590000000017, 0.001957334000000005, 0.0019572640000000002, 0.001957402000000004, 0.001957417000000003, 0.0019573750000000043, 0.0019573750000000043, 0.0019573200000000054, 0.0019574720000000018, 0.0019572770000000003, 0.0019572919999999994, 0.001957318999999999, 0.001957208000000002, 0.0019572499999999937, 0.0019572769999999934, 0.0019573749999999973, 0.0019574309999999956, 0.0019574160000000035, 0.001957318999999999, 0.0019574720000000018, 0.0019572640000000002, 0.001957429999999996, 0.0019574029999999965, 0.001957305999999992, 0.0019572499999999937, 0.0019572219999999946, 0.0019572780000000067, 0.001957236000000001, 0.0019573199999999985, 0.0019572499999999937, 0.0019571389999999966, 0.001957291, 0.0019572370000000006, 0.0019572919999999994, 0.0019572640000000002, 0.001957389000000004, 0.0019574029999999965, 0.0019573049999999925, 0.0019573610000000047]</msg>
<status status="PASS" starttime="20201029 09:33:31.280" endtime="20201029 09:33:31.286"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.271" endtime="20201029 09:33:31.287"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.805" endtime="20201029 09:33:31.288"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:30.783" endtime="20201029 09:33:31.288"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.293" endtime="20201029 09:33:31.315"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.290" endtime="20201029 09:33:31.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.333" endtime="20201029 09:33:31.451"></status>
</kw>
<msg timestamp="20201029 09:33:31.451" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.330" endtime="20201029 09:33:31.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.454" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.452" endtime="20201029 09:33:31.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.455" endtime="20201029 09:33:31.456"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.324" endtime="20201029 09:33:31.457"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.320" endtime="20201029 09:33:31.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.464" endtime="20201029 09:33:31.753"></status>
</kw>
<msg timestamp="20201029 09:33:31.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029372375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031434528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.462" endtime="20201029 09:33:31.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029372375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031434528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.757" endtime="20201029 09:33:31.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.765" endtime="20201029 09:33:31.766"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.460" endtime="20201029 09:33:31.767"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.458" endtime="20201029 09:33:31.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:31.771" level="INFO">${PHILIP_RES} = [{'diff': 0.002062153000000004}, {'diff': 0.0020594719999999997}, {'diff': 0.002059597999999996}, {'diff': 0.002059499999999999}, {'diff': 0.0020595139999999984}, {'diff': 0.002059499999999999}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:33:31.768" endtime="20201029 09:33:31.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:31.775" level="INFO">${RESULT} = {'diff': [0.002062153000000004, 0.0020594719999999997, 0.002059597999999996, 0.002059499999999999, 0.0020595139999999984, 0.002059499999999999, 0.002059458, 0.0020594719999999997, 0.002059403000000001...</msg>
<status status="PASS" starttime="20201029 09:33:31.772" endtime="20201029 09:33:31.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.780" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:31.779" endtime="20201029 09:33:31.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.782" level="INFO">VALUE: [0.002062153000000004, 0.0020594719999999997, 0.002059597999999996, 0.002059499999999999, 0.0020595139999999984, 0.002059499999999999, 0.002059458, 0.0020594719999999997, 0.0020594030000000013, 0.0020594859999999993, 0.0020594030000000013, 0.0020594589999999996, 0.0020593749999999952, 0.0020592500000000055, 0.002059347000000003, 0.002059347000000003, 0.0020595419999999975, 0.002059388999999995, 0.0020593049999999974, 0.002059346999999989, 0.0020593609999999957, 0.002059416999999994, 0.0020592780000000116, 0.002059264000000005, 0.002059346999999989, 0.0020594589999999996, 0.0020594310000000005, 0.0020594030000000013, 0.002059430000000001, 0.0020593199999999895, 0.002059388999999995, 0.0020594720000000066, 0.0020593049999999974, 0.0020594869999999987, 0.0020593609999999957, 0.0020593329999999965, 0.002059305999999997, 0.002059361999999995, 0.0020593890000000087, 0.002059347000000003, 0.002059263999999991, 0.002059236000000006, 0.002059347000000017, 0.0020594029999999874, 0.0020593050000000113, 0.0020592779999999977, 0.002059403000000015, 0.0020593329999999965, 0.002059333999999996, 0.002059499999999992]</msg>
<status status="PASS" starttime="20201029 09:33:31.781" endtime="20201029 09:33:31.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.776" endtime="20201029 09:33:31.783"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.317" endtime="20201029 09:33:31.784"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.289" endtime="20201029 09:33:31.784"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:31.786" endtime="20201029 09:33:31.806"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.785" endtime="20201029 09:33:31.806"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.815" endtime="20201029 09:33:31.937"></status>
</kw>
<msg timestamp="20201029 09:33:31.938" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.813" endtime="20201029 09:33:31.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:31.940" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:31.939" endtime="20201029 09:33:31.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.941" endtime="20201029 09:33:31.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.810" endtime="20201029 09:33:31.943"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.809" endtime="20201029 09:33:31.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:31.950" endtime="20201029 09:33:32.249"></status>
</kw>
<msg timestamp="20201029 09:33:32.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017586514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:31.949" endtime="20201029 09:33:32.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017586514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.253" endtime="20201029 09:33:32.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.261" endtime="20201029 09:33:32.262"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.946" endtime="20201029 09:33:32.263"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.944" endtime="20201029 09:33:32.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.267" level="INFO">${PHILIP_RES} = [{'diff': 0.0021664579999999996}, {'diff': 0.002163749999999999}, {'diff': 0.002163861000000003}, {'diff': 0.002163874999999999}, {'diff': 0.002163749999999999}, {'diff': 0.0021637639999999986}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:33:32.264" endtime="20201029 09:33:32.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.271" level="INFO">${RESULT} = {'diff': [0.0021664579999999996, 0.002163749999999999, 0.002163861000000003, 0.002163874999999999, 0.002163749999999999, 0.0021637639999999986, 0.0021637919999999977, 0.002163889000000002, 0.002163805...</msg>
<status status="PASS" starttime="20201029 09:33:32.268" endtime="20201029 09:33:32.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.275" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.274" endtime="20201029 09:33:32.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.278" level="INFO">VALUE: [0.0021664579999999996, 0.002163749999999999, 0.002163861000000003, 0.002163874999999999, 0.002163749999999999, 0.0021637639999999986, 0.0021637919999999977, 0.002163889000000002, 0.0021638059999999973, 0.0021638190000000043, 0.002163889000000002, 0.002163804999999998, 0.0021638749999999957, 0.0021638189999999974, 0.0021638340000000034, 0.0021638470000000035, 0.0021637089999999998, 0.0021637080000000003, 0.0021637919999999977, 0.0021638750000000026, 0.0021639579999999936, 0.002163861000000003, 0.0021638050000000048, 0.002163778000000005, 0.002163972, 0.0021639860000000066, 0.002163958999999993, 0.002164042000000005, 0.0021640140000000058, 0.002163777999999991, 0.002163819999999997, 0.0021639580000000075, 0.0021637229999999924, 0.002163597000000003, 0.0021634999999999988, 0.0021636110000000097, 0.002163652000000002, 0.002163639000000009, 0.002163417000000001, 0.0021635699999999897, 0.002163569000000004, 0.0021636530000000015, 0.0021635280000000118, 0.0021635829999999967, 0.002163527999999998, 0.0021635700000000035, 0.0021634859999999922, 0.002163569000000004, 0.002163527999999998, 0.002163610999999982]</msg>
<status status="PASS" starttime="20201029 09:33:32.276" endtime="20201029 09:33:32.278"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.272" endtime="20201029 09:33:32.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.807" endtime="20201029 09:33:32.279"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:31.784" endtime="20201029 09:33:32.280"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.282" endtime="20201029 09:33:32.301"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.280" endtime="20201029 09:33:32.302"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.310" endtime="20201029 09:33:32.438"></status>
</kw>
<msg timestamp="20201029 09:33:32.439" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.308" endtime="20201029 09:33:32.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.441" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.440" endtime="20201029 09:33:32.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.442" endtime="20201029 09:33:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.306" endtime="20201029 09:33:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.304" endtime="20201029 09:33:32.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.454" endtime="20201029 09:33:32.743"></status>
</kw>
<msg timestamp="20201029 09:33:32.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017652639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.453" endtime="20201029 09:33:32.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017652639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.747" endtime="20201029 09:33:32.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.754" endtime="20201029 09:33:32.756"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.450" endtime="20201029 09:33:32.757"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.448" endtime="20201029 09:33:32.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:32.761" level="INFO">${PHILIP_RES} = [{'diff': 0.002272846999999998}, {'diff': 0.002270348000000002}, {'diff': 0.002270292}, {'diff': 0.0022701530000000004}, {'diff': 0.002270236000000002}, {'diff': 0.002270221999999999}, {'diff': 0.0022...</msg>
<status status="PASS" starttime="20201029 09:33:32.758" endtime="20201029 09:33:32.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:32.765" level="INFO">${RESULT} = {'diff': [0.002272846999999998, 0.002270348000000002, 0.002270292, 0.0022701530000000004, 0.002270236000000002, 0.002270221999999999, 0.0022702630000000015, 0.002270194000000003, 0.0022702499999999945...</msg>
<status status="PASS" starttime="20201029 09:33:32.762" endtime="20201029 09:33:32.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.769" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:32.768" endtime="20201029 09:33:32.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.771" level="INFO">VALUE: [0.002272846999999998, 0.002270348000000002, 0.002270292, 0.0022701530000000004, 0.002270236000000002, 0.002270221999999999, 0.0022702630000000015, 0.002270194000000003, 0.0022702499999999945, 0.0022703050000000002, 0.002270264000000001, 0.0022704020000000047, 0.002270264000000001, 0.002270333999999999, 0.0022701389999999974, 0.002270374999999998, 0.0022701950000000026, 0.002270346999999999, 0.0022704309999999964, 0.002270458000000003, 0.0022704309999999894, 0.002270457999999989, 0.0022704590000000024, 0.0022703050000000002, 0.0022703890000000115, 0.002270291999999993, 0.002270333999999999, 0.002270291999999993, 0.002270416000000011, 0.0022703329999999994, 0.002270292000000007, 0.0022703050000000002, 0.002270347000000006, 0.0022702780000000006, 0.0022703050000000002, 0.0022703200000000062, 0.002270263999999994, 0.002270235999999995, 0.0022703889999999977, 0.002270403000000004, 0.002270556000000007, 0.002270416999999997, 0.002270416000000011, 0.0022704159999999973, 0.0022703609999999985, 0.0022705140000000013, 0.0022703480000000054, 0.0022703609999999985, 0.002270207999999996, 0.0022702500000000014]</msg>
<status status="PASS" starttime="20201029 09:33:32.770" endtime="20201029 09:33:32.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.766" endtime="20201029 09:33:32.773"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.302" endtime="20201029 09:33:32.774"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.280" endtime="20201029 09:33:32.774"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:32.776" endtime="20201029 09:33:32.796"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.775" endtime="20201029 09:33:32.796"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.804" endtime="20201029 09:33:32.940"></status>
</kw>
<msg timestamp="20201029 09:33:32.941" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.803" endtime="20201029 09:33:32.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:32.946" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:32.943" endtime="20201029 09:33:32.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.948" endtime="20201029 09:33:32.951"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.800" endtime="20201029 09:33:32.952"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.798" endtime="20201029 09:33:32.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:32.967" endtime="20201029 09:33:33.264"></status>
</kw>
<msg timestamp="20201029 09:33:33.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017506236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:32.964" endtime="20201029 09:33:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017506236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:33.268" endtime="20201029 09:33:33.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.275" endtime="20201029 09:33:33.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.958" endtime="20201029 09:33:33.277"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.955" endtime="20201029 09:33:33.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.282" level="INFO">${PHILIP_RES} = [{'diff': 0.002382332999999997}, {'diff': 0.0023797090000000007}, {'diff': 0.0023798189999999983}, {'diff': 0.0023798060000000017}, {'diff': 0.0023798200000000012}, {'diff': 0.0023798610000000005}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:33.279" endtime="20201029 09:33:33.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.286" level="INFO">${RESULT} = {'diff': [0.002382332999999997, 0.0023797090000000007, 0.0023798189999999983, 0.0023798060000000017, 0.0023798200000000012, 0.0023798610000000005, 0.002379694999999994, 0.002379832999999998, 0.0023797...</msg>
<status status="PASS" starttime="20201029 09:33:33.282" endtime="20201029 09:33:33.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.291" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.290" endtime="20201029 09:33:33.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.293" level="INFO">VALUE: [0.002382332999999997, 0.0023797090000000007, 0.0023798189999999983, 0.0023798060000000017, 0.0023798200000000012, 0.0023798610000000005, 0.002379694999999994, 0.002379832999999998, 0.00237975, 0.002379679999999995, 0.002379708000000001, 0.002379833000000005, 0.00237975, 0.002379777999999999, 0.002379848000000004, 0.002379708000000001, 0.002379777999999999, 0.00237975, 0.0023797360000000073, 0.0023798339999999973, 0.002379679999999995, 0.0023796249999999963, 0.0023797639999999926, 0.0023798339999999973, 0.002379861000000011, 0.0023798750000000035, 0.0023798340000000112, 0.002379736999999993, 0.0023796809999999946, 0.0023797919999999917, 0.00237975, 0.002379778000000013, 0.0023798049999999987, 0.0023796110000000037, 0.002379777999999999, 0.002379679999999995, 0.0023797220000000008, 0.0023795830000000046, 0.0023795000000000066, 0.0023796529999999955, 0.002379612000000003, 0.0023795979999999967, 0.0023796110000000037, 0.0023796940000000155, 0.002379749999999986, 0.002379695000000015, 0.0023797090000000076, 0.002379749999999986, 0.0023797220000000008, 0.0023797079999999804]</msg>
<status status="PASS" starttime="20201029 09:33:33.292" endtime="20201029 09:33:33.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.287" endtime="20201029 09:33:33.294"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.797" endtime="20201029 09:33:33.295"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:32.774" endtime="20201029 09:33:33.295"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.297" endtime="20201029 09:33:33.317"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.296" endtime="20201029 09:33:33.317"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.325" endtime="20201029 09:33:33.465"></status>
</kw>
<msg timestamp="20201029 09:33:33.466" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.324" endtime="20201029 09:33:33.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.468" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.467" endtime="20201029 09:33:33.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.469" endtime="20201029 09:33:33.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.321" endtime="20201029 09:33:33.471"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.319" endtime="20201029 09:33:33.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.478" endtime="20201029 09:33:33.774"></status>
</kw>
<msg timestamp="20201029 09:33:33.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020011847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:33.476" endtime="20201029 09:33:33.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01751725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020011847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:33.783" endtime="20201029 09:33:33.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.799" endtime="20201029 09:33:33.803"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.474" endtime="20201029 09:33:33.804"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.472" endtime="20201029 09:33:33.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:33.813" level="INFO">${PHILIP_RES} = [{'diff': 0.0024945969999999977}, {'diff': 0.0024918049999999997}, {'diff': 0.002491860999999998}, {'diff': 0.0024919169999999997}, {'diff': 0.0024918890000000006}, {'diff': 0.002491834000000002}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:33.806" endtime="20201029 09:33:33.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:33.821" level="INFO">${RESULT} = {'diff': [0.0024945969999999977, 0.0024918049999999997, 0.002491860999999998, 0.0024919169999999997, 0.0024918890000000006, 0.002491834000000002, 0.0024918189999999993, 0.0024919160000000037, 0.002492...</msg>
<status status="PASS" starttime="20201029 09:33:33.815" endtime="20201029 09:33:33.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.830" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:33.828" endtime="20201029 09:33:33.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:33.835" level="INFO">VALUE: [0.0024945969999999977, 0.0024918049999999997, 0.002491860999999998, 0.0024919169999999997, 0.0024918890000000006, 0.002491834000000002, 0.0024918189999999993, 0.0024919160000000037, 0.002492027000000001, 0.0024920140000000007, 0.002491917000000003, 0.0024919030000000036, 0.002491848000000005, 0.0024917640000000005, 0.0024917220000000018, 0.002491917000000003, 0.0024918189999999993, 0.0024920410000000004, 0.0024916940000000026, 0.002491861000000012, 0.0024919580000000024, 0.0024917920000000066, 0.0024918049999999997, 0.0024918880000000115, 0.002491860999999998, 0.0024917640000000074, 0.0024918750000000045, 0.002491943999999996, 0.0024918339999999983, 0.0024919580000000024, 0.002491943999999996, 0.0024920270000000078, 0.0024919999999999942, 0.0024920279999999934, 0.002492042, 0.0024920270000000078, 0.0024918749999999906, 0.0024921109999999913, 0.002492055000000007, 0.0024917920000000066, 0.0024919030000000036, 0.00249191700000001, 0.002491958999999988, 0.0024920550000000208, 0.0024919860000000016, 0.0024920550000000208, 0.0024919999999999942, 0.002491888999999997, 0.002492042, 0.0024920969999999987]</msg>
<status status="PASS" starttime="20201029 09:33:33.832" endtime="20201029 09:33:33.836"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.823" endtime="20201029 09:33:33.837"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.318" endtime="20201029 09:33:33.838"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.295" endtime="20201029 09:33:33.839"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:33.844" endtime="20201029 09:33:33.864"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.841" endtime="20201029 09:33:33.864"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:33.872" endtime="20201029 09:33:34.018"></status>
</kw>
<msg timestamp="20201029 09:33:34.019" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:33.871" endtime="20201029 09:33:34.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.021" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.020" endtime="20201029 09:33:34.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.022" endtime="20201029 09:33:34.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.868" endtime="20201029 09:33:34.025"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.866" endtime="20201029 09:33:34.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.032" endtime="20201029 09:33:34.322"></status>
</kw>
<msg timestamp="20201029 09:33:34.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.031" endtime="20201029 09:33:34.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.326" endtime="20201029 09:33:34.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.333" endtime="20201029 09:33:34.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.028" endtime="20201029 09:33:34.335"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.026" endtime="20201029 09:33:34.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.340" level="INFO">${PHILIP_RES} = [{'diff': 0.002609277}, {'diff': 0.0026065980000000016}, {'diff': 0.002606736000000002}, {'diff': 0.002606597000000002}, {'diff': 0.0026066939999999997}, {'diff': 0.002606833000000003}, {'diff': 0.002...</msg>
<status status="PASS" starttime="20201029 09:33:34.337" endtime="20201029 09:33:34.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.344" level="INFO">${RESULT} = {'diff': [0.002609277, 0.0026065980000000016, 0.002606736000000002, 0.002606597000000002, 0.0026066939999999997, 0.002606833000000003, 0.0026067359999999984, 0.0026068469999999955, 0.00260676399999999...</msg>
<status status="PASS" starttime="20201029 09:33:34.341" endtime="20201029 09:33:34.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.348" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.347" endtime="20201029 09:33:34.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.350" level="INFO">VALUE: [0.002609277, 0.0026065980000000016, 0.002606736000000002, 0.002606597000000002, 0.0026066939999999997, 0.002606833000000003, 0.0026067359999999984, 0.0026068469999999955, 0.0026067639999999975, 0.002606749999999998, 0.002606721999999999, 0.002606749999999998, 0.002606888999999994, 0.002606986999999998, 0.002606889000000001, 0.002606889000000001, 0.0026068750000000016, 0.002606971999999999, 0.0026067919999999967, 0.0026065699999999886, 0.002606652000000001, 0.0026066940000000066, 0.0026066809999999996, 0.0026068189999999963, 0.0026068470000000094, 0.0026066940000000066, 0.002606639000000008, 0.002606666999999993, 0.002606541000000004, 0.0026066530000000004, 0.002606486000000005, 0.0026067220000000058, 0.002606847999999995, 0.0026068469999999955, 0.0026067089999999987, 0.0026065700000000025, 0.00260654099999999, 0.002606527999999997, 0.0026067079999999854, 0.0026066940000000205, 0.0026066390000000217, 0.00260668, 0.0026065130000000047, 0.002606694999999992, 0.0026066110000000087, 0.0026067640000000114, 0.0026065969999999883, 0.002606555999999982, 0.0026066250000000013, 0.002606485999999991]</msg>
<status status="PASS" starttime="20201029 09:33:34.349" endtime="20201029 09:33:34.355"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.344" endtime="20201029 09:33:34.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.865" endtime="20201029 09:33:34.356"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:33.840" endtime="20201029 09:33:34.357"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.359" endtime="20201029 09:33:34.378"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.358" endtime="20201029 09:33:34.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.387" endtime="20201029 09:33:34.539"></status>
</kw>
<msg timestamp="20201029 09:33:34.539" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.385" endtime="20201029 09:33:34.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.542" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.540" endtime="20201029 09:33:34.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.543" endtime="20201029 09:33:34.544"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.383" endtime="20201029 09:33:34.545"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.381" endtime="20201029 09:33:34.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.552" endtime="20201029 09:33:34.859"></status>
</kw>
<msg timestamp="20201029 09:33:34.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.550" endtime="20201029 09:33:34.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017593833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:34.862" endtime="20201029 09:33:34.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.870" endtime="20201029 09:33:34.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.548" endtime="20201029 09:33:34.872"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.546" endtime="20201029 09:33:34.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:34.876" level="INFO">${PHILIP_RES} = [{'diff': 0.002726473}, {'diff': 0.002723694000000002}, {'diff': 0.002723472000000001}, {'diff': 0.0027236250000000004}, {'diff': 0.002723514}, {'diff': 0.0027234589999999975}, {'diff': 0.002723513999...</msg>
<status status="PASS" starttime="20201029 09:33:34.873" endtime="20201029 09:33:34.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:34.881" level="INFO">${RESULT} = {'diff': [0.002726473, 0.002723694000000002, 0.002723472000000001, 0.0027236250000000004, 0.002723514, 0.0027234589999999975, 0.0027235139999999963, 0.002723666999999999, 0.002723319000000002, 0.00272...</msg>
<status status="PASS" starttime="20201029 09:33:34.877" endtime="20201029 09:33:34.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.885" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:34.884" endtime="20201029 09:33:34.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:34.888" level="INFO">VALUE: [0.002726473, 0.002723694000000002, 0.002723472000000001, 0.0027236250000000004, 0.002723514, 0.0027234589999999975, 0.0027235139999999963, 0.002723666999999999, 0.002723319000000002, 0.0027236250000000004, 0.002723610999999994, 0.002723639, 0.002723639, 0.0027234719999999976, 0.0027235980000000007, 0.0027235280000000098, 0.002723429999999999, 0.002723347000000001, 0.002723375, 0.0027231110000000003, 0.002723264000000003, 0.002723222999999997, 0.002723375, 0.002723264000000003, 0.002723305999999995, 0.0027233479999999866, 0.0027232779999999956, 0.0027233890000000066, 0.0027235139999999963, 0.0027233330000000083, 0.002723473000000004, 0.0027234719999999907, 0.0027234159999999924, 0.0027235139999999963, 0.0027235000000000037, 0.0027235419999999955, 0.0027233889999999927, 0.002723375, 0.0027233889999999927, 0.002723431000000026, 0.002723512999999983, 0.002723431000000026, 0.002723375, 0.002723555999999988, 0.002723473000000004, 0.002723429999999999, 0.0027233609999999797, 0.002723485999999997, 0.002723444999999991, 0.002723485999999997]</msg>
<status status="PASS" starttime="20201029 09:33:34.886" endtime="20201029 09:33:34.889"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.882" endtime="20201029 09:33:34.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.380" endtime="20201029 09:33:34.890"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.357" endtime="20201029 09:33:34.890"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:34.893" endtime="20201029 09:33:34.912"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.891" endtime="20201029 09:33:34.913"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:34.921" endtime="20201029 09:33:35.079"></status>
</kw>
<msg timestamp="20201029 09:33:35.080" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:34.919" endtime="20201029 09:33:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.082" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.081" endtime="20201029 09:33:35.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.083" endtime="20201029 09:33:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.917" endtime="20201029 09:33:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.915" endtime="20201029 09:33:35.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.092" endtime="20201029 09:33:35.389"></status>
</kw>
<msg timestamp="20201029 09:33:35.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02048625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.091" endtime="20201029 09:33:35.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017640514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02048625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 09:33:35.398" endtime="20201029 09:33:35.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.414" endtime="20201029 09:33:35.418"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.088" endtime="20201029 09:33:35.421"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.086" endtime="20201029 09:33:35.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.434" level="INFO">${PHILIP_RES} = [{'diff': 0.0028457360000000015}, {'diff': 0.0028431110000000023}, {'diff': 0.002843333}, {'diff': 0.0028429859999999987}, {'diff': 0.0028430000000000018}, {'diff': 0.0028431520000000016}, {'diff': 0....</msg>
<status status="PASS" starttime="20201029 09:33:35.424" endtime="20201029 09:33:35.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.446" level="INFO">${RESULT} = {'diff': [0.0028457360000000015, 0.0028431110000000023, 0.002843333, 0.0028429859999999987, 0.0028430000000000018, 0.0028431520000000016, 0.002843041999999997, 0.0028430970000000028, 0.002843027999999...</msg>
<status status="PASS" starttime="20201029 09:33:35.436" endtime="20201029 09:33:35.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.457" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.455" endtime="20201029 09:33:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.464" level="INFO">VALUE: [0.0028457360000000015, 0.0028431110000000023, 0.002843333, 0.0028429859999999987, 0.0028430000000000018, 0.0028431520000000016, 0.002843041999999997, 0.0028430970000000028, 0.0028430279999999974, 0.0028428749999999947, 0.0028430280000000044, 0.0028428890000000012, 0.0028428059999999963, 0.002842861000000002, 0.0028427079999999993, 0.0028428749999999947, 0.0028428190000000103, 0.0028429999999999983, 0.0028428749999999947, 0.0028429170000000004, 0.002843000000000012, 0.0028430279999999974, 0.0028430560000000105, 0.002842971999999999, 0.0028429999999999983, 0.002842930999999993, 0.0028429999999999983, 0.002843054999999997, 0.0028429449999999995, 0.0028430279999999974, 0.002843096999999989, 0.0028430970000000028, 0.002843194000000007, 0.0028431950000000067, 0.0028430970000000028, 0.002843000000000012, 0.002842959000000006, 0.002842916000000001, 0.0028429450000000134, 0.002842985999999992, 0.0028430690000000036, 0.0028428749999999947, 0.0028429170000000004, 0.0028430839999999957, 0.0028430690000000036, 0.002843194999999993, 0.0028430560000000105, 0.002843014000000005, 0.0028430699999999753, 0.0028428749999999947]</msg>
<status status="PASS" starttime="20201029 09:33:35.461" endtime="20201029 09:33:35.466"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.448" endtime="20201029 09:33:35.468"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.913" endtime="20201029 09:33:35.469"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:34.891" endtime="20201029 09:33:35.469"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:35.473" endtime="20201029 09:33:35.493"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.471" endtime="20201029 09:33:35.494"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.502" endtime="20201029 09:33:35.666"></status>
</kw>
<msg timestamp="20201029 09:33:35.667" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.500" endtime="20201029 09:33:35.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.669" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:35.668" endtime="20201029 09:33:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.670" endtime="20201029 09:33:35.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.498" endtime="20201029 09:33:35.673"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.496" endtime="20201029 09:33:35.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.680" endtime="20201029 09:33:35.970"></status>
</kw>
<msg timestamp="20201029 09:33:35.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.679" endtime="20201029 09:33:35.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017717292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020684556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:35.975" endtime="20201029 09:33:35.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:35.983" endtime="20201029 09:33:35.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.676" endtime="20201029 09:33:35.985"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.674" endtime="20201029 09:33:35.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:35.990" level="INFO">${PHILIP_RES} = [{'diff': 0.0029672640000000007}, {'diff': 0.002964528000000001}, {'diff': 0.0029648060000000004}, {'diff': 0.0029649169999999975}, {'diff': 0.002964930000000001}, {'diff': 0.002964805000000001}, {'di...</msg>
<status status="PASS" starttime="20201029 09:33:35.986" endtime="20201029 09:33:35.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:35.994" level="INFO">${RESULT} = {'diff': [0.0029672640000000007, 0.002964528000000001, 0.0029648060000000004, 0.0029649169999999975, 0.002964930000000001, 0.002964805000000001, 0.0029646949999999964, 0.0029647079999999965, 0.0029647...</msg>
<status status="PASS" starttime="20201029 09:33:35.991" endtime="20201029 09:33:35.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:35.999" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:35.998" endtime="20201029 09:33:35.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.002" level="INFO">VALUE: [0.0029672640000000007, 0.002964528000000001, 0.0029648060000000004, 0.0029649169999999975, 0.002964930000000001, 0.002964805000000001, 0.0029646949999999964, 0.0029647079999999965, 0.0029647079999999965, 0.002964721999999996, 0.0029645420000000006, 0.0029644030000000043, 0.002964528000000001, 0.002964556, 0.0029643050000000004, 0.002964611000000006, 0.0029647079999999965, 0.0029646249999999985, 0.0029645830000000067, 0.002964458000000003, 0.002964527999999994, 0.0029646249999999985, 0.0029647639999999947, 0.002964597999999999, 0.002964708999999996, 0.002964680999999997, 0.002964722000000003, 0.0029647360000000095, 0.0029646249999999985, 0.0029646660000000047, 0.0029647079999999965, 0.0029647920000000078, 0.002964915999999998, 0.0029647079999999965, 0.002964667000000004, 0.002964486000000016, 0.0029645140000000014, 0.0029645690000000002, 0.0029645970000000132, 0.002964556000000007, 0.002964556000000007, 0.0029645420000000144, 0.0029645699999999997, 0.002964667000000004, 0.0029648609999999853, 0.002964804999999987, 0.0029648750000000057, 0.002964750000000016, 0.0029648339999999995, 0.0029647640000000086]</msg>
<status status="PASS" starttime="20201029 09:33:36.000" endtime="20201029 09:33:36.003"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.995" endtime="20201029 09:33:36.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.494" endtime="20201029 09:33:36.004"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:35.470" endtime="20201029 09:33:36.004"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.007" endtime="20201029 09:33:36.027"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.005" endtime="20201029 09:33:36.027"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.035" endtime="20201029 09:33:36.208"></status>
</kw>
<msg timestamp="20201029 09:33:36.209" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.034" endtime="20201029 09:33:36.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.214" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.212" endtime="20201029 09:33:36.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.217" endtime="20201029 09:33:36.220"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.031" endtime="20201029 09:33:36.221"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.029" endtime="20201029 09:33:36.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.236" endtime="20201029 09:33:36.535"></status>
</kw>
<msg timestamp="20201029 09:33:36.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020925847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.233" endtime="20201029 09:33:36.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020925847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.539" endtime="20201029 09:33:36.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.546" endtime="20201029 09:33:36.548"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.227" endtime="20201029 09:33:36.549"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.224" endtime="20201029 09:33:36.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:36.553" level="INFO">${PHILIP_RES} = [{'diff': 0.0030914720000000014}, {'diff': 0.003089194}, {'diff': 0.003089042}, {'diff': 0.0030891109999999986}, {'diff': 0.0030890559999999963}, {'diff': 0.0030889720000000023}, {'diff': 0.0030890550...</msg>
<status status="PASS" starttime="20201029 09:33:36.550" endtime="20201029 09:33:36.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:36.557" level="INFO">${RESULT} = {'diff': [0.0030914720000000014, 0.003089194, 0.003089042, 0.0030891109999999986, 0.0030890559999999963, 0.0030889720000000023, 0.0030890550000000003, 0.0030891810000000033, 0.003089194999999996, 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:36.554" endtime="20201029 09:33:36.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.562" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:36.561" endtime="20201029 09:33:36.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.564" level="INFO">VALUE: [0.0030914720000000014, 0.003089194, 0.003089042, 0.0030891109999999986, 0.0030890559999999963, 0.0030889720000000023, 0.0030890550000000003, 0.0030891810000000033, 0.003089194999999996, 0.0030889590000000022, 0.0030890699999999993, 0.0030891389999999977, 0.003089096999999999, 0.003089083999999999, 0.003089055999999993, 0.0030889720000000093, 0.003089042, 0.0030890410000000007, 0.003089096999999999, 0.0030890979999999985, 0.0030890280000000075, 0.0030889439999999962, 0.003088791999999993, 0.003088722000000002, 0.0030888340000000125, 0.003088791999999993, 0.003088750000000001, 0.0030887359999999947, 0.0030890410000000007, 0.003089069, 0.0030889580000000028, 0.003089179999999997, 0.0030890130000000016, 0.0030890279999999937, 0.003088930999999989, 0.0030892640000000082, 0.003089153000000011, 0.0030892220000000026, 0.0030891660000000043, 0.0030891660000000043, 0.00308920800000001, 0.0030890279999999937, 0.0030889580000000028, 0.0030889719999999954, 0.0030888329999999853, 0.003088903000000004, 0.0030891389999999908, 0.003089124999999998, 0.003089096999999985, 0.0030890699999999993]</msg>
<status status="PASS" starttime="20201029 09:33:36.563" endtime="20201029 09:33:36.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.558" endtime="20201029 09:33:36.565"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.028" endtime="20201029 09:33:36.566"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.005" endtime="20201029 09:33:36.566"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:36.568" endtime="20201029 09:33:36.588"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.567" endtime="20201029 09:33:36.588"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.596" endtime="20201029 09:33:36.774"></status>
</kw>
<msg timestamp="20201029 09:33:36.774" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.595" endtime="20201029 09:33:36.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:36.777" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:36.776" endtime="20201029 09:33:36.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.778" endtime="20201029 09:33:36.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.592" endtime="20201029 09:33:36.780"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.590" endtime="20201029 09:33:36.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:36.787" endtime="20201029 09:33:37.099"></status>
</kw>
<msg timestamp="20201029 09:33:37.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017648139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:36.786" endtime="20201029 09:33:37.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017648139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020866708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.103" endtime="20201029 09:33:37.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.110" endtime="20201029 09:33:37.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.783" endtime="20201029 09:33:37.112"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.781" endtime="20201029 09:33:37.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.116" level="INFO">${PHILIP_RES} = [{'diff': 0.003218569000000001}, {'diff': 0.003216056000000002}, {'diff': 0.0032159450000000013}, {'diff': 0.003215777999999999}, {'diff': 0.0032158610000000004}, {'diff': 0.003215847000000001}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:33:37.113" endtime="20201029 09:33:37.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.120" level="INFO">${RESULT} = {'diff': [0.003218569000000001, 0.003216056000000002, 0.0032159450000000013, 0.003215777999999999, 0.0032158610000000004, 0.003215847000000001, 0.003215944999999998, 0.0032159169999999987, 0.003215902...</msg>
<status status="PASS" starttime="20201029 09:33:37.118" endtime="20201029 09:33:37.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.125" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.124" endtime="20201029 09:33:37.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.127" level="INFO">VALUE: [0.003218569000000001, 0.003216056000000002, 0.0032159450000000013, 0.003215777999999999, 0.0032158610000000004, 0.003215847000000001, 0.003215944999999998, 0.0032159169999999987, 0.003215902999999999, 0.003215792000000002, 0.003215929999999999, 0.003215973000000004, 0.003215777000000003, 0.0032156800000000055, 0.003215791999999995, 0.0032157780000000025, 0.0032158340000000007, 0.0032159159999999992, 0.00321598599999999, 0.0032160699999999875, 0.0032159719999999975, 0.003215805000000002, 0.0032159590000000043, 0.0032156669999999915, 0.0032156389999999924, 0.003215361, 0.0032155279999999953, 0.0032155559999999944, 0.0032156109999999932, 0.003215958000000005, 0.0032156109999999932, 0.003215666000000006, 0.003215693999999991, 0.003215722000000004, 0.003215735999999997, 0.00321576400000001, 0.0032158610000000143, 0.0032158609999999865, 0.0032156249999999997, 0.003215680999999998, 0.003215680999999998, 0.003215763999999982, 0.0032159439999999984, 0.0032157230000000037, 0.0032159170000000126, 0.003215792000000023, 0.003215888, 0.003215957999999991, 0.0032158889999999996, 0.0032158059999999877]</msg>
<status status="PASS" starttime="20201029 09:33:37.126" endtime="20201029 09:33:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.121" endtime="20201029 09:33:37.128"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.589" endtime="20201029 09:33:37.129"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:36.566" endtime="20201029 09:33:37.129"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.131" endtime="20201029 09:33:37.151"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.130" endtime="20201029 09:33:37.151"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.159" endtime="20201029 09:33:37.344"></status>
</kw>
<msg timestamp="20201029 09:33:37.344" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.158" endtime="20201029 09:33:37.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.347" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.345" endtime="20201029 09:33:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.348" endtime="20201029 09:33:37.352"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.155" endtime="20201029 09:33:37.353"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.153" endtime="20201029 09:33:37.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.360" endtime="20201029 09:33:37.652"></status>
</kw>
<msg timestamp="20201029 09:33:37.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021040083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.358" endtime="20201029 09:33:37.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017691931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021040083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.655" endtime="20201029 09:33:37.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.663" endtime="20201029 09:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.356" endtime="20201029 09:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.354" endtime="20201029 09:33:37.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:37.669" level="INFO">${PHILIP_RES} = [{'diff': 0.003348152}, {'diff': 0.003345624999999998}, {'diff': 0.0033452219999999984}, {'diff': 0.003345263999999997}, {'diff': 0.003345222000000002}, {'diff': 0.003345333000000006}, {'diff': 0.0033...</msg>
<status status="PASS" starttime="20201029 09:33:37.666" endtime="20201029 09:33:37.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:37.673" level="INFO">${RESULT} = {'diff': [0.003348152, 0.003345624999999998, 0.0033452219999999984, 0.003345263999999997, 0.003345222000000002, 0.003345333000000006, 0.0033453470000000055, 0.003345361000000005, 0.0033451249999999974...</msg>
<status status="PASS" starttime="20201029 09:33:37.670" endtime="20201029 09:33:37.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.678" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:37.677" endtime="20201029 09:33:37.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.680" level="INFO">VALUE: [0.003348152, 0.003345624999999998, 0.0033452219999999984, 0.003345263999999997, 0.003345222000000002, 0.003345333000000006, 0.0033453470000000055, 0.003345361000000005, 0.0033451249999999974, 0.003345332999999999, 0.0033453749999999977, 0.0033453749999999977, 0.0033453469999999985, 0.0033453469999999985, 0.003345402999999997, 0.0033456109999999983, 0.0033455690000000066, 0.0033453469999999985, 0.003345110999999998, 0.0033450830000000126, 0.0033452640000000006, 0.0033453889999999903, 0.0033454019999999973, 0.003345221999999995, 0.003345389000000004, 0.0033455140000000078, 0.003345459000000009, 0.0033452910000000002, 0.0033452640000000006, 0.0033451810000000026, 0.0033451530000000174, 0.003345249999999994, 0.0033452090000000156, 0.0033452639999999867, 0.0033453469999999985, 0.0033452640000000144, 0.0033451660000000105, 0.0033452639999999867, 0.003345221999999981, 0.003345402999999997, 0.003345417000000017, 0.0033454450000000024, 0.0033453750000000115, 0.003345472000000016, 0.003345249999999994, 0.003345237000000001, 0.003345222000000009, 0.0033453469999999985, 0.0033453190000000133, 0.0033449859999999942]</msg>
<status status="PASS" starttime="20201029 09:33:37.679" endtime="20201029 09:33:37.681"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.674" endtime="20201029 09:33:37.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.152" endtime="20201029 09:33:37.682"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.129" endtime="20201029 09:33:37.683"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:37.685" endtime="20201029 09:33:37.704"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.683" endtime="20201029 09:33:37.705"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.713" endtime="20201029 09:33:37.905"></status>
</kw>
<msg timestamp="20201029 09:33:37.906" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.711" endtime="20201029 09:33:37.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:37.911" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:37.909" endtime="20201029 09:33:37.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.914" endtime="20201029 09:33:37.917"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.709" endtime="20201029 09:33:37.918"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.707" endtime="20201029 09:33:37.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:37.933" endtime="20201029 09:33:38.231"></status>
</kw>
<msg timestamp="20201029 09:33:38.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:37.929" endtime="20201029 09:33:38.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021097153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.234" endtime="20201029 09:33:38.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.242" endtime="20201029 09:33:38.243"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.924" endtime="20201029 09:33:38.244"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.920" endtime="20201029 09:33:38.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.248" level="INFO">${PHILIP_RES} = [{'diff': 0.0034796389999999996}, {'diff': 0.003477055999999999}, {'diff': 0.0034768890000000004}, {'diff': 0.003477110999999998}, {'diff': 0.0034773339999999986}, {'diff': 0.0034771249999999976}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:38.245" endtime="20201029 09:33:38.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.253" level="INFO">${RESULT} = {'diff': [0.0034796389999999996, 0.003477055999999999, 0.0034768890000000004, 0.003477110999999998, 0.0034773339999999986, 0.0034771249999999976, 0.003477138999999997, 0.003477193999999996, 0.00347695...</msg>
<status status="PASS" starttime="20201029 09:33:38.249" endtime="20201029 09:33:38.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.257" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.256" endtime="20201029 09:33:38.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.260" level="INFO">VALUE: [0.0034796389999999996, 0.003477055999999999, 0.0034768890000000004, 0.003477110999999998, 0.0034773339999999986, 0.0034771249999999976, 0.003477138999999997, 0.003477193999999996, 0.003476958000000002, 0.003476862000000004, 0.003476929999999996, 0.003476736000000001, 0.003476790999999993, 0.0034768749999999904, 0.003476778, 0.003476958000000002, 0.0034768480000000046, 0.0034770550000000067, 0.0034769439999999957, 0.003477027999999993, 0.003477111000000005, 0.003476819000000006, 0.003476888999999997, 0.0034770559999999923, 0.003476916999999996, 0.0034771249999999976, 0.003476929999999989, 0.003477028000000007, 0.0034770689999999993, 0.003477139000000018, 0.003477111000000005, 0.003477111000000005, 0.0034769859999999875, 0.0034768890000000108, 0.0034769860000000152, 0.003477111000000005, 0.0034768749999999904, 0.0034769159999999966, 0.0034770140000000005, 0.0034771249999999976, 0.0034771249999999976, 0.0034771799999999964, 0.003476945000000009, 0.003477111000000005, 0.003477056000000006, 0.0034771949999999885, 0.003477082999999992, 0.003476916999999996, 0.0034770969999999846, 0.0034771940000000168]</msg>
<status status="PASS" starttime="20201029 09:33:38.258" endtime="20201029 09:33:38.260"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.254" endtime="20201029 09:33:38.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.705" endtime="20201029 09:33:38.261"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:37.683" endtime="20201029 09:33:38.261"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.264" endtime="20201029 09:33:38.283"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.262" endtime="20201029 09:33:38.284"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.292" endtime="20201029 09:33:38.490"></status>
</kw>
<msg timestamp="20201029 09:33:38.491" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.290" endtime="20201029 09:33:38.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.493" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.492" endtime="20201029 09:33:38.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.494" endtime="20201029 09:33:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.288" endtime="20201029 09:33:38.496"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.286" endtime="20201029 09:33:38.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.503" endtime="20201029 09:33:38.810"></status>
</kw>
<msg timestamp="20201029 09:33:38.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.502" endtime="20201029 09:33:38.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021349278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:38.813" endtime="20201029 09:33:38.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.821" endtime="20201029 09:33:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.499" endtime="20201029 09:33:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.497" endtime="20201029 09:33:38.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:38.827" level="INFO">${PHILIP_RES} = [{'diff': 0.0036137219999999998}, {'diff': 0.003611070000000001}, {'diff': 0.0036111940000000016}, {'diff': 0.0036112230000000037}, {'diff': 0.0036112079999999977}, {'diff': 0.0036109860000000035}, {'...</msg>
<status status="PASS" starttime="20201029 09:33:38.824" endtime="20201029 09:33:38.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:38.831" level="INFO">${RESULT} = {'diff': [0.0036137219999999998, 0.003611070000000001, 0.0036111940000000016, 0.0036112230000000037, 0.0036112079999999977, 0.0036109860000000035, 0.0036108880000000065, 0.0036108749999999995, 0.00361...</msg>
<status status="PASS" starttime="20201029 09:33:38.828" endtime="20201029 09:33:38.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.836" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:38.835" endtime="20201029 09:33:38.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:38.838" level="INFO">VALUE: [0.0036137219999999998, 0.003611070000000001, 0.0036111940000000016, 0.0036112230000000037, 0.0036112079999999977, 0.0036109860000000035, 0.0036108880000000065, 0.0036108749999999995, 0.0036109860000000035, 0.0036109860000000035, 0.003611152999999999, 0.003611165999999999, 0.0036110139999999957, 0.003611138, 0.0036109029999999986, 0.003610917000000005, 0.003610777999999995, 0.0036105699999999935, 0.0036107769999999956, 0.0036107360000000033, 0.003610638999999999, 0.0036107919999999877, 0.0036107219999999968, 0.0036108330000000077, 0.0036106660000000124, 0.0036108470000000004, 0.003610972000000004, 0.0036107219999999968, 0.0036106529999999915, 0.003610540999999995, 0.0036106939999999976, 0.0036105139999999813, 0.0036106249999999784, 0.003610721999999983, 0.003610777999999981, 0.0036109450000000043, 0.003610610999999986, 0.003610569000000008, 0.0036105700000000074, 0.0036106939999999976, 0.003610819000000015, 0.0036107769999999817, 0.0036107639999999885, 0.003610625000000006, 0.0036109029999999986, 0.003610805999999994, 0.003610625000000006, 0.0036108749999999856, 0.0036107360000000033, 0.003610584]</msg>
<status status="PASS" starttime="20201029 09:33:38.837" endtime="20201029 09:33:38.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.832" endtime="20201029 09:33:38.839"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.284" endtime="20201029 09:33:38.840"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.262" endtime="20201029 09:33:38.840"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:38.842" endtime="20201029 09:33:38.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.841" endtime="20201029 09:33:38.862"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:38.870" endtime="20201029 09:33:39.075"></status>
</kw>
<msg timestamp="20201029 09:33:39.076" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:38.869" endtime="20201029 09:33:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.078" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.077" endtime="20201029 09:33:39.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.079" endtime="20201029 09:33:39.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.866" endtime="20201029 09:33:39.082"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.864" endtime="20201029 09:33:39.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.089" endtime="20201029 09:33:39.382"></status>
</kw>
<msg timestamp="20201029 09:33:39.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.088" endtime="20201029 09:33:39.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021386569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.386" endtime="20201029 09:33:39.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.394" endtime="20201029 09:33:39.396"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.085" endtime="20201029 09:33:39.397"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.083" endtime="20201029 09:33:39.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.402" level="INFO">${PHILIP_RES} = [{'diff': 0.0037496940000000013}, {'diff': 0.0037470829999999983}, {'diff': 0.0037473620000000006}, {'diff': 0.003747417000000003}, {'diff': 0.003747457999999995}, {'diff': 0.0037474160000000034}, {'d...</msg>
<status status="PASS" starttime="20201029 09:33:39.398" endtime="20201029 09:33:39.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.407" level="INFO">${RESULT} = {'diff': [0.0037496940000000013, 0.0037470829999999983, 0.0037473620000000006, 0.003747417000000003, 0.003747457999999995, 0.0037474160000000034, 0.003747541, 0.0037475699999999987, 0.0037474719999999...</msg>
<status status="PASS" starttime="20201029 09:33:39.404" endtime="20201029 09:33:39.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.411" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.410" endtime="20201029 09:33:39.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.414" level="INFO">VALUE: [0.0037496940000000013, 0.0037470829999999983, 0.0037473620000000006, 0.003747417000000003, 0.003747457999999995, 0.0037474160000000034, 0.003747541, 0.0037475699999999987, 0.0037474719999999948, 0.0037472630000000007, 0.0037473049999999994, 0.0037474310000000025, 0.0037475549999999996, 0.003747610999999998, 0.0037473610000000046, 0.0037472090000000013, 0.003747306000000006, 0.003747181000000002, 0.003747096999999991, 0.0037470690000000056, 0.003746902999999996, 0.0037469860000000077, 0.003746943999999988, 0.0037471390000000104, 0.0037470839999999977, 0.00374738899999999, 0.003747333999999991, 0.003747235999999987, 0.0037472369999999866, 0.003747486000000022, 0.003747236000000015, 0.003747235999999987, 0.0037472919999999854, 0.003747417000000003, 0.0037474720000000017, 0.003747235999999987, 0.0037471520000000036, 0.0037470689999999918, 0.0037469170000000163, 0.0037468609999999902, 0.003746861000000018, 0.00374712499999999, 0.0037472500000000075, 0.0037472500000000075, 0.0037470409999999787, 0.003747055000000027, 0.0037473050000000063, 0.0037473749999999972, 0.0037471109999999974, 0.0037472779999999928]</msg>
<status status="PASS" starttime="20201029 09:33:39.412" endtime="20201029 09:33:39.415"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.408" endtime="20201029 09:33:39.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.863" endtime="20201029 09:33:39.416"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:38.840" endtime="20201029 09:33:39.416"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.419" endtime="20201029 09:33:39.438"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.417" endtime="20201029 09:33:39.439"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.447" endtime="20201029 09:33:39.659"></status>
</kw>
<msg timestamp="20201029 09:33:39.660" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.445" endtime="20201029 09:33:39.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.662" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:39.661" endtime="20201029 09:33:39.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.663" endtime="20201029 09:33:39.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.443" endtime="20201029 09:33:39.665"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.441" endtime="20201029 09:33:39.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.672" endtime="20201029 09:33:39.963"></status>
</kw>
<msg timestamp="20201029 09:33:39.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017635125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.671" endtime="20201029 09:33:39.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017635125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021524806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:39.967" endtime="20201029 09:33:39.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:39.975" endtime="20201029 09:33:39.976"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.668" endtime="20201029 09:33:39.977"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.666" endtime="20201029 09:33:39.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:39.981" level="INFO">${PHILIP_RES} = [{'diff': 0.003889680999999999}, {'diff': 0.003886999999999998}, {'diff': 0.003886944}, {'diff': 0.0038868470000000023}, {'diff': 0.0038870420000000003}, {'diff': 0.0038867369999999943}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 09:33:39.978" endtime="20201029 09:33:39.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:39.986" level="INFO">${RESULT} = {'diff': [0.003889680999999999, 0.003886999999999998, 0.003886944, 0.0038868470000000023, 0.0038870420000000003, 0.0038867369999999943, 0.003886874999999998, 0.003887013999999994, 0.003887166999999997...</msg>
<status status="PASS" starttime="20201029 09:33:39.982" endtime="20201029 09:33:39.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.990" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:39.989" endtime="20201029 09:33:39.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:39.992" level="INFO">VALUE: [0.003889680999999999, 0.003886999999999998, 0.003886944, 0.0038868470000000023, 0.0038870420000000003, 0.0038867369999999943, 0.003886874999999998, 0.003887013999999994, 0.003887166999999997, 0.0038870829999999995, 0.0038870280000000007, 0.003886846999999999, 0.003887097000000006, 0.003887040999999994, 0.003887138999999998, 0.0038872360000000022, 0.003887138999999998, 0.003887069000000007, 0.0038869720000000024, 0.0038869720000000024, 0.0038869720000000024, 0.003887013999999994, 0.003887097000000006, 0.0038868890000000045, 0.003887013999999994, 0.0038869169999999897, 0.0038869589999999954, 0.0038867910000000006, 0.003886874999999984, 0.003887084000000013, 0.003887166999999997, 0.003887097000000006, 0.003886957999999996, 0.0038867219999999814, 0.0038868060000000204, 0.0038868609999999915, 0.0038867080000000165, 0.0038868610000000192, 0.0038872219999999957, 0.0038871529999999765, 0.003887084000000013, 0.0038871530000000043, 0.0038868890000000045, 0.0038868199999999853, 0.003887068999999993, 0.003886792, 0.00388665299999999, 0.0038868890000000045, 0.0038869170000000175, 0.0038870690000000208]</msg>
<status status="PASS" starttime="20201029 09:33:39.991" endtime="20201029 09:33:39.993"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.987" endtime="20201029 09:33:39.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.439" endtime="20201029 09:33:39.994"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.417" endtime="20201029 09:33:39.994"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:39.997" endtime="20201029 09:33:40.016"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.995" endtime="20201029 09:33:40.017"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.025" endtime="20201029 09:33:40.244"></status>
</kw>
<msg timestamp="20201029 09:33:40.245" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.023" endtime="20201029 09:33:40.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.247" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.246" endtime="20201029 09:33:40.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.249" endtime="20201029 09:33:40.250"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.021" endtime="20201029 09:33:40.251"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.019" endtime="20201029 09:33:40.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.258" endtime="20201029 09:33:40.566"></status>
</kw>
<msg timestamp="20201029 09:33:40.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017699056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.256" endtime="20201029 09:33:40.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017699056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021730458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.570" endtime="20201029 09:33:40.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.578" endtime="20201029 09:33:40.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.254" endtime="20201029 09:33:40.580"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.252" endtime="20201029 09:33:40.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:40.584" level="INFO">${PHILIP_RES} = [{'diff': 0.004031402}, {'diff': 0.0040286390000000005}, {'diff': 0.004028762999999998}, {'diff': 0.004029014000000001}, {'diff': 0.004028874999999994}, {'diff': 0.004029056000000003}, {'diff': 0.0040...</msg>
<status status="PASS" starttime="20201029 09:33:40.581" endtime="20201029 09:33:40.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:40.588" level="INFO">${RESULT} = {'diff': [0.004031402, 0.0040286390000000005, 0.004028762999999998, 0.004029014000000001, 0.004028874999999994, 0.004029056000000003, 0.004029041999999997, 0.004029084000000002, 0.004028985999999998, ...</msg>
<status status="PASS" starttime="20201029 09:33:40.585" endtime="20201029 09:33:40.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.592" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:40.591" endtime="20201029 09:33:40.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.595" level="INFO">VALUE: [0.004031402, 0.0040286390000000005, 0.004028762999999998, 0.004029014000000001, 0.004028874999999994, 0.004029056000000003, 0.004029041999999997, 0.004029084000000002, 0.004028985999999998, 0.0040291250000000015, 0.004029097000000002, 0.004028916000000007, 0.004029125000000008, 0.004029110999999988, 0.0040291249999999945, 0.004028916000000007, 0.004029082999999989, 0.004029096999999995, 0.004028875000000001, 0.004028792000000003, 0.0040288480000000015, 0.0040287219999999985, 0.004028987000000012, 0.004028917000000007, 0.0040289440000000065, 0.004028764000000004, 0.004028889000000008, 0.004029111000000002, 0.004029027000000018, 0.004029097000000009, 0.004029082999999989, 0.004029138999999987, 0.004028847000000002, 0.0040289440000000065, 0.004028971999999992, 0.004028929999999986, 0.0040290969999999815, 0.004028889000000008, 0.004029319000000003, 0.004029458999999985, 0.004029167, 0.004029083000000017, 0.004029180999999993, 0.004029264000000005, 0.004029069999999996, 0.004028930000000014, 0.004028945000000006, 0.004029083999999988, 0.004029111000000002, 0.004029000000000005]</msg>
<status status="PASS" starttime="20201029 09:33:40.593" endtime="20201029 09:33:40.595"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.589" endtime="20201029 09:33:40.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.017" endtime="20201029 09:33:40.596"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:39.995" endtime="20201029 09:33:40.597"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 09:33:40.599" endtime="20201029 09:33:40.619"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.598" endtime="20201029 09:33:40.619"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.627" endtime="20201029 09:33:40.854"></status>
</kw>
<msg timestamp="20201029 09:33:40.855" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.626" endtime="20201029 09:33:40.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:40.857" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 09:33:40.856" endtime="20201029 09:33:40.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.858" endtime="20201029 09:33:40.861"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.623" endtime="20201029 09:33:40.862"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.621" endtime="20201029 09:33:40.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:40.868" endtime="20201029 09:33:41.168"></status>
</kw>
<msg timestamp="20201029 09:33:41.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:40.867" endtime="20201029 09:33:41.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 09:33:41.176" endtime="20201029 09:33:41.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 09:33:41.193" endtime="20201029 09:33:41.196"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.864" endtime="20201029 09:33:41.197"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.863" endtime="20201029 09:33:41.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 09:33:41.207" level="INFO">${PHILIP_RES} = [{'diff': 0.004176028000000002}, {'diff': 0.004173291999999999}, {'diff': 0.0041732639999999994}, {'diff': 0.004173429999999999}, {'diff': 0.004173263999999996}, {'diff': 0.0041730840000000005}, {'dif...</msg>
<status status="PASS" starttime="20201029 09:33:41.200" endtime="20201029 09:33:41.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 09:33:41.215" level="INFO">${RESULT} = {'diff': [0.004176028000000002, 0.004173291999999999, 0.0041732639999999994, 0.004173429999999999, 0.004173263999999996, 0.0041730840000000005, 0.004173305999999995, 0.004173235999999997, 0.0041733470...</msg>
<status status="PASS" starttime="20201029 09:33:41.209" endtime="20201029 09:33:41.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.224" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 09:33:41.222" endtime="20201029 09:33:41.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 09:33:41.229" level="INFO">VALUE: [0.004176028000000002, 0.004173291999999999, 0.0041732639999999994, 0.004173429999999999, 0.004173263999999996, 0.0041730840000000005, 0.004173305999999995, 0.004173235999999997, 0.004173347000000001, 0.0041731669999999985, 0.0041728749999999995, 0.004172916999999998, 0.004173070000000001, 0.004173151999999999, 0.004173306000000002, 0.004173152999999999, 0.004173151999999999, 0.004173291999999995, 0.004173415999999999, 0.004173111000000007, 0.004173250000000003, 0.004173263999999996, 0.004173250000000003, 0.004173014000000003, 0.0041731669999999915, 0.004172972000000025, 0.004172762999999996, 0.004172902000000006, 0.004172902000000006, 0.004172916999999998, 0.004173027999999995, 0.004173014000000003, 0.004173125, 0.004172999999999982, 0.0041728749999999926, 0.0041727639999999955, 0.004172958000000004, 0.004173125, 0.004172790999999981, 0.004172680999999984, 0.004172847000000007, 0.004173028000000023, 0.004173042000000016, 0.004172486000000003, 0.004172832999999987, 0.0041729729999999965, 0.004172888999999985, 0.004172903000000006, 0.004173027999999995, 0.004172903000000006]</msg>
<status status="PASS" starttime="20201029 09:33:41.226" endtime="20201029 09:33:41.230"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:41.217" endtime="20201029 09:33:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.620" endtime="20201029 09:33:41.231"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:40.597" endtime="20201029 09:33:41.232"></status>
</kw>
<status status="PASS" starttime="20201029 09:33:17.648" endtime="20201029 09:33:41.232"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 09:33:16.330" endtime="20201029 09:33:41.232" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 09:32:54.277" endtime="20201029 09:33:41.242"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 09:32:52.142" endtime="20201029 09:33:41.275"></status>
</suite>
<statistics>
<total>
<stat pass="10" fail="0">Critical Tests</stat>
<stat pass="10" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="10" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="10" fail="0">BOARD_saml10-xpro</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="10" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
